"use strict";
angular.module("constants", ["ipCookie"]),
    angular.module("filters", []),
    angular.module("directives", ["hljs", "ngStorage"]),
    angular.module("services", ["ngResource", "hljs", "ngRoute"]),
    angular.module("coding", ["constants", "filters", "directives", "services"]);
var coding = angular.module("app", ["ngRoute", "ngSanitize", "ipCookie", "coding", "angular-md5", "monospaced.elastic", "ui.select2", "ngClipboard", "angularMoment", "blueimp.fileupload", "oc.lazyLoad", "btford.modal", "pasvaz.bindonce", "duScroll", "ui.layout", "ngStorage"]);
coding.controller("AppController", ["$scope", "$injector", "location", "$rootScope", "$window", "$routeParams", "$http", "$route", "PageTitle", "User", "Project", "Depot", "Group", "Flash", "Common", "experiment", "ipCookie", "$filter", function($scope, $injector, location, $rootScope, $window, $routeParams, $http, $route, PageTitle, User, Project, Depot, Group, Flash, Common, experiment, ipCookie, $filter) {
    var prj_regex = /^\/u\/([^\/]+)\/p\/([^\/]+)/
        , grp_regex = /^\/group\/([1-9]\d*)/
        , codeInsight_regex = /^\/u\/[^\/]+\/p\/[^\/]+\/codeInsight\/show\/.+/
        , isSameProject = function(username, project_name) {
            return $rootScope.PROJECT && (project_name != $rootScope.PROJECT.name || username != $rootScope.PROJECT.owner_user_name)
        }
        ;
    $scope.logout = function() {
        User.sign_out(function() {
            $rootScope.USER = void 0,
                $window.location.href = "/"
        })
    }
        ,
        $scope.toBubble = function() {
            "/pp" === location.path() ? $route.reload() : location.path("/pp")
        }
        ,
        $scope.scrollToTop = function() {
            $("body").scrollTop(0)
        }
        ,
        $rootScope.isExpActive = function(feature) {
            return experiment.isActive(feature)
        }
        ,
        $rootScope.setCookie = function(key, value, expires) {
            var date = new Date;
            date.setTime(date.getTime() + 31536e6),
                ipCookie(key, value, {
                    path: "/",
                    expires: expires || date
                })
        }
        ,
        $rootScope.getCookie = function(key) {
            return ipCookie(key)
        }
        ,
        $scope.needConfirmEmail = function() {
            return $rootScope.USER && 0 == $rootScope.USER.status && $rootScope.USER.email && !$rootScope.USER.email.endsWith("@mart")
        }
        ,
        $scope.resendActivateEmail = function() {
            var sendPromise = User.resend_activate({
                email: $rootScope.USER.email
            });
            sendPromise.then(function(data) {
                Flash.success().send("发送确认邮件成功")
            }),
                sendPromise["catch"](function() {
                    Flash.fail().send("发送确认邮件失败,请稍后再试")
                })
        }
        ,
        $rootScope.isShowCode = function() {
            var isRoleCode = $filter("isRole")($scope.PROJECT, $scope.MEMBER);
            return isRoleCode
        }
        ,
        $rootScope.current_app = !1,
        $rootScope.$on("$routeChangeStart", function(event, current) {
            var url = location.path()
                , isAccount = (location.search().debug,
                Common.isAccount(location));
            if (url.match(/^\/user/) ? $rootScope.current_app = "user" : url.match(grp_regex) ? $rootScope.current_app = "group" : url.match(prj_regex) ? $rootScope.current_app = "project" : $rootScope.current_app = !1,
                    $scope.top_menu_tpl = $rootScope.current_app,
                "project" !== $rootScope.current_app && ($rootScope.GROUP = void 0,
                    $rootScope.PROJECT = void 0,
                    $rootScope.DEPOT = void 0),
                "project" === $rootScope.current_app) {
                var params = url.match(prj_regex);
                if (params && 3 == params.length) {
                    var username = params[1]
                        , project_name = params[2];
                    if (isSameProject(username, project_name) && ($rootScope.PROJECT = void 0,
                            $rootScope.DEPOT = void 0),
                            $rootScope.PROJECT)
                        $rootScope.PROJECT.is_public ? $rootScope.current_app = !1 : codeInsight_regex.test(url) && ($rootScope.current_app = !1);
                    else {
                        var pPromise = Project.queryByName({
                            username: username,
                            project_name: project_name
                        }, function(result) {
                            var PROJECT = $rootScope.PROJECT = result.data || !1;
                            $rootScope.current_app = "project",
                            PROJECT && PROJECT.is_public && ($rootScope.current_app = !1),
                            codeInsight_regex.test(url) && ($rootScope.current_app = !1)
                        });
                        if (pPromise["catch"](function(error, result) {
                                return $rootScope.PROJECT = !1,
                                    !result || 1400 !== result.code && 1100 !== result.code ? void 0 : (Flash.fail().send(project_name + " 项目不存在！"),
                                        !1)
                            }),
                                !$rootScope.DEPOT) {
                            var dPromise = Depot.depot({
                                username: username,
                                project_name: project_name
                            }, function(result) {
                                $rootScope.DEPOT = result.data.depot || !1
                            });
                            dPromise["catch"](function(error, result) {
                                return $rootScope.DEPOT = {
                                    id: 0,
                                    project_id: 0,
                                    hasCommits: !1
                                },
                                    result && 1400 === result.code && !$rootScope.isShowCode() ? !1 : void 0
                            })
                        }
                        $rootScope.current_app = !1
                    }
                } else
                    $rootScope.PROJECT = !1
            }
            if ("group" === $rootScope.current_app) {
                var params = url.match(grp_regex);
                if (params && 2 == params.length) {
                    var group_id = +params[1];
                    Group.query({
                        group_id: group_id
                    }, function(result) {
                        $rootScope.GROUP = result.data || !1
                    })
                }
            }
            isAccount && ($rootScope.current_app = !1),
                $rootScope.module = current && current.$$route && current.$$route.module || "home"
        }),
        $rootScope.$on("$routeChangeSuccess", function(event, current) {
            $rootScope.isAccount = Common.isAccount(location),
            $rootScope.USER && User.unread_count({}, function(result) {
                0 == result.code && ($rootScope.unread = result.data,
                    $rootScope.USER.prj_update_count = result.data.project_update_count)
            });
            var title = null ;
            if (current)
                if (current.$$route)
                    if (title = current.$$route.title) {
                        if (angular.isFunction(title)) {
                            title = $injector.invoke(title);
                            var is_promise = title && title.then;
                            if (is_promise)
                                return void title.then(function(title) {
                                    PageTitle.set(title, "Coding.Net")
                                })
                        }
                        PageTitle.set(title, "Coding.net")
                    } else
                        PageTitle.set();
                else
                    PageTitle.set("Page Not Found");
            else
                PageTitle.set()
        })
}
]),
    coding.factory("httpInterceptor", ["Setting", function(Setting) {
        return {
            request: function(config) {
                return config.withCredentials = !0,
                /^(http|https):/i.test(config.url) || /\.html$/i.test(config.url) || (config.url = Setting.api_host + "/" + config.url.replace(/^\/(.*)/, "$1")),
                    config
            }
        }
    }
    ]),
    coding.factory("requestInterceptor", ["RequestValidModalService", "$rootScope", "$location", function(RequestValidModalService, $rootScope, $location) {
        return {
            response: function(response) {
                return response.data && (1018 == response.data.code ? ($(".ui.modal.active:not(#request-valid-modal)").modal("hide"),
                    setTimeout(function() {
                        RequestValidModalService.setType(RequestValidModalService.POST_LIMIT).show(),
                            $("#add-friend-modal").modal("hide")
                    }, 1e3)) : 1e3 === response.data.code && response.data.msg && response.data.msg.user_not_login ? response.data.msg.user_not_login = "<a href=\"javascript:location.href='/login'\">请登录</a>" : 1035 === response.data.code ? ($location.search("phone", $rootScope.USER.phone),
                    $location.path("/activate")) : 1124 === response.data.code && $location.path("/user")),
                    response
            }
        }
    }
    ]),
    coding.config(["$httpProvider", function($httpProvider) {
        $httpProvider.interceptors.push("httpInterceptor"),
            $httpProvider.interceptors.push("requestInterceptor");
        var form_encodes_support = ["post", "put"];
        angular.forEach(form_encodes_support, function(method) {
            $httpProvider.defaults.headers[method]["Content-Type"] = "application/x-www-form-urlencoded;charset=utf-8"
        });
        var param = function(obj) {
                var name, value, fullSubName, subName, subValue, innerObj, i, query = "";
                for (name in obj)
                    if (value = obj[name],
                        value instanceof Array)
                        for (i = 0; i < value.length; ++i)
                            subValue = value[i],
                                fullSubName = name + "[" + i + "]",
                                innerObj = {},
                                innerObj[fullSubName] = subValue,
                                query += param(innerObj) + "&";
                    else if (value instanceof Object)
                        for (subName in value)
                            subValue = value[subName],
                                fullSubName = name + "[" + subName + "]",
                                innerObj = {},
                                innerObj[fullSubName] = subValue,
                                query += param(innerObj) + "&";
                    else
                        void 0 !== value && null  !== value && (query += encodeURIComponent(name) + "=" + encodeURIComponent(value) + "&");
                return query.length ? query.substr(0, query.length - 1) : query
            }
            ;
        $httpProvider.defaults.transformRequest = [function(data) {
            return angular.isObject(data) && "[object File]" !== String(data) ? param(data) : data
        }
        ]
    }
    ]),
    coding.config(["$ocLazyLoadProvider", function($ocLazyLoadProvider) {
        $ocLazyLoadProvider.config({
            loadedModules: ["app"],
            asyncLoader: $script
        })
    }
    ]),
    coding.config(["ngClipProvider", function(ngClipProvider) {
        ngClipProvider.setPath("/static/30dd7530dc5d671bd8aa3ac984b15d68.swf")
    }
    ]),
    coding.config(["hljsServiceProvider", function(hljsServiceProvider) {
        hljsServiceProvider.setOptions({
            tabReplace: "    ",
            languages: ["actionscript", "clojure", "coffeescript", "cpp", "cs", "css", "d", "erlang", "fsharp", "go", "groovy", "haskell", "java", "javascript", "json", "lua", "markdown", "objectivec", "perl", "php", "python", "ruby", "scala", "sql", "swift", "typescript", "xml"]
        })
    }
    ]),
    coding.config(["$$sanitizeUriProvider", function($$sanitizeUriProvider) {
        $$sanitizeUriProvider.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|javascript):/)
    }
    ]),
    coding.run(["$rootScope", "$location", "$route", "User", "Setting", "btfModal", "UserResolver", "ProjectResolver", "$timeout", "Common", function($rootScope, $location, $route, User, Setting, btfModal, UserResolver, ProjectResolver, $timeout, Common) {
        var cuPromise = User.current(function(result) {
            $rootScope.USER = result.data || !1
        });
        cuPromise["catch"](function(error, result) {
            if (result && 1e3 == result.code) {
                $location.path(),
                    $location.search().debug
            }
            return $rootScope.USER = !1,
                !1
        }),
            $rootScope.SETTING = Setting,
            $rootScope.isSameDay = function(project_activities, index) {
                return 0 != index && project_activities[index] && project_activities[index].created_at && project_activities[index - 1] && project_activities[index].created_at ? new Date(project_activities[index].created_at).getDate() == new Date(project_activities[index - 1].created_at).getDate() : !1
            }
            ,
            $rootScope.isSameDayWithNext = function(project_activities, index) {
                return index != project_activities.length - 1 && null  != project_activities[index] && void 0 != project_activities[index].created_at && project_activities[index - 1] && project_activities[index].created_at ? new Date(project_activities[index].created_at).getDate() == new Date(project_activities[index + 1].created_at).getDate() : !1
            }
            ,
            $rootScope.doLoginNow = function() {
                location.href = "/login"
            }
        ;
        var initModals = function(scope, modals) {
            for (var name in modals) {
                var modal = modals[name];
                scope[name] = btfModal(modal),
                modal.activate && scope[name].activate()
            }
        }
            , initGlobalPopup = function(scope) {
            scope.$watch(function() {
                return scope.unread
            }, function(newValue) {
                if (newValue) {
                    var notification_msg = newValue.notifications > 0 ? newValue.notifications + " 未读通知" : "无未读通知"
                        , message_msg = newValue.messages > 0 ? newValue.messages + " 未读私信" : "无未读私信"
                        , popupSettings = {
                        inline: !0,
                        variation: "small",
                        position: "bottom center",
                        duration: 100,
                        distanceAway: -10
                    };
                    $("#top-menu .menu .item.notification-popup").popup(angular.extend(popupSettings, {
                        content: notification_msg
                    })),
                        $("#top-menu .menu .item.message-popup").popup(angular.extend(popupSettings, {
                            content: message_msg
                        }))
                }
            }, !0)
        }
            , modals = {
            addFriendModal: {
                activate: !0,
                controller: "AddFriendController",
                templateUrl: "app/user/add_friends_modal.html",
                resolve: {
                    USER: UserResolver
                }
            },
            paasAddServiceModal: {
                controller: "PaasAddServiceController",
                templateUrl: "app/paas/service/add_service_modal.html",
                resolve: {
                    USER: UserResolver,
                    PROJECT: ProjectResolver
                }
            },
            sendMessageModal: {
                activate: !0,
                controller: "SendMessageController",
                templateUrl: "app/user/send_message_modal.html"
            },
            BlubluModal: {
                activate: !0,
                controller: "SendBobbleController",
                templateUrl: "app/user/send_bobble_modal.html",
                resolve: {
                    USER: UserResolver
                }
            },
            InsertImageModal: {
                controller: "InsertImageController",
                templateUrl: "app/topic/insert_image_modal.html"
            },
            InsertImageLightMDModal: {
                controller: "InsertImageLightMDController",
                templateUrl: "common/directives/markdown/tpl/insert_image_modal.html",
                resolve: {
                    PROJECT: ProjectResolver
                }
            },
            InsertLinkModal: {
                controller: "InsertLinkController",
                templateUrl: "common/directives/pagedown/tpl/insert_link_modal.html"
            },
            ValidatePassword: {
                controller: "PasswordValidateController",
                templateUrl: "app/project/password_validate_modal.html"
            },
            InviteFriendModal: {
                controller: "InviteFriendController",
                templateUrl: "app/user/invite/invite_friend_modal.html",
                resolve: {
                    USER: UserResolver
                }
            },
            RequestValidModalService: {
                activate: !0,
                controller: "RequestValidController",
                templateUrl: "app/user/request_valid.html"
            },
            CropAvatarModal: {
                controller: "CropAvatarController",
                templateUrl: "app/user/account_setting/setting/crop_avatar_modal.html"
            },
            TotpSettingModal: {
                controller: "TotpSettingController",
                templateUrl: "app/user/account_setting/setting/totp_setting_modal.html",
                resolve: {
                    USER: UserResolver
                }
            },
            CreateTaskModal: {
                activate: !0,
                controller: "CreateTaskModalController",
                templateUrl: "app/task/modal/create_task_modal.html",
                resolve: {
                    USER: UserResolver
                }
            }
        };
        $rootScope.$watch("USER", function(USER) {
            USER && (USER.avatar = Common.thumbnail(USER.avatar, 80),
                    Common.startCheckUnreadMessage(),
                    User.unread_count({}, function(result) {
                        0 == result.code && ($rootScope.unread = result.data,
                            $rootScope.USER.prj_update_count = result.data.project_update_count)
                    }),
                $rootScope.USER && ($rootScope.top_menu_logo_link = "/user"),
                    initModals($rootScope, modals),
                    initGlobalPopup($rootScope),
                    $rootScope.addFriend = function() {
                        $("#add-friend-modal").modal("show").modal("setting", {
                            duration: 100,
                            onVisible: function() {
                                setTimeout(function() {
                                    $("#add-friend-modal").find("input:first").trigger("focus")
                                }, 0)
                            },
                            allowMultiple: !1
                        })
                    }
                    ,
                    $rootScope.showSendMsgDialog = function(receiver) {
                        $rootScope.send_msg_target = receiver,
                            $("#send-message-modal").modal("show")
                    }
                    ,
                    $rootScope.makeBubble = function() {
                        var modal = $("#send-bobble-modal");
                        modal.modal("show"),
                            $timeout(function() {
                                modal.find("[cg-feed-editor] textarea").focus()
                            }, 500)
                    }
                    ,
                    $rootScope.createTask = function() {
                        $("#create-task-modal").modal("show")
                    }
            )
        });
        var roles = {
            OWNER: 100,
            ADMIN: 90,
            MEMBER: 80,
            MEMBER_NO_CODE: 75,
            VISITOR: 70,
            GUEST: 60
        };
        angular.extend($rootScope, roles)
    }
    ]),
    angular.module("app").controller("AttachmentController", ["$scope", "$rootScope", function($scope, $rootScope) {
        $scope.folder_name = "新建文件夹",
            $scope.createFolder = function(folder_name) {
                0 != folder_name.length && $rootScope.$broadcast("project.attachment.create.folder", folder_name)
            }
            ,
            $("#create-folder-modal").modal("setting", {
                onHidden: function() {
                    $scope.folder_name = "新建文件夹"
                }
            })
    }
    ]),
    angular.module("app").controller("AttachmentPreviewModal", ["$scope", "$rootScope", "$timeout", "Attachment", "AttachmentOperatingService", "Flash", "Common", function($scope, $rootScope, $timeout, Attachment, AttachmentOperatingService, Flash, Common) {
        $scope.image_preview = {
            prevId: -1,
            nextId: -1
        },
            $scope.file_info = {
                project: void 0,
                file_id: void 0,
                folder_id: void 0
            },
            $scope.getFileType = function(file) {
                return AttachmentOperatingService.getFileType(file)
            }
            ,
            $scope.mode = "preview",
            $scope.inner_menu = "activity";
        var defaultToId = function(id) {
                return "default" === id ? 0 : id
            }
            ;
        $scope.renameFile = function(file) {
            if ($scope.file_name_editing = !1,
                    !file.readName)
                return file.readName = file.copy.readName,
                    void Flash.fail().send("文件名不能为空");
            if (file.readName && file.copy && file.readName === file.copy.readName)
                return void AttachmentOperatingService.doModeSwitch("preview");
            var project_id = $scope.file_info.project.id;
            $scope.file_name_editing = !0;
            var aPromise = Attachment.rename({
                id: project_id,
                file_id: file.file_id
            }, {
                name: file.readName + "." + file.fileType
            });
            aPromise.then(function(result) {
                file.name = file.readName + "." + file.fileType,
                    file.copy.name = angular.copy(file.name),
                    file.copy.readName = angular.copy(file.readName),
                    Flash.success().send("修改成功"),
                    file.history_id = result.data && result.data.history_id || file.history_id;
                var data = {
                    project_id: project_id,
                    file_id: file.file_id,
                    name: file.name
                };
                AttachmentOperatingService.doFileHistoriesReloadSuccess(data),
                    AttachmentOperatingService.doFileRenameSuccess(data)
            }),
                aPromise["catch"](function() {
                    file.name = file.copy.name
                }),
                aPromise["finally"](function() {
                    AttachmentOperatingService.doModeSwitch("preview"),
                        $scope.file_name_editing = !1
                })
        }
            ,
            AttachmentOperatingService.onModalFilePreviewLoadSuccess(function(event, file) {
                angular.isDefined(file) && ($scope.current_file = file,
                    $scope.editor_type = editorType(file),
                    loadImageSiblings($scope.file_info.file_id, defaultToId($scope.file_info.folder_id), $scope.file_info.project.id))
            }),
            AttachmentOperatingService.onOpenPreviewModal(function(event, data) {
                AttachmentOperatingService.doModeSwitch("preview"),
                data && angular.isDefined(data.project) && ($scope.file_info.project = data.project,
                    $scope.file_info.file_id = data.file_id,
                    $scope.file_info.folder_id = data.folder_id)
            }),
            AttachmentOperatingService.onModalFileSaveSuccess(function() {
                AttachmentOperatingService.doModeSwitch("preview"),
                    AttachmentOperatingService.doFileListReloadSuccess()
            }),
            AttachmentOperatingService.onFilePreviewClear(function() {
                Common.safeApply.call($scope, function() {
                    $scope.file_info.file_id = void 0,
                        $scope.current_file = {}
                })
            }),
            AttachmentOperatingService.onModeSwitch(function(event, mode) {
                "edit" !== mode || editable($scope.current_file) || ($scope.file_name_editing = !0,
                    $timeout(function() {
                        focusAndSelectAll("#modal-edit-file-name-" + $scope.current_file.file_id)
                    }, 30)),
                    $scope.mode = mode
            });
        var focusAndSelectAll = function(selector) {
                var editor = $(selector).focus();
                editor[0].setSelectionRange(0, editor[0].value.length)
            }
            , editorType = function(file) {
                return AttachmentOperatingService.editorType(file)
            }
            , loadImageSiblings = function(file_id, folder_id, project_id) {
                folder_id = folder_id || 0,
                    Attachment.image({
                        id: project_id,
                        file: file_id,
                        folderId: folder_id
                    }, function(result) {
                        $scope.image_preview = result.data || {
                                prevId: -1,
                                nextId: -1
                            }
                    })["catch"](function() {
                        return $scope.image_preview = {
                            prevId: -1,
                            nextId: -1
                        },
                            !1
                    })
            }
            , editable = $scope.editable = function(file) {
                return AttachmentOperatingService.editable(file)
            }
            ;
        $scope.switchInnerMenu = function(inner_menu) {
            $scope.inner_menu = inner_menu
        }
            ,
            $scope.changeFileId = function(file_id) {
                $scope.file_info.file_id = file_id
            }
            ,
            $scope.onImageNavChange = function(event) {
                var $focus = $(":focus");
                $focus.is("textarea, input") || $timeout(function() {
                    $(".modal-preview-button > a." + event).trigger("click")
                })
            }
            ,
            $scope.$on("$destroy", function() {
                AttachmentOperatingService.removeModalFilePreviewLoadSuccess(),
                    AttachmentOperatingService.removeOpenPreviewModal(),
                    AttachmentOperatingService.removeModalFileSaveSuccess(),
                    AttachmentOperatingService.removeModeSwitch()
            })
    }
    ]),
    angular.module("app").controller("CodingCgController", ["$scope", function($scope) {}
    ]),
    angular.module("app").controller("ESearchController", ["$scope", "location", "Project", "ESearch", function($scope, $location, Project, ESearch) {
        function loadMoreObjects(objects, filters, fn) {
            objects.page++,
                $scope.loading = !0;
            var params = {
                q: completeQuery(filters),
                page: objects.page
            };
            addSortAndOrder(filters, params),
                fn(params, function(result) {
                    objects.totalPage = result.data.totalPage,
                        objects.totalRow = result.data.totalRow,
                        objects.list = objects.list.concat(result.data.list),
                        $scope.loading = !1
                })
        }
        function initFilters() {
            $scope.projectFilters = {
                sort: {
                    title: "排序",
                    data: [{
                        key: "_default",
                        value: "最匹配",
                        selected: !0,
                        excluded: !0
                    }, {
                        key: "created_at",
                        value: "最新发布",
                        excluded: !0
                    }, {
                        key: "created_at",
                        value: "最早发布",
                        excluded: !0,
                        order: "asc"
                    }, {
                        key: "updated_at",
                        value: "最近更新",
                        excluded: !0
                    }],
                    type: "sort",
                    result: "_default"
                }
            },
                $scope.topicFilters = {
                    sort: {
                        title: "排序",
                        data: [{
                            key: "_default",
                            value: "最匹配",
                            selected: !0,
                            excluded: !0
                        }, {
                            key: "last_commented_at",
                            value: "最后回答",
                            excluded: !0
                        }, {
                            key: "created_at",
                            value: "最新发布",
                            excluded: !0
                        }, {
                            key: "child_count",
                            value: "热门",
                            excluded: !0
                        }],
                        type: "sort",
                        result: "_default"
                    },
                    owner: {
                        title: "创建者",
                        data: [],
                        type: "user",
                        result: "_default"
                    }
                },
                $scope.taskFilters = {
                    sort: {
                        title: "排序",
                        data: [{
                            key: "_default",
                            value: "最匹配",
                            selected: !0,
                            excluded: !0
                        }, {
                            key: "priority",
                            value: "紧急程度",
                            excluded: !0
                        }, {
                            key: "created_at",
                            value: "最近创建",
                            excluded: !0
                        }, {
                            key: "created_at",
                            value: "最早创建",
                            excluded: !0,
                            order: "asc"
                        }, {
                            key: "updated_at",
                            value: "最近更新",
                            excluded: !0
                        }, {
                            key: "updated_at",
                            value: "最早更新",
                            excluded: !0,
                            order: "asc"
                        }],
                        type: "sort",
                        result: "_default"
                    },
                    status: {
                        title: "所有任务",
                        data: [{
                            key: "_default",
                            value: "所有任务",
                            selected: !0,
                            excluded: !0
                        }, {
                            key: "1",
                            value: "正在进行",
                            excluded: !0
                        }, {
                            key: "2",
                            value: "已完成",
                            excluded: !0
                        }],
                        type: "plainText",
                        result: "_default"
                    },
                    priority: {
                        title: "紧急程度",
                        data: [{
                            key: "_default",
                            value: "所有",
                            selected: !0,
                            excluded: !0
                        }, {
                            key: 3,
                            value: "十万火急"
                        }, {
                            key: 2,
                            value: "优先处理"
                        }, {
                            key: 1,
                            value: "正常处理"
                        }, {
                            key: 0,
                            value: "有空再说"
                        }],
                        type: "priority",
                        result: "_default"
                    },
                    creator: {
                        title: "创建者",
                        data: [],
                        type: "user",
                        result: "_default"
                    },
                    owner: {
                        title: "执行者",
                        data: [],
                        type: "user",
                        result: "_default"
                    }
                },
                $scope.tweetFilters = {
                    sort: {
                        title: "排序",
                        data: [{
                            key: "_default",
                            value: "最匹配",
                            selected: !0,
                            excluded: !0
                        }, {
                            key: "created_at",
                            value: "最新发布",
                            excluded: !0
                        }, {
                            key: "comments",
                            value: "最多评论",
                            excluded: !0
                        }, {
                            key: "likes",
                            value: "最多赞",
                            excluded: !0
                        }],
                        type: "sort",
                        result: "_default"
                    }
                },
                $scope.fileFilters = {
                    sort: {
                        title: "排序",
                        data: [{
                            key: "_default",
                            value: "最匹配",
                            selected: !0,
                            excluded: !0
                        }, {
                            key: "created_at",
                            value: "最新发布",
                            excluded: !0
                        }, {
                            key: "size",
                            value: "文件大小",
                            excluded: !0
                        }],
                        type: "sort",
                        result: "_default"
                    },
                    owner: {
                        title: "上传者",
                        data: [],
                        type: "user",
                        result: "_default"
                    }
                },
                $scope.mrFilters = {
                    sort: {
                        title: "排序",
                        data: [{
                            key: "_default",
                            value: "最匹配",
                            selected: !0,
                            excluded: !0
                        }, {
                            key: "created_at",
                            value: "创建时间",
                            excluded: !0,
                            order: "asc"
                        }, {
                            key: "updated_at",
                            value: "更新时间",
                            excluded: !0,
                            order: "asc"
                        }, {
                            key: "action_at",
                            value: "合并或者拒绝时间",
                            excluded: !0,
                            order: "asc"
                        }],
                        type: "sort",
                        result: "_default"
                    },
                    merge_status: {
                        title: "合并状态",
                        data: [{
                            key: "_default",
                            value: "所有",
                            selected: !0,
                            excluded: !0
                        }, {
                            key: "CANMERGE",
                            value: "可合并"
                        }, {
                            key: "CANNOTMERGE",
                            value: "不可合并"
                        }, {
                            key: "ACCEPTED",
                            value: "已合并"
                        }, {
                            key: "REFUSED",
                            value: "已拒绝"
                        }, {
                            key: "CANCEL",
                            value: "已取消"
                        }],
                        type: "plainText",
                        result: "_default"
                    },
                    author: {
                        title: "作者",
                        data: [],
                        type: "user",
                        result: "_default"
                    },
                    action_author: {
                        title: "合并或拒绝者",
                        data: [],
                        type: "user",
                        result: "_default"
                    },
                    assignee: {
                        title: "指派者",
                        data: [],
                        type: "user",
                        result: "_default"
                    },
                    granted: {
                        title: "授权",
                        data: [{
                            key: "_default",
                            value: "所有",
                            selected: !0,
                            excluded: !0
                        }, {
                            key: "1",
                            value: "已授权",
                            excluded: !0
                        }, {
                            key: "0",
                            value: "未授权",
                            excluded: !0
                        }],
                        type: "plainText",
                        result: "_default"
                    },
                    granted_by: {
                        title: "授权人",
                        data: [],
                        type: "user",
                        result: "_default"
                    }
                },
                $scope.prFilters = {
                    sort: {
                        title: "排序",
                        data: [{
                            key: "_default",
                            value: "最匹配",
                            selected: !0,
                            excluded: !0
                        }, {
                            key: "created_at",
                            value: "创建时间",
                            excluded: !0,
                            order: "asc"
                        }, {
                            key: "updated_at",
                            value: "更新时间",
                            excluded: !0,
                            order: "asc"
                        }, {
                            key: "action_at",
                            value: "合并或者拒绝时间",
                            excluded: !0,
                            order: "asc"
                        }],
                        type: "sort",
                        result: "_default"
                    },
                    merge_status: {
                        title: "合并状态",
                        data: [{
                            key: "_default",
                            value: "所有",
                            selected: !0,
                            excluded: !0
                        }, {
                            key: "CANMERGE",
                            value: "可合并"
                        }, {
                            key: "CANNOTMERGE",
                            value: "不可合并"
                        }, {
                            key: "ACCEPTED",
                            value: "已合并"
                        }, {
                            key: "REFUSED",
                            value: "已拒绝"
                        }, {
                            key: "CANCEL",
                            value: "已取消"
                        }],
                        type: "plainText",
                        result: "_default"
                    },
                    author: {
                        title: "作者",
                        data: [],
                        type: "user",
                        result: "_default"
                    },
                    action_author: {
                        title: "合并或拒绝者",
                        data: [],
                        type: "user",
                        result: "_default"
                    },
                    assignee: {
                        title: "指派者",
                        data: [],
                        type: "user",
                        result: "_default"
                    }
                },
                $scope.userFilters = {
                    sort: {
                        title: "排序",
                        data: [{
                            key: "_default",
                            value: "最匹配",
                            selected: !0,
                            excluded: !0
                        }, {
                            key: "created_at",
                            value: "最新加入",
                            excluded: !0
                        }, {
                            key: "created_at",
                            value: "最早加入",
                            excluded: !0,
                            order: "asc"
                        }],
                        type: "sort",
                        result: "_default"
                    }
                }
        }
        function completeFilters() {
            for (var objects = [$scope.topicFilters.owner, $scope.taskFilters.creator, $scope.taskFilters.owner, $scope.fileFilters.owner, $scope.mrFilters.author, $scope.mrFilters.action_author, $scope.mrFilters.assignee, $scope.mrFilters.granted_by, $scope.prFilters.author, $scope.prFilters.action_author, $scope.prFilters.assignee], i = objects.length - 1; i >= 0; i--) {
                objects[i].data.push({
                    key: "_default",
                    value: "所有人",
                    selected: !0,
                    excluded: !0
                });
                for (var j = 0, len = $scope.members.list.length; len > j; j++) {
                    var member = $scope.members.list[j];
                    objects[i].data.push({
                        key: member.user.global_key,
                        avatar: member.user.avatar,
                        value: member.user.name,
                        excluded: !1,
                        pinyin: member.user.name_pinyin
                    })
                }
            }
        }
        function addSortAndOrder(filterCategory, params) {
            var result = filterCategory.sort.result;
            return result.indexOf("_default") >= 0 ? void $location.skipReload().search("sort", null ).search("order", null ) : (params.sort = result,
                params.order = filterCategory.sort.order,
                $location.skipReload().search("sort", params.sort).search("order", params.order),
                void 0)
        }
        function queryStringFromFilter(filterCategory) {
            var query = "";
            for (var key in filterCategory)
                filterCategory.hasOwnProperty(key) && "sort" != key && ("_default" != filterCategory[key].result ? (query += " " + key.toString() + ":" + filterCategory[key].result,
                    $location.skipReload().search(key.toString(), filterCategory[key].result)) : $location.skipReload().search(key.toString(), null ));
            return query
        }
        function resetFilters() {
            for (var filters = [$scope.projectFilters, $scope.topicFilters, $scope.taskFilters, $scope.tweetFilters, $scope.fileFilters, $scope.mrFilters, $scope.prFilters, $scope.userFilters], i = filters.length - 1; i >= 0; i--)
                for (var key in filters[i]) {
                    if (filters[i].hasOwnProperty(key)) {
                        var data = filters[i][key].data;
                        if (data.length > 0) {
                            for (var j = data.length - 1; j >= 0; j--)
                                data[j].selected && (data[j].selected = !1);
                            data[0].selected = !0
                        }
                    }
                    filters[i][key].result = "_default"
                }
        }
        function addGlobalSearchFilters() {
            $scope.projectFilters.related = {
                title: "相关项目",
                data: [{
                    key: "_default",
                    value: "与我相关",
                    selected: !0,
                    excluded: !0
                }, {
                    key: "false",
                    value: "公开项目",
                    excluded: !0
                }],
                type: "plainText",
                result: "_default"
            },
                $scope.topicFilters.related = {
                    title: "相关项目",
                    data: [{
                        key: "_default",
                        value: "与我相关",
                        selected: !0,
                        excluded: !0
                    }, {
                        key: "false",
                        value: "公开项目",
                        excluded: !0
                    }],
                    type: "plainText",
                    result: "_default"
                }
        }
        function loadFiltersFromUrl(type) {
            "friend" === type && (type = "user");
            var filterName = type + "Filters"
                , filter = $scope[filterName]
                , searchObj = $location.search();
            for (var key in filter)
                if (filter.hasOwnProperty(key) && searchObj.hasOwnProperty(key)) {
                    var values = searchObj[key]
                        , data = filter[key].data
                        , unsetDefault = !1;
                    if (filter[key].result = values,
                        "sort" != key)
                        angular.forEach(values.split(","), function(value) {
                            for (var i = data.length - 1; i > 0; i--)
                                if (data[i].key == value) {
                                    data[i].selected = !0,
                                        unsetDefault = !0;
                                    break
                                }
                        });
                    else
                        for (var order = "asc" === searchObj.order ? "asc" : void 0, i = data.length - 1; i > 0; i--)
                            if (data[i].key == values && data[i].order == order) {
                                data[i].selected = !0,
                                    unsetDefault = !0;
                                break
                            }
                    unsetDefault && (data[0].selected = !1)
                }
        }
        function queryFilteredResultBasedOnUrl() {
            $scope.loading = !1;
            var type = $scope.tab;
            "friend" === type && (type = "user");
            var filterName = type + "Filters"
                , filter = $scope[filterName]
                , searchObj = $location.search()
                , query = encodeURIComponent(searchObj.q);
            $scope.username && $scope.project_name && (query += " project:" + $scope.username + "/" + $scope.project_name);
            var needsFilter = !1;
            for (var key in filter)
                if (filter.hasOwnProperty(key) && searchObj.hasOwnProperty(key) && "sort" != key) {
                    var values = searchObj[key];
                    query += " " + key + ":" + values,
                        needsFilter = !0
                }
            var params = {
                q: query,
                page: 1
            };
            if (searchObj.sort && "" != searchObj.sort && (params.sort = searchObj.sort,
                    needsFilter = !0,
                searchObj.order && "" != searchObj.order && (params.order = searchObj.order)),
                    !needsFilter)
                return void ($scope.loading = !1);
            var choice = {
                project: [$scope.projects, ESearch.moreProjects],
                topic: [$scope.project_topics, ESearch.moreTopics],
                task: [$scope.tasks, ESearch.moreTasks],
                tweet: [$scope.tweets, ESearch.moreTweets],
                file: [$scope.files, ESearch.moreFiles],
                mr: [$scope.mrs, ESearch.moreMRs],
                pr: [$scope.prs, ESearch.morePRs],
                friend: [$scope.friends, ESearch.moreFriends]
            }[type]
                , objects = choice[0]
                , fn = choice[1];
            fn(params, function(result) {
                objects.totalPage = result.data.totalPage,
                    objects.totalRow = result.data.totalRow,
                    objects.list = result.data.list,
                    $scope.loading = !1
            })
        }
        $scope.projects = [],
            $scope.project_topics = [],
            $scope.tasks = [],
            $scope.tweets = [],
            $scope.files = [],
            $scope.mrs = [],
            $scope.prs = [],
            $scope.friends = [],
            $scope.keyword = "",
            $scope.tab = "project",
            $scope.loading = !1,
            $scope.allPageLoading = !0,
            $scope.search_project = null ,
            $scope.keyword = $location.search().q,
            $scope.key = $scope.keyword,
            $scope.username = $location.search().user,
            $scope.project_name = $location.search().project,
            $scope.type = $location.search().type,
        $scope.type && ($scope.tab = $scope.type),
            $scope.publicInProjectSearch = !1,
            initFilters();
        var projectPromise = null
            , loadSearchProject = function(user, project) {
                projectPromise = Project.queryByName({
                    username: user,
                    project_name: project
                }),
                    projectPromise.then(function(result) {
                        $scope.search_project = result.data,
                            $scope.publicInProjectSearch = result.data.is_public,
                        "project" == $scope.tab && ($scope.tab = result.data.is_public ? "topic" : "task");
                        var memberPromise = Project.members({
                            id: $scope.search_project.id
                        });
                        memberPromise.then(function(result) {
                            $scope.members = result.data,
                                completeFilters(),
                                loadFiltersFromUrl($scope.tab)
                        })
                    })
            }
            ;
        $scope.username && $scope.project_name ? loadSearchProject($scope.username, $scope.project_name) : loadFiltersFromUrl($scope.tab),
        void 0 == $scope.username && void 0 == $scope.project_name && addGlobalSearchFilters(),
            $scope.type ? $scope.tab = $scope.type : $location.skipReload().search("type", $scope.tab);
        var search = function() {
                if ($scope.projects = [],
                        $scope.project_topics = [],
                        $scope.tasks = [],
                        $scope.tweets = [],
                        $scope.files = [],
                        $scope.mrs = [],
                        $scope.prs = [],
                        $scope.friends = [],
                    0 == $scope.keyword.length)
                    return void ($scope.key = $scope.keyword);
                $scope.allPageLoading = !0;
                var callback = function(result) {
                        $scope.key = $scope.keyword,
                            $scope.projects = result.data.projects,
                            $scope.project_topics = result.data.project_topics,
                            $scope.tasks = result.data.tasks,
                            $scope.tweets = result.data.tweets,
                            $scope.files = result.data.files,
                            $scope.mrs = result.data.merge_requests,
                            $scope.prs = result.data.pull_requests,
                            $scope.friends = result.data.friends,
                            $scope.allPageLoading = !1,
                            queryFilteredResultBasedOnUrl()
                    }
                    ;
                $scope.username && $scope.project_name ? projectPromise.then(function() {
                    var projectKey = $scope.username + "/" + $scope.project_name;
                    ESearch.ofProject({
                        q: encodeURIComponent($scope.keyword),
                        project: projectKey,
                        types: "project_topics,tasks,files,friends,merge_requests,pull_requests"
                    }, callback)
                }) : ESearch.all({
                    q: encodeURIComponent($scope.keyword),
                    types: "projects,project_topics,tasks,tweets,files,friends,merge_requests,pull_requests"
                }, callback)
            }
            ;
        $scope.keyword && "" != $scope.keyword ? search() : $scope.allPageLoading = !1;
        $scope.changeTab = function(key) {
            resetFilters(),
                $scope.tab = key,
                $location.skipReload().search({
                    q: $scope.keyword,
                    type: key,
                    user: $scope.user,
                    project: $scope.project
                })
        }
        ;
        $scope.gotoSearch = function(keyword) {
            $location.skipReload().path("/esearch"),
                $location.skipReload().search("q", keyword),
                search()
        }
            ,
            $scope.hasMore = function(items) {
                return items ? items.page < items.totalPage : !1
            }
        ;
        var completeQuery = function(filterCategory) {
                var query = encodeURIComponent($scope.keyword);
                $scope.username && $scope.project_name && (query += " project:" + $scope.username + "/" + $scope.project_name);
                var filterStr = queryStringFromFilter(filterCategory);
                return query += filterStr
            }
            ;
        $scope.loadMoreProjects = function() {
            loadMoreObjects($scope.projects, $scope.projectFilters, ESearch.moreProjects)
        }
            ,
            $scope.loadMoreProjectTopics = function() {
                loadMoreObjects($scope.project_topics, $scope.topicFilters, ESearch.moreTopics)
            }
            ,
            $scope.loadMoreTasks = function() {
                loadMoreObjects($scope.tasks, $scope.taskFilters, ESearch.moreTasks)
            }
            ,
            $scope.loadMoreTweets = function() {
                loadMoreObjects($scope.tweets, $scope.tweetFilters, ESearch.moreTweets)
            }
            ,
            $scope.loadMoreFiles = function() {
                loadMoreObjects($scope.files, $scope.fileFilters, ESearch.moreFiles)
            }
            ,
            $scope.loadMoreMRs = function() {
                loadMoreObjects($scope.mrs, $scope.mrFilters, ESearch.moreMRs)
            }
            ,
            $scope.loadMorePRs = function() {
                loadMoreObjects($scope.prs, $scope.prFilters, ESearch.morePRs)
            }
            ,
            $scope.loadMoreFriends = function() {
                loadMoreObjects($scope.friends, $scope.userFilters, ESearch.moreFriends)
            }
            ,
            $scope.searchType = function(type) {
                var choice = {
                    project: [$scope.projects, $scope.loadMoreProjects],
                    topic: [$scope.project_topics, $scope.loadMoreProjectTopics],
                    task: [$scope.tasks, $scope.loadMoreTasks],
                    tweet: [$scope.tweets, $scope.loadMoreTweets],
                    file: [$scope.files, $scope.loadMoreFiles],
                    mr: [$scope.mrs, $scope.loadMoreMRs],
                    pr: [$scope.prs, $scope.loadMorePRs],
                    friend: [$scope.friends, $scope.loadMoreFriends]
                };
                choice[type][0].page = 0,
                    choice[type][0].list = [],
                    choice[type][1]()
            }
            ,
            $scope.splitTags = function(tags_str) {
                return tags_str.split(",")
            }
            ,
            $scope.printableMergeStatus = function(merge_status) {
                return {
                    CANMERGE: "可合并",
                    CANNOTMERGE: "不可合并",
                    ACCEPTED: "已合并",
                    REFUSED: "已拒绝",
                    CANCEL: "已取消"
                }[merge_status]
            }
            ,
            $scope.newlineToWhitespace = function(str) {
                return str.replace(/\n/g, " ")
            }
    }
    ]),
    angular.module("app").controller("MergeRequestSquashModalCtrl", ["$scope", "Depot", "$routeParams", "Common", "$route", "$location", "$rootScope", "Flash", function($scope, Depot, $routeParams, Common, $route, $location, $rootScope, Flash) {
        $scope.loading = !1,
            $scope.customized_msg = !1,
            $scope.messages = {},
            $scope.preview = !1,
            $scope.preview_msg = "";
        var initMessages = function() {
                $scope.messages = {};
                var first = $scope.merge_request.commits[0];
                first && ($scope.messages[first.commitId] = !0),
                    $scope.priview_msg = ""
            }
            ;
        $scope.$watchCollection("merge_request", function(merge_request) {
            merge_request && merge_request.commits && initMessages()
        }),
            $scope.toggleCustomized = function(e) {
                $scope.customized_msg = !$scope.customized_msg,
                $scope.customized_msg || initMessages(),
                    e.stopPropagation()
            }
            ,
            $scope.togglePreview = function(up) {
                $scope.preview = !!up,
                    $scope.preview ? $scope.preview_msg = retrieveMsg() : $scope.priview_msg = ""
            }
        ;
        var retrieveMsg = function() {
                var msg = "";
                msg = $scope.messages.customized || "";
                var commits = $scope.merge_request.commits;
                return 0 === msg.length && angular.forEach(commits, function(commit, index) {
                    var found = $scope.messages[commit.commitId];
                    found && (msg += commit.fullMessage,
                    index < commits.length - 1 && (msg += "\n"))
                }),
                    msg = Common.htmlToPlaintext(msg),
                    msg += ["\n", "Squash from ", commits[0].commitId.substring(0, 7), " to ", commits[commits.length - 1].commitId.substring(0, 7), " by ", $rootScope.USER.global_key].join("")
            }
            ;
        $scope.squash = function() {
            if (!$scope.squashing) {
                $scope.squashing = !0;
                var promise = Depot.merge_request_squash({
                    username: $routeParams.username,
                    project_name: $routeParams.project_name,
                    iid: $routeParams.iid
                }, {
                    message: retrieveMsg()
                });
                promise.then(function() {
                    $location.search("tab", "commits"),
                        $route.reload(),
                        Flash.success().send("合并提交记录成功!")
                }),
                    promise["finally"](function() {
                        $scope.squashing = !1,
                            $scope.toggleSquashModal()
                    })
            }
        }
    }
    ]);
var Plot = function(options) {
        this.w = options.w || 30,
            this.h = options.h || 30,
            this.commits = options.commits || [],
            this.paddingTop = options.paddingTop || 0,
            this.paddingLeft = options.paddingLeft || 0,
            this.paddingRight = options.paddingRight || 0,
            this.paddingBottom = options.paddingBottom || 0,
            this.selector = options.selector || "",
            this.svg = options.svg || d3.select(options.selector).append("svg"),
            this.r = options.r || 5,
            this.mr = options.mr || 10,
            this.lw = options.lw || 2,
            this.dw = options.dw || 25,
            this.project_path = options.project_path || "",
            this.colors = options.colors || ["#35a266", "#EBB741", "#CC6ADD", "#F1D3D7"],
            this.pcolors = [],
            this.restoreColors(),
            this.maxLane = this.getMaxLane(this.commits),
            this.lineFunction = d3.svg.line().x(function(d) {
                return d.x
            }).y(function(d) {
                return d.y
            }).interpolate("linear"),
            this.preMonth = null ,
            this.preDay = null ,
            this.monthFormat = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
            this.dotColor = this.getColor()
    }
    ;
Plot.prototype = {
    init: function(commits) {
        this.svg.remove(),
            this.svg = d3.select(this.selector).append("svg"),
            this.commits = commits,
            this.resize(),
            this.maxLane = this.getMaxLane(this.commits),
            this.drawMonth(0, 0, this.dw, this.paddingTop),
            this.drawDay(0 + this.dw, 0, this.dw, this.paddingTop);
        for (var i = 0; i < this.commits.length; i++) {
            var commit = this.commits[i];
            this.drawCommit(commit, i * this.h + this.paddingTop);
            var date = new Date(commit.date);
            this.preMonth != date.getMonth() ? (this.preMonth = date.getMonth(),
                this.drawMonth(0, i * this.h + this.paddingTop, this.dw, this.h, this.preMonth)) : this.drawMonth(0, i * this.h + this.paddingTop, this.dw, this.h),
                this.preDay != date.getDate() ? (this.preDay = date.getDate(),
                    this.drawDay(0 + this.dw, i * this.h + this.paddingTop, this.dw, this.h, this.preDay)) : this.drawDay(0 + this.dw, i * this.h + this.paddingTop, this.dw, this.h)
        }
        var clen = this.commits.length;
        this.drawMonth(0, clen * this.h + this.paddingBottom, this.dw, this.paddingBottom),
            this.drawDay(0 + this.dw, clen * this.h + this.paddingBottom, this.dw, this.paddingBottom)
    },
    render: function(commits) {
        this.init(commits)
    },
    resize: function() {
        this.svg.attr({
            width: "100%",
            height: this.commits.length * this.h + this.paddingTop + this.paddingBottom,
            opacity: 1
        })
    },
    drawCommit: function(commit, h) {
        var myLane = commit.lane
            , myLaneX = this.laneC(myLane)
            , passingLanes = commit.passingLanes
            , forkingOffLanes = commit.forkingOffLanes
            , mergingLanes = commit.mergingLanes
            , maxCenter = 0
            , dotX = myLaneX
            , dotY = h + this.h / 2
            , gw = this.paddingRight + 2 * this.dw + (this.maxLane + 1) * this.w + this.paddingLeft;
        this.drawDottedLine(commit, dotX, dotY, gw, dotY);
        var date = new Date(commit.date);
        this.preDay != date.getDate() && (this.dotColor = this.getColor());
        var i, cx;
        if (passingLanes)
            for (i = 0; i < passingLanes.length; i++)
                cx = this.laneC(passingLanes[i]),
                    this.drawLine(commit, cx, h, cx, h + this.h, !1),
                    maxCenter = Math.max(maxCenter, cx);
        if (mergingLanes)
            for (i = 0; i < mergingLanes.length; i++)
                cx = this.laneC(mergingLanes[i]),
                    Math.abs(myLaneX - cx) > this.w ? (this.drawLine(commit, myLaneX, h + this.h / 2, cx - this.w / 2, h + this.h / 2),
                        this.drawLine(commit, cx - this.w / 2, h + this.h / 2, cx, h + this.h)) : this.drawLine(commit, myLaneX, h + this.h / 2, cx, h + this.h);
        if (forkingOffLanes)
            for (i = 0; i < forkingOffLanes.length; i++)
                cx = this.laneC(forkingOffLanes[i]),
                    Math.abs(myLaneX - cx) > this.w ? (this.drawLine(commit, myLaneX, h + this.h / 2, cx - this.w / 2, h + this.h / 2),
                        this.drawLine(commit, cx - this.w / 2, h + this.h / 2, cx, h)) : this.drawLine(commit, myLaneX, h + this.h / 2, cx, h);
        var children = commit.children;
        children && children.length > 0 && this.drawLine(commit, myLaneX, h, myLaneX, dotY),
            this.drawGravatar(commit, gw, dotY - this.h / 4),
            this.drawText(commit, gw + this.paddingLeft + this.w, dotY + this.h / 8),
            this.drawLine(commit, dotX, dotY, dotX, dotY + this.h / 2, !1),
            this.drawDot(commit, dotX, dotY, commit.tag)
    },
    getCommitById: function(id) {
        for (var i = 0; i < this.commits.length; i++) {
            var commit = this.commits[i];
            if (commit.id == id)
                return commit
        }
    },
    restoreColors: function() {
        for (var i = 0; i < this.colors.length; i++)
            this.pcolors[i] = this.colors[i]
    },
    getColor: function() {
        var color = this.pcolors.pop();
        return 0 === this.pcolors.length && this.restoreColors(),
            color
    },
    drawDot: function(commit, x, y, tag) {
        var thiz = this
            , html = thiz.commitHTML(commit)
            , g = thiz.svg.append("g").attr({
            transform: "translate(0," + y + ")",
            fill: "#FFF",
            "class": "ui circular heart icon link",
            "data-html": html
        });
        tag && g.insert("circle").attr({
            r: this.r + 2,
            "stroke-width": 1,
            stroke: "#888",
            fill: "rgba(0,0,0,0)"
        }),
            g.append("circle").attr({
                r: this.r,
                "stroke-witdh": this.lw,
                fill: this.dotColor
            }).on("mouseover", function() {
                d3.select(this).attr("transform", "scale(2)")
            }).on("mouseout", function() {
                d3.select(this).attr("transform", "scale(1)")
            }).on("mousedown", function() {
                window.location.href = thiz.project_path + "/git/commit/" + commit.id
            }),
            g.transition().duration(3e3).attr({
                transform: "translate(" + x + "," + y + ")"
            })
    },
    drawDottedLine: function(commit, x1, y1, x2, y2) {
        var spointers = [{
            x: 0,
            y: y1
        }, {
            x: 0,
            y: y2
        }]
            , pointers = [{
            x: x1,
            y: y1
        }, {
            x: x2,
            y: y2
        }]
            , lineGraph = (d3.svg.line().x(function(d) {
            return d.x
        }).y(function(d) {
            return d.y
        }).interpolate("linear"),
            this.svg.append("path").attr({
                d: this.lineFunction(spointers),
                stroke: "#eee",
                "stroke-width": this.lw,
                "stroke-dasharray": "1,3",
                fill: "#666"
            }));
        lineGraph.transition().duration(2e3).attr({
            d: this.lineFunction(pointers)
        })
    },
    drawLine: function(commit, x1, y1, x2, y2) {
        y1 == y2 ? (x1 -= this.lw / 2,
            x2 -= this.lw / 2) : x1 == x2 && (y1 -= this.lw / 2,
            y2 -= this.lw / 2);
        var spointers = [{
            x: x1,
            y: y1
        }, {
            x: x1,
            y: y1
        }]
            , pointers = [{
            x: x1,
            y: y1
        }, {
            x: x2,
            y: y2
        }]
            , lineGraph = (d3.svg.line().x(function(d) {
            return d.x
        }).y(function(d) {
            return d.y
        }).interpolate("linear"),
            this.svg.append("path").attr({
                d: this.lineFunction(spointers),
                stroke: "#999",
                "stroke-width": this.lw,
                fill: "#999"
            }));
        lineGraph.transition().duration(1e3).attr({
            d: this.lineFunction(pointers)
        })
    },
    drawText: function(commit, x, y) {
        var thiz = this
            , g = this.svg.append("g").attr("transform", "translate(" + x + "," + y + ")");
        g.insert("text").attr({
            id: "xLabel",
            "text-anchor": "left",
            "font-size": "12px",
            fill: "#555",
            "class": "text"
        }).text(commit.shortMessage).on("mousedown", function() {
            window.location.href = thiz.project_path + "/git/commit/" + commit.id
        })
    },
    drawGravatar: function(commit, x, y) {
        var w = this.h / 2;
        this.svg.append("rect").attr({
            transform: "translate(" + (x - 1.5) + "," + (y - 1) + ")",
            width: w + 3,
            height: w + 3,
            fill: "rgba(0,0,0,0)",
            "stroke-witdh": 1,
            stroke: "#999",
            opacity: 1
        }),
            this.svg.insert("image").attr("transform", "translate(" + x + "," + y + ")").attr("style", "z-index:-1").attr({
                id: "xLabel",
                "xlink:href": commit.author.gravatar,
                src: commit.author.gravatar,
                "text-anchor": "left",
                width: w,
                height: w,
                opacity: 1
            }).text(commit.shortMessage)
    },
    drawDay: function(x, y, w, h, day) {
        this.drawRectAndText("#666", x, y, w, h, day, -1, 18)
    },
    drawMonth: function(x, y, w, h, month) {
        this.drawRectAndText("#333", x, y, w, h, this.monthFormat[month], -1, 18)
    },
    drawRectAndText: function(color, x, y, w, h, text, tx, ty) {
        this.svg.append("rect").attr({
            transform: "translate(" + x + "," + y + ")",
            width: w,
            height: h,
            fill: color,
            opacity: 1
        });
        text && (text = this.svg.append("text").attr({
            transform: "translate(" + (x + w / 2) + "," + y + ")",
            id: "xLabel",
            "text-anchor": "middle",
            "font-size": "12px",
            fill: "#FFF",
            color: "#FFF",
            x: tx,
            y: ty,
            opacity: 1
        }).text(text))
    },
    laneX: function(lane) {
        return this.paddingLeft + 2 * this.dw + this.w * lane
    },
    laneC: function(lane) {
        return this.laneX(lane) + this.w / 2
    },
    getMaxLane: function(commits) {
        for (var max = 0, i = 0; i < commits.length; i++) {
            var c = commits[i];
            max = Math.max(c.lane, max)
        }
        return max
    },
    commitHTML: function(commit) {
        var html = [];
        return html.push("<div class='commit_info_popup'>"),
            html.push("<div class='author'><img src='" + commit.author.gravatar + "' width='50' height='50'><p class='author_name'>" + commit.author.name + "</p> <p class='author_email'><a href='emailto:" + commit.author.email + "'>" + commit.author.email + "</a></p><div class='clean'></div></div>"),
            html.push("<p><label class='commit_id'>" + commit.id + "</label></p>"),
            html.push("<p><label class='commit_date'>" + new Date(commit.date).toLocaleString() + "</label></p>"),
        commit.tag && html.push("<p><label class='commit_tag' style='color:" + this.dotColor + "'>" + commit.tag + "</label></p>"),
            html.push("<p><label class='commit_message'>" + commit.message + "</label></p>"),
            html.push("<div>"),
            html.join("")
    }
};
var helpController = angular.module("app");
helpController.controller("HelpController", ["$scope", "$location", "$routeParams", "Errors", "Helps", "location", function($scope, $location, $routeParams, Errors, Helps, location) {
    $scope.title = $routeParams.title || "about_coding",
        $scope.key = $routeParams.key || "",
        $scope.question = $routeParams.question || "",
        $scope.root_category = [],
        $scope.current_root_category = null ,
        $scope.loading_category = !0,
        Helps.root_category(function(result) {
            if ($scope.loading_category = !1,
                0 == result.code) {
                $scope.root_category = result.data || [],
                    $scope.current_root_category = $scope.root_category[0];
                for (var i in $scope.root_category) {
                    var ca = $scope.root_category[i];
                    ca.code == $scope.title && ($scope.current_root_category = $scope.root_category[i])
                }
                (!$scope.key || $scope.key.length <= 0) && $scope.loadQuestions($scope.current_root_category)
            }
        }),
        $scope.faqs = {};
    var populate = function(questions) {
            for (var i in questions) {
                var q = questions[i]
                    , qs = $scope.faqs[q.category];
                qs || (qs = $scope.faqs[q.category] = {
                    name: q.category_name,
                    questions: []
                }),
                    qs.questions.push(q)
            }
        }
        ;
    $scope.loadQuestions = function(category) {
        return category ? ($scope.faqs = {},
            $routeParams.key = null ,
            $scope.current_root_category = category,
            $scope.load_question = !0,
            Helps.docs({
                code: category.code
            }, function(result) {
                $scope.load_question = !1,
                    $scope.questions = result.data || [],
                    populate($scope.questions)
            }),
            location.skipReload().path("/help/" + $scope.current_root_category.code + ($scope.question ? "/" + $scope.question : "")),
            void location.skipReload().search("")) : ($scope.load_question = !1,
            $scope.questions = [],
            void populate($scope.questions))
    }
        ,
        $scope.openQA = function(question) {
            $scope.question == question ? $scope.question = "" : $scope.question = question,
                location.skipReload().path("/help/" + $scope.current_root_category.code + ($scope.question ? "/" + $scope.question : ""))
        }
        ,
        $scope.search = function(key) {
            key.length <= 0 || ($scope.faqs = {},
                $scope.load_question = !0,
                Helps.search({
                    key: key
                }, function(result) {
                    $scope.load_question = !1,
                        $scope.questions = result.data || [],
                        populate($scope.questions)
                }))
        }
        ,
    $scope.key && $scope.key.length > 0 && $scope.search($scope.key)
}
]);
var helpIndexController = angular.module("app");
helpIndexController.controller("HelpIndexController", ["$scope", "$location", function($scope, $location) {
    $scope.search = function(key) {
        $location.path("/help/about_us").search("key", key || "")
    }
}
]),
    angular.module("app").controller("HomeController", ["$scope", "$rootScope", "$location", "PageTitle", function($scope, $rootScope, $location, PageTitle) {
        $rootScope.USER ? $location.path("/user") : $location.path("/login"),
            PageTitle.set("首页", "Coding.net")
    }
    ]);
var footerController = angular.module("app");
footerController.controller("FooterController", ["$scope", function($scope) {
    $scope.show_qrcode = !1,
        $(document).on("click", function() {
            $scope.show_qrcode = !1,
                $("#qr_code_pop").removeClass("visible")
        }),
        $scope.clickPop = function(event) {
            $("#qr_code_pop").addClass("visible"),
                $scope.show_qrcode = !$scope.show_qrcode,
                event.stopPropagation()
        }
}
]),
    angular.module("app").controller("QuickSearchController", ["$scope", "ipCookie", function($scope, ipCookie) {
        $scope.form = {
            focus: !1,
            prefix: "",
            search_text: ""
        },
            $scope.$watch("PROJECT", function(project) {
                $scope.form.prefix = project || !1
            }),
            $scope.enableEseach = !1,
            $scope.$watch("USER", function(current_user) {
                current_user && "yes" !== ipCookie("disable_esearch") && ($scope.enableEsearch = !0)
            })
    }
    ]),
    angular.module("app").controller("FrequentlyProjectsController", ["$scope", "Projects", "FrequentlyProjectsService", "Common", function($scope, Projects, FrequentlyProjectsService, Common) {
        $scope.projects = [],
            $scope.loading = !1,
            $scope.loaded = !1;
        var loadPinProjects = function() {
                $scope.loading = !0,
                    $scope.loaded = !1;
                var promise = Projects.pinProjects();
                promise.then(function(result) {
                    $scope.projects = result.data && result.data.list || [],
                        $scope.projects = Common.removeNullItem($scope.projects)
                }),
                    promise["finally"](function() {
                        $scope.loading = !1,
                            $scope.loaded = !0
                    })
            }
            ;
        $scope.pin = function($event, project) {
            var promise = Projects.pinCancel({
                ids: project.id
            });
            return promise.then(function() {
                project.pin = !0,
                    FrequentlyProjectsService.pinCancel(project),
                    loadPinProjects()
            }),
                $event.stopPropagation(),
                $event.preventDefault(),
                !1
        }
            ,
            FrequentlyProjectsService.onPin(function() {
                loadPinProjects()
            })
    }
    ]).service("FrequentlyProjectsService", ["$rootScope", function($rootScope) {
        return {
            onPin: function(callback) {
                $rootScope.$on("on.project.pin", callback)
            },
            pin: function(pin) {
                $rootScope.$broadcast("on.project.pin", pin)
            },
            pinCancel: function(project) {
                $rootScope.$broadcast("on.project.pin.cancel", project)
            },
            onPinCancel: function(callback) {
                $rootScope.$on("on.project.pin.cancel", callback)
            }
        }
    }
    ]),
    angular.module("app").controller("TopMenuProjectTitleController", ["$rootScope", "$scope", "Projects", "$location", "Common", function($rootScope, $scope, Projects, $location, Common) {
        $scope.projects = [],
            $scope.showTitle = !0,
            $scope.current_project = null ;
        var codeInsight_regex = /^\/u\/[^\/]+\/p\/[^\/]+\/codeInsight\/show\/.+/
            , url = $location.path();
        codeInsight_regex.test(url) && ($scope.showTitle = !1),
            $rootScope.$watch("PROJECT", function(PROJECT) {
                $scope.PROJECT && ($scope.current_project && $scope.current_project.name !== PROJECT.name && $scope.projects.length > 0 && ($scope.projects = Common.replaceWith($scope.projects, PROJECT)),
                    $scope.current_project = angular.copy(PROJECT)),
                PROJECT && !PROJECT.is_public && 0 == $scope.projects.length && Projects["private"]({
                    pageSize: 100
                }, function(result) {
                    $scope.projects = result.data.list || []
                })
            }),
            $scope.$watch("current_project", function(project) {
                project && project.id !== $rootScope.PROJECT.id && $location.path(project.project_path)
            })
    }
    ]),
    angular.module("app").controller("TopMenuTitleController", ["$scope", "$rootScope", "$route", "$injector", function($scope, $rootScope, $route, $injector) {
        $scope.top_menu_title = "";
        var current = $route.current
            , top_menu_tpl = $rootScope.top_menu_tpl
            , setCurrentTitle = function(current) {
                var title = current.$$route.title;
                if (current && current.$$route && title) {
                    if (angular.isFunction(title)) {
                        title = $injector.invoke(title);
                        var is_promise = title && title.then;
                        if (is_promise)
                            return void title.then(function(title) {
                                $scope.top_menu_title = title
                            })
                    }
                    $scope.top_menu_title = title
                }
            }
            ;
        $rootScope.$on("$routeChangeSuccess", function(event, current) {
            top_menu_tpl || setCurrentTitle(current)
        }),
        top_menu_tpl || setCurrentTitle(current)
    }
    ]),
    angular.module("app").controller("UserDropdownController", ["$scope", "FrequentlyProjectsService", "User", "$rootScope", function($scope, FrequentlyProjectsService, User, $rootScope) {
        $scope.prj_update_count = 0;
        var checkCount = function() {
                User.unread_count({}, function(result) {
                    var count = result.data && 0 | result.data.project_update_count;
                    $scope.prj_update_count = count,
                        $rootScope.USER.project_update_count = count
                })
            }
            ;
        $scope.dropdown_settings = {
            on: "hover",
            delay: {
                show: 0,
                hide: 300
            },
            onShow: function() {
                FrequentlyProjectsService.pin(),
                    checkCount()
            }
        }
    }
    ]),
    angular.module("app").controller("MarketingSingleController", [function() {}
    ]).directive("mkPopover", [function() {
        return {
            link: function(scope, element, attrs) {
                element.mouseover(function(e) {
                    angular.element(".dining-room-box").hide(),
                        element.siblings(".dining-room-box").show()
                }),
                    angular.element(document).on("click", function(e) {
                        angular.element(".dining-room-box").hide()
                    }),
                    angular.element(".dining-room-box").on("click", function(e) {
                        e.stopPropagation()
                    })
            }
        }
    }
    ]);
var mobileAppControllers = angular.module("app");
mobileAppControllers.controller("MobileAppController", ["$scope", "$location", "$anchorScroll", function($scope, $location, $anchorScroll) {
    $scope.isCloseFixedTip = !1,
        $scope.closeFixedTip = function() {
            $scope.isCloseFixedTip = !0
        }
        ,
        $scope["goto"] = function(anchor) {
            $location.hash(anchor),
                $anchorScroll()
        }
        ,
        $anchorScroll()
}
]),
    angular.module("app").controller("AddMemberController", ["$scope", "$rootScope", "User", "Project", "Errors", "Common", "InviteFriendService", "RegisterService", "Flash", function($scope, $rootScope, User, Project, Errors, Common, InviteFriendService, RegisterService, Flash) {
        var PROJECT = $rootScope.PROJECT
            , USER = $rootScope.USER
            , current_app = $rootScope.current_app;
        $rootScope.$watch("PROJECT", function(project) {
            project && (PROJECT = $scope.current_project = project)
        }),
            $scope.friends = [],
            $scope.selected_users = [],
            $scope.key = "",
            $scope.loading = !1,
            $scope.loaded = !1,
            $scope.members = [];
        var checkSelected = function(friends) {
                return $.map(friends, function(f) {
                    var item = f;
                    return $.each($scope.selected_users, function(i, s) {
                        s.id == f.id && (item.selected = !0)
                    }),
                        item
                })
            }
            , loadMembers = function(id) {
                Project.members({
                    id: id
                }, function(result) {
                    $scope.members = result.data && result.data.list || []
                })
            }
            ;
        $scope.joined = function(user) {
            if (user.joined)
                return !0;
            var hasJoined = !!Common.findOfId($scope.members, user.id, "user_id");
            return hasJoined ? user.joined = !0 : user.joined = !1,
                hasJoined
        }
            ,
            $scope.loadFriend = function(key) {
                key.length > 0 ? ($scope.loading = !0,
                    $scope.loaded = !1,
                    $scope.friends = [],
                    User.search({
                        key: key
                    }, function(result) {
                        $scope.loaded = !0,
                            $scope.loading = !1,
                            0 == result.code ? $scope.friends = checkSelected(result.data || []) : Errors.handle(result)
                    })) : ($scope.friends = [],
                    $scope.loaded = !1)
            }
            ,
            $scope.selectFriend = function(user) {
                user.selected = !user.selected,
                    user.selected ? $scope.selected_users.splice(0, 0, user) : $scope.removeSelected(user)
            }
            ,
            $scope.removeSelected = function(user) {
                user.selected = !1,
                    $scope.friends = Common.replaceWith($scope.friends, user),
                    $scope.selected_users = Common.removeOfId($scope.selected_users, user.id)
            }
        ;
        var modal = $("#add_member_modal");
        modal.modal("setting", {
            duration: 200,
            onApprove: function() {
                var selected = $scope.selected_users;
                if (selected && selected.length > 0) {
                    $scope.friends = [],
                        $scope.key = "";
                    var users = $.map(selected, function(user) {
                        return USER.id == user.id || user.joined ? void 0 : user.id
                    });
                    Project.add_member({
                        users: users.join(","),
                        id: PROJECT.id
                    }, {}, function(result) {
                        if (0 == result.code) {
                            var region = current_app === !1 ? "project" : current_app;
                            $scope.$emit(region + "_member.add", selected),
                                $scope.$broadcast(region + "_member.add", selected)
                        }
                    })
                }
            },
            onHide: function() {
                $scope.friends = [],
                    $scope.selected_users = [],
                    $scope.key = ""
            },
            onShow: function() {
                $rootScope.InviteFriendModal.activate()
            }
        }),
            $scope.isEmail = function(email) {
                return RegisterService.isEmail(email) && $scope.USER.email !== email
            }
            ,
            $scope.inviteFriend = function() {
                var words = "Hi，我在 Coding 上创建了项目 " + PROJECT.name + "，邀请你加入项目！";
                InviteFriendService.invite($scope.key, words, InviteFriendService.INVITE_MEMBER),
                    $("#add_member_modal").modal("hide")
            }
            ,
            InviteFriendService.onAfterInvite(function(event, email, invited, id) {
                id === InviteFriendService.INVITE_MEMBER && ($("#add_member_modal").modal("show"),
                    $scope.key = email,
                invited && Flash.success().send("已向 " + email + " 发送邀请邮件！"))
            }),
            loadMembers()
    }
    ]),
    angular.module("app").controller("AddMemberController2", ["$scope", "$rootScope", "Project", "Errors", "Common", "User", "InviteFriendService", "RegisterService", "Flash", "Projects", "Payment", function($scope, $rootScope, Project, Errors, Common, User, InviteFriendService, RegisterService, Flash, Projects, Payment) {
        var PROJECT = $scope.current_project = $scope.PROJECT
            , project_params = {
                username: PROJECT.owner_user_name,
                project_name: PROJECT.name
            }
            , USER = $scope.USER
            , current_app = $rootScope.current_app
            , loadMaxMember = function() {
                var promise = Payment.project_summary(project_params);
                promise.then(function(result) {
                    $scope.service_info = result.data || {},
                        $scope.max_member = $scope.service_info.max_member || PROJECT.max_member || 10,
                        $scope.member_size = $scope.max_member,
                        calculateMemberSize()
                })
            }
            , initVariables = function() {
                $scope.projects = [],
                    $scope.loading_projects = !1,
                    $scope.friends = [],
                    $scope.selected_users = [],
                    $scope.key = "",
                    $scope.loading = !1,
                    $scope.loaded = !1,
                    $scope.member_users = [],
                    $scope.selected_menu = null
            }
            ;
        initVariables();
        var checkSelected = function(friends) {
                return $.map(friends, function(f) {
                    var item = f;
                    return $.each($scope.selected_users, function(i, s) {
                        s.id == f.id && (item.selected = !0)
                    }),
                        item
                })
            }
            , loadProjects = function() {
                $scope.loading_projects = !0,
                    $scope.projects = [];
                var mPromise = Project.members({
                    id: PROJECT.id
                })
                    , pPromise = mPromise.then(function(result) {
                    var users = result.data && result.data.list || [];
                    return $scope.member_users = Common.m2u(users),
                        loadMaxMember(),
                        Projects.query({
                            page: 1,
                            pageSize: 100
                        })
                });
                return pPromise.then(function(result) {
                    var projects = result.data && result.data.list || [];
                    $scope.projects = [],
                        angular.forEach(projects, function(project) {
                            project.id !== PROJECT.id ? $scope.projects.push(project) : $scope.max_member = project.max_member
                        })
                }),
                    pPromise["finally"](function() {
                        $scope.loading_projects = !1
                    }),
                    pPromise
            }
            , isMember = function(user) {
                if (user.is_member)
                    return !0;
                var hasJoined = !!Common.findOfId($scope.member_users, user.id);
                return hasJoined ? user.is_member = !0 : user.is_member = !1,
                    hasJoined
            }
            ;
        $scope.loadFriend = function(key) {
            key.length > 0 ? ($scope.selected_menu = null ,
                handleUserLoad(function() {
                    return Project.search_user({
                        username: PROJECT.owner_user_name,
                        project_name: PROJECT.name,
                        key: key
                    })
                })) : ($scope.friends = [],
                $scope.loaded = !1)
        }
            ,
            $scope.selectFriend = function(user) {
                if (user.is_member)
                    return void $scope.removeSelected(user);
                if (user.selected = !user.selected,
                        user.selected) {
                    if ($scope.member_size <= 0)
                        return void (user.selected = !1);
                    $scope.selected_users.splice(0, 0, user),
                        calculateMemberSize()
                } else
                    $scope.removeSelected(user)
            }
        ;
        var calculateMemberSize = function() {
                var size = $scope.max_member - $scope.selected_users.length - $scope.member_users.length;
                $scope.member_size = 0 >= size ? 0 : size
            }
            ;
        $scope.max_member_warning_info = "已到达到成员最大数，不能再继续选择成员！",
            $scope.removeSelected = function(user, $event) {
                return user.selected = !1,
                    $scope.friends = Common.replaceWith($scope.friends, user),
                    $scope.selected_users = Common.removeOfId($scope.selected_users, user.id),
                    calculateMemberSize(),
                    $event ? ($event.stopPropagation(),
                        !1) : void 0
            }
        ;
        var handleUserLoad = function(invoker, resultHandler) {
                $scope.loading = !0,
                    $scope.loaded = !1,
                    $scope.friends = [];
                var promise = invoker && invoker();
                return promise && promise.then(function(result) {
                    var users = result.data && angular.isArray(result.data) ? result.data : result.data.list || [];
                    users = resultHandler && resultHandler(users) || users,
                        angular.forEach(users, function(user) {
                            user.is_member = isMember(user)
                        }),
                        $scope.friends = checkSelected(users || [])
                }) && promise["finally"](function() {
                    $scope.loaded = !0,
                        $scope.loading = !1
                }),
                    promise
            }
            ;
        $scope.loadFriends = function(page) {
            $scope.selected_menu = "friend",
                $scope.key = "",
                handleUserLoad(function() {
                    return User.friends({
                        page: page || 1,
                        pageSize: 1e3
                    })
                })
        }
            ,
            $scope.loadFollowers = function(page) {
                $scope.selected_menu = "follower",
                    $scope.key = "",
                    handleUserLoad(function() {
                        return User.followers({
                            page: page || 1,
                            pageSize: 1e3
                        })
                    })
            }
            ,
            $scope.loadProjectMembers = function(project) {
                $scope.selected_menu = project,
                    $scope.key = "",
                    handleUserLoad(function() {
                        return Project.members({
                            id: project
                        })
                    }, function(members) {
                        return Common.m2u(members)
                    })
            }
            ,
            $scope.selectMenuIs = function(type, id) {
                return "member" === type && "undefined" == typeof id ? !1 : isNaN(this.selected_menu) ? type === this.selected_menu : "member" === type && id === this.selected_menu
            }
            ,
            $scope.selectUserTitle = function(friend) {
                return friend.name + (friend.is_member ? "已加入该项目" : "")
            }
        ;
        var modal = $("#add_member_modal");
        modal.modal("setting", {
            duration: 200,
            onApprove: function() {
                var selected = $scope.selected_users;
                if (selected && selected.length > 0) {
                    $scope.friends = [],
                        $scope.key = "";
                    var users = $.map(selected, function(user) {
                        return USER.id == user.id || user.is_member ? void 0 : user.id
                    });
                    Project.add_member({
                        users: users.join(","),
                        id: PROJECT.id
                    }, {}, function(result) {
                        if (0 == result.code) {
                            var region = current_app === !1 ? "project" : current_app;
                            $scope.$emit(region + "_member.add", selected),
                                $scope.$broadcast(region + "_member.add", selected)
                        }
                    })
                }
            },
            onHide: function() {
                initVariables()
            },
            onShow: function() {
                $rootScope.InviteFriendModal.activate(),
                    loadProjects()
            }
        }),
            $scope.isEmail = function(email) {
                return RegisterService.isEmail(email) && $scope.USER.email !== email
            }
            ,
            $scope.inviteFriend = function() {
                var words = "Hi，我在 Coding 上创建了项目 " + PROJECT.name + "，邀请你加入项目！";
                InviteFriendService.invite($scope.key, words, InviteFriendService.INVITE_MEMBER),
                    $("#add_member_modal").modal("hide")
            }
            ,
            InviteFriendService.onAfterInvite(function(event, email, invited, id) {
                id === InviteFriendService.INVITE_MEMBER && ($("#add_member_modal").modal("show"),
                    $scope.key = email,
                invited && Flash.success().send("已向 " + email + " 发送邀请邮件！"))
            })
    }
    ]),
    angular.module("app").controller("ProjectAttachmentController", ["$scope", "$rootScope", "$timeout", "Attachment", "Errors", "location", "$routeParams", "Flash", "Setting", "Pager", "Markdown", "PageTitle", "$q", "Common", "ModalService", "AttachmentOperatingService", function($scope, $rootScope, $timeout, Attachment, Errors, $location, $routeParams, Flash, Setting, Pager, Markdown, PageTitle, $q, Common, ModalService, AttachmentOperatingService) {
        var PROJECT = $scope.PROJECT
            , upload_url = [Setting.api_host, "/api/project/", PROJECT.id, "/file/upload"].join("")
            , folder_id = $scope.folder_id = $routeParams.region || "default"
            , file_id = $scope.file_id = $routeParams.file_id || 0
            , action = $scope.action = $routeParams.action || "list"
            , editor_type = $scope.editor_type = $routeParams.editor_type || !1
            , legal_editor_type = ["txt", "md"]
            , template = action || "list";
        $scope.pdf_preview = !1,
            $scope.pdf_preview_loading = !1,
            $scope.pdf_preview_loaded = !1,
            $scope.pdf_preview_page = 1,
            $scope.pdf_resize = "small",
            $scope.pdf_fullscreen_height = 0,
            $scope.preview_able = !1,
            $scope.markdown_preview = !1,
            $scope.preview_image_rotate_degrees = 0,
            $scope.image_preview = {
                prevId: -1,
                nextId: -1
            },
            $scope.image_previewing = !1;
        var attachment_pager_id = $scope.attachment_pager_id = (new Date).getTime();
        Pager = Pager.instance(attachment_pager_id, $scope),
            Pager.onChange(function(page) {
                loadFiles("default" === $scope.folder_id ? 0 : $scope.folder_id, page)
            }),
            $scope.files = [],
            $scope.folders = [],
            $scope.current_folder = {
                readName: "",
                content: ""
            },
            $scope.folders_count = [],
            $scope.default_folder_count = 0,
            $scope.file_loading = !0,
            $scope.files_loading = !0,
            $scope.folder_loading = !0,
            $scope.file_saving = !1,
            $scope.uploading = !1,
            $scope.folder_deleting = !1,
            $scope.editable_mode = !1,
            $scope.check_all = !1,
            $scope.editing = !1,
            $scope.current_sub_folder = {},
            $scope.in_sub = !1,
            $scope.selected_file_count = 0,
            $scope.detail_mode = "activity",
            $scope.navigate_change_enable = !0,
            $scope.file_name_editing = !1,
            $scope.checkAll = function(check) {
                $scope.check_all = void 0 !== check ? check : !$scope.check_all,
                    angular.forEach($scope.files, function(file) {
                        file.editing = $scope.check_all
                    }),
                    $scope.selected_file_count = $scope.check_all ? $scope.files.length : 0
            }
            ,
            $scope.selectFile = function(file) {
                $scope.selected_file_count = file.editing ? --$scope.selected_file_count : ++$scope.selected_file_count,
                    file.editing = !file.editing
            }
            ,
            $scope.hasSelected = function() {
                var result = !1;
                return angular.forEach($scope.files, function(file) {
                    !result && file.editing && (result = !0)
                }),
                    result
            }
            ,
            $scope.toggleListEditable = function() {
                $scope.checkAll(!1),
                    $scope.editable_mode = !$scope.editable_mode
            }
            ,
            $scope.closeEditableMode = function() {
                $scope.checkAll(!1),
                    $scope.editable_mode = !1
            }
            ,
            $scope.$watch("folder_id", function() {
                $scope.editable_mode && $scope.closeEditableMode()
            });
        var getSelectedFileId = function(files) {
                return $.map(files, function(file) {
                    return file.editing ? file.file_id : void 0
                })
            }
            , moveSelectedFileInScope = function() {
                var files = [];
                angular.forEach($scope.files, function(file) {
                    file.editing || files.push(file)
                }),
                    $scope.files = angular.copy(files)
            }
            ;
        $scope.moveFileTo = function(folder) {
            if (!isNaN(folder)) {
                if ($scope.in_sub) {
                    if ($scope.current_sub_folder.file_id == folder)
                        return
                } else if ($scope.current_folder.file_id == folder)
                    return;
                if (!$scope.hasSelected())
                    return void Flash.warn().send("请至少选择一个文件！");
                var ids = getSelectedFileId($scope.files);
                Attachment.move({
                    id: PROJECT.id,
                    folder: folder,
                    fileId: ids
                }, {}, function(result) {
                    Flash.success().send("文件移动成功!"),
                        moveSelectedFileInScope(),
                        $scope.closeEditableMode(),
                        loadFolderCount()
                })
            }
        }
        ;
        var defaultToId = function(id) {
                return "default" === id ? 0 : id
            }
            , getTemplatePath = function(template) {
                return ("edit" == template || "create" == template) && (template = "create"),
                "app/attachment/" + template + ".html"
            }
            , doAction = function(action, fileId) {
                $scope.action = action,
                    $scope.current_template = getTemplatePath(action);
                var url = [PROJECT.project_path, "/attachment", $scope.folder_id ? "/" + $scope.folder_id : "/default", "/", action, fileId ? "/" + fileId : ""].join("");
                if ("create" === action && isNaN(fileId)) {
                    $scope.current_file = {};
                    var type = fileId || "txt";
                    $scope.editor_type = type,
                        url = [PROJECT.project_path, "/attachment", $scope.folder_id ? "/" + $scope.folder_id : "/default", "/create/", type].join("")
                } else if ("edit" === action && fileId) {
                    var type = editor_type || $scope.editorType($scope.current_file) || "txt";
                    url = [PROJECT.project_path, "/attachment", $scope.folder_id ? "/" + $scope.folder_id : "/default", "/edit/", fileId, "/", type].join(""),
                        $scope.editor_type = type
                }
                $scope.file_id = fileId,
                    $location.skipReload().path(url)
            }
            ;
        $scope.current_template = getTemplatePath(template),
            $scope.current_file = !1,
            $scope.share = !1;
        var uploading_file = null
            , files_uploading_count = 0;
        $scope.uploading_files = [],
            $scope.upload_progress = {
                total: 0,
                loaded: 0
            };
        var allProgress = function() {
                var loaded = 0
                    , total = 0;
                return angular.forEach($scope.uploading_files, function(file) {
                    var prg = file.progress;
                    prg && (loaded += prg.loaded,
                        total += prg.total)
                }),
                {
                    total: total,
                    loaded: loaded
                }
            }
            , submitUploadFile = function(data) {
                for (var i = 0; i < data.files.length; i++)
                    $scope.files = Common.removeOfId($scope.files, data.files[i].name, "name");
                Common.safeApply.call($scope, function() {
                    files_uploading_count += data.files.length,
                        $scope.uploading_files = $scope.uploading_files.concat(data.files),
                        data.submit(),
                        $scope.uploading = !0
                })
            }
            , initUploadSetting = function() {
                var dropzone = $(".file-upload-zone");
                $scope.projectAttachmentZoneUploadSetting = {
                    xhrFields: {
                        withCredentials: !0
                    },
                    url: upload_url,
                    dropZone: dropzone,
                    pasteZone: dropzone,
                    formData: {
                        dir: defaultToId($scope.folder_id)
                    },
                    maxFileSize: 5e6,
                    add: function(e, data) {
                        for (var i = 0; i < data.files.length; i++) {
                            var file = data.files[i];
                            if (file.size > 104857600)
                                return void Flash.fail().timeout(2e3).send("文件:" + file.name + " 大小超过100M!")
                        }
                        for (var file_name_arr = [], index = 0; index < data.files.length; index++)
                            file_name_arr.push(data.files[index].name);
                        var aPromise = Attachment.is_existed({
                            id: PROJECT.id,
                            dir: defaultToId($scope.folder_id),
                            names: file_name_arr
                        });
                        aPromise.then(function(result) {
                            if (result.data && result.data.conflict_file) {
                                var msg = "存在同名文件 " + result.data.conflict_file + " 是否覆盖？";
                                confirm(msg) && submitUploadFile(data)
                            } else
                                submitUploadFile(data)
                        })
                    },
                    done: function(e, data) {
                        files_uploading_count--,
                            Common.safeApply.call($scope, function() {
                                if ($scope.uploading = 0 != files_uploading_count,
                                    $scope.uploading || (loadFolderCount(),
                                        $scope.upload_progress = {
                                            total: 0,
                                            loaded: 0
                                        }),
                                    0 == data.result.code) {
                                    var rsv_promise = Attachment.resolve("files", data.result.data);
                                    rsv_promise.then(function(file) {
                                        $scope.files.unshift(file)
                                    })
                                } else
                                    Errors.handle(data.result);
                                $scope.uploading_files = Common.removeOfId($scope.uploading_files, data.files[0].name, "name")
                            })
                    },
                    fail: function() {
                        Common.safeApply.call($scope, function() {
                            files_uploading_count = 0,
                                $scope.uploading = !1,
                                uploading_file = null ,
                                Flash.fail().send("上传失败!")
                        })
                    },
                    progress: function(e, data) {
                        var progress = {
                            total: data.total,
                            loaded: data.loaded
                        };
                        Common.safeApply.call($scope, function() {
                            var file = Common.findOfId($scope.uploading_files, data.files[0].name, "name");
                            file.progress = progress,
                                $scope.uploading = !0,
                                $scope.upload_progress = allProgress()
                        })
                    }
                }
            }
            ;
        $scope.back = function() {
            $scope.current_template = getTemplatePath("list");
            var url = [PROJECT.project_path, "/attachment", $scope.folder_id > 0 ? "/" + $scope.folder_id : ""].join("");
            $location.skipReload().path(url)
        }
            ,
            $scope.create = function() {
                $scope.current_file = {},
                    doAction("create")
            }
            ,
            $scope.upload = function(callback) {
                $scope.uploading || callback && callback($("#upload-zone"))
            }
        ;
        var loadFolderCount = function() {
                var promise = Attachment.all_count({
                    id: PROJECT.id
                });
                return promise.then(function(result) {
                    $scope.folders_count = result.data,
                        angular.forEach($scope.folders, function(folder) {
                            var count = Common.findOfId($scope.folders_count, folder.file_id, "folder");
                            folder.count = angular.copy(count.count),
                                angular.forEach(folder.sub_folders, function(sub_folder) {
                                    var sub_count = Common.findOfId($scope.folders_count, sub_folder.file_id, "folder");
                                    sub_folder.count = angular.copy(sub_count.count),
                                        folder.count += sub_folder.count
                                })
                        });
                    var default_count = Common.findOfId($scope.folders_count, 0, "folder");
                    $scope.default_folder_count = default_count.count
                }),
                    promise
            }
            , setProjectAttachmentPageTitle = function(action) {
                var current_file_name = $scope.current_file ? $scope.current_file.name : ""
                    , cf = $scope.current_folder && !$scope.in_sub ? $scope.current_folder : $scope.current_sub_folder
                    , titles = {
                    list: [cf && cf.name || "默认文件夹"],
                    preview: [current_file_name, cf && cf.name || "默认文件夹"],
                    edit: ["编辑", current_file_name],
                    create: ["创建新的文件"]
                }
                    , arr = titles[action];
                arr.push(PROJECT.name),
                    arr.push("Coding.net"),
                    PageTitle.set.apply(this, arr)
            }
            , loadFolders = function() {
                $scope.folder_loading = !0;
                var folderPromise = Attachment.all_folders({
                    id: PROJECT.id,
                    page: 1,
                    pageSize: 9999
                })
                    , countPromise = folderPromise.then(function(result) {
                    $scope.folder_loading = !1,
                        $scope.folders = result.data.list || [],
                        angular.forEach($scope.folders, function(folder) {
                            angular.forEach(folder.sub_folders, function(sub_folder) {
                                sub_folder.copy = angular.copy(sub_folder)
                            })
                        }),
                        loadFolderCount()
                });
                return countPromise
            }
            , loadFiles = function(dir, page) {
                return $scope.folder_deleting ? !1 : (Pager.hide(),
                    $scope.files = [],
                    $scope.files_loading = !0,
                    Attachment.files({
                        id: PROJECT.id,
                        dir: dir || 0,
                        width: 90,
                        height: 90,
                        page: page || 1
                    }, function(result) {
                        $scope.files_loading = !1,
                            $scope.files = result.data.list || [],
                            initUploadSetting(),
                            Pager.optionsReady(result.data)
                    })["catch"](function(error, result) {
                        result && 900 == result.code && (changeFolderUrl(0),
                            loadFiles(0))
                    }))
            }
            ;
        $scope.suffix = function(name) {
            return name ? name.substring(name.lastIndexOf(".") + 1) : "???"
        }
        ;
        var resetPopup = function() {
                $timeout(function() {
                    var $image_info = $("#attachment .file_info_word.file-image-info");
                    $scope.current_file.image_width && $scope.current_file.image_height ? ($image_info.css("display", "table-row"),
                        $image_info.find(".file-info-right").text($scope.current_file.image_width + " * " + $scope.current_file.image_height)) : $image_info.css("display", "none"),
                        $("#attachment .info.icon").data("html", $("#file-info-tpl").html())
                }, 300)
            }
            ;
        $scope.updateFile = function(file) {
            var id = file.file_id;
            $scope.file_saving = !0,
                Attachment.edit({
                    id: PROJECT.id,
                    file: id
                }, {
                    name: file.readName + "." + file.fileType,
                    content: file.content
                }, function() {
                    $scope.file_saving = !1,
                        Flash.success().send("更新成功！"),
                        $location.path(PROJECT.project_path + "/attachment/" + $scope.folder_id + "/preview/" + id)
                })["catch"](function() {
                    $scope.file_saving = !1
                })
        }
            ,
            $scope.saveFile = function(file) {
                return file.readName ? file.content ? ($scope.file_saving = !0,
                    void Attachment.create({
                        id: PROJECT.id,
                        dir: defaultToId($scope.folder_id)
                    }, {
                        name: file.readName + "." + $scope.editor_type,
                        content: file.content
                    }, function() {
                        $scope.file_saving = !1,
                            Flash.success().send("创建成功！"),
                            $location.path(PROJECT.project_path + "/attachment/" + $scope.folder_id)
                    })["catch"](function() {
                        $scope.file_saving = !1
                    })) : void Flash.fail().send("文件内容不能为空！") : void Flash.fail().send("文件名不能为空！")
            }
            ,
            $scope.openFolder = function(folder, $event, sub) {
                if (folder && folder.file_id) {
                    if (folder.editing)
                        return $event.preventDefault(),
                            !1;
                    changeFolderUrl(folder.file_id),
                        sub ? ($scope.in_sub = !0,
                            $scope.current_sub_folder = Common.findOfId($scope.current_folder.sub_folders, folder.file_id, "file_id")) : ($scope.in_sub = !1,
                            $scope.current_folder = Common.findOfId($scope.folders, folder.file_id, "file_id"),
                            $scope.current_sub_folder = {}),
                        loadFiles(folder.file_id),
                        setProjectAttachmentPageTitle("list")
                } else
                    changeFolderUrl(0),
                        loadFiles(0),
                        $scope.in_sub = !1,
                        $scope.current_folder = {},
                        $scope.current_sub_folder = {},
                        setProjectAttachmentPageTitle("list");
                this.closeEditableMode(),
                    this.uploading_files = []
            }
            ,
            $scope.getFileType = function(file) {
                return AttachmentOperatingService.getFileType(file)
            }
            ,
            $scope.editorType = function(file) {
                return AttachmentOperatingService.editorType(file)
            }
            ,
            $scope.editable = function(file) {
                return AttachmentOperatingService.editable(file)
            }
            ,
            $scope.editFile = function(file) {
                $scope.current_template = getTemplatePath("edit");
                var type = $scope.getFileType(file);
                if ("text" == type) {
                    var cur = $scope.current_file;
                    cur && cur.file_id == file.file_id || ($scope.file_id = file.file_id),
                        doAction("edit", file.file_id),
                        setProjectAttachmentPageTitle("edit")
                }
            }
            ,
            $scope.setFileNameEditable = function(event) {
                $scope.file_name_editing = !0,
                    event.preventDefault(),
                    event.stopPropagation(),
                    $timeout(function() {
                        focusAndSelectAll("#edit-file-name-" + $scope.current_file.file_id)
                    }, 30)
            }
            ,
            $scope.renameFile = function(file) {
                if ($scope.file_name_editing = !1,
                        !file.readName)
                    return file.readName = file.copy.readName,
                        void Flash.fail().send("文件名不能为空");
                if (!file.readName || !file.copy || file.readName !== file.copy.readName) {
                    $scope.file_name_editing = !0;
                    var aPromise = Attachment.rename({
                        id: PROJECT.id,
                        file_id: file.file_id
                    }, {
                        name: file.readName + "." + file.fileType
                    });
                    aPromise.then(function(result) {
                        file.name = file.readName + "." + file.fileType,
                            file.copy.name = angular.copy(file.name),
                            file.copy.readName = angular.copy(file.readName),
                            Flash.success().send("修改成功"),
                            file.activity_count++,
                            file.history_count++,
                            file.history_id = result.data && result.data.history_id || file.history_id;
                        var data = {
                            project_id: PROJECT.id,
                            file_id: file_id
                        };
                        AttachmentOperatingService.doFileHistoriesReloadSuccess(data)
                    }),
                        aPromise["catch"](function() {
                            file.name = file.copy.name
                        }),
                        aPromise["finally"](function() {
                            $scope.file_name_editing = !1
                        })
                }
            }
            ,
            AttachmentOperatingService.onFileRenameSuccess(function(event, data) {
                if (data && data.file_id) {
                    var fileOfList = Common.findOfId($scope.files, data.file_id, "file_id");
                    fileOfList.name = data.name,
                        fileOfList.updated_at = (new Date).getTime()
                }
            }),
            AttachmentOperatingService.onDetailFileEditLoadSuccess(function(event, file) {
                doAction("edit", file.file_id),
                    setProjectAttachmentPageTitle("edit")
            }),
            AttachmentOperatingService.onDetailFileCreateSuccess(function() {
                Flash.success().send("创建成功！"),
                    $location.path(PROJECT.project_path + "/attachment/" + $scope.folder_id)
            }),
            AttachmentOperatingService.onDetailFileSaveSuccess(function(event, file) {
                Flash.success().send("更新成功！"),
                    $location.path(PROJECT.project_path + "/attachment/" + $scope.folder_id + "/preview/" + file.file_id)
            });
        var openPreviewModal = function(project, file_id, folder_id) {
                var data = {
                    project: project,
                    file_id: file_id,
                    folder_id: folder_id
                };
                AttachmentOperatingService.doOpenPreviewModal(data),
                    modal.toggle()
            }
            ;
        $scope.previewFile = function(file) {
            $scope.uploading || openPreviewModal(PROJECT, file.file_id, $scope.folder_id)
        }
        ;
        var deleteFile = $scope.deleteFile = function(file, jump) {
                if ($scope.selected_file_count = file.editing ? --$scope.selected_file_count : $scope.selected_file_count,
                    file && confirm('确认删除文件 "' + file.name + '" ?')) {
                    var aPromise = Attachment["delete"]({
                        id: PROJECT.id,
                        fileIds: file.file_id
                    }, function(result) {
                        Flash.success().send("文件删除成功！"),
                            $scope.files = Common.removeOfId($scope.files, file.file_id, "file_id"),
                            loadFolderCount(),
                        jump && $location.path(PROJECT.project_path + "/attachment/" + $scope.folder_id)
                    });
                    return aPromise
                }
            }
            ;
        $scope.deleteSelected = function() {
            var ids = getSelectedFileId($scope.files);
            ids.length > 0 && confirm("确认删除选定的 " + ids.length + " 个文件？") && Attachment["delete"]({
                id: PROJECT.id,
                fileIds: ids
            }, function(result) {
                Flash.success().send("选定的 " + result.data + " 个文件删除成功！"),
                    moveSelectedFileInScope(),
                    loadFolderCount(),
                    $scope.closeEditableMode()
            })
        }
        ;
        var changeFolderUrl = function(id) {
                if (!$scope.folder_loading) {
                    $scope.folder_id = id || "default",
                        $scope.current_template = getTemplatePath("list");
                    var url = [PROJECT.project_path, "/attachment/", id ? id : ""].join("");
                    $location.skipReload().path(url)
                }
            }
            , folderNameExists = function(name, isSub) {
                var exists = !1;
                return isSub ? angular.forEach($scope.current_folder.sub_folders, function(folder) {
                    folder.name != name || exists || (exists = !0)
                }) : angular.forEach($scope.folders, function(folder) {
                    folder.name != name || exists || (exists = !0)
                }),
                    exists
            }
            , folderName = function(sub) {
                for (var isSub = !!sub, default_name = "新建文件夹", count = 0, name = default_name; folderNameExists(name, isSub); )
                    name = default_name + ++count;
                return name
            }
            , focusAndSelectAll = function(selector) {
                var editor = $(selector).focus();
                editor[0].setSelectionRange(0, editor[0].value.length)
            }
            ;
        $scope.createFolder = function(parentId) {
            var name = 0 == parentId ? folderName() : folderName(!0);
            Attachment.mkdir({
                id: PROJECT.id,
                name: name,
                parentId: parentId
            }, {}, function(result) {
                var folder = result.data;
                changeFolderUrl(folder.file_id),
                    $scope.files = [],
                    Pager.hide(),
                    folder.editing = !0,
                    $scope.editing = !0,
                    0 == parentId ? ($scope.folders.splice(0, 0, folder),
                        $scope.current_folder = folder) : ($scope.current_folder.sub_folders.splice(0, 0, folder),
                        $scope.current_sub_folder = folder),
                    $timeout(function() {
                        focusAndSelectAll("#folder-editor-" + folder.file_id)
                    }, 30),
                    loadFolderCount(),
                    setProjectAttachmentPageTitle("list"),
                    $scope.in_sub = !(0 == parentId),
                    initUploadSetting()
            })
        }
            ,
            $scope.updateFolderName = function(folder) {
                if (folder) {
                    if (folder.name.match(/[,`~!@#$%^&*:;()''""><|.\ /=]/g))
                        return Flash.warn().send("文件夹名：" + folder.name + " 不能采用"),
                            void (folder.name = (folder.name || "").replace(/[,`~!@#$%^&*:;()''""><]/g, ""));
                    folder.name !== folder.copy.name && folder.name.length > 0 ? Attachment.update_name({
                        id: PROJECT.id,
                        name: folder.name,
                        dir: folder.file_id
                    }, {}, function() {
                        $scope.editing = !1,
                            folder.editing = !1,
                            delete folder.copy,
                            folder.copy = angular.copy(folder)
                    })["catch"](function() {
                        $scope.editing = !1,
                            folder.editing = !1,
                            folder.name = folder.copy.name
                    }) : (folder.name = folder.copy.name,
                        folder.editing = !1,
                        $scope.editing = !1)
                }
            }
            ,
            $scope.setFolderEditable = function($event, folder) {
                return folder ? (Common.safeApply.call($scope, function() {
                    folder.editing = !0,
                        $scope.editing = !0
                }),
                    $timeout(function() {
                        focusAndSelectAll("#folder-editor-" + folder.file_id)
                    }, 30),
                    $event.preventDefault(),
                    !1) : void 0
            }
            ,
            $scope.removeFolder = function($event, folder, sub) {
                return folder && confirm('确认删除文件夹 "' + folder.name + '" ?') && ($scope.folder_deleting = !0,
                    Attachment.rmdir({
                        id: PROJECT.id,
                        dir: folder.file_id
                    }, function(result) {
                        if (0 == result.code)
                            if ($scope.folder_deleting = !1,
                                    $scope.editing = !1,
                                    sub) {
                                var current_folder = $scope.current_folder;
                                current_folder.sub_folders = Common.removeOfId(current_folder.sub_folders, folder.file_id, "file_id"),
                                    changeFolderUrl(current_folder.file_id),
                                    loadFiles(current_folder.file_id),
                                    $scope.current_sub_folder = {},
                                    $scope.in_sub = !1
                            } else
                                $scope.folders = Common.removeOfId($scope.folders, folder.file_id, "file_id"),
                                    changeFolderUrl(0),
                                    $scope.current_folder = {},
                                    loadFiles(0);
                        else
                            Errors.handle(result)
                    })["catch"](function() {
                        folder.editing = !1,
                            $scope.editing = !1,
                            $scope.folder_deleting = !1
                    })),
                    $event.preventDefault(),
                    !1
            }
            ,
            $scope.downloadFile = function(file) {
                location.href = Setting.api_host + "/api/project/" + PROJECT.id + "/files/" + file.file_id + "/download"
            }
            ,
            $scope.contentUpdate = function(content) {
                $scope.current_file.content = content
            }
        ;
        var pdf_caches = {};
        $scope.loadPdf = function(page) {
            if (!$scope.pdf_preview_loading) {
                $scope.pdf_preview_page = page || 1;
                var project_id = $scope.current_file.file_id
                    , region = pdf_caches[project_id];
                region || (region = pdf_caches[project_id] = []);
                var cur = region[page];
                if (cur)
                    return void ($scope.pdf_preview = cur);
                $scope.pdf_preview_loading = !0,
                    Attachment.pdf({
                        id: PROJECT.id,
                        file: project_id,
                        page: page || 1
                    }, function(result) {
                        $scope.pdf_preview_loading = !1,
                            $scope.pdf_preview = result.data,
                            $scope.pdf_preview_loaded = !0,
                            region[page] = angular.copy($scope.pdf_preview)
                    })["catch"](function() {
                        $scope.pdf_preview_loading = !1
                    })
            }
        }
        ;
        var getFolderId = function() {
                return $scope.current_folder && $scope.current_folder.id || $scope.folder_id
            }
            , loadImageSiblings = function(file_id, folder_id) {
                folder_id = folder_id || 0,
                    Attachment.image({
                        id: PROJECT.id,
                        file: file_id,
                        folderId: folder_id
                    }, function(result) {
                        $scope.image_preview = result.data || {
                                prevId: -1,
                                nextId: -1
                            }
                    })["catch"](function() {
                        return $scope.image_preview = {
                            prevId: -1,
                            nextId: -1
                        },
                            !1
                    })
            }
            ;
        $scope.previewImage = function(file_id) {
            if (!$scope.file_loading && file_id > 0) {
                $scope.image_previewing = !0,
                    $scope.file_id = file_id,
                    $scope.image_previewing = !1;
                var url = [PROJECT.project_path, "/attachment/", getFolderId(), "/preview/", file_id].join("");
                $location.skipReload().path(url)
            }
        }
            ,
            $scope.onImageNavChange = function(event) {
                var $focus = $(":focus");
                $focus.is("textarea, input") || $focus.is("#pdf-preview-wrapper") || $scope.current_file.name.indexOf("pdf") > 0 || setTimeout(function() {
                    $(".preview-button > a." + event).trigger("click")
                })
            }
            ,
            $scope.screenfull_enabled = screenfull.enabled,
        screenfull.enabled && document.addEventListener(screenfull.raw.fullscreenchange, function() {
            $scope.pdf_resize = screenfull.isFullscreen ? "full" : "small",
                screenfull.isFullscreen ? $scope.pdf_fullscreen_height = "100%" : $scope.pdf_fullscreen_height = 0
        }),
            $scope.switchDetailMode = function(mode) {
                $scope.detail_mode = mode
            }
            ,
            $scope.detailPath = function(project, file) {
                var url = [project.project_path, "/attachment/", file.parent_id ? file.parent_id : "default", "/preview", file.file_id ? "/" + file.file_id : ""].join("");
                return url
            }
            ,
            loadFolders().then(function() {
                var parent_folder = Common.findOfId($scope.folders, $scope.folder_id, "file_id");
                parent_folder ? ($scope.current_folder = parent_folder,
                    $scope.current_sub_folder = {},
                    $scope.in_sub = !1) : angular.forEach($scope.folders, function(folder) {
                    var sub_folder = Common.findOfId(folder.sub_folders, $scope.folder_id, "file_id");
                    sub_folder && ($scope.current_folder = folder,
                        $scope.current_sub_folder = sub_folder,
                        $scope.in_sub = !0)
                })
            });
        var loadPreviewFile = function(file_id) {
                $scope.file_id = file_id
            }
            ;
        if (isNaN(file_id) || 0 == file_id)
            if ("list" == action) {
                var promise = loadFiles(isNaN(folder_id) || 0 == folder_id ? 0 : folder_id, Pager.currentPage());
                promise.then(function() {
                    setProjectAttachmentPageTitle("list")
                })
            } else
                "create" == action && ($scope.current_file = {},
                    $scope.editor_type = -1 == legal_editor_type.indexOf(file_id) ? "txt" : file_id,
                    setProjectAttachmentPageTitle("create"));
        else
            loadPreviewFile(file_id);
        AttachmentOperatingService.onDetailFileLoadFail(function(event, result) {
            if (result && 900 == result.code && (changeFolderUrl(0),
                    loadFiles(0)),
                result && 1304 === result.code) {
                var id = getFolderId()
                    , url = [PROJECT.project_path, "/attachment/", id ? id : ""].join("");
                $location.path(url),
                    $scope.current_template = getTemplatePath(template)
            }
            return result && 1 == result.code && "preview" === action ? (Flash.fail().send("预览的文件不存在或已被删除！"),
                $location.path(PROJECT.project_path + "/attachment/" + $scope.folder_id),
                !1) : ($scope.file_loading = !1,
                void ($scope.image_previewing = !1))
        }),
            AttachmentOperatingService.onDetailFilePreviewLoadSuccess(function(event, current_file) {
                $scope.current_file = current_file,
                    $scope.file_loading = !1,
                    $scope.image_previewing = !1,
                    $scope.share = current_file.share;
                var id = getFolderId();
                loadImageSiblings(current_file.file_id, defaultToId(id)),
                    setProjectAttachmentPageTitle($scope.action),
                    resetPopup()
            }),
            AttachmentOperatingService.onClosePreviewModal(function() {
                $scope.attachment_preview_modal.toggle()
            }),
            AttachmentOperatingService.onFileDeleteSuccess(function(event, file) {
                var dPromise = deleteFile(file);
                dPromise && dPromise.then && dPromise.then(function() {
                    attachmentPreviewModal()
                })
            }),
            AttachmentOperatingService.onFileListReloadSuccess(function() {
                var fid = isNaN($scope.folder_id) || 0 == $scope.folder_id ? 0 : $scope.folder_id;
                loadFiles(fid, Pager.currentPage())
            }),
            $scope.$on("$destroy", function() {
                AttachmentOperatingService.removeDetailFileLoadFail(),
                    AttachmentOperatingService.removeDetailFilePreviewLoadSuccess(),
                    AttachmentOperatingService.removeDetailFileEditLoadSuccess(),
                    AttachmentOperatingService.removeDetailFileCreateSuccess(),
                    AttachmentOperatingService.removeDetailFileSaveSuccess(),
                    AttachmentOperatingService.removeClosePreviewModal(),
                    AttachmentOperatingService.removeFileListReloadSuccess(),
                    AttachmentOperatingService.removeFileDeleteSuccess()
            });
        var modal = $scope.attachment_preview_modal = ModalService.instance("attachment-preview-modal", {
            duration: 200,
            onHide: function() {
                $(".project-file-tool-bar .preview-modal.info.icon").popup("hide"),
                    AttachmentOperatingService.doFilePreviewClear(),
                    $scope.$broadcast("attachmentPreviewModalClosed")
            }
        })
            , attachmentPreviewModal = $scope.attachmentPreviewModal = function() {
            modal.toggle()
        }
    }
    ]),
    angular.module("app").controller("ProjectHomeAttachmentController", ["$scope", "$rootScope", "Attachment", "Errors", function($scope, $rootScope, Attachment, Errors) {
        var PROJECT = $rootScope.PROJECT;
        PROJECT.is_public || ($scope.home_attachments = [],
            Attachment.files({
                id: PROJECT.id,
                dir: 0,
                page: 1,
                pageSize: 6,
                width: 90,
                height: 90
            }, function(result) {
                $scope.loading = !0,
                    0 == result.code ? $scope.home_attachments = result.data.list || [] : Errors.handle(result)
            }))
    }
    ]),
    angular.module("app").controller("ProjectHomeMemberController", ["$scope", "$rootScope", "Project", "Errors", function($scope, $rootScope, Project, Errors) {
        var USER = $rootScope.USER
            , PROJECT = $rootScope.PROJECT;
        (USER || !PROJECT.is_public) && ($scope.home_members = [],
            Project.members({
                id: PROJECT.id,
                pageSize: 10
            }, function(result) {
                0 == result.code ? $scope.home_members = result.data && result.data.list || [] : Errors.handle(result)
            }))
    }
    ]),
    angular.module("app").controller("ProjectHomeTasksController", ["$scope", "$routeParams", "Task", "Errors", "Common", "TaskCreateModalService", "$rootScope", function($scope, $routeParams, Task, Errors, Common, TaskCreateModalService, $rootScope) {
        $scope.just_show = !0;
        var USER = $scope.USER
            , PROJECT = $scope.PROJECT;
        if (!PROJECT.is_public) {
            var TASK = $scope.task = {
                    content: "",
                    owner: USER,
                    status: {
                        processing: 1,
                        done: 2
                    }
                }
                , loadTask = function() {
                    Task.listOfOwner({
                        username: $routeParams.username,
                        project_name: PROJECT.name,
                        owner: USER.global_key,
                        status: "processing",
                        pageSize: 4
                    }, function(result) {
                        return 0 != result.code ? void Errors.handle(result) : ($scope.tasks = result.data.list || [],
                            void angular.forEach($scope.tasks, function(task) {
                                task.content = Common.revertHtml(task.content)
                            }))
                    })
                }
                ;
            loadTask(),
                $scope.updateTaskStatus = function(task, index) {
                    var status = task.status == TASK.status.processing ? TASK.status.done : TASK.status.processing;
                    Task.updateStatus({
                        id: task.id
                    }, {
                        status: status
                    }, function() {
                        task.status = status,
                            $scope.tasks[index] = angular.copy(task)
                    }),
                        task.editable = !1
                }
                ,
                $scope.toggleTask = function(task, index) {
                    $scope.updateTaskStatus(task, index)
                }
                ,
                $scope.createProjectTask = function() {
                    TaskCreateModalService.setProjectId(PROJECT && PROJECT.id),
                        $rootScope.createTask()
                }
        }
    }
    ]),
    angular.module("app").controller("ProjectMembersController", ["$scope", "$rootScope", "$routeParams", "Project", "btfModal", "UserResolver", "ProjectResolver", "User", "location", "Errors", "$q", "Activity", "Flash", "PageTitle", "Common", "$filter", function($scope, $rootScope, $routeParams, Project, btfModal, UserResolver, ProjectResolver, User, $location, Errors, $q, Activity, Flash, PageTitle, Common, $filter) {
        var addMemberModal = btfModal({
            controller: "AddMemberController2",
            templateUrl: "app/project/add_members_modal2.html",
            resolve: {
                USER: $rootScope.USER,
                PROJECT: $rootScope.PROJECT,
                modal: function() {
                    return addMemberModal
                }
            }
        })
            , USER = $scope.USER
            , PROJECT = $scope.PROJECT;
        PROJECT.is_public && ($scope.tag_menu = "members"),
            $rootScope.$watch("PROJECT", function(project) {
                project && (PROJECT = project,
                PROJECT.is_public && ($scope.tag_menu = "members"))
            }),
            $scope.members = [],
            $scope.relationships = [],
            $scope.current_relationship = 0,
            $scope.current_member = !1,
            $scope.project_members_count = 0,
            $scope.project_activities = [],
            $scope.project_activity_loading = !1,
            $scope.project_activity_loaded = !1,
            $scope.project_activity_last_id = 0,
            $scope.alias_editing = !1,
            $scope.project_member_owner = [$scope.OWNER],
            $scope.project_member_admin = [$scope.OWNER, $scope.ADMIN],
            $scope.project_member_no_code = [$scope.MEMBER_NO_CODE];
        var MAX_ID = 99999999
            , page_size = 20
            , region = $scope.region = $routeParams.region || ""
            , loadRelationships = function() {
            return User.relationships(function(result) {
                $scope.relationships = result.data || []
            })
        }
            , rPromise = loadRelationships()
            , getFriendByUidFromRelationships = function(uid) {
            for (var i in $scope.relationships) {
                var relation = $scope.relationships[i];
                if (relation.target_user_id == uid)
                    return relation
            }
        }
            , getCurrentMemberByGlobalKey = function(members, key) {
            var member = members && members[0];
            return angular.forEach(members, function(m) {
                m.user.global_key == key && (member = m)
            }),
                member
        }
            , loadMembers = function() {
            return Project.members({
                id: PROJECT.id
            }, function(result) {
                if (0 == result.code) {
                    $scope.project_members_count = result.data.totalRow,
                        $scope.members = result.data.list;
                    var cm = $scope.current_member = getCurrentMemberByGlobalKey($scope.members, $scope.region);
                    PageTitle.set(cm.user.name, "项目成员", PROJECT.name, "Coding.net"),
                        $(".search-member:first").focus()
                } else
                    Errors.handle(result)
            })
        }
            , setCurrentMember = function(result) {
            if (0 == result.code) {
                var members = result.data && result.data.list || []
                    , first = members[0];
                $scope.region = first.user.global_key,
                    $location.skipReload().path(PROJECT.project_path + "/members/" + first.user.global_key).replace()
            }
        }
            , mPromise = loadMembers();
        0 == region.length && mPromise.then(setCurrentMember),
            $scope.showMemberActivity = function(member) {
                if ($scope.alias_editing = !1,
                        member) {
                    var gk = member.user.global_key;
                    $location.skipReload().path(PROJECT.project_path + "/members/" + gk),
                        $scope.region = gk,
                        $scope.current_member = member;
                    var member_user_id = $scope.current_member.user_id;
                    refreshCurRelationship(member_user_id),
                        $scope.project_activities = [],
                        loadMemberProjectActivity(member_user_id),
                        PageTitle.set(member.user.name, "项目成员", PROJECT.name, "Coding.net")
                }
            }
            ,
            $rootScope.$on("project_member.add", function() {
                mPromise = loadMembers(),
                    mPromise.then(function(result) {
                        setCurrentMember(result);
                        var members = result.data && result.data.list || []
                            , first = members[0];
                        $scope.showMemberActivity(first)
                    })
            });
        var refreshCurRelationship = function(uid) {
                $scope.current_relationship = getFriendByUidFromRelationships(uid)
            }
            ;
        $q.all([rPromise, mPromise]).then(function() {
            refreshCurRelationship($scope.current_member.user_id)
        });
        var loadMemberProjectActivity = function(member_user_id, last_id) {
                $scope.project_activity_loading = !0,
                    $scope.project_activity_loaded = !1,
                    Activity.projectOfUser({
                        project_id: PROJECT.id,
                        user_id: member_user_id,
                        last_id: last_id || MAX_ID
                    }, function(result) {
                        $scope.project_activity_loading = !1,
                            $scope.project_activity_loaded = !0;
                        var pas = result.data || [];
                        return last_id && MAX_ID > last_id ? $scope.project_activities = $scope.project_activities.concat(pas) : $scope.project_activities = pas,
                            $.each($scope.project_activities, function(i, prj_a) {
                                prj_a && (prj_a.hide_project_name = !0)
                            }),
                            $scope.activities_of_date = Common.orderActivityByDate($scope.project_activities),
                            $scope.project_activities = Common.unifyActivity($scope.project_activities, ["id", "created_at"]),
                            pas.length < page_size ? void ($scope.project_activity_last_id = 0) : void ($scope.project_activity_last_id = pas.length > 0 ? pas[pas.length - 1].id : 0)
                    })
            }
            ;
        $scope.loadMemberProjectActivity = loadMemberProjectActivity,
            mPromise.then(function() {
                loadMemberProjectActivity($scope.current_member.user_id)
            }),
            $scope.quit = function(member) {
                member && PROJECT.owner_id != USER.id && USER.id == member.user_id && confirm("确认退出项目？") && Project.quit({
                    id: PROJECT.id
                }, {}, function(result) {
                    0 == result.code ? ($location.path("/user/projects"),
                        Flash.success().send("退出项目成功！"),
                        $scope.$emit("project_member.remove")) : Errors.handle(result)
                })
            }
            ,
            $scope.kickout = function($event, member) {
                member && $filter("isRole")($scope.PROJECT, $scope.ADMIN) && USER.id != member.user_id && confirm("确认移除该成员？") && Project.kickout({
                    id: PROJECT.id,
                    user_id: member.user.id
                }, {}, function(result) {
                    if (0 == result.code) {
                        $scope.members = Common.removeOfId($scope.members, member);
                        var url = PROJECT.project_path + "/members";
                        $location.path(url),
                            Flash.success().send("成员移除成功！"),
                            $scope.$emit("project_member.remove")
                    } else
                        Errors.handle(result)
                }),
                    $event.preventDefault()
            }
            ,
            $scope.follow = function(user) {
                user && User.follow({
                    users: user.global_key
                }, {}, function(result) {
                    0 == result.code ? (rPromise = loadRelationships(),
                        rPromise.then(function(result) {
                            $scope.relationships = result.data || [],
                                refreshCurRelationship(user.id)
                        })) : Errors.handle(result)
                })
            }
            ,
            $scope.unfollow = function(user) {
                user && User.unfollow({
                    users: user.global_key
                }, {}, function(result) {
                    0 == result.code ? (rPromise = loadRelationships(),
                        rPromise.then(function(result) {
                            $scope.relationships = result.data || [],
                                refreshCurRelationship(user.id)
                        })) : Errors.handle(result)
                })
            }
            ,
            $scope.addMember = function() {
                addMemberModal.activate(),
                    setTimeout(function() {
                        $("#add_member_modal").modal("setting", {
                            closable: !1
                        }).modal("show"),
                            setTimeout(function() {
                                $("#add_member_modal").find("input:first").focus()
                            }, 750)
                    }, 100)
            }
            ,
            $scope.showSaveAlias = function() {
                $scope.alias_editing = !0,
                    setTimeout(function() {
                        $(".alias-input").focus()
                    }, 100)
            }
            ,
            $scope.updateAlias = function() {
                return $scope.current_member.alias.length <= 0 ? void ($scope.alias_editing = !1) : void Project.update_alias({
                    id: $scope.PROJECT.id,
                    user_id: $scope.current_member.user.id
                }, {
                    alias: $scope.current_member.alias
                }, function(result) {
                    0 == result.code ? (Flash.success().send("修改成功!"),
                        $scope.alias_editing = !1) : Errors.handle(result)
                })
            }
            ,
            $scope.$on("$destroy", function() {
                $("#add_member_modal").modal("hide"),
                    addMemberModal.deactivate()
            }),
            $scope.updateMemberType = function(member, type) {
                if (member) {
                    var promise = Project.updateMemberType({
                        project_id: PROJECT.id,
                        global_key: member.user && member.user.global_key,
                        type: type
                    }, {});
                    promise.then(function(result) {
                        0 == result.code ? (Flash.success().send("设置项目成员成功！"),
                            loadMembers()) : Flash.success().send("设置项目成员失败,系统异常！")
                    })
                }
            }
            ,
            $scope.canRemove = function(member) {
                return $scope.PROJECT ? member.type < $scope.PROJECT.current_user_role_id && $filter("isRole")($scope.PROJECT, $scope.ADMIN) : !1
            }
    }
    ]),
    angular.module("app").controller("PasswordValidateController", ["$scope", "PasswordValidateService", function($scope, PasswordValidateService) {
        $scope.method = "",
            $scope.method_message = "",
            $scope.two_factor_code = "",
            $scope.words = "这是一个危险操作，需要进行身份验证！",
            $scope.confirmed = !1,
            $scope.passwordValidate = function() {
                return 0 !== $scope.two_factor_code.length ? ($scope.confirmed = !0,
                    $("#password-validate-modal").modal("hide"),
                    !1) : void 0
            }
            ,
            PasswordValidateService.onRequire(function($event, words) {
                PasswordValidateService.authMethod($scope, function() {
                    $("#password-validate-modal").modal("setting", {
                        duration: 200,
                        closable: !1,
                        allowMultiple: !1,
                        onShow: function() {
                            $scope.two_factor_code = "",
                                $scope.confirmed = !1
                        },
                        onHide: function() {
                            "password" === $scope.method ? PasswordValidateService.passwordReady(SHA1($scope.two_factor_code), $scope.confirmed) : PasswordValidateService.passwordReady($scope.two_factor_code, $scope.confirmed)
                        },
                        onApprove: function() {
                            $scope.confirmed = !0
                        },
                        onDeny: function() {
                            $scope.confirmed = !1
                        }
                    }).modal("show")
                }),
                words && words.length > 0 && ($scope.words = words)
            })
    }
    ]).service("PasswordValidateService", ["$rootScope", "$timeout", "TwoFactorAuth", function($rootScope, $timeout, TwoFactorAuth) {
        var itv = 700
            , type = null
            , cancelReady = null
            , cancelRequire = null
            , onPasswordReady = function(callback) {
                cancelReady && cancelReady(),
                    cancelReady = $rootScope.$on("on.password.validate.ready", callback)
            }
            , passwordReady = function(password, confirmed) {
                $timeout(function() {
                    $rootScope.$broadcast("on.password.validate.ready", password, confirmed, type)
                }, itv)
            }
            , requirePassword = function(words, t, timeout) {
                type = t,
                    itv = timeout || 700,
                    $timeout(function() {
                        $rootScope.$broadcast("on.password.required", words)
                    }, itv)
            }
            , onRequire = function(callback) {
                cancelRequire && cancelRequire(),
                    cancelRequire = $rootScope.$on("on.password.required", callback)
            }
            , authMethod = function($scope, callback) {
                var promise = TwoFactorAuth.method({}, {});
                return promise.then(function(result) {
                    $scope.method = result.data,
                        "password" === $scope.method ? $scope.method_message = "登录密码" : "totp" === $scope.method ? $scope.method_message = "两步验证码" : "phone" === $scope.method && ($scope.method_message = "手机验证码"),
                    callback && callback()
                }),
                    promise
            }
            ;
        return {
            onPasswordReady: onPasswordReady,
            passwordReady: passwordReady,
            require: requirePassword,
            onRequire: onRequire,
            authMethod: authMethod,
            TYPES: {
                DELETE_PROJECT: "delete-project",
                TRANSFER_PROJECT: "transfer-project",
                DELETE_SSH_KEY: "delete-ssh-key",
                ADD_SSH_KEY: "add-ssh-key",
                ADD_DEPLOY_SSH_KEY: "add-deploy-key",
                DELETE_DEPLOY_SSH_KEY: "delete-deploy-key",
                BIND_DEPLOY_SSH_KEY: "bind-deploy-key",
                UNBIND_DEPLOY_SSH_KEY: "unbind-deploy-key",
                DELETE_PAAS: "delete-paas",
                DELETE_PAAS_SERVICE: "delete-paas-service",
                ARCHIVE_PROJECT: "archive_project"
            }
        }
    }
    ]),
    angular.module("app").controller("ProjectController", ["$scope", "$rootScope", "$routeParams", "Project", "Activity", "Errors", "Topic", "$location", "Common", function($scope, $rootScope, $routeParams, Project, Activity, Errors, Topic, $location, Common) {
        var PROJECT = $scope.PROJECT
            , USER = $scope.USER;
        if (!PROJECT.is_public && USER && PROJECT.current_user_role_id >= $rootScope.MEMBER && setTimeout(function() {
                Project.update_visit({
                    id: PROJECT.id
                })
            }, 300),
                PROJECT.is_public)
            return void $location.path(PROJECT.depot_path).replace();
        $scope.project_activities = [],
            $scope.activity_loading = !1,
            $scope.activity_loaded = !1,
            $scope.project_last_id = 0;
        var page_size = 20;
        Project.query({
            project_id: PROJECT.id
        }, function(result) {
            0 == result.code && ($scope.PROJECT = result.data,
                PROJECT = result.data)
        });
        var MAX_ID = 99999999;
        $scope.activities_mode = "all",
            $scope.loadProjectActiveList = function(last_id, type) {
                $scope.activity_loading = !0,
                    $scope.activity_loaded = !1,
                    Activity.project({
                        project_id: PROJECT.id,
                        user_id: USER.id,
                        last_id: last_id || MAX_ID,
                        type: type || "all"
                    }, function(result) {
                        if ($scope.activity_loading = !1,
                                $scope.activity_loaded = !0,
                            0 == result.code) {
                            var pas = result.data || [];
                            pas = Common.removeNullItem(pas),
                                last_id && MAX_ID > last_id ? $scope.project_activities = $scope.project_activities.concat(pas) : ($scope.project_activity_emtpy = 0 == pas.length,
                                    $scope.project_activities = pas),
                                $($scope.project_activities).each(function(i, prj_a) {
                                    prj_a.hide_project_name = !0
                                }),
                            pas.length < page_size && ($scope.project_last_id = 0),
                                $scope.project_last_id = pas.length > 0 ? pas[pas.length - 1].id : 0,
                                $scope.activities_of_date = Common.orderActivityByDate($scope.project_activities),
                                $scope.project_activities = Common.unifyActivity($scope.project_activities, ["id", "created_at"])
                        } else
                            Errors.handle(result)
                    })
            }
            ,
            $scope.loadProjectActiveList(MAX_ID, $scope.activities_mode),
            Topic.list({
                id: PROJECT.id,
                page: 1,
                pageSize: 4,
                type: 1
            }, function(result) {
                $scope.loading = !1,
                    0 == result.code ? $scope.project_topics = result.data.list || [] : Errors.handle(result)
            }),
        $scope.USER && Project.update_visit({
            id: PROJECT.id
        }, function(result) {}),
            $scope.changeActivitiesMode = function(mode) {
                $scope.project_activities = [],
                    $scope.activities_of_date = Common.orderActivityByDate($scope.project_activities),
                    $scope.project_activities = Common.unifyActivity($scope.project_activities, ["id", "created_at"]),
                    $scope.activities_mode = mode,
                    $scope.loadProjectActiveList(MAX_ID, mode)
            }
            ,
            $scope.showUnreadMsg = function() {
                return "all" == $scope.activities_mode && PROJECT.un_read_activities_count > 0 && PROJECT.un_read_activities_count <= 200
            }
            ,
            $scope.PTWL = [1]
    }
    ]),
    angular.module("app").config(["$routeProvider", "experimentProvider", "$locationProvider", "UserResolver", "ProjectResolver", function($routeProvider, experimentProvider, $locationProvider, UserResolver, ProjectResolver) {
        $routeProvider.when("/u/:username/p/:project_name/members/:region?", {
            templateUrl: "app/project/members.html",
            resolve: {
                USER: UserResolver,
                PROJECT: ProjectResolver
            },
            controller: "ProjectMembersController",
            module: "members",
            title: function($routeParams) {
                var project_name = $routeParams.project_name
                    , user = $routeParams.region
                    , title = user ? user + " - 项目成员 - " : "项目成员 - ";
                return title + project_name
            }
        })
    }
    ]),
    angular.module("app").controller("ProjectSettingController", ["$scope", "$routeParams", "Project", "$rootScope", "location", "Errors", "Flash", "Depot", "Setting", "PasswordValidateService", "Paas", "Common", function($scope, $routeParams, Project, $rootScope, $location, Errors, Flash, Depot, Setting, PasswordValidateService, Paas, Common) {
        var PROJECT = $scope.PROJECT
            , USER = $rootScope.USER;
        PROJECT.owner_id != $rootScope.USER.id && $location.path(PROJECT.project_path),
            $scope.tag_menu = "setting";
        var vp_modal = $rootScope.ValidatePassword;
        vp_modal.activate(),
            $scope.inner_menu = $routeParams.region || "basic",
            $scope.current_project = {},
            $scope.loading = !0,
            $scope.update_success = !1,
            $scope.uploading = !1,
            $scope.branches = {},
            $scope.default_branch = "",
            $scope.deleting = !1,
            $scope.members = [],
            $scope.selected_member = void 0,
            $scope.member_loading = !1,
            $scope.paas_enabled = !1,
            $scope.paas_url = "/u/" + $routeParams.username + "/p/" + PROJECT.name + "/paas",
            $scope.transferring = !1,
            $scope.dropDownSetting = {
                onShow: function() {
                    $("#transfer-member > .menu > .search > .ui.icon.input > input").focus()
                }
            };
        var project_id = PROJECT.id;
        Project.query({
            project_id: project_id
        }, function(result) {
            return $scope.loading = !1,
                0 != result.code ? void Errors.handle(result) : ($scope.current_project = result.data,
                    void ($scope.project = result.data))
        }),
            Depot.depot({
                username: $routeParams.username,
                project_name: PROJECT.name
            }, function(result) {
                result.data ? ($scope.depot = result.data.depot,
                    $scope.default_branch = result.data.depot.default_branch) : $scope.depot = !1
            }),
            Depot.listBranches({
                username: $routeParams.username,
                project_name: PROJECT.name
            }, function(result) {
                $scope.branches = result.data
            }),
            Paas.get({
                username: $routeParams.username,
                project_name: PROJECT.name
            }, function() {
                $scope.paas_enabled = !0,
                    $("#transfer-member").dropdown("destroy")
            }, function() {
                $scope.paas_enabled = !1
            }),
            $scope.member_loading = !0,
            Project.members({
                id: PROJECT.id
            }, function(result) {
                $scope.members = Common.removeOfId(Common.m2u(result.data.list), USER.id),
                    $scope.member_loading = !1
            }),
            $scope.selectMember = function(user) {
                $scope.selected_member = user,
                    $("#transfer-member").dropdown("hide")
            }
        ;
        var transferProject = function(project, member, password) {
            if ($scope.selected_member && !$scope.transferring && !$scope.paas_enabled) {
                $scope.transferring = !0;
                var pPromise = Project.transfer({
                    id: project.id,
                    global_key: member.global_key,
                    password: password
                }, {}, function(result) {
                    var p = result.data;
                    $location.path(p.project_path + "/setting/basic"),
                        Flash.success().send("转让成功！")
                });
                pPromise["catch"](function(error, result) {
                    result && result.msg.password_error && $scope.beforeTransferProject(200)
                }),
                    pPromise["finally"](function() {
                        $scope.transferring = !1
                    })
            }
        }
            , upload_url = [Setting.api_host, "/api/project/" + PROJECT.id + "/project_icon"].join("");
        $scope.uploadSetting = {
            xhrFields: {
                withCredentials: !0
            },
            url: upload_url,
            dropZone: null ,
            add: function(e, data) {
                var filename_regexp = /(\.|\/)(jpe?g|png)$/i;
                return data.files[0].size > 1048576 ? (Flash.fail().send("图像大于 1M"),
                    !1) : filename_regexp.test(data.files[0].type) || filename_regexp.test(data.files[0].name) ? (data.submit(),
                    void ($scope.uploading = !0)) : (Flash.fail().send("只支持 JPG、JPEG、PNG 格式的图片"),
                    !1)
            },
            done: function(e, data) {
                0 === data.result.code ? ($scope.PROJECT = data.result.data,
                    $rootScope.PROJECT = $scope.PROJECT,
                    $scope.project_icon = data.result.data.icon,
                    $scope.uploading = !1,
                    $rootScope.$broadcast("project.icon.update", data.result.data.icon),
                    Flash.success().send("上传成功!")) : (Errors.handle(data.result),
                    $scope.uploading = !1)
            },
            fail: function() {
                $scope.uploading = !1,
                    Flash.fail().send("上传失败!")
            }
        };
        var project_clone = angular.copy($scope.PROJECT);
        $scope.updateProject = function(project, branch) {
            if ((!compare(project, project_clone) || branch != $scope.default_branch) && project.id) {
                $scope.updating = !0,
                    $scope.update_success = !1;
                var data = {
                    id: project.id,
                    name: project.name,
                    description: project.description,
                    default_branch: branch
                };
                Project.update(data, function(result) {
                    $scope.updating = !1;
                    var p = result.data;
                    $location.path(p.project_path + "/setting/basic"),
                        Flash.success().send("更新成功！")
                })["catch"](function(error, result) {
                    $scope.updating = !1
                })
            }
        }
        ;
        var compare = function(project1, project2) {
            return project1.name == project2.name && project1.description == project2.description
        }
            , words = "这是一个危险操作，请提供登录密码以确认！";
        $scope.beforeDeleteProject = function(timeout) {
            PasswordValidateService.require(words, PasswordValidateService.TYPES.DELETE_PROJECT, timeout || 1)
        }
            ,
            $scope.beforeTransferProject = function(timeout) {
                PasswordValidateService.require(words, PasswordValidateService.TYPES.TRANSFER_PROJECT, timeout || 1)
            }
        ;
        var deleteProject = function(name, password) {
                $scope.deleting = !0;
                var promise = Project["delete"]({
                    project_id: $scope.current_project.id,
                    name: name,
                    password: password
                });
                promise.then(function() {
                    location.href = "/user/projects"
                }),
                    promise["catch"](function(error, result) {
                        result && result.msg.password && $scope.beforeDeleteProject(200),
                            $scope.deleting = !1
                    })
            }
            ;
        PasswordValidateService.onPasswordReady(function(event, password, confirmed, type) {
            (PasswordValidateService.TYPES.DELETE_PROJECT === type || PasswordValidateService.TYPES.TRANSFER_PROJECT === type) && confirmed && (PasswordValidateService.TYPES.DELETE_PROJECT === type ? deleteProject($scope.current_project.name, password) : transferProject(PROJECT, $scope.selected_member, password))
        }),
            $scope.editProjectIcon = function() {
                $("#edit-project-icon-modal").modal("show")
            }
            ,
            $scope.$on("project.icon.update", function(event, icon) {
                $scope.project.icon = icon
            })
    }
    ]),
    angular.module("app").controller("ProjectDeployKeyIndexController", ["$rootScope", "$scope", "Flash", "Project", "Depot", "$routeParams", "$location", "$route", "PasswordValidateService", function($rootScope, $scope, Flash, Project, Depot, $routeParams, $location, $route, PasswordValidateService) {
        $scope.tag_menu = "setting",
            $scope.inner_menu = "deploy",
            $scope.key_id = "",
        $scope.is_project_admin || $location.path($scope.PROJECT.project_path),
            Depot.queryDepolyKeys({
                username: $routeParams.username,
                project_name: $scope.PROJECT.name
            }, function(result) {
                0 === result.code && ($scope.project_keys = result.data.project)
            }),
            $scope.showUnbindPassword = function(key_id) {
                $scope.key_id = key_id;
                var words = "删除部署公钥需要进行身份验证";
                PasswordValidateService.require(words, PasswordValidateService.TYPES.UNBIND_DEPLOY_SSH_KEY)
            }
        ;
        var unbindKey = function(id, code) {
                Depot.unBindDeployKey({
                    username: $routeParams.username,
                    project_name: $scope.PROJECT.name,
                    id: id
                }, {
                    two_factor_code: code
                }, function(result) {
                    $route.reload(),
                        Flash.success().send("修改成功")
                })["catch"](function(error, result) {
                    result && 1401 === result.code && $scope.showBindPassword($scope.key_id)
                })
            }
            ;
        PasswordValidateService.onPasswordReady(function(event, password, confirmed, type) {
            PasswordValidateService.TYPES.UNBIND_DEPLOY_SSH_KEY === type && confirmed && password && unbindKey($scope.key_id, password),
                $scope.key_id = ""
        })
    }
    ]),
    angular.module("app").controller("ProjectDeployKeyNewController", ["$scope", "$rootScope", "Errors", "Depot", "$routeParams", "$location", "Flash", "PasswordValidateService", function($scope, $rootScope, Errors, Depot, $routeParams, $location, Flash, PasswordValidateService) {
        $scope.tag_menu = "setting",
            $scope.inner_menu = "deploy",
            $scope.submit_loading = !1,
            $scope.key_title = "",
            $scope.key_content = "",
        $scope.is_project_admin || $location.path($scope.PROJECT.project_path),
            $scope.showPasswordWithCreateKey = function(key_title, key_content) {
                var words;
                $scope.key_title = key_title,
                    $scope.key_content = key_content,
                    words = "这个操作很关键，需要进行身份验证",
                    PasswordValidateService.require(words, PasswordValidateService.TYPES.ADD_DEPLOY_SSH_KEY)
            }
            ,
            $scope.split = function(content) {
                var contents;
                return null  !== content && (contents = content.split(" "),
                3 === contents.length) ? $scope.key_title = contents[2] : void 0
            }
        ;
        var createKey = function(key_title, key_content, code) {
                return $scope.submit_loading = !0,
                    "" === key_content ? (Flash.fail().send("公钥不能为空"),
                        void ($scope.submit_loading = !1)) : void Depot.saveDeployKey({
                        username: $routeParams.username,
                        project_name: $scope.PROJECT.name
                    }, {
                        title: key_title,
                        content: key_content,
                        two_factor_code: code
                    }, function(result) {
                        $scope.submit_loading = !1,
                            Flash.success().send("添加成功"),
                            $location.path($scope.PROJECT.project_path + "/setting/deploy_key")
                    })["catch"](function(error, result) {
                        $scope.submit_loading = !1,
                        result && 1401 === result.code && $scope.showPasswordWithCreateKey($scope.key_title, $scope.key_content)
                    })
            }
            ;
        PasswordValidateService.onPasswordReady(function(event, password, confirmed, type) {
            PasswordValidateService.TYPES.ADD_DEPLOY_SSH_KEY === type && confirmed && password && createKey($scope.key_title, $scope.key_content, password)
        })
    }
    ]),
    angular.module("app").controller("ProjectSettingAdvanceController", ["$scope", "$rootScope", "$location", "Paas", "Project", "Common", "PasswordValidateService", "Flash", function($scope, $rootScope, $location, Paas, Project, Common, PasswordValidateService, Flash) {
        var PROJECT = $scope.PROJECT
            , USER = $scope.USER;
        $scope.current_project = angular.copy(PROJECT),
            $scope.paas_enabled = !1,
            $scope.paas_url = "/u/" + PROJECT.owner_user_name + "/p/" + PROJECT.name + "/paas",
            $scope.deleting = !1,
            $scope.members = [],
            $scope.selected_member = void 0,
            $scope.member_loading = !1,
            $scope.transferring = !1,
            $scope.acrhiving = !1,
            $scope.dropDownSetting = {
                onShow: function() {
                    $("#transfer-member > .menu > .search > .ui.icon.input > input").focus()
                }
            },
            Paas.get({
                username: PROJECT.owner_user_name,
                project_name: PROJECT.name
            }, function(result) {
                return 0 !== result.code ? void ($scope.paas_enabled = !1) : ($scope.paas_enabled = !0,
                    void $("#transfer-member").dropdown("destroy"))
            }, function() {
                $scope.paas_enabled = !1
            }),
            $scope.member_loading = !0,
            Project.members({
                id: PROJECT.id
            }, function(result) {
                $scope.members = Common.removeOfId(Common.m2u(result.data.list), USER.id),
                    $scope.member_loading = !1
            }),
            $scope.selectMember = function(user) {
                $scope.selected_member = user,
                    $("#transfer-member").dropdown("hide")
            }
        ;
        var transferProject = function(project, member, password) {
            if ($scope.selected_member && !$scope.transferring && !$scope.paas_enabled) {
                $scope.transferring = !0;
                var pPromise = Project.transfer({
                    id: project.id,
                    global_key: member.global_key
                }, {
                    two_factor_code: password
                }, function(result) {
                    var p = result.data;
                    $location.path(p.project_path),
                        $scope.$emit("project.transfer"),
                        Flash.success().send("转让成功！")
                });
                pPromise["catch"](function(error, result) {
                    result && result.msg.password_error && $scope.beforeTransferProject(200)
                }),
                    pPromise["finally"](function() {
                        $scope.transferring = !1
                    })
            }
        }
            , words = "这是一个危险操作，需要进行身份验证！";
        $scope.beforeDeleteProject = function(timeout) {
            PasswordValidateService.require(words, PasswordValidateService.TYPES.DELETE_PROJECT, timeout || 1)
        }
            ,
            $scope.beforeTransferProject = function(timeout) {
                $scope.selected_member && PasswordValidateService.require(words, PasswordValidateService.TYPES.TRANSFER_PROJECT, timeout || 1)
            }
            ,
            $scope.beforeArchiveProject = function(timeout) {
                var words = "此操作需要进行身份验证";
                PasswordValidateService.require(words, PasswordValidateService.TYPES.ARCHIVE_PROJECT, timeout || 1)
            }
        ;
        var deleteProject = function(name, code) {
                $scope.deleting = !0;
                var promise = Project["delete"]({
                    project_id: $scope.current_project.id,
                    name: name,
                    two_factor_code: code
                }, {});
                promise.then(function() {
                    $scope.$emit("project.remove"),
                        location.href = "/user/projects"
                }),
                    promise["catch"](function(error, result) {
                        result && result.msg.password && $scope.beforeDeleteProject(200),
                            $scope.deleting = !1
                    })
            }
            , archiveProject = function(id, code) {
                $scope.archiving = !0;
                var promise = Project.archive({
                    id: id
                }, {
                    two_factor_code: code
                });
                promise.then(function(result) {
                    $location.path("/user/projects/archive"),
                        Flash.success().send("归档成功！")
                }),
                    promise["catch"](function(result) {
                        result && result.msg.password_error && $scope.beforeArchiveProject(200)
                    }),
                    promise["finally"](function() {
                        $scope.archiving = !1
                    })
            }
            ;
        PasswordValidateService.onPasswordReady(function(event, code, confirmed, type) {
            (PasswordValidateService.TYPES.DELETE_PROJECT === type || PasswordValidateService.TYPES.TRANSFER_PROJECT === type || PasswordValidateService.TYPES.ARCHIVE_PROJECT === type) && confirmed && (PasswordValidateService.TYPES.DELETE_PROJECT === type ? deleteProject($scope.current_project.name, code) : PasswordValidateService.TYPES.TRANSFER_PROJECT === type ? transferProject(PROJECT, $scope.selected_member, code) : PasswordValidateService.TYPES.ARCHIVE_PROJECT === type && archiveProject($scope.current_project.id, code))
        }),
            $scope.quiting = !1,
            $scope.quit = function() {
                if (PROJECT.owner_id != USER.id && confirm("确认退出项目？")) {
                    $scope.quiting = !0;
                    var qPromise = Project.quit({
                        id: PROJECT.id
                    }, {});
                    qPromise.then(function() {
                        $location.path("/user/projects"),
                            $scope.$emit("project.quit"),
                            Flash.success().send("退出项目成功！")
                    }),
                        qPromise["finally"](function() {
                            $scope.quiting = !1
                        })
                }
            }
    }
    ]),
    angular.module("app").controller("ProjectSettingBasicController", ["$scope", "$rootScope", "Setting", "Flash", "Errors", "Project", "Depot", "$location", "Common", function($scope, $rootScope, Setting, Flash, Errors, Project, Depot, $location, Common) {
        var PROJECT = $scope.PROJECT;
        $scope.uploading = !1,
            $scope.update_success = !1;
        var project_clone = angular.copy($scope.PROJECT);
        $scope.project = angular.copy(project_clone);
        var upload_url = [Setting.api_host, "/api/project/" + PROJECT.id + "/project_icon"].join("");
        $scope.uploadSetting = {
            xhrFields: {
                withCredentials: !0
            },
            url: upload_url,
            dropZone: null ,
            disableImageResize: !1,
            loadImageMaxFileSize: 52428800,
            imageMaxWidth: 800,
            imageMaxHeight: 800,
            imageMinWidth: 128,
            imageMinHeight: 128,
            processstart: function() {
                Common.safeApply.call($scope, function() {
                    $scope.uploading = !0
                })
            },
            done: function(e, data) {
                0 === data.result.code ? ($scope.PROJECT = data.result.data,
                    $rootScope.PROJECT = $scope.PROJECT,
                    $scope.project_icon = data.result.data.icon,
                    $scope.uploading = !1,
                    $rootScope.$broadcast("project.icon.update", data.result.data.icon),
                    Flash.success().send("上传成功!")) : (Errors.handle(data.result),
                    $scope.uploading = !1)
            },
            fail: function() {
                $scope.uploading = !1,
                    Flash.fail().send("上传失败!")
            }
        };
        var compare = function(project1, project2) {
                return project1.name == project2.name && project1.description == project2.description
            }
            ;
        $scope.updateProject = function(project) {
            if (!compare(project, project_clone) && project.id) {
                $scope.updating = !0,
                    $scope.update_success = !1;
                var data = {
                    id: project.id,
                    name: project.name,
                    description: project.description
                };
                Project.update(data, function(result) {
                    $scope.updating = !1;
                    var p = result.data;
                    $rootScope.PROJECT.description = p.description,
                        $location.path(p.project_path + "/setting/basic"),
                        Flash.success().send("更新成功！")
                })["catch"](function() {
                    $scope.updating = !1
                })
            }
        }
            ,
            $scope.editProjectIcon = function() {
                $("#edit-project-icon-modal").modal("show")
            }
    }
    ]),
    angular.module("app").controller("ProjectSettingController", ["$scope", "$rootScope", "$routeParams", "Common", "$location", "$filter", function($scope, $rootScope, $routeParams, Common, $location, $filter) {
        var default_region = $scope.PROJECT.is_public ? "basic" : "summary"
            , region = $routeParams.region || default_region
            , tab = $routeParams.tab || "index";
        if ($scope.inner_menu = region,
                $scope.tab = tab,
                $scope.tag_menu = "setting",
            $scope.PROJECT.is_public && "summary" === $routeParams.region)
            return void $location.path($scope.PROJECT.project_path + "/setting/basic");
        $scope.is_project_owner = $scope.PROJECT.owner_id === ($scope.USER ? $scope.USER.id : 0),
            $scope.is_project_admin = $filter("isRole")($scope.PROJECT, $scope.ADMIN);
        var vp_modal = $rootScope.ValidatePassword;
        vp_modal.activate(),
            $scope.keysPath = function() {
                var cases = {
                    summary: function(tab) {
                        return "app/project/setting/summary/" + tab + ".html"
                    },
                    deploy_key: function(tab) {
                        return "app/project/setting/deploy_key/" + tab + ".html"
                    },
                    webhook: function(tab) {
                        return "app/project/setting/webhook/" + tab + ".html"
                    },
                    support: function(tab) {
                        return "app/project/setting/support/" + tab + ".html"
                    },
                    "default": "app/project/setting/general/" + region + ".html"
                };
                return Common.smartSwitch(cases, region, tab)
            }
    }
    ]),
    angular.module("app").controller("ProjectUpgradeMarketingCtrl", ["$scope", "Projects", "$location", function($scope, Projects, $location) {
        $scope.projects = [],
            $scope.project_selected = void 0,
            $scope.dropdown = {},
            $scope.loaded = !1,
            $scope.onProjectSelect = function(project) {
                $scope.project_selected = project,
                    $scope.dropdown.close()
            }
            ,
            $scope.upgrade = function(project) {
                project && $location.path(project.project_path + "/setting/summary/upgrade")
            }
        ;
        var loadProjects = function() {
                var promise = Projects.query({
                    page: 1,
                    pageSize: 1e3,
                    type: "created"
                });
                promise.then(function(result) {
                    $scope.projects = result.data && result.data.list || [],
                        $scope.projects = $.map($scope.projects, function(project) {
                            return project.is_public ? void 0 : project
                        })
                }),
                    promise["finally"](function() {
                        $scope.loaded = !0
                    })
            }
            ;
        $scope.$watch("USER", function(user) {
            angular.isDefined(user) && (user.name ? loadProjects() : $scope.loaded = !0)
        })
    }
    ]),
    angular.module("app").config(["$routeProvider", "$locationProvider", "UserResolver", "ProjectResolver", function($routeProvider, $locationProvider, UserResolver, ProjectResolver) {
        $routeProvider.when("/u/:username/p/:project_name/setting/:region?[/]?:tab?[/]?:id?", {
            templateUrl: "app/project/setting/index.html",
            resolve: {
                USER: UserResolver,
                PROJECT: ProjectResolver
            },
            controller: "ProjectSettingController",
            module: "setting",
            title: function($routeParams, Common) {
                var region = $routeParams.region || "basic"
                    , tab = $routeParams.tab || "index"
                    , project_name = $routeParams.project_name
                    , regions = {
                    summary: "项目概览",
                    basic: "基本设置",
                    advance: "高级设置",
                    deploy_key: "部署公钥",
                    webhook: "WebHook 设置",
                    support: "技术支持",
                    "default": "项目设置"
                };
                return Common.smartSwitch(regions, region, tab) + " - " + project_name
            }
        }).when("/upgrade", {
            templateUrl: "app/project/setting/project_upgrade.html",
            controller: "ProjectUpgradeMarketingCtrl",
            title: "项目升级"
        })
    }
    ]),
    angular.module("app").controller("ProjectSummaryController", ["$scope", "Payment", "$route", "ProjectVersions", "PaymentUpgradeService", "ProjectSummaryService", "Flash", "$interval", function($scope, Payment, $route, ProjectVersions, PaymentUpgradeService, ProjectSummaryService, Flash, $interval) {
        var project_params = {
                username: $scope.PROJECT.owner_user_name,
                project_name: $scope.PROJECT.name
            }
            , loadServiceInfo = function() {
                var promise = Payment.project_summary(project_params);
                promise.then(function(result) {
                    $scope.service_info = result.data || {},
                        $scope.upgraded = $scope.PROJECT.plan > 1 || !!$scope.service_info.expired_plan && $scope.service_info.expired_plan > 1
                })
            }
            , loadUpgradePrice = function() {
                var promise = Payment.upgradePrice(project_params);
                promise.then(function(result) {
                    var prices = result && result.data;
                    $scope.upgrade_prices = PaymentUpgradeService.dataToHuman(prices)
                })
            }
            , counter = null
            , loadProjectExportInfo = function() {
                $scope.loaded_export = !1,
                    $scope.loading_export = !0;
                var promise = Payment["export"](project_params);
                promise.then(function(result) {
                    $scope.export_info = result.data || {};
                    var now = (new Date).getTime()
                        , milli_seconds = now - +$scope.export_info.created_at
                        , an_hour_in_milli_seconds = 36e5;
                    return milli_seconds > an_hour_in_milli_seconds ? void ($scope.seconds = null ) : ($scope.seconds = parseInt((an_hour_in_milli_seconds - milli_seconds) / 1e3),
                    counter && $interval.cancel(counter),
                        void (counter = $interval(function() {
                            $scope.seconds--,
                            $scope.seconds <= 0 && ($scope.seconds = null ,
                                $interval.cancel(counter))
                        }, 1e3)))
                }),
                    promise["finally"](function() {
                        $scope.loaded_export = !0,
                            $scope.loading_export = !1
                    })
            }
            , loadBalance = function() {
                Payment.balance(function(result) {
                    $scope.balance = +result.data || 0
                })
            }
            , loadProjectPlan = function() {
                var promise = Payment.projectPlan(project_params);
                promise.then(function(result) {
                    $scope.project_plan = result.data
                })
            }
            ;
        loadServiceInfo(),
            loadBalance(),
            loadProjectPlan(),
            $scope.insufficient = !1,
            $scope.balance = 0,
            $scope.version_price = 0,
            $scope.project_plan = void 0,
            $scope.export_info = void 0,
            $scope.loading_export = !1,
            $scope.loaded_export = !1,
            $scope.$on("upgrade.project.success", function(event, new_plan) {
                new_plan && ProjectSummaryService.upgrade($scope, new_plan),
                    $route.reload()
            }),
            $scope.$on("project.upgrade.renewal.success", function(event, new_plan) {
                $scope.project_plan.month = new_plan.month,
                    $scope.project_plan.auto = new_plan.auto
            }),
            $scope.service_info = {},
            $scope.upgrade_prices = void 0,
            $scope.version = ProjectVersions[$scope.PROJECT.plan].id,
            $scope.project_version = ProjectVersions[$scope.version],
            $scope.expired_project_version = ProjectVersions[$scope.service_info.expired_plan];
        var modal = null
            , renewal_modal = null
            , just_renewal_modal = null
            , renewal_manually_modal = null ;
        $scope.$on("set.upgrade.pro.modal", function(event, m) {
            modal = m
        }),
            $scope.$on("set.upgrade.renewal.modal", function(event, m) {
                renewal_modal = m
            }),
            $scope.$on("set.upgrade.just.renewal.modal", function(event, m) {
                just_renewal_modal = m
            }),
            $scope.$on("set.renewal.manually.modal", function(event, m) {
                renewal_manually_modal = m
            }),
            $scope.$on("project.charge.success", function() {
                loadBalance()
            }),
            $scope.upgradePro = function() {
                modal.toggle()
            }
            ,
            $scope.renewal = function() {
                renewal_modal.toggle()
            }
            ,
            $scope.justRenewal = function() {
                just_renewal_modal.toggle()
            }
            ,
            $scope.rate = function(a, b) {
                if (angular.isUndefined(a) || angular.isUndefined(b))
                    return 0;
                var percent = +a / +b * 100;
                return percent > 100 && (percent = 100),
                percent + "%"
            }
            ,
            $scope.progressColor = function(a, b) {
                return a && b ? a / b > 7 / 8 ? "#D95C5C" : a / b > .75 ? "#eb935d" : "#A1CF64" : "#A1CF64"
            }
            ,
            $scope.projectVersionBg = function() {
                return !$scope.PROJECT || $scope.service_info.expired_plan || 1 === $scope.PROJECT.plan ? {
                    background: "#EEE",
                    color: "#444"
                } : {
                    background: $scope.project_version.color,
                    color: "#FFF"
                }
            }
            ,
            $scope.exportEnableTime = function(seconds) {
                var minutes = Math.floor(seconds / 60)
                    , left_seconds = seconds % 60
                    , str = "";
                return minutes > 0 && (str += minutes + "分"),
                    str += left_seconds + "秒"
            }
            ,
            $scope.exportProject = function() {
                if (confirm("数据打包成功后，我们将会发送下载链接到您的注册邮箱，请耐心等待。\n\n确认打包当前项目？")) {
                    var promise = Payment.exports(project_params, {});
                    promise.then(function() {
                        Flash.success().send("数据已开始在后台打包，请耐心等待，并注意查收邮件！"),
                            loadProjectExportInfo()
                    })
                }
            }
            ,
            $scope.renewalManually = function() {
                renewal_manually_modal.toggle()
            }
            ,
            $scope.$on("$destroy", function() {
                counter && $interval.cancel(counter)
            }),
        1 !== $scope.PROJECT.plan && $scope.is_project_owner && (loadUpgradePrice(),
            loadProjectExportInfo())
    }
    ]).service("ProjectSummaryService", function() {
        return {
            upgrade: function($scope, new_plan) {
                $scope.PROJECT.plan = new_plan,
                $scope.service_info && $scope.service_info.expired_plan && ($scope.service_info.expired_plan = void 0)
            }
        }
    }),
    angular.module("app").controller("ProjectUpgradeJustRenewalModalCtrl", ["$scope", "ModalService", "ProjectVersions", "Common", function($scope, ModalService, ProjectVersions, Common) {
        $scope.id = Common.uuid();
        var modal = $scope.upgrade_just_renewal_modal = ModalService.instance("project-upgrade-just-renewal-modal")
            , result_modal = $scope.renewal_result_modal = ModalService.instance("project-renewal-result-modal");
        $scope.$emit("set.upgrade.just.renewal.modal", modal);
        var version = $scope.version || "dev";
        $scope.upgrade_period = ProjectVersions[version].period,
            $scope.upgrade_version = ProjectVersions[version],
            $scope.version_description = ProjectVersions[version].description.join(" / "),
            $scope.form = {
                period: "month"
            },
            $scope.renewal = function(form) {
                result_modal.toggle()
            }
    }
    ]),
    angular.module("app").controller("PasswordRequiredModalCtrl", ["$scope", "PasswordValidateService", function($scope, PasswordValidateService) {
        $scope.form = {
            password: ""
        },
            $scope.method = "password",
            $scope.method_message = "登录密码",
            $scope.confirm = function(code) {
                $scope.form.password = "",
                    code = "password" === $scope.method ? SHA1(code || "") : code,
                    $scope.$emit("set.required.password", code),
                    $scope.$parent.$broadcast("set.required.password", code)
            }
            ,
            $scope.$on("required.password.show", function() {
                PasswordValidateService.authMethod($scope)
            })
    }
    ]),
    angular.module("app").controller("ProjectUpgradeRenewalModalCtrl", ["$scope", "ModalService", "ProjectVersions", "Payment", "Flash", "Common", function($scope, ModalService, ProjectVersions, Payment, Flash, Common) {
        $scope.id = Common.uuid();
        var project_params = {
            username: $scope.PROJECT.owner_user_name,
            project_name: $scope.PROJECT.name
        }
            , modal = $scope.upgrade_renewal_modal = ModalService.instance("project-upgrade-renewal-modal");
        $scope.$emit("set.upgrade.renewal.modal", modal),
            $scope.$watch("version", function(version) {
                angular.isDefined(version) && ($scope.upgrade_period = ProjectVersions[version || "dev"].period)
            }),
            $scope.$watchCollection("project_plan", function(project_plan) {
                if (angular.isDefined(project_plan)) {
                    var period = ProjectVersions.monthToHuman($scope.project_plan.month)
                        , renewal = !!$scope.project_plan.auto;
                    $scope.form = {
                        period: period,
                        renewal: renewal
                    }
                }
            }),
            $scope.renewal = function(form) {
                var data = ProjectVersions.humanToData(form);
                data.plan = $scope.project_plan.plan;
                var promise = Payment.updateRenewal(project_params, data);
                promise.then(function() {
                    modal.action("hide"),
                        $scope.$emit("project.upgrade.renewal.success", data),
                        Flash.success().send("续费设置更新成功！")
                })
            }
    }
    ]),
    angular.module("app").controller("ProjectRenewalManuallyModalCtrl", ["$scope", "ModalService", "ProjectVersions", "Payment", "Common", "Flash", function($scope, ModalService, ProjectVersions, Payment, Common, Flash) {
        $scope.current_versions = ProjectVersions[$scope.PROJECT.plan],
            $scope.version_description = ProjectVersions[$scope.PROJECT.plan].description.join(" / "),
            $scope.insufficient = !1,
            $scope.upgrade_periods = {
                dev: ProjectVersions.dev.period,
                pro: ProjectVersions.pro.period
            };
        var project_params = {
            username: $scope.PROJECT.owner_user_name,
            project_name: $scope.PROJECT.name
        };
        $scope.period = null ,
            $scope.form = {
                period: "month",
                voucher: ""
            },
            $scope.available_plan = null ,
            $scope.id = Common.uuid(),
            $scope.$watchCollection("project_plan", function(project_plan) {
                angular.isDefined(project_plan) && ($scope.period = ProjectVersions.monthToHuman($scope.project_plan.month))
            });
        var charge_modal = null
            , modal = $scope.renewal_manually_modal = ModalService.instance("renewal-manually-modal", {
            duration: 200
        })
            , password_modal = $scope.password_required_modal = ModalService.instance("password-required-modal", {
            duration: 200
        });
        $scope.password_words = "项目续费需要输入登录密码以确认",
            $scope.$emit("set.renewal.manually.modal", modal),
            $scope.$on("set.project.upgrade.modal", function(event, m) {
                charge_modal = m,
                    event.preventDefault()
            }),
            $scope.$on("project.charge.success", function() {
                modal.action("show")
            });
        var loadManuallyUpgradeAvaliablePlan = function() {
                if (1 !== $scope.PROJECT.plan && $scope.USER.id === $scope.PROJECT.owner.id) {
                    var promise = Payment.renewal_plan(project_params);
                    promise.then(function(result) {
                        $scope.available_plan = result.data || 0
                    })
                }
            }
            , calculatePrice = function() {
                $scope.voucher ? ($scope.version_price = $scope.current_versions.period[$scope.form.period] - $scope.voucher.money,
                $scope.version_price < 0 && ($scope.version_price += $scope.voucher.money,
                    $scope.voucher = void 0,
                    $scope.$broadcast("project.voucher.cancel", $scope.voucher),
                    Flash.warn().send("代金券金额大于消费金额"))) : $scope.version_price = $scope.current_versions.period[$scope.form.period],
                    $scope.insufficient = $scope.balance < $scope.version_price
            }
            ;
        $scope.$watchCollection("form", function() {
            calculatePrice()
        }),
            $scope.$watch("balance", function() {
                calculatePrice()
            });
        var requirePassword = angular.noop;
        $scope.renewalNow = function() {
            $scope.insufficient ? charge_modal.toggle() : (password_modal.toggle(),
                    $scope.$broadcast("required.password.show"),
                    requirePassword = function(password) {
                        var data = ProjectVersions.humanToData($scope.form);
                        $scope.voucher && (data = $.extend(data, {
                            voucherCode: $scope.voucher.code
                        })),
                            data = $.extend(data, {
                                password: password
                            });
                        var promise = Payment.renew(project_params, data);
                        promise.then(function() {
                            password_modal.action("hide"),
                                Flash.success().send("续费成功"),
                                $scope.$emit("upgrade.project.success")
                        })
                    }
            )
        }
            ,
            $scope.$on("project.voucher.change", function(event, voucher) {
                $scope.voucher = voucher,
                    calculatePrice()
            }),
            $scope.$on("set.required.password", function(event, password) {
                requirePassword(password),
                    event.preventDefault()
            }),
            loadManuallyUpgradeAvaliablePlan(),
            calculatePrice()
    }
    ]),
    angular.module("app").controller("ProjectUpgradeChargeModalCtrl", ["$scope", "ModalService", "Payment", "Flash", "$window", "location", "Common", function($scope, ModalService, Payment, Flash, $window, location, Common) {
        $scope.id = Common.uuid();
        var pay_success = !1
            , modal = $scope.upgrade_charge_modal = ModalService.instance("project-upgrade-charge-modal")
            , charge_tips_modal = $scope.top_up_modal = ModalService.instance("account-top-up-modal", {
            closable: !1,
            onShow: function() {
                modal.action("hide")
            }
        });
        $scope.$emit("set.project.upgrade.modal", modal),
            $scope.form = {
                platform: "alipay",
                price: ""
            };
        var calculatePrice = function() {
                $scope.form.price = $scope.insufficient ? $scope.version_price - $scope.balance : ""
            }
            ;
        $scope.$watchCollection(function() {
            return [$scope.version_price, $scope.balance, $scope.insufficient]
        }, function(price) {
            angular.isDefined(price) && calculatePrice()
        }),
            $scope.charge = function($event, form) {
                return isNaN(form.price) ? (Flash.fail().send("充值金额有误!"),
                    $event.preventDefault(),
                    !1) : +form.price < .01 ? (Flash.fail().send("充值金额最少为 0.01 元"),
                    $event.preventDefault(),
                    !1) : +form.price > 1e5 ? (Flash.fail().send("充值金额最大限额为 10 万元"),
                    $event.preventDefault(),
                    !1) : (charge_tips_modal.action("show"),
                    !0)
            }
            ,
            $scope.closeChargeModal = function() {
                modal.action("hide")
            }
            ,
            $scope.payError = function() {
                pay_success = !1,
                    charge_tips_modal.action("hide"),
                    location.path("/user/account/payment-history/top-up")
            }
            ,
            $scope.paySuccess = function() {
                pay_success = !0,
                    $scope.$emit("project.charge.success"),
                    charge_tips_modal.action("hide"),
                    location.path("/user/account/payment-history/top-up")
            }
            ,
            $scope.$on("$destroy", function() {
                $scope.top_up_modal.remove(),
                    $scope.upgrade_charge_modal.remove()
            })
    }
    ]),
    angular.module("app").controller("ProjectUpgradeProModalCtrl", ["$scope", "ModalService", "ProjectVersions", "Payment", "Common", "Flash", function($scope, ModalService, ProjectVersions, Payment, Common, Flash) {
        $scope.id = Common.uuid();
        var project_params = {
            username: $scope.PROJECT.owner_user_name,
            project_name: $scope.PROJECT.name
        }
            , modal = $scope.upgrade_pro_modal = ModalService.instance("project-upgrade-pro-modal", {
            duration: 200
        })
            , password_modal = $scope.password_required_modal = ModalService.instance("password-required-modal", {
            duration: 200
        });
        $scope.password_words = "升级项目为高级版";
        var charge_modal = null ;
        $scope.form = {
            period: "month",
            renewal: !0,
            version: "pro"
        },
            $scope.pro_version = ProjectVersions.pro,
            $scope.upgrade_period = ProjectVersions.pro.period,
            $scope.version_description = ProjectVersions.pro.description.join(" / "),
            $scope.insufficient = !1,
            $scope.coupon_popup_opt = {
                className: {
                    popup: "coding help-popup coupon-popup"
                },
                position: "bottom right",
                transition: "slide down",
                closable: !0,
                maxSearchDepth: 100,
                on: "hover"
            },
            $scope.$emit("set.upgrade.pro.modal", modal),
            $scope.$on("set.project.upgrade.modal", function(evnet, m) {
                charge_modal = m,
                    event.preventDefault()
            }),
            $scope.$on("project.charge.success", function() {
                modal.action("show")
            });
        var calculateInsufficient = function() {
                $scope.upgrade_prices && ($scope.voucher ? ($scope.version_price = $scope.upgrade_prices[$scope.form.period] - $scope.voucher.money,
                $scope.version_price < 0 && ($scope.version_price += $scope.voucher.money,
                    $scope.voucher = void 0,
                    $scope.$broadcast("project.voucher.cancel", $scope.voucher),
                    Flash.warn().send("代金券金额大于消费金额"))) : $scope.version_price = $scope.upgrade_prices[$scope.form.period],
                    $scope.insufficient = $scope.balance < $scope.version_price)
            }
            ;
        $scope.$watchCollection("form", function() {
            calculateInsufficient()
        }),
            $scope.$watch("balance", function() {
                calculateInsufficient()
            }),
            $scope.$watch("upgrade_prices", function(prices) {
                angular.isDefined(prices) && (resetDefaultCheckedPlan(prices),
                    calculateInsufficient())
            }),
            $scope.voucher = void 0,
            $scope.$on("project.voucher.change", function(event, voucher) {
                $scope.voucher = voucher,
                    calculateInsufficient()
            });
        var requirePassword = angular.noop;
        $scope.upgrade = function() {
            if ($scope.insufficient)
                charge_modal.toggle();
            else {
                password_modal.toggle(),
                    $scope.$broadcast("required.password.show");
                var current_version = ProjectVersions[$scope.form.version];
                requirePassword = function(password) {
                    var data = ProjectVersions.humanToData($scope.form);
                    $scope.voucher && (data = $.extend(data, {
                        voucherCode: $scope.voucher.code
                    })),
                        data = $.extend(data, {
                            two_factor_code: password
                        });
                    var promise = Payment.upgradePro(project_params, data);
                    promise.then(function() {
                        password_modal.action("hide"),
                            Flash.success().send("升级 " + current_version.name + " 成功！"),
                            $scope.$emit("upgrade.project.success", data.plan)
                    })
                }
            }
        }
            ,
            $scope.$on("set.required.password", function(event, password) {
                requirePassword(password),
                    event.preventDefault()
            });
        var resetDefaultCheckedPlan = function(prices) {
            var p = null ;
            angular.forEach(prices, function(v, k) {
                +v > 0 && null  === p && (p = k)
            }),
                $scope.form.period = p
        }
    }
    ]).service("PaymentUpgradeService", function() {
        var dataToHuman = function(prices) {
                return {
                    month: prices.upgrade[1],
                    half_year: prices.upgrade[6],
                    full_year: prices.upgrade[12],
                    remain: prices.remain.price >= 0 ? prices.remain.price : -1
                }
            }
            ;
        return {
            dataToHuman: dataToHuman
        }
    }),
    angular.module("app").controller("ProjectUpgradeFormController", ["$scope", "$route", "ProjectVersions", "Payment", "Flash", "ModalService", "$location", "ProjectSummaryService", "Setting", function($scope, $route, ProjectVersions, Payment, Flash, ModalService, $location, ProjectSummaryService, Setting) {
        var summary_url = $scope.PROJECT.project_path + "/setting/summary";
        if (1 !== $scope.PROJECT.plan)
            return $location.path(summary_url),
                !1;
        var loadBalance = function() {
            Payment.balance(function(result) {
                $scope.balance = +result.data || 0
            })
        }
            , modal = null
            , password_modal = $scope.password_required_modal = ModalService.instance("password-required-modal");
        $scope.password_words = "升级项目",
            $scope.$on("set.project.upgrade.modal", function(event, m) {
                modal = m,
                    event.preventDefault()
            }),
            $scope.form = {
                version: "dev",
                period: "month",
                renewal: !0
            },
            $scope.project_versions = ProjectVersions,
            $scope.upgrade_version_desc = {
                dev: ProjectVersions.dev.description.join("<br/>"),
                pro: ProjectVersions.pro.description.join("<br/>")
            },
            $scope.upgrade_periods = {
                dev: ProjectVersions.dev.period,
                pro: ProjectVersions.pro.period
            },
            $scope.voucher = void 0;
        var calculatePrice = function(form) {
                if (angular.isDefined(form)) {
                    var current_version = ProjectVersions[form.version];
                    $scope.voucher ? ($scope.version_price = current_version.period[form.period] - $scope.voucher.money,
                    $scope.version_price < 0 && ($scope.version_price += $scope.voucher.money,
                        $scope.voucher = void 0,
                        $scope.$broadcast("project.voucher.cancel", $scope.voucher),
                        Flash.warn().send("代金券金额大于消费金额"))) : $scope.version_price = current_version.period[form.period],
                        $scope.insufficient = $scope.balance < $scope.version_price
                }
            }
            ;
        $scope.$watchCollection("form", calculatePrice),
            $scope.$watch("balance", function(balance) {
                angular.isDefined(balance) && calculatePrice($scope.form)
            }),
            $scope.$on("project.voucher.change", function(event, voucher) {
                $scope.voucher = voucher,
                    calculatePrice($scope.form)
            });
        var requirePassword = angular.noop;
        $scope.upgrade = function(form) {
            var current_version = ProjectVersions[form.version];
            $scope.insufficient ? modal.toggle() : (password_modal.toggle(),
                    $scope.$broadcast("required.password.show"),
                    requirePassword = function(password) {
                        var data = $.extend({
                            two_factor_code: password
                        }, ProjectVersions.humanToData(form));
                        $scope.voucher && (data = $.extend(data, {
                            voucherCode: $scope.voucher.code
                        }));
                        var promise = Payment.upgrade({
                            username: $scope.PROJECT.owner_user_name,
                            project_name: $scope.PROJECT.name
                        }, data);
                        promise.then(function() {
                            password_modal.action("hide"),
                                Flash.success().send("升级 " + current_version.name + " 成功！"),
                                ProjectSummaryService.upgrade($scope, data.plan),
                                $location.path(summary_url)
                        }),
                            promise["catch"](function(err, result) {
                                result && result.code > 0 && result.msg.password && password_modal.action("show")
                            })
                    }
            )
        }
            ,
            $scope.$on("set.required.password", function(event, password) {
                event.currentScope && event.targetScope && event.currentScope.$id !== event.targetScope.$id && (requirePassword(password),
                    event.preventDefault())
            }),
            $scope.$on("project.charge.success", function() {
                $route.reload()
            }),
            loadBalance()
    }
    ]),
    angular.module("app").controller("VoucherController", ["$scope", "$route", "Flash", "$location", "Voucher", "Setting", function($scope, $route, Flash, $location, Voucher, Setting) {
        $scope.showVoucher = !1,
            $scope.loadingVoucher = !1,
            $scope.voucherCode = "",
            $scope.captchaCode = "",
            Voucher.captcha(function(result) {
                $scope.showCaptcha = result.data
            }),
            $scope.refreshCaptcha = function() {
                return $scope.captcha = Setting.api_host + "/api/getCaptcha?code=" + Math.random()
            }
            ,
            $scope.refreshCaptcha();
        var unuseVoucher = function() {
                $scope.showVoucher = !1,
                    $scope.voucher = void 0,
                    $scope.voucherCode = "",
                    $scope.$emit("project.voucher.change", angular.copy($scope.voucher))
            }
            ;
        $scope.showHideVoucher = function() {
            $scope.showVoucher = !$scope.showVoucher
        }
            ,
            $scope.submitVoucher = function(code, j_captcha, event) {
                $scope.loadingVoucher = !0,
                    $scope.captchaCode = "",
                    $scope.refreshCaptcha();
                var vPromise = Voucher.check({
                    code: code,
                    j_captcha: j_captcha
                });
                return vPromise.then(function(result) {
                    $scope.voucher = result.data,
                        $scope.$emit("project.voucher.change", angular.copy($scope.voucher))
                }),
                    vPromise["catch"](function(error, result) {
                        903 == result.code && ($scope.showCaptcha = !0)
                    }),
                    vPromise["finally"](function() {
                        $scope.loadingVoucher = !1
                    }),
                    event ? (event.preventDefault(),
                        !1) : void 0
            }
            ,
            $scope.unuseVoucher = function() {
                unuseVoucher()
            }
            ,
            $scope.$on("project.voucher.cancel", function(event, voucher) {
                voucher || ($scope.showVoucher = !0,
                    $scope.voucher = void 0)
            })
    }
    ]),
    angular.module("app").controller("ProjectSupportCtrl", ["$scope", "Payment", "Flash", "$location", function($scope, Payment, Flash, $location) {
        var project_params = {
            username: $scope.PROJECT.owner_user_name,
            project_name: $scope.PROJECT.name
        };
        $scope.ticket = {
            title: "",
            type: 0,
            content: ""
        },
            $scope.type_ticket_field = {},
            $scope.types = [],
            $scope.types_map = {},
            $scope.creating = !1,
            $scope.updateContent = function(content) {
                $scope.ticket.content = content
            }
            ,
            $scope.onTypeChange = function(scope, type) {
                $scope.ticket.type = type
            }
        ;
        var loadTypes = function() {
                var promise = Payment.ticket_fields(project_params);
                promise.then(function(result) {
                    if (result.data && result.data.ticket_fields && angular.isArray(result.data.ticket_fields)) {
                        $scope.type_ticket_field = result.data.ticket_fields[0];
                        var types = $scope.type_ticket_field.custom_field_options;
                        angular.forEach(types, function(type, index) {
                            $scope.types_map[index + 1] = types[index].value,
                                types[index].value = index + 1
                        }),
                            $scope.types = types
                    }
                })
            }
            ;
        $scope.submit = function() {
            var data = {
                request: {
                    title: $scope.ticket.title,
                    comment: {
                        content: $scope.ticket.content
                    },
                    custom_fields: [{
                        name: $scope.type_ticket_field.name,
                        value: $scope.types_map[$scope.ticket.type]
                    }]
                }
            };
            if (!$scope.ticket.type)
                return Flash.fail().send("请选择问题类型"),
                    !1;
            if (0 === $scope.ticket.title.length)
                return Flash.fail().send("工单标题不能为空"),
                    !1;
            if (0 === $scope.ticket.content.length)
                return Flash.fail().send("工单内容不能为空"),
                    !1;
            $scope.creating = !0;
            var promise = Payment.ticket(project_params, {
                data: JSON.stringify(data)
            });
            promise.then(function() {
                Flash.success().fail("工单创建成功，我们会及时跟进。");
                var url = $scope.PROJECT.project_path + "/setting/support";
                $location.path(url)
            }),
                promise["finally"](function() {
                    $scope.creating = !1
                })
        }
            ,
            loadTypes()
    }
    ]),
    angular.module("app").controller("CustomerTicketsCtrl", ["$scope", "Payment", "CustomerTicketService", "Pager", function($scope, Payment, CustomerTicketService, Pager) {
        var project_params = {
            username: $scope.PROJECT.owner_user_name,
            project_name: $scope.PROJECT.name
        }
            , all_tickets = []
            , page_size = 10;
        $scope.tickets = [],
            $scope.total_count = 0,
            $scope.loading = !1,
            $scope.loaded = !1,
            $scope.ticket_status = CustomerTicketService.ticket_status;
        var pager_id = $scope.ticket_pager_id = "project-ticket-id"
            , pager = Pager.instance(pager_id, $scope);
        pager.onChange(function(page) {
            sliceTickets(page),
                pager.optionsReady(buildPager($scope.total_count, page))
        });
        var buildPager = function(count, page) {
                var a_pager = {
                    page: page || 1,
                    pageSize: page_size,
                    totalPage: 0 === count ? 0 : Math.round(count / page_size) || 1,
                    totalRow: count
                };
                return a_pager
            }
            , sliceTickets = function(page) {
                var from = (page - 1) * page_size
                    , to = from + page_size;
                $scope.tickets = all_tickets.slice(from, to)
            }
            , loadTickets = function(page) {
                $scope.loading = !0,
                    $scope.loaded = !1,
                    page = page || 1;
                var promise = Payment.tickets(project_params, {});
                promise.then(function(result) {
                    result.data && (all_tickets = result.data || [],
                        sliceTickets(page),
                        $scope.total_count = result.data.length || 0,
                        pager.optionsReady(buildPager($scope.total_count, page)))
                }),
                    promise["finally"](function() {
                        $scope.loading = !1,
                            $scope.loaded = !0
                    })
            }
            ;
        loadTickets(pager.currentPage())
    }
    ]).service("CustomerTicketService", function() {
        return {
            ticket_status: {
                "new": "尚未受理",
                open: "受理中",
                pending: "等待回复",
                solved: "已解决",
                closed: "已关闭"
            }
        }
    }),
    angular.module("app").controller("ProjectSupportTicketCtrl", ["$scope", "$routeParams", "$location", "Payment", "Common", "CustomerTicketService", function($scope, $routeParams, $location, Payment, Common, CustomerTicketService) {
        if ($scope.ticket_id = $routeParams.id || 0,
                $scope.detail_loading = !1,
                $scope.comment_loading = !1,
                $scope.ticket = void 0,
                $scope.comments = void 0,
                $scope.comments_loaded = !1,
                $scope.comments_loading = !1,
                $scope.ticket_comment = "",
                $scope.ticket_status = CustomerTicketService.ticket_status,
                isNaN($scope.ticket_id)) {
            var url = $scope.PROJECT.project_path + "/setting/support";
            return void $location.path(url)
        }
        var project_params = {
            username: $scope.PROJECT.owner_user_name,
            project_name: $scope.PROJECT.name
        }
            , loadTicket = function(id) {
            $scope.detail_loading = !0;
            var params = $.extend({}, {
                id: id
            }, project_params)
                , promise = Payment.get_ticket(params, {});
            return promise.then(function(result) {
                if (result.data) {
                    var ticket = result.data.request;
                    $scope.ticket = ticket,
                        $scope.ticket.bak_desc = $scope.ticket.description,
                        $scope.ticket.description = void 0,
                        $scope.owner = $scope.USER
                }
            }),
                promise["finally"](function() {
                    $scope.detail_loading = !1
                }),
                promise
        }
            , injectAuthor = function(comments) {
            var ids = $.map(comments, function(comment) {
                return comment.author_id
            }).join(",")
                , params = $.extend({}, {
                ids: ids
            }, project_params)
                , promise = Payment.users(params, {});
            promise.then(function(result) {
                if (result.data) {
                    var users = result.data.users;
                    angular.forEach(comments, function(comment) {
                        var user = Common.findOfId(users, comment.author_id, "id");
                        comment.author = user,
                        0 === user.photo.length && (comment.author.photo = $scope.USER.avatar)
                    })
                }
            })
        }
            , loadComments = function(id, ticket_promise) {
            $scope.comments_loaded = !1,
                $scope.comments_loading = !0;
            var params = $.extend({}, {
                id: id
            }, project_params)
                , promise = Payment.ticket_comments(params, {});
            promise.then(function(result) {
                result.data && (ticket_promise.then(function() {
                    $scope.ticket.child_count = result.data.count > 0 ? result.data.count - 1 : 0
                }),
                    $scope.comments = result.data.comments || [],
                    ticket_promise.then(function() {
                        $scope.comments.length > 0 ? ($scope.ticket.description = $scope.comments[0].html_content,
                            $scope.comments.splice(0, 1)) : $scope.ticket.description = $scope.ticket.bak_desc
                    }),
                    injectAuthor($scope.comments))
            }),
                promise["finally"](function() {
                    $scope.comments_loaded = !0,
                        $scope.comments_loading = !1
                })
        }
            , ticket_promise = loadTicket($scope.ticket_id);
        loadComments($scope.ticket_id, ticket_promise),
            $scope.commentTicket = function(content) {
                var data = {
                    request: {
                        comment: {
                            content: content
                        }
                    }
                }
                    , params = $.extend({}, {
                    id: $scope.ticket_id
                }, project_params)
                    , promise = Payment.ticket_comment(params, {
                    data: JSON.stringify(data)
                });
                return promise.then(function() {
                    loadComments($scope.ticket_id, ticket_promise)
                }),
                    promise
            }
            ,
            $scope.refreshComments = function() {
                $scope.comments = [],
                    loadComments($scope.ticket_id, ticket_promise)
            }
    }
    ]),
    angular.module("app").controller("ProjectWebHookEditController", ["$scope", "Flash", "Project", "Depot", "$routeParams", "$location", function($scope, Flash, Project, Depot, $routeParams, $location) {
        $scope.tag_menu = "setting",
            $scope.inner_menu = "hook",
            $scope.submit_loading = !1;
        var TYPE_PUSH = 1
            , TYPE_MR_PR = 2
            , TYPE_TOPIC = 4
            , TYPE_MEMBER = 8
            , TYPE_COMMENT = 16
            , TYPE_DOCUMENT = 32
            , TYPE_WATCH = 64
            , TYPE_STAR = 128
            , TYPE_TASK = 256;
        $scope.hook = {
            hook_url: "",
            token: "",
            type_push: !0,
            type_mr_pr: !0,
            type_topic: !1,
            type_member: !1,
            type_comment: !1,
            type_document: !1,
            type_watch: !1,
            type_star: !1,
            type_task: !1
        },
        $scope.is_project_admin || $location.path($scope.PROJECT.project_path),
            Depot.getWebHook({
                username: $routeParams.username,
                project_name: $scope.PROJECT.name,
                id: $routeParams.id
            }, function(result) {
                0 === result.code ? ($scope.hook.hook_url = result.data.hook_url,
                    $scope.hook.token = result.data.token,
                    $scope.hook.type_push = (result.data.send_type & TYPE_PUSH) == TYPE_PUSH,
                    $scope.hook.type_mr_pr = (result.data.send_type & TYPE_MR_PR) == TYPE_MR_PR,
                    $scope.hook.type_topic = (result.data.send_type & TYPE_TOPIC) == TYPE_TOPIC,
                    $scope.hook.type_member = (result.data.send_type & TYPE_MEMBER) == TYPE_MEMBER,
                    $scope.hook.type_comment = (result.data.send_type & TYPE_COMMENT) == TYPE_COMMENT,
                    $scope.hook.type_document = (result.data.send_type & TYPE_DOCUMENT) == TYPE_DOCUMENT,
                    $scope.hook.type_watch = (result.data.send_type & TYPE_WATCH) == TYPE_WATCH,
                    $scope.hook.type_star = (result.data.send_type & TYPE_STAR) == TYPE_STAR,
                    $scope.hook.type_task = (result.data.send_type & TYPE_TASK) == TYPE_TASK) : (Flash.fail().send("读取失败"),
                    $location.path($scope.PROJECT.project_path + "/setting/webhook"))
            }),
            $scope.submit = function(hook) {
                $scope.submit_loading = !0,
                    Depot.editWebHook({
                        username: $routeParams.username,
                        project_name: $scope.PROJECT.name,
                        id: $routeParams.id
                    }, {
                        hook_url: hook.hook_url,
                        token: hook.token,
                        type_push: hook.type_push,
                        type_mr_pr: hook.type_mr_pr,
                        type_topic: hook.type_topic,
                        type_member: hook.type_member,
                        type_comment: hook.type_comment,
                        type_document: hook.type_document,
                        type_watch: hook.type_watch,
                        type_star: hook.type_star,
                        type_task: hook.type_task
                    }, function(result) {
                        Flash.success().send("修改 WebHook 成功"),
                            $scope.submit_loading = !1,
                            $location.path($scope.PROJECT.project_path + "/setting/webhook")
                    })["catch"](function(error, result) {
                        $scope.submit_loading = !1
                    })
            }
    }
    ]),
    angular.module("app").controller("ProjectWebHookIndexController", ["$scope", "Flash", "Project", "Depot", "$routeParams", "$route", function($scope, Flash, Project, Depot, $routeParams, $route) {
        $scope.tag_menu = "setting",
            $scope.inner_menu = "hook",
        $scope.is_project_admin || $location.path($scope.PROJECT.project_path),
            Depot.depot({
                username: $routeParams.username,
                project_name: $scope.PROJECT.name
            }, function(result) {
                result.data ? $scope.DEPOT = result.data.depot : $scope.DEPOT = !1
            }),
            Depot.webHooks({
                username: $routeParams.username,
                project_name: $scope.PROJECT.name
            }, function(result) {
                $scope.webHooks = result.data
            }),
            Depot.webHookLogs({
                username: $routeParams.username,
                project_name: $scope.PROJECT.name
            }, function(result) {
                $scope.webHookLogs = result.data
            }),
            $scope.deleteWebhook = function(id) {
                confirm("请确认删?") && Depot.deleteWebHook({
                    username: $routeParams.username,
                    project_name: $scope.PROJECT.name,
                    id: id
                }, function(result) {
                    Flash.success().send("删除成功"),
                        $route.reload()
                })
            }
            ,
            $scope.testWebhook = function(id) {
                Depot.testWebHook({
                    username: $routeParams.username,
                    project_name: $scope.PROJECT.name,
                    id: id
                }, {}, function(result) {
                    Flash.success().send("已发送，请稍后查收结果。"),
                        $route.reload()
                })
            }
    }
    ]),
    angular.module("app").controller("ProjectWebHookNewController", ["$scope", "Flash", "Project", "Depot", "$routeParams", "$location", function($scope, Flash, Project, Depot, $routeParams, $location) {
        $scope.tag_menu = "setting",
            $scope.inner_menu = "hook",
            $scope.submit_loading = !1,
            $scope.hook = {
                hook_url: "",
                token: "",
                type_push: !0,
                type_mr_pr: !0,
                type_topic: !1,
                type_member: !1,
                type_comment: !1,
                type_document: !1,
                type_watch: !1,
                type_star: !1,
                type_task: !1
            },
        $scope.is_project_admin || $location.path($scope.PROJECT.project_path),
            $scope.submit = function(hook) {
                return hook.hook_url ? hook.hook_url.length < 8 ? void Flash.fail().send("WebHook 地址太短") : hook.hook_url.length > 128 ? void Flash.fail().send("WebHook 地址太长") : hook.token.length > 128 ? void Flash.fail().send("WebHook token 太长") : ($scope.submit_loading = !0,
                    void Depot.createWebHook({
                        username: $routeParams.username,
                        project_name: $scope.PROJECT.name
                    }, {
                        hook_url: hook.hook_url,
                        token: hook.token,
                        type_push: hook.type_push,
                        type_mr_pr: hook.type_mr_pr,
                        type_topic: hook.type_topic,
                        type_member: hook.type_member,
                        type_comment: hook.type_comment,
                        type_document: hook.type_document,
                        type_watch: hook.type_watch,
                        type_star: hook.type_star,
                        type_task: hook.type_task
                    }, function(result) {
                        Flash.success().send("新建 WebHook 成功"),
                            $scope.submit_loading = !1,
                            $location.path($scope.PROJECT.project_path + "/setting/webhook")
                    })["catch"](function(error, result) {
                        $scope.submit_loading = !1
                    })) : void Flash.fail().send("WebHook 地址不能为空")
            }
    }
    ]);
var projectsControllers = angular.module("app");
projectsControllers.controller("PublicProjectsIndexController", ["$scope", "$routeParams", "$location", "PublicProjects", function($scope, $routeParams, $location, PublicProjects) {
    var promise = PublicProjects.public_projects({
        page: 1,
        pageSize: 20
    });
    $scope.loading = !0,
        $scope.projects = [],
        promise.$promise.then(function(result) {
            0 == result.code && ($scope.projects = result.data.list),
                $scope.loading = !1
        }),
        $scope.page = 1,
        $scope.pageSize = 20,
        $scope.over = !1,
        $scope.loadMore = function() {
            $scope.page++,
                $scope.loading = !0,
                PublicProjects.public_projects({
                    page: $scope.page,
                    pageSize: $scope.pageSize
                }, function(result) {
                    0 == result.code && result.data.list.length > 0 ? $scope.projects = $scope.projects.concat(result.data.list) : $scope.over = !0,
                        $scope.loading = !1,
                        $scope.$digest()
                })
        }
}
]);
var qcControllers = angular.module("app");
qcControllers.controller("DuplicationsController", ["$scope", "$routeParams", "QcService", "$rootScope", function($scope, $routeParams, QcService, $rootScope) {
    var USER = $scope.USER;
    $rootScope.$watch("USER", function(user) {
        USER = user
    }),
    $scope.PROJECT.is_public && ($scope.tag_menu = "qc"),
        $scope.username = $routeParams.username,
        $scope.project_name = $routeParams.project_name,
        $scope.project_ref = $routeParams.region,
        $scope.inner_menu = "qc_duplications",
        $scope.loaded = !1,
        $scope.current_type = $routeParams.type || "duplicated_lines",
        $scope.current_rule = $routeParams.rule || "",
        $scope.current_file = $routeParams.file || "",
        $scope.current_folder = $routeParams.folder || "",
        $scope.current_lang = "",
        $scope.code_full = !1;
    var taskPromise = QcService.getTask({
        username: $scope.username,
        project_name: $scope.project_name,
        ref: $scope.project_ref
    });
    $scope.loading = !0,
        taskPromise.then(function(result) {
            result.data && ($scope.task = result && result.data,
                $scope.resource_key = $scope.username + "-" + $scope.project_name + "-" + $scope.task.task.ref,
                $scope.project_ref = $scope.task.task.ref),
                $scope.loading = !1
        }),
        taskPromise["catch"](function(error) {
            $scope.loading = !1
        })
}
]);
var qcControllers = angular.module("app");
qcControllers.controller("QcInitController", ["$scope", "$location", "$routeParams", "QcService", "Errors", "Flash", "$rootScope", "$timeout", function($scope, $location, $routeParams, QcService, Errors, Flash, $rootScope, $timeout) {
    var USER = ($scope.PROJECT,
        $scope.USER);
    $rootScope.$watch("USER", function(user) {
        USER = user
    }),
        $scope.username = $routeParams.username,
        $scope.project_name = $routeParams.project_name,
    $scope.PROJECT.is_public && ($scope.tag_menu = "qc"),
        $scope.sourceEncoding = "UTF-8",
        $scope.submitAnalysisTask = function() {
            return $scope.errorMsg = null ,
                $scope.isPosting = !0,
                !$scope.sourceEncoding || $scope.sourceEncoding.length <= 0 ? ($scope.errorMsg = "请输入项目编码",
                    void ($scope.isPosting = !1)) : !$scope.language || $scope.language.length <= 0 ? ($scope.errorMsg = "请选择项目分析语言",
                    void ($scope.isPosting = !1)) : ((!$scope.projectVersion || $scope.projectVersion.length <= 0) && ($scope.projectVersion = $scope.DEPOT.default_branch),
                    void QcService.createTask({
                        username: $scope.username,
                        project_name: $scope.project_name,
                        projectVersion: $scope.projectVersion,
                        sources: $scope.sources,
                        sourceEncoding: $scope.sourceEncoding,
                        language: $scope.language
                    }, function(result) {
                        Flash.success().send("任务已经提交、请耐心等候"),
                            $timeout(function() {
                                $location.path("/u/" + $scope.username + "/p/" + $scope.project_name + "/qc")
                            }, 2e3),
                            $scope.isPosting = !1
                    }))
        }
        ,
        $scope.changeLanguage = function(event, value) {
            $scope.language = value
        }
}
]);
var qcControllers = angular.module("app");
qcControllers.controller("IssuesController", ["$scope", "$routeParams", "$location", "$rootScope", "QcService", function($scope, $routeParams, $location, $rootScope, QcService) {
    var USER = $scope.USER;
    $rootScope.$watch("USER", function(user) {
        USER = user
    }),
        $scope.username = $routeParams.username,
        $scope.project_name = $routeParams.project_name,
        $scope.project_ref = $routeParams.region,
    $scope.PROJECT.is_public && ($scope.tag_menu = "qc"),
        $scope.current_file = "",
        $scope.spec_code = !1,
        $scope.issues_loading = !0,
        $scope.loaded = !1,
        $scope.current_type = $routeParams.type || "violations",
        $scope.current_rule = $routeParams.rule || "",
        $scope.current_file = $routeParams.file || "",
        $scope.current_folder = $routeParams.folder || "",
        $scope.current_lang = "",
        $scope.filename = null ,
        $scope.inner_menu = "qc_issues",
        $scope.code_full = !1;
    var taskPromise = QcService.getTask({
        username: $scope.username,
        project_name: $scope.project_name,
        ref: $scope.project_ref
    });
    $scope.loading = !0,
        $scope.resource_key = "",
        taskPromise.then(function(result) {
            result.data && ($scope.task = result && result.data,
                $scope.resource_key = $scope.username + "-" + $scope.project_name + "-" + $scope.task.task.ref,
                $scope.project_ref = $scope.task.task.ref),
                $scope.loading = !1
        }),
        taskPromise["catch"](function(error) {
            $scope.loading = !1
        })
}
]);
var qcControllers = angular.module("app");
qcControllers.controller("ReportController", ["$scope", "$location", "$routeParams", "QcService", "$rootScope", function($scope, $location, $routeParams, QcService, $rootScope) {
    var USER = $scope.USER;
    $rootScope.$watch("USER", function(user) {
        USER = user
    }),
    $scope.PROJECT.is_public && ($scope.tag_menu = "qc"),
        $scope.inner_menu = "qc_dashboard",
        $scope.username = $routeParams.username,
        $scope.project_name = $routeParams.project_name,
        $scope.project_ref = $routeParams.region,
        $scope.help = QcService.helps;
    var taskPromise = QcService.getTask({
        username: $scope.username,
        project_name: $scope.project_name,
        ref: $scope.project_ref
    });
    $scope.dashboard = {},
        $scope.loading = !0,
        taskPromise.then(function(result) {
            result.data && ($scope.task = result && result.data,
                $scope.resource_key = $scope.username + "-" + $scope.project_name + "-" + $scope.task.task.ref,
                $scope.project_ref = $scope.task.task.ref,
                QcService.dashboard({
                    username: $scope.username,
                    project_name: $scope.project_name,
                    resourceKey: $scope.resource_key
                }, function(data) {
                    $scope.dashboard = data,
                        $scope.loading = !1
                })),
                $scope.loading = !1
        }),
        taskPromise["catch"](function(error) {
            $scope.loading = !1
        })
}
]),
    angular.module("app").controller("SearchController", ["$scope", "Search", "location", "Project", "SearchDropdownService", "USER", function($scope, Search, $location, Project, SearchDropdownService, USER) {
        $scope.projects = [],
            $scope.project_topics = [],
            $scope.tasks = [],
            $scope.tweets = [],
            $scope.friends = [],
            $scope.keyword = "",
            $scope.tab = "project",
            $scope.simple_key_word = "",
            $scope.loading = !1,
            $scope.allPageLoading = !0,
            $scope.search_project = null ,
            $scope.keyword = $location.search().q,
            $scope.key = $scope.keyword,
            $scope.username = $location.search().user,
            $scope.project_name = $location.search().project,
            $scope.type = $location.search().type;
        var loadSearchProject = function(user, project) {
                var promise = Project.queryByName({
                    username: user,
                    project_name: project
                });
                promise.then(function(result) {
                    $scope.search_project = result.data
                })
            }
            ;
        $scope.username && $scope.project_name && loadSearchProject($scope.username, $scope.project_name),
        $scope.type && ($scope.tab = $scope.type),
            $scope.$watch("USER", function(user) {
                user === !1 && "project" !== $scope.tab && "tweet" !== $scope.tab && ($scope.tab = "project"),
                user && $scope.username && $scope.project_name && -1 === SearchDropdownService.SUPPORT_PROJECT_MORE_SEARCH_TYPES.indexOf($scope.tab) && ($scope.tab = SearchDropdownService.SUPPORT_PROJECT_MORE_SEARCH_TYPES[0])
            });
        var quickSearch = function() {
                if ($scope.projects = [],
                        $scope.project_topics = [],
                        $scope.tasks = [],
                        $scope.tweets = [],
                        $scope.friends = [],
                    0 == $scope.keyword.length)
                    return void ($scope.key = $scope.keyword);
                $scope.allPageLoading = !0;
                var callback = function(result) {
                        $scope.key = $scope.keyword,
                            $scope.projects = result.data.projects,
                            $scope.project_topics = result.data.project_topics,
                            $scope.tasks = result.data.tasks,
                            $scope.tweets = result.data.tweets,
                            $scope.friends = result.data.friends,
                            $scope.allPageLoading = !1,
                            changeTab($scope.tab)
                    }
                    ;
                $scope.username && $scope.project_name ? Search.ofProject({
                    username: $scope.username,
                    project_name: $scope.project_name,
                    q: $scope.keyword
                }, callback) : Search.quick({
                    q: $scope.keyword
                }, callback)
            }
            ;
        $scope.keyword && "" != $scope.keyword ? quickSearch() : $scope.allPageLoading = !1;
        var changeTab = $scope.changeTab = function(key) {
                switch ($scope.tab = key,
                    $scope.tab) {
                    case "project":
                        $scope.simple_key_word = $scope.projects && $scope.projects.simpKeyword || "";
                        break;
                    case "topic":
                        $scope.simple_key_word = $scope.project_topics && $scope.project_topics.simpKeyword || "";
                        break;
                    case "task":
                        $scope.simple_key_word = $scope.tasks && $scope.tasks.simpKeyword || "";
                        break;
                    case "tweet":
                        $scope.simple_key_word = $scope.tweets && $scope.tweets.simpKeyword || "";
                        break;
                    case "friend":
                        $scope.simple_key_word = $scope.friends && $scope.friends.simpKeyword || ""
                }
                $location.skipReload().search("type", key).replace()
            }
            ;
        $scope.gotoSearch = function(keyword) {
            $location.skipReload().path("/search"),
                $location.search("q", keyword),
                $scope.keyword = keyword,
                quickSearch()
        }
            ,
            $scope.hasMore = function(items) {
                return items ? items.page < items.totalPage : !1
            }
            ,
            $scope.loadMoreProjects = function() {
                $scope.projects.page++,
                    $scope.loading = !0,
                    Search.moreProjects({
                        page: $scope.projects.page,
                        q: $scope.key
                    }, function(result) {
                        $scope.projects.list = $scope.projects.list.concat(result.data.list),
                            $scope.loading = !1
                    })
            }
            ,
            $scope.loadMoreProjectTopics = function() {
                $scope.project_topics.page++,
                    $scope.loading = !0,
                    Search.moreProjectTopics({
                        page: $scope.project_topics.page,
                        q: $scope.key
                    }, function(result) {
                        $scope.project_topics.list = $scope.project_topics.list.concat(result.data.list),
                            $scope.loading = !1
                    })
            }
            ,
            $scope.loadMoreTasks = function() {
                $scope.tasks.page++,
                    $scope.loading = !0,
                    Search.moreTasks({
                        page: $scope.tasks.page,
                        q: $scope.key
                    }, function(result) {
                        $scope.tasks.list = $scope.tasks.list.concat(result.data.list),
                            $scope.loading = !1
                    })
            }
            ,
            $scope.loadMoreTweets = function() {
                $scope.tweets.page++,
                    $scope.loading = !0,
                    Search.moreTweets({
                        page: $scope.tweets.page,
                        q: $scope.key
                    }, function(result) {
                        $scope.tweets.list = $scope.tweets.list.concat(result.data.list),
                            $scope.loading = !1
                    })
            }
            ,
            $scope.loadMoreFriends = function() {
                $scope.friends.page++,
                    $scope.loading = !0,
                    Search.moreFriends({
                        page: $scope.friends.page,
                        q: $scope.key
                    }, function(result) {
                        $scope.friends.list = $scope.friends.list.concat(result.data.list),
                            $scope.loading = !1
                    })
            }
    }
    ]),
    angular.module("app").controller("ShareController", ["$routeParams", "$scope", "Share", "Common", "$sce", function($routeParams, $scope, Share, Common, $sce) {
        function getFileType(file) {
            var type = file && file.fileType;
            if (type) {
                if (/^md$/i.test(type))
                    return "md";
                if (/^txt$/i.test(type))
                    return "txt";
                if (/^(gif|png|jpeg|jpg|bmp)$/i.test(type))
                    return "image";
                if (/^pdf$/i.test(type))
                    return "pdf";
                if (OFFICE_REG.test(type))
                    return "office"
            }
            return "binary"
        }
        function renderMarkdown() {
            Share.markdown({
                hash: $routeParams.hash
            }).then(function(result) {
                $scope.markdown_preview = result.data || ""
            })
        }
        function previewOffice() {
            Share.download_url({
                hash: $routeParams.hash
            }, function(result) {
                if (0 === result.code) {
                    var src = "https://view.officeapps.live.com/op/view.aspx?src=" + encodeURIComponent(result.data.download_url);
                    $scope.office_src = $sce.trustAsResourceUrl(src)
                }
            })
        }
        var ATTACHMENT_TYPE = 0
            , TOPIC_TYPE = 1;
        $scope.loaded = !1,
            $scope.showError = !1,
            Share.get({
                hash: $routeParams.hash
            }, function(result) {
                if (0 !== result.code)
                    return void ($scope.showError = !0);
                switch (result.data.resource_type) {
                    case ATTACHMENT_TYPE:
                        $scope.resourceType = "attachment",
                            $scope.file = result.data.resource.file,
                            $scope.file_type = getFileType($scope.file),
                            $scope.content = result.data.resource.content,
                            $scope.downloadUrl = $sce.trustAsResourceUrl(result.data.resource.download_url),
                            "md" === $scope.file_type ? renderMarkdown() : "image" === $scope.file_type ? $scope.imageUrl = $sce.trustAsResourceUrl(result.data.resource.image_url) : "pdf" === $scope.file_type ? $scope.loadPdf() : "office" === $scope.file_type ? previewOffice() : "binary" === $scope.file_type && ($scope.typeIcon = result.data.resource.file.fileType);
                        break;
                    case TOPIC_TYPE:
                }
            }, angular.noop)["finally"](function() {
                $scope.loaded = !0
            }),
            $scope.markdown_preview = !1,
            $scope.screenfull_enabled = screenfull.enabled,
            $scope.pdf = !1,
            $scope.pdf_resize = "small",
            $scope.pdf_loading = !1,
            $scope.pdf_page = 1;
        var pdf_cache = [];
        $scope.togglePdfResize = function() {
            $scope.pdf_resize = "full" === $scope.pdf_resize ? "small" : "full";
            var target = $("#pdf-preview")[0];
            "full" === $scope.pdf_resize ? ($scope.pdf_fullscreen_height = "100%",
                screenfull.request(target)) : ($scope.pdf_fullscreen_height = "auto",
            screenfull.enabled && screenfull.toggle(target))
        }
            ,
            $scope.loadPdf = function(page) {
                if (!$scope.pdf_loading) {
                    $scope.pdf_page = page || 1;
                    var cur = pdf_cache[page];
                    if (cur)
                        return void ($scope.pdf = cur);
                    $scope.pdf_loading = !0,
                        Share.pdf({
                            hash: $routeParams.hash,
                            page: $scope.pdf_page
                        }, function(result) {
                            $scope.pdf = result.data,
                                pdf_cache[page] = angular.copy($scope.pdf)
                        }, angular.noop)["finally"](function() {
                            $scope.pdf_loading = !1
                        })
                }
            }
            ,
            $scope.office_src = !1;
        var OFFICE_REG = /^(doc|docx|dot|docm|dotm|dotx|ppt|pptx|ppsx|pps|pptm|potm|ppam|potx|ppsm|xls|xlsx|xlsb|xlsm)$/i
    }
    ]),
    angular.module("app").controller("TagSearchController", ["$scope", "$rootScope", "$routeParams", "User", "Tags", "Errors", "Pager", "$q", "Flash", "Common", "location", "USER", "$injector", function($scope, $rootScope, $routeParams, User, Tags, Errors, Pager, $q, Flash, Common, $location, USER, $injector) {
        var USER = USER.resolve($injector);
        $scope.TAG = $routeParams.tag || "C",
            $scope.TAGs = [],
            $scope.users = [],
            $scope.my_tags = [],
            $scope.user_loading = !1,
            $scope.following = !1,
            USER.then(function(user) {
                $scope.my_tags = user.tags_str.split(", ")
            });
        var loadUserByTag = $scope.loadUserByTag = function(tag) {
                $scope.user_loading = !0,
                    $scope.TAG = tag;
                var userPromise = User.search_by_tag({
                    tag: tag.replace(/\./gi, "<!>")
                }, function(result) {
                    $scope.users = result.data,
                        angular.forEach($scope.users, function(user) {
                            user.taggings = user.tags_str.split(", ")
                        });
                    var url = "/tags/search/" + tag;
                    $location.skipReload().path(url)
                });
                return userPromise["finally"](function() {
                    $scope.user_loading = !1
                }),
                    userPromise
            }
            ;
        $scope.follow = function(user) {
            USER["catch"](function() {
                confirm("需要登录后才能关注，是否立即登录？") && (location.href = "/login")
            }),
                USER.then(function() {
                    user.following || (user.following = !0),
                    $scope.following || ($scope.following = !0);
                    var promise = User.follow({
                        users: user.global_key
                    }, {}, function(result) {
                        0 == result.code ? (user.followed = !0,
                            Flash.success().send("关注成功")) : Errors.handle(result)
                    });
                    promise["finally"](function() {
                        user.following = !1,
                            $scope.following = !1
                    })
                })
        }
        ;
        var utPromise = Tags.user_tag_list()
            , userReady = utPromise.then(function(result) {
            return $scope.TAGs = result.data,
                USER
        });
        userReady.then(function() {
            angular.forEach($scope.my_tags, function(tag) {
                var t = Common.findOfId($scope.TAGs, tag, "name");
                t && (t.my = !0)
            })
        }),
            loadUserByTag($scope.TAG)
    }
    ]),
    angular.module("app").controller("TaskDetailController", ["$scope", "$rootScope", "TaskDetailService", "TaskListService", "$timeout", "TaskItemService", "Task", "location", "Flash", "Activity", "Common", "$routeParams", "PageTitle", function($scope, $rootScope, TaskDetailService, TaskListService, $timeout, TaskItemService, Task, $location, Flash, Activity, Common, $routeParams, PageTitle) {
        $scope.task = null ,
            $scope.activities = [],
            $scope.loading = !1,
            $scope.loading_activity = !1,
            $scope.loading_watchers = !1,
            $scope.members = [],
            $scope.watchers = [],
            $scope.just_show_comment = !!$routeParams.show_comment || !!$location.path().match(/\S.*\/comment/) || !1,
            $scope.edit_desc = $routeParams.edit_desc || !1;
        var removeWatchers = []
            , loadTaskDetail = function(task_id) {
            $scope.loading = !0;
            var params = TaskItemService.projectParams($rootScope.PROJECT);
            params = angular.extend(params, {
                id: task_id
            });
            var qPromise = Task.query(params);
            qPromise.then(function(result) {
                $scope.task = result.data,
                    $scope.task.content = Common.revertHtml($scope.task.content),
                    $scope.task.add_description = $scope.edit_desc,
                    $timeout(function() {
                        $rootScope.$broadcast("project.task.description.editor.focus")
                    }),
                $scope.edit_desc && $location.skipReload().search("edit_desc", void 0).replace(),
                    setTaskDetailTitle($scope.task)
            }),
                qPromise["catch"](function(error, result) {
                    if (result && 1600 === result.code) {
                        var url = ["/u/", params.username, "/p/", params.project_name, "/tasks"].join("");
                        $location.path(url).replace()
                    }
                }),
                qPromise["finally"](function() {
                    $scope.loading = !1
                }),
                loadTaskWatchers(task_id),
                loadActivities(task_id)
        }
            , setMembers = function(members) {
            $scope.members = members
        }
            , setTaskDetailTitle = function(task) {
            var title = "任务 - " + Common.ellipsisString($scope.task.content, 20) + " - Coding.net";
            PageTitle.set(title)
        }
            , loadActivities = function(task_id, last_id) {
            $scope.loading_activity = !0;
            var atPromise = Activity.task({
                id: task_id,
                last_id: last_id || 9999999
            });
            atPromise.then(function(result) {
                var activities = Common.removeNullItem(result.data || [], "id");
                $scope.activities = Common.squashActivity(activities, 6e4)
            }),
                atPromise["finally"](function() {
                    $scope.loading_activity = !1
                })
        }
            , signals = ["update.status", "update.owner", "update.priority", "update.content", "update.deadline", "update.description", "tag.remove", "tag.add", "watcher.add", "watcher.remove"];
        angular.forEach(signals, function(signal) {
            var removeWatcher = TaskItemService.onProjectTaskSignal(signal, function($event, task) {
                loadActivities(task.id)
            });
            removeWatchers.push(removeWatcher)
        }),
            removeWatchers.push(TaskItemService.onProjectTaskSignal("remove", function() {
                var url = [$rootScope.PROJECT.project_path, "tasks/user", $scope.task.owner.global_key, "all"].join("/");
                $location.path(url),
                    Flash.success().send("任务删除成功！")
            })),
            removeWatchers.push(TaskItemService.onProjectTaskSignal("update.content", function($event, task) {
                setTaskDetailTitle(task)
            })),
            TaskListService.parentWatch($scope, ["task_id", "members"], [loadTaskDetail, setMembers]),
            $scope.onComment = function(content) {
                var task = $scope.task
                    , cPromise = Task.comment({
                    id: task.id
                }, {
                    content: content
                });
                return cPromise.then(function() {
                    loadActivities(task.id),
                        $scope.task.comments += 1,
                        $scope.$broadcast("task.detail.change", task)
                }),
                    cPromise
            }
            ,
            $scope.onRemove = function() {
                loadActivities($scope.task.id),
                    $scope.task.comments -= 1
            }
            ,
            $scope.toggleTaskDetailUrl = function() {
                var just_show_comment = !$scope.just_show_comment
                    , url = [$rootScope.PROJECT.project_path, "task", $scope.task.id, just_show_comment ? "comment" : ""].join("/");
                return $scope.just_show_comment = just_show_comment,
                    $location.skipReload().path(url),
                    !1
            }
            ,
            $scope.showActivity = function(activity) {
                return "TaskComment" === activity.target_type && $scope.just_show_comment || !$scope.just_show_comment
            }
        ;
        var project_params = {
            username: $scope.PROJECT.owner_user_name,
            project_name: $scope.PROJECT.name
        };
        $scope.onTagRemove = function(tag) {
            var promise = Task.removeTaskTag($.extend({
                task: $scope.task.id,
                label: tag.id
            }, project_params), {});
            return promise.then(function() {
                TaskItemService.sendProjectTaskSignal("tag.remove", $scope.task)
            }),
                promise
        }
            ,
            $scope.onTagAdd = function(tag) {
                var promise = Task.addTaskTag($.extend({
                    task: $scope.task.id,
                    label: tag.id
                }, project_params), {});
                return promise.then(function() {
                    TaskItemService.sendProjectTaskSignal("tag.add", $scope.task)
                }),
                    promise
            }
            ,
            $scope.onTagCreate = function(tag) {
                if (tag.color && tag.name) {
                    var promise = Task.addTag(project_params, {
                        name: tag.name,
                        color: tag.color
                    });
                    return promise.then(function(result) {
                        var id = result.data;
                        tag.id = id,
                            $scope.$emit("project.tag.create", tag)
                    }),
                        promise
                }
            }
            ,
            $scope.onDetailTagSelect = function(tag) {
                $location.path($scope.task.project.project_path + "/tasks/label/" + tag.id)
            }
            ,
            $scope.checkIconClass = function(done) {
                return {
                    "checkmark sign done": done,
                    "empty checkbox processing": !done
                }
            }
            ,
            $scope.$on("project.task.tag.selected", function(event, tag) {
                $location.path($scope.task.project.project_path + "/tasks/label/" + tag.id)
            }),
            $scope.$on("task.detail.description.change", function(task) {
                $scope.$broadcast("task.detail.change", task)
            });
        var loadTaskWatchers = function(task_id) {
            $scope.loading_watchers = !0;
            var promise = Task.watchers($.extend({
                task: task_id,
                pageSize: 1e3
            }, project_params));
            promise.then(function(result) {
                $scope.watchers = result.data && result.data.list || []
            }),
                promise["finally"](function() {
                    $scope.loading_watchers = !1
                })
        }
            , watchers_effects = ["watch", "owner"];
        angular.forEach(watchers_effects, function(effect) {
            var removeWatcher = TaskItemService.onProjectTaskSignal("update." + effect, function(scope, task) {
                loadTaskWatchers(task.id)
            });
            removeWatchers.push(removeWatcher)
        }),
            $scope.$on("$destroy", function() {
                removeWatchers.map(function(removeWatcher) {
                    angular.isFunction(removeWatcher) && removeWatcher()
                })
            })
    }
    ]).service("TaskDetailService", [function() {}
    ]),
    angular.module("app").controller("TaskDetailMenuController", ["$scope", "TaskUrgencyService", "Common", "TaskItemService", "Task", function($scope, TaskUrgencyService, Common, TaskItemService, Task) {
        $scope.priorities = TaskUrgencyService.priorities,
            $scope.form = void 0;
        var updateHandlers = {
            owner: function(owner) {
                $scope.task.owner = angular.copy(owner)
            },
            urgency: function(urgency) {
                var priority = urgency.value;
                $scope.task.priority = priority
            },
            deadline: function(value) {
                var deadline = value.form_value || void 0;
                $scope.task.deadline = deadline
            }
        };
        $scope.$on("task.detail.select", function(event, select) {
            var key = select.name;
            $scope.form[key] = select.value,
                Common.smartSwitch(updateHandlers, key, select.value)
        }),
            $scope.addWatcher = function(member) {
                return Task.watch({
                    id: $scope.task.id,
                    global_key: member.global_key
                }, {}).then(function() {
                    TaskItemService.sendProjectTaskSignal("watcher.add", $scope.task)
                })
            }
            ,
            $scope.removeWatcher = function(member) {
                var p = Task.removeWatch({
                    id: $scope.task.id,
                    global_key: member.global_key
                });
                return p.then(function() {
                    TaskItemService.sendProjectTaskSignal("watcher.remove", $scope.task)
                }),
                    p
            }
            ,
            $scope.removeTask = function(task) {
                if (!$scope.updating && confirm("确认删除该任务？")) {
                    $scope.updating = !0;
                    var params = TaskItemService.projectParams(task.project);
                    params = angular.extend(params, {
                        id: task.id
                    });
                    var rPromise = Task["delete"](params);
                    rPromise.then(function() {
                        TaskItemService.sendProjectTaskSignal("remove", task),
                            $scope.updating = !1
                    }),
                        rPromise["catch"](function() {
                            $scope.updating = !1
                        })
                }
            }
        ;
        var removeTaskWatcher = $scope.$watch("task", function(task) {
            angular.isObject(task) && ($scope.form = {
                project: task.project,
                owner: task.owner,
                urgency: {
                    value: task.priority,
                    text: $scope.priorities[task.priority]
                },
                deadline: task.deadline,
                labels: task.labels
            },
                $scope.task_copy = angular.copy(task),
            removeTaskWatcher && removeTaskWatcher())
        })
    }
    ]),
    angular.module("app").controller("ProjectTaskEditTagController", ["$scope", "Task", "Common", "$rootScope", "$routeParams", "TagDropdownService", function($scope, Task, Common, $rootScope, $routeParams, TagDropdownService) {
        var project_params = $scope.project_params;
        $scope.new_tag = {
            name: "",
            color: TagDropdownService.randomColor(),
            saving: !1
        },
            $scope.tag_editable = !1,
            $scope.task_label_id = $routeParams.user || void 0,
            $scope.just_show = !isNaN($scope.task_label_id),
            $scope.$on("project.task.tag.selected", function(event, tag) {
                $scope.task_label_id = tag.id
            }),
            $scope.$on("load.task.list", function() {
                $scope.task_label_id = null
            }),
            $scope.toggleShowTags = function() {
                $scope.just_show = !$scope.just_show
            }
            ,
            $scope.enableTagEditable = function($event) {
                return $scope.tag_editable = !0,
                    $event.stopPropagation(),
                    !1
            }
            ,
            $scope.disableTagEditable = function($event) {
                return $scope.tag_editable = !1,
                    angular.forEach($scope.tags, function(tag) {
                        tag.name !== tag.copy.name && tag.copy.name && (tag.name = tag.copy.name),
                        tag.color !== tag.copy.color && tag.copy.color && (tag.color = tag.copy.color)
                    }),
                    $event.stopPropagation(),
                    !1
            }
            ,
            $scope.tagName = function(tag) {
                return tag.name + (tag.count ? " (" + tag.processing + "/" + tag.count + ")" : "")
            }
            ,
            $scope.tagActive = function() {
                return $scope.task_label_id && !isNaN($scope.task_label_id) && !$scope.just_show && !$scope.tag_editable
            }
        ;
        var afterTagCreate = function(tag) {
                var t = {
                    name: tag.name,
                    color: tag.color,
                    id: tag.id,
                    owner_id: tag.owner_id || $scope.USER.id
                };
                t.copy = angular.copy(t),
                    $scope.tags.push(t)
            }
            ;
        $rootScope.$on("project.tag.create", function(event, tag) {
            afterTagCreate(tag)
        }),
            $scope.addTaskTag = function(tag) {
                if (tag.color && tag.name) {
                    tag.saving = !0;
                    var tPromise = Task.addTag(project_params, {
                        name: tag.name,
                        color: tag.color
                    });
                    tPromise.then(function(result) {
                        var id = result.data;
                        tag.id = id,
                            $rootScope.$broadcast("project.tag.add", tag),
                            $scope.$emit("project.tag.add", tag),
                            afterTagCreate(tag, id),
                            tag.name = "",
                            tag.color = TagDropdownService.randomColor()
                    }),
                        tPromise["finally"](function() {
                            tag.saving = !1
                        })
                }
            }
            ,
            $scope.removeTag = function(tag) {
                if (confirm("确认删除标签 " + tag.name + " ?")) {
                    tag.updating = !0;
                    var tPromise = Task.delTag($.extend({
                        id: tag.id
                    }, project_params));
                    tPromise.then(function() {
                        $scope.tags = Common.removeOfId($scope.tags, tag.id),
                            $rootScope.$broadcast("project.tag.remove", tag),
                            $scope.$emit("project.tag.removed", tag)
                    }),
                        tPromise["finally"](function() {
                            tag.updating = !1
                        })
                }
            }
            ,
            $scope.updateTag = function(tag) {
                tag.updating = !0;
                var tPromise = Task.updateTag($.extend({
                    id: tag.id
                }, project_params), {
                    name: tag.reverted_name,
                    color: tag.color
                });
                tPromise.then(function() {
                    tag.name = Common.html(tag.reverted_name),
                        tag.copy.name = tag.name,
                        tag.copy.color = tag.color,
                        $rootScope.$broadcast("project.tag.updated", tag),
                        $scope.$broadcast("project.tag.updated", tag)
                }),
                    tPromise["catch"](function() {
                        tag.name = tag.copy.name,
                            tag.color = tag.copy.color
                    }),
                    tPromise["finally"](function() {
                        tag.updating = !1
                    })
            }
            ,
            $scope.onColorChange = function(tag) {
                $scope.updateTag(tag)
            }
            ,
            $scope.selectTag = function(tag) {
                $rootScope.$broadcast("project.task.tag.selected", tag)
            }
            ,
            $scope.can_remove_tag = {},
            $scope.can_edit = !1,
            $scope.$watch("members", function(members) {
                angular.isDefined(members) && angular.forEach(members, function(member) {
                    member.user_id === $scope.USER.id && ($scope.can_edit = !0)
                })
            }),
            $scope.$watchCollection("tags", function(tags) {
                angular.isDefined(tags) && angular.forEach(tags, function(tag) {
                    tag.reverted_name = Common.revertHtml(tag.name)
                })
            })
    }
    ]),
    angular.module("app").controller("TaskController", ["$scope", "$rootScope", "$routeParams", "Task", "Common", "Project", "TaskItemService", "location", "TaskListService", "$q", function($scope, $rootScope, $routeParams, Task, Common, Project, TaskItemService, $location, TaskListService, $q) {
        var USER = $scope.USER
            , PROJECT = $scope.PROJECT
            , project_path = PROJECT.project_path;
        $scope.project_params = {
            username: PROJECT.owner_user_name,
            project_name: PROJECT.name
        },
            $scope.view = $routeParams.id ? "detail" : "list",
            $scope.tasks_count = {
                done: 0,
                processing: 0
            },
            $scope.tasks_total_count = 0,
            $scope.inner_menu = $routeParams.region || "processing",
            $scope.task_user = $routeParams.user || "",
            $scope.task_label_id = $routeParams.user || 0,
            $scope.task_user_name_map = null ,
            $scope.username = $routeParams.username,
            $scope.project_name = $routeParams.project_name,
            $scope.user_task_status = $routeParams.status || "all",
            $scope.task_id = $routeParams.id || 0,
            $scope.members = [],
            $scope.searchMember = "";
        var removeWatchers = [];
        $scope.$on("project.task.tag.selected", function(event, tag) {
            $scope.task_label_id = tag.id,
                $scope.inner_menu = "label",
                $scope.task_user = null
        });
        var reOrderMembersByUser = function(members, user) {
                return TaskItemService.orderMembers(members, user.id)
            }
            ;
        $scope.isActive = function(inner_menu) {
            return $scope.inner_menu == inner_menu && "list" === $scope.view
        }
        ;
        var loadProjectCount = function() {
            return Task.count({
                id: PROJECT.id
            }, function(result) {
                $scope.tasks_count = result.data
            })
        }
            , loadMemberTaskCount = function() {
            var promise = Task.countOfUser({
                id: PROJECT.id
            });
            return promise.then(function(result) {
                var counts = result.data;
                angular.forEach($scope.members, function(member) {
                    var count = Common.findOfId(counts, member.user_id, "user");
                    member.count = count ? angular.copy(count) : {
                        processing: 0,
                        done: 0,
                        user: member.user_id
                    }
                })
            }),
                promise
        }
            , tmPromise = Project.members({
            id: PROJECT.id
        })
            , couPromise = tmPromise.then(function(result) {
            var members = result.data && result.data.list || [];
            return $scope.members = reOrderMembersByUser(members, USER),
                $scope.task_user_name_map = {},
                angular.forEach($scope.members, function(member) {
                    var key = member.user.global_key;
                    $scope.task_user_name_map[key] = member.user.name
                }),
                Task.countOfUser({
                    id: PROJECT.id
                })
        });
        couPromise.then(function(result) {
            var counts = result.data;
            angular.forEach($scope.members, function(member) {
                var count = Common.findOfId(counts, member.user_id, "user");
                member.count = count ? angular.copy(count) : {
                    processing: 0,
                    done: 0,
                    user: member.user_id
                }
            })
        }),
            $scope.loadTasks = function(type, user, status) {
                $scope.task_label_id = null ,
                    $rootScope.$broadcast("load.task.list", type, user, status);
                var url = project_path + "/tasks/" + type;
                user && (url += "/" + user),
                user && status && (url += "/" + status),
                    "list" === $scope.view ? $location.skipReload().path(url) : $location.path(url),
                    $scope.inner_menu = type,
                    $scope.task_user = user || "",
                    $scope.user_task_status = status
            }
        ;
        var getMemberByGlobalkey = function(key) {
                for (var i in $scope.members) {
                    var member = $scope.members[i];
                    if (member.user.global_key == key)
                        return member
                }
            }
            , updateCount = function(task, signal) {
                var promises = [loadProjectCount(), loadMemberTaskCount(), loadTaskLabels()];
                $q.all(promises).then(function() {
                    var totalCounters = {
                        all: function() {
                            return $scope.tasks_count.processing + $scope.tasks_count.done
                        },
                        done: function() {
                            return $scope.tasks_count.done
                        },
                        processing: function() {
                            return $scope.tasks_count.processing
                        },
                        watch: function() {
                            return $scope.tasks_count.watch
                        },
                        create: function() {
                            return $scope.tasks_count.create
                        },
                        user: function() {
                            var member = getMemberByGlobalkey($scope.task_user);
                            return member.count.processing + member.count.done
                        }
                    };
                    $scope.tasks_total_count = Common.smartSwitch(totalCounters, $scope.inner_menu, task),
                        TaskListService.changeCount("list", $scope.tasks_total_count)
                })
            }
            ;
        angular.forEach(["update.owner", "update.status", "update.watch", "remove", "add", "update.label", "watcher.remove", "watcher.add"], function(signal) {
            var removeWatcher = TaskItemService.onProjectTaskSignal(signal, function(event, task) {
                updateCount(task, signal)
            });
            removeWatchers.push(removeWatcher)
        }),
            $scope.$on("goto.task.detail", function(event, task) {
                var url = [$rootScope.PROJECT.project_path, "task", task.id, task.just_show_comment ? "comment" : ""].join("/");
                $location.search(""),
                    $location.skipReload().path(url),
                    $scope.view = "detail",
                    $scope.task_id = task.id
            }),
            TaskListService.onCountChange("index", function(event, count) {
                $scope.tasks_total_count = count
            }),
            $scope.tags = [],
            $scope.$on("project.tag.create", function() {
                loadTaskLabels()
            }),
            $scope.$on("project.tag.remove", function() {
                loadTaskLabels()
            }),
            $scope.$on("project.tag.add", function() {
                loadTaskLabels()
            }),
            $scope.$on("project.tag.updated", function() {
                loadTaskLabels()
            });
        var loadTaskLabels = function() {
                var promise = Task.tags($scope.project_params);
                return promise.then(function(result) {
                    $scope.tags = result.data || []
                }),
                    promise
            }
            ;
        loadProjectCount(),
            loadTaskLabels(),
            $scope.$on("$destroy", function() {
                removeWatchers.map(function(removeWatcher) {
                    angular.isFunction(removeWatcher) && removeWatcher()
                })
            })
    }
    ]),
    angular.module("app").controller("TaskListController", ["$scope", "$rootScope", "Project", "User", "location", "Task", "Errors", "Pager", "PageTitle", "Common", "TaskItemService", "TaskListService", function($scope, $rootScope, Project, User, $location, Task, Errors, Pager, PageTitle, Common, TaskItemService, TaskListService) {
        var USER = $scope.USER
            , PROJECT = $scope.PROJECT
            , removeWatchers = [];
        $scope.current_project = PROJECT;
        var watches = ["inner_menu", "task_user", "user_task_status", "username"];
        TaskListService.parentWatch($scope, watches),
            $scope.task_header_title = "",
            $scope.task_user_name_map = null ,
            $scope.tasks_total_count = 0,
            $scope.task = {},
            $scope.tasks = [],
            $scope.tasks_loading = !1,
            $scope.tasks_loaded = !1;
        var task_pager_id = $scope.task_pager_id = (new Date).getTime();
        $scope.taskPagerOptions = !1,
            Pager = Pager.instance(task_pager_id, $scope);
        var pagePromise = Pager.onChange();
        pagePromise.then(null , null , function(page) {
            "label" === $scope.inner_menu ? $scope.loadTasksOfTag($scope.task_label_id, "all", page) : $scope.loadTasks($scope.inner_menu, $scope.task_user, $scope.user_task_status, page)
        });
        var title = {
                all: "所有任务",
                processing: "进行中任务",
                done: "已完成任务",
                watch: "我关注的",
                create: "我创建的",
                label: "标签"
            }
            , label_title_prefix = title.label + "："
            , projectTaskPageTitle = function(project_name, region, user) {
                var titles = {
                    processing: "进行中的任务",
                    done: "已完成的任务",
                    watch: "我关注的",
                    create: "我创建的",
                    label: function() {
                        return "任务标签"
                    }(),
                    user: function() {
                        return user + "的任务"
                    }()
                }
                    , title = titles[region] || "项目任务";
                PageTitle.set(title, project_name, "Coding.net")
            }
            , tagsReady = function(tags) {
                return angular.isDefined(tags) && tags.length > 0 && $scope.task_header_title.indexOf(label_title_prefix) < 0
            }
            , changeTaskHeader = function(force) {
                var username = $scope.task_user_name_map ? $scope.task_user_name_map[$scope.task_user] : $scope.task_user;
                if ("label" === $scope.inner_menu) {
                    if ($scope.task_header_title = title.label,
                        tagsReady($scope.tags) || force) {
                        var tag = Common.findOfId($scope.tags, $scope.task_label_id);
                        $scope.task_header_title = label_title_prefix + tag.name
                    }
                } else
                    $scope.task_header_title = title[$scope.inner_menu] || username + " 的任务";
                projectTaskPageTitle(PROJECT.name, $scope.inner_menu, username)
            }
            ;
        $scope.$watch("tags", function(tags) {
            if (tagsReady(tags) && $scope.task_label_id > 0) {
                var tag = Common.findOfId($scope.tags, $scope.task_label_id);
                $scope.task_header_title = label_title_prefix + tag.name
            }
        }),
            $scope.$on("project.tag.updated", function(event, tag) {
                changeTaskHeader(!0)
            }),
            $scope.$parent.$watch("task_user_name_map", function(map) {
                map && ($scope.task_user_name_map = map,
                $scope.task_user && isNaN($scope.task_user) && ($scope.task_header_title = title[$scope.inner_menu] || map[$scope.task_user] + " 的任务",
                    projectTaskPageTitle(PROJECT.name, $scope.inner_menu, map[$scope.task_user])))
            }),
            $scope.changeOwnerStatus = function(status) {
                $scope.loadTasks($scope.inner_menu, $scope.task_user, status)
            }
            ,
            $scope.loadTasks = function(type, user, status, page) {
                if (!$scope.tasks_loading) {
                    $scope.tasks_loading = !0,
                        $scope.tasks_loaded = !1,
                        $scope.tasks = [];
                    var callback = function(result) {
                        Pager.optionsReady(result.data),
                            $scope.tasks_loading = !1,
                            $scope.tasks_loaded = !0,
                            $scope.tasks = result.data.list || [],
                            angular.forEach($scope.tasks, function(task) {
                                task.content = Common.revertHtml(task.content)
                            }),
                            $scope.tasks_total_count = result.data ? result.data.totalRow : 0,
                            TaskListService.changeCount("index", $scope.tasks_total_count)
                    }
                        , tPromise = null ;
                    user ? (tPromise = Task.listOfOwner({
                        username: $scope.username,
                        project_name: PROJECT.name,
                        owner: user,
                        status: status || "all",
                        page: page || 1
                    }, callback),
                        user === USER.global_key ? $scope.task.owner = angular.copy(USER) : User.byKey({
                            key: user
                        }, function(result) {
                            0 == result.code && ($scope.task.owner = result.data)
                        })) : (tPromise = Task.list({
                        username: $scope.username,
                        project_name: PROJECT.name,
                        status: type,
                        page: page || 1
                    }, callback),
                        $scope.task.owner = USER),
                        tPromise["catch"](function(error, result) {
                            if (result && (1102 === result.code || 1115 === result.code)) {
                                var url = [PROJECT.project_path, "/tasks"].join("");
                                $location.path(url)
                            }
                        }),
                        $scope.inner_menu = type,
                        $scope.task_user = user || "",
                        $scope.user_task_status = status,
                        changeTaskHeader()
                }
            }
            ,
            $scope.loadTasksOfTag = function(tag_id, status, page) {
                $scope.tasks_loading = !0,
                    $scope.tasks_loaded = !1,
                    $scope.tasks = [];
                var promise = Task.listOfTag($.extend({
                    label: tag_id,
                    status: status || "all",
                    page: page || 1
                }, $scope.project_params));
                promise.then(function(result) {
                    Pager.optionsReady(result.data),
                        $scope.tasks = result.data.list || [],
                        angular.forEach($scope.tasks, function(task) {
                            task.content = Common.revertHtml(task.content)
                        }),
                        $scope.tasks_total_count = result.data ? result.data.totalRow : 0,
                        TaskListService.changeCount("index", $scope.tasks_total_count),
                        changeTaskHeader(!0),
                        $location.skipReload().path($scope.PROJECT.project_path + "/tasks/label/" + tag_id)
                }),
                    promise["finally"](function() {
                        $scope.tasks_loading = !1,
                            $scope.tasks_loaded = !0
                    })
            }
            ,
            $scope.$on("load.task.list", function(event, type, user, status, page) {
                $scope.loadTasks(type, user, status, page)
            }),
            $scope.$on("project.task.tag.selected", function(event, tag) {
                $scope.loadTasksOfTag(tag.id, "all")
            }),
            angular.forEach(["remove", "add"], function(signal) {
                var removeWatcher = TaskItemService.onProjectTaskSignal(signal, function(event, task) {
                    "remove" === signal ? $scope.tasks = Common.removeOfId($scope.tasks, task.id) : "add" === signal && task.project_id === PROJECT.id && Common.prepend($scope.tasks, task)
                });
                removeWatchers.push(removeWatcher)
            }),
            TaskListService.onCountChange("list", function(event, count) {
                $scope.tasks_total_count = count
            }),
            "label" === $scope.inner_menu ? $scope.loadTasksOfTag($scope.task_label_id, "all", Pager.currentPage()) : $scope.loadTasks($scope.inner_menu, $scope.task_user, $scope.user_task_status, Pager.currentPage()),
            changeTaskHeader(),
            $scope.$on("$destroy", function() {
                removeWatchers.map(function(removeWatcher) {
                    angular.isFunction(removeWatcher) && removeWatcher()
                })
            }),
            $scope.show_modal = void 0,
            $scope.toggleModal = function() {
                $scope.show_modal = !$scope.show_modal
            }
            ,
            $scope.onModalClose = function() {}
    }
    ]).service("TaskListService", ["$rootScope", function($rootScope) {
        var parentWatch = function($scope, watches, callbacks) {
                $scope && $scope.$parent && $scope.$parent.$watch && ($scope.removeParentWatchers = [],
                    angular.forEach(watches || [], function(watch, index) {
                        var rw = $scope.$parent.$watch(watch, function(value) {
                            $scope[watch] = value;
                            var callback = (callbacks || [])[index];
                            "undefined" != typeof value && callback && callback(value)
                        });
                        $scope.removeParentWatchers.push(rw)
                    }),
                    $scope.$on("$destroy", function() {
                        removeParentWatch($scope)
                    }))
            }
            , removeParentWatch = function($scope) {
                angular.forEach($scope.removeParentWatchers || [], function(rw) {
                    rw && rw()
                })
            }
            , onCountChange = function(view, callback) {
                $rootScope.$on("project.task.count.change." + view, callback)
            }
            , changeCount = function(view, count) {
                $rootScope.$broadcast("project.task.count.change." + view, count)
            }
            ;
        return {
            parentWatch: parentWatch,
            onCountChange: onCountChange,
            changeCount: changeCount
        }
    }
    ]),
    angular.module("app").controller("CreateTaskModalController", ["$scope", "Task", "ipCookie", "TaskUrgencyService", "Common", "Flash", "$rootScope", "TaskItemService", "TaskCreateModalService", function($scope, Task, ipCookie, TaskUrgencyService, Common, Flash, $rootScope, TaskItemService, TaskCreateModalService) {
        $scope.priorities = TaskUrgencyService.priorities;
        var default_form = {
            content: "",
            description: "",
            urgency: {
                value: 1,
                text: $scope.priorities[1]
            },
            deadline: "",
            labels: [],
            watchers: []
        };
        $scope.form = _.extend({
            project: null ,
            owner: null
        }, angular.copy(default_form));
        var currentUser = $scope.USER;
        $scope.projects = [],
            $scope.labelsOfProject = {},
            $scope.membersOfProject = {},
            $scope.creating = !1,
            $scope.supplies_loading = !1,
            $scope.loadCreatingSupplies = function() {
                var promise = Task.creating();
                return $scope.supplies_loading = !0,
                    promise.then(function(result) {
                        var projects = result.data.project || []
                            , members = result.data.member || []
                            , labels = result.data.label || [];
                        for (var index in projects) {
                            var project = projects[index]
                                , mbs = _.filter(members, {
                                project_id: project.id
                            });
                            $scope.membersOfProject[project.id] = mbs || [];
                            var lbs = _.filter(labels, {
                                project_id: project.id
                            });
                            $scope.labelsOfProject[project.id] = lbs || []
                        }
                        $scope.projects = projects,
                            currentUser = $scope.USER
                    }),
                    promise["finally"](function() {
                        $scope.supplies_loading = !1
                    }),
                    promise
            }
        ;
        var loadSuppliesPromise = null
            , beenClosedEver = !1;
        $("#create-task-modal").modal("setting", {
            duration: 100,
            onHide: function() {
                return beenClosedEver = !0,
                    !1
            },
            onShow: function() {
                return $scope.projects && $scope.projects.length > 0 ? void initSelectedProjectAndMember($rootScope.PROJECT) : (loadSuppliesPromise = $scope.loadCreatingSupplies(),
                    void loadSuppliesPromise.then(function() {
                        initSelectedProjectAndMember($rootScope.PROJECT)
                    }))
            },
            closable: !1
        });
        var onMemberChange = function() {
            var project_copy = angular.copy($scope.form.project);
            loadSuppliesPromise = $scope.loadCreatingSupplies(),
                loadSuppliesPromise.then(function() {
                    $scope.$broadcast("create.task.modal.refresh", project_copy || $scope.form.project)
                })
        }
            , projectChangeEvents = ["project_member.add", "project_member.remove", "project.create", "project.remove", "project.transfer", "project.quit", "project.tag.add", "project.tag.removed", "project.tag.updated", "project.archive"];
        projectChangeEvents.map(function(event) {
            $rootScope.$on(event, onMemberChange)
        }),
            $scope.$on("create.task.select", function(event, select) {
                var key = select.name;
                $scope.form[key] = select.value
            });
        var doSelectProjectAndOwner = function(project_id) {
            angular.forEach($scope.projects, function(project) {
                if (project_id === project.id) {
                    $scope.form.project = project;
                    var owner = angular.copy(currentUser);
                    owner.initial = !0,
                        $scope.form.owner = owner
                }
            })
        }
            , selectProjectAndOwner = function(project_id) {
            loadSuppliesPromise && loadSuppliesPromise.then(function() {
                doSelectProjectAndOwner(project_id)
            })
        }
            , resetEditorAfterSubmit = angular.noop;
        $scope.onDescriptionChange = function(content, resetEditor) {
            $scope.form.description = content,
                resetEditorAfterSubmit = resetEditor
        }
        ;
        var initSelectedProjectAndMember = function(project) {
                if (project)
                    angular.isDefined(project) && selectProjectAndOwner(project.id);
                else {
                    var project_id = TaskCreateModalService.getProjectId();
                    project_id ? selectProjectAndOwner(project_id) : loadSuppliesPromise && loadSuppliesPromise.then(function() {
                        doSelectProjectAndOwner($scope.projects[0].id)
                    })
                }
            }
            , checkTask = function(form) {
                return form.project ? form.owner ? form.content ? !0 : (Flash.fail().send("请添加任务内容！"),
                    !1) : (Flash.fail().send("请选择一个任务执行者！"),
                    !1) : (Flash.fail().send("请选择一个私有项目！"),
                    !1)
            }
            ;
        $scope.hideModal = function() {
            $("#create-task-modal").modal("hide")
        }
            ,
            $scope.onSubmit = function() {
                return $scope.createTask()
            }
            ,
            $scope.createTask = function() {
                var form = angular.copy($scope.form)
                    , task = {};
                if (checkTask(form) && !$scope.creating) {
                    $scope.creating = !0,
                        task.owner_id = form.owner.id,
                        task.priority = form.urgency && form.urgency.value || 1,
                        task.content = form.content,
                        task.description = form.description,
                        task.deadline = form.deadline && form.deadline.form_value || "",
                        task.labels = form.labels && form.labels.map(function(label) {
                                return label.id
                            }).join(",") || "",
                        task.watchers = form.watchers && form.watchers.map(function(watcher) {
                                return watcher.id
                            }).join(",") || "";
                    var project_params = Common.projectParams(form.project)
                        , promise = Task.create(project_params, task);
                    return promise.then(function(result) {
                        resetEditorAfterSubmit(!0);
                        var task = result.data;
                        task.content = Common.revertHtml(task.content),
                            TaskItemService.sendProjectTaskSignal("add", task),
                            $scope.form = _.extend($scope.form, default_form),
                            $scope.form.labels = [],
                            $scope.$broadcast("project.task.create.clear");
                        var path = ["/u/", form.project.owner_user_name, "/p/", form.project.name, "/task/", task.id].join("")
                            , link = ['<a href="', path, '">', "任务 #" + task.number + " 创建成功，点击查看任务！", "</a>"].join("");
                        Flash.success().send(link),
                            TaskCreateModalService.setProjectId($scope.form.project && $scope.form.project.id),
                            $scope.hideModal(),
                            $scope.resetTaskForm()
                    }),
                        promise["catch"](function() {
                            resetEditorAfterSubmit(!1)
                        }),
                        promise["finally"](function() {
                            $scope.creating = !1
                        }),
                        promise
                }
            }
    }
    ]).service("TaskCreateModalService", ["ipCookie", function(ipCookie) {
        var cookie_key = "last-create-task-project";
        return {
            setProjectId: function(project_id) {
                return ipCookie(cookie_key, project_id, {
                    path: "/"
                })
            },
            getProjectId: function() {
                return ipCookie(cookie_key)
            }
        }
    }
    ]),
    angular.module("app").controller("TaskDetailSelectLabelController", ["$scope", function($scope) {
        $scope.labels = null ;
        var initSelectLabel = function(project) {
                project && $scope.labelsOfProject && ($scope.labels = $scope.labelsOfProject[project.id],
                    $scope.form.labels = [])
            }
            ;
        $scope.$watch("form.project", initSelectLabel),
            $scope.$on("task.detail.modal.refresh", function(event, project) {
                initSelectLabel(project)
            })
    }
    ]),
    angular.module("app").controller("TaskDetailSelectMemberController", ["$scope", function($scope) {
        var SELECT_FILED_NAME = "owner";
        $scope.owner = void 0,
            $scope.$watch("form.owner", function(owner) {
                (angular.isUndefined($scope.owner) || owner && owner.id !== $scope.owner.id) && ($scope.owner = angular.copy(owner))
            }),
            $scope.selectMember = function(member) {
                $scope.$emit("task.detail.select", {
                    name: SELECT_FILED_NAME,
                    value: member
                })
            }
            ,
            $scope.$watch("owner", function(owner) {
                owner && $scope.form.owner && owner.id !== $scope.form.owner.id && $scope.selectMember(owner)
            })
    }
    ]),
    angular.module("app").controller("TaskDetailSelectProjectController", ["$scope", function($scope) {
        var SELECT_FILED_NAME = "project";
        $scope.selectProject = function(project) {
            $scope.$emit("task.detail.select", {
                name: SELECT_FILED_NAME,
                value: project
            })
        }
    }
    ]),
    angular.module("app").controller("TaskDetailSelectUrgencyController", ["$scope", "TaskUrgencyService", function($scope, TaskUrgencyService) {
        var SELECT_FILED_NAME = "urgency";
        $scope.selectUrgency = function(urgency) {
            $scope.$emit("task.detail.select", {
                name: SELECT_FILED_NAME,
                value: {
                    value: urgency,
                    text: $scope.priorities[urgency]
                }
            })
        }
    }
    ]),
    angular.module("app").controller("CreateTaskSelectDeadlineController", ["$scope", function($scope) {
        var SELECT_FILED_NAME = "deadline";
        $scope.task = {
            deadline: ""
        },
            $scope.onDeadlineChange = function(deadline) {
                deadline.form_value = $scope.task.deadline,
                    $scope.$emit("create.task.select", {
                        name: SELECT_FILED_NAME,
                        value: deadline
                    })
            }
            ,
            $scope.$on("project.task.create.clear", function() {
                $scope.task.deadline = ""
            })
    }
    ]),
    angular.module("app").controller("CreateTaskSelectLabelController", ["$scope", "$q", "$timeout", "Common", "TopicTagEditorService", function($scope, $q, $timeout, Common, TopicTagEditorService) {
        $scope.labels = null ;
        var initSelectLabel = function(project) {
                project && $scope.labelsOfProject && ($scope.labels = $scope.labelsOfProject[project.id],
                    $scope.form.labels = [])
            }
            ;
        $scope.$watch("form.project", initSelectLabel),
            $scope.$on("create.task.modal.refresh", function(event, project) {
                initSelectLabel(project)
            });
        var makePromise = function(callback) {
                var deferred = $q.defer();
                return $timeout(function() {
                    callback && callback(),
                        deferred.resolve()
                }),
                    deferred.promise
            }
            ;
        $scope.onTagAdd = function(tag) {
            return makePromise(function() {
                tag && $scope.form.labels.push(tag)
            })
        }
            ,
            $scope.onTagRemove = function(tag) {
                return makePromise(function() {
                    tag && ($scope.form.labels = Common.removeOfId($scope.form.labels, tag.id))
                })
            }
            ,
            $scope.onTagCreate = function(tag) {
                return $scope.labels && $scope.labels.push(tag),
                    TopicTagEditorService.onTagCreate($scope.form.project, this, tag)
            }
    }
    ]),
    angular.module("app").controller("CreateTaskSelectMemberController", ["$scope", function($scope) {
        var SELECT_FILED_NAME = "owner";
        $scope.members = [];
        var initSelectMember = function(project) {
                if (project && $scope.membersOfProject) {
                    var owner = $scope.form[SELECT_FILED_NAME];
                    $scope.members = $scope.membersOfProject[project.id],
                    owner && !owner.initial && ($scope.form[SELECT_FILED_NAME] = null ,
                        owner = null ),
                    $scope.members.length >= 1 && $scope.$emit("create.task.select", {
                        name: SELECT_FILED_NAME,
                        value: owner || $scope.members[0].user
                    })
                }
            }
            ;
        $scope.$watch("form.project", initSelectMember),
            $scope.$on("create.task.modal.refresh", function(event, project) {
                initSelectMember(project)
            }),
            $scope.selectMember = function(member) {
                $scope.$emit("create.task.select", {
                    name: SELECT_FILED_NAME,
                    value: member.user
                })
            }
    }
    ]),
    angular.module("app").controller("CreateTaskSelectProjectController", ["$scope", function($scope) {
        var SELECT_FILED_NAME = "project";
        $scope.selectProject = function(project) {
            $scope.$emit("create.task.select", {
                name: SELECT_FILED_NAME,
                value: project
            })
        }
    }
    ]),
    angular.module("app").controller("CreateTaskSelectUrgencyController", ["$scope", "TaskUrgencyService", function($scope, TaskUrgencyService) {
        var SELECT_FILED_NAME = "urgency";
        $scope.selectUrgency = function(urgency) {
            $scope.$emit("create.task.select", {
                name: SELECT_FILED_NAME,
                value: {
                    value: urgency,
                    text: $scope.priorities[urgency]
                }
            })
        }
    }
    ]),
    angular.module("app").controller("CreateTaskSelectWatcherController", ["$scope", "Common", "$q", function($scope, Common, $q) {
        var SELECT_FILED_NAME = "watchers";
        $scope.watchers = [],
            $scope.members = [];
        var initSelectMember = function(project) {
                project && $scope.membersOfProject && ($scope.members = $scope.membersOfProject[project.id],
                    $scope.watchers = [])
            }
            ;
        $scope.$watch("form.project", initSelectMember),
            $scope.addWatcher = function(member) {
                var deferred = $q.defer()
                    , found = Common.findOfId($scope.watchers, member.id);
                return found || $scope.watchers.push(member),
                    $scope.$emit("create.task.select", {
                        name: SELECT_FILED_NAME,
                        value: $scope.watchers
                    }),
                    deferred.resolve({
                        data: !0
                    }),
                    deferred.promise
            }
            ,
            $scope.removeWatcher = function(member) {
                var deferred = $q.defer();
                return $scope.watchers = Common.removeOfId($scope.watchers, member.id),
                    $scope.$emit("create.task.select", {
                        name: SELECT_FILED_NAME,
                        value: $scope.watchers
                    }),
                    deferred.resolve({
                        data: !0
                    }),
                    deferred.promise
            }
    }
    ]),
    angular.module("app").controller("TopicCreateController", ["$scope", "$rootScope", "$routeParams", "location", "Topic", "Errors", "Flash", "$localStorage", "$timeout", "Common", function($scope, $rootScope, $routeParams, $location, Topic, Errors, Flash, $localStorage, $timeout, Common) {
        var PROJECT = $rootScope.PROJECT;
        $scope.PROJECT = PROJECT,
            $scope.sending = !1,
            $scope.tag_editing = !1,
            $scope.topic_id = parseInt($routeParams.region),
            $rootScope.$watch("USER", function(user) {
                user === !1 && $location.path(PROJECT.project_path + "/topic")
            });
        var editing = $scope.editing = $routeParams.watchers && "edit" === $routeParams.watchers
            , creating = $scope.creating = $routeParams.region.indexOf("create") >= 0
            , draft_id = 0
            , creating_draft_id = 0;
        $scope.draft_saving_time = 0,
            $scope.fetch_draft_at = 0,
            $scope.topic = {
                content: "",
                title: "",
                selected_tags: []
            };
        var showMsg = function() {
                return creating && $localStorage[creating_draft_id] || editing && $localStorage[draft_id]
            }
            , autoSaveTips = function() {
                var msg = "当前修改已保存至本地草稿，请放心继续操作！"
                    , prompt = function() {
                        return showMsg() ? msg : void 0
                    }
                    ;
                $(window).on("beforeunload", prompt),
                    $scope.$on("$locationChangeStart", function(event, newUrl, oldUrl) {
                        var reg = /^([^#]*).*$/;
                        (-1 === newUrl.indexOf("#") && -1 === oldUrl.indexOf("#") || newUrl.replace(reg, "$1") !== oldUrl.replace(reg, "$1")) && showMsg() && (confirm("你的内容已经保存到本地，确认离开？") || event.preventDefault())
                    }),
                    $scope.$on("$routeChangeStart", function() {
                        $(window).off("beforeunload", prompt)
                    })
            }
            ;
        autoSaveTips();
        var setTagActive = function(selected) {
                angular.forEach(selected, function(tag) {
                    angular.forEach($scope.tags, function(t) {
                        tag.id === t.id && (t.active = !0)
                    })
                })
            }
            ;
        if (editing) {
            var id = +$routeParams.region.split("/edit")[0];
            Topic.detail({
                id: id,
                type: 1
            }, function(result) {
                if (0 === result.code)
                    $scope.topic = result.data || {},
                        $scope.topic.selected_tags = $scope.topic.labels,
                        $scope.topic.copy = angular.copy($scope.topic),
                        setTagActive($scope.topic.selected_tags),
                        $("#topic-create").find("textarea:first").focus();
                else {
                    if (900 === result.code)
                        return void $location.path(PROJECT.project_path + "/topic");
                    Errors.handle(result)
                }
            })
        }
        creating && $("#topic-create").find('input[name="title"]').focus();
        var checkTopic = function(topic) {
                return topic.title && 0 !== topic.title.length ? topic.content && 0 !== topic.content.length ? !0 : (Flash.fail().send("讨论内容不能为空！"),
                    !1) : (Flash.fail().send("讨论标题不能为空！"),
                    !1)
            }
            , getLabelString = function() {
                var tags = $scope.can_edit_tag ? $scope.topic.selected_tags : $scope.topic.labels;
                return $.map(tags || [], function(tag) {
                    return tag.id
                }).join(",")
            }
            ;
        $scope.can_edit_tag = !1,
            $scope.$watch("Members", function(members) {
                angular.isDefined(members) && angular.forEach(members, function(member) {
                    member.user_id === $scope.USER.id && ($scope.can_edit_tag = !0)
                })
            }),
            $scope.createTopic = function(topic) {
                if (topic && checkTopic(topic) && !$scope.sending) {
                    $scope.sending = !0,
                        $scope.edited = !1,
                        topic.id = PROJECT.id;
                    var tags = getLabelString();
                    Topic.create({
                        id: PROJECT.id
                    }, {
                        type: 1,
                        content: topic.content,
                        title: topic.title,
                        label: tags
                    }, function(result) {
                        if ($scope.sending = !1,
                                delete $localStorage[creating_draft_id],
                            0 === result.code) {
                            var topic = result.data
                                , url = PROJECT.project_path + "/topic/" + topic.id;
                            $location.path(url)
                        } else
                            Errors.handle(result)
                    })["catch"](function() {
                        $scope.sending = !1
                    })
                }
            }
            ,
            $scope.contentUpdate = function(content) {
                $scope.topic.content = content
            }
            ,
            $scope.updateTopic = function(topic) {
                if (topic && checkTopic(topic) && !$scope.sending) {
                    $scope.sending = !0;
                    var tags = getLabelString();
                    Topic.update({
                        id: topic.id
                    }, {
                        content: topic.content,
                        title: topic.title,
                        label: tags
                    }, function(result) {
                        if ($scope.sending = !1,
                                delete $localStorage[draft_id],
                            0 === result.code) {
                            var topic = result.data
                                , url = PROJECT.project_path + "/topic/" + topic.id;
                            $location.path(url)
                        } else
                            Errors.handle(result)
                    })["catch"](function() {
                        $scope.sending = !1
                    })
                }
            }
            ,
            $scope.cancelTopic = function(topic) {
                if (!showMsg() || confirm("本地草稿内容将会清空，确认离开？")) {
                    creating ? delete $localStorage[creating_draft_id] : delete $localStorage[draft_id];
                    var url = PROJECT.project_path + "/topic/" + (topic.id || "all");
                    $location.path(url)
                }
            }
        ;
        var toggleTagActive = function(active, tag) {
                angular.forEach($scope.tags, function(t) {
                    t.name === tag.name && (t.active = active)
                })
            }
            , toggleTagsActive = function(active, tags) {
                var tag_ids = $.map(tags, function(tag) {
                    return tag.id
                });
                angular.forEach($scope.tags, function(tag) {
                    -1 === tag_ids.indexOf(tag.id) ? tag.active = !active : tag.active = active
                })
            }
            , doTagAdd = function(tag) {
                $scope.topic.selected_tags.push(tag),
                    toggleTagActive(!0, tag)
            }
            ;
        $scope.onTagAdd = function(tag) {
            var exists = !1;
            angular.forEach($scope.topic.selected_tags, function(t) {
                t.name === tag.name && (exists = !0)
            }),
            exists || doTagAdd(tag)
        }
        ;
        var doTagRemove = function(tag) {
                $scope.topic.selected_tags = $.map($scope.topic.selected_tags, function(t) {
                    return tag.name === t.name ? void 0 : t
                }),
                    toggleTagActive(!1, tag)
            }
            ;
        $scope.onTagRemove = function(tag) {
            doTagRemove(tag)
        }
        ;
        var draftHandler = angular.noop
            , saveDraft = _.debounce(function(id, topic) {
            Common.safeApply.call($scope, function() {
                $scope.draft_saving_time = (new Date).getTime(),
                    $localStorage[id] = {
                        draft_saving_time: $scope.draft_saving_time,
                        content: topic.content,
                        title: topic.title,
                        selected_tags: topic.selected_tags
                    }
            }),
                $timeout(function() {
                    $scope.draft_saving_time = 0
                }, 3e3)
        }, 3e3);
        if (creating) {
            creating_draft_id = "project-" + PROJECT.id + "-topic";
            var draft = $localStorage[creating_draft_id];
            draft && ($scope.topic = angular.copy(draft),
                $scope.topic.init = !0,
                $scope.fetch_draft_at = draft.draft_saving_time,
                $timeout(function() {
                    $scope.fetch_draft_at = !1,
                        $scope.topic.init = !1
                }, 3001)),
                draftHandler = function(topic) {
                    topic && !topic.init && (topic.content || topic.title || topic.selected_tags && topic.selected_tags.length > 0) && saveDraft(creating_draft_id, topic)
                }
        } else {
            var tagChanged = function(topic_tags, copy_tags) {
                    if (topic_tags.length != copy_tags.length)
                        return !0;
                    var count = 0;
                    return angular.forEach(topic_tags, function(tag1) {
                        angular.forEach(copy_tags, function(tag2) {
                            tag1.id === tag2.id && count++
                        })
                    }),
                    count !== copy_tags.length
                }
                , topicChanged = function(one, another) {
                    var tags_changed = tagChanged(one.selected_tags, another.selected_tags);
                    return one.title !== another.title || one.content !== another.content || tags_changed
                }
                ;
            draftHandler = function(topic) {
                if (topic.id) {
                    draft_id = "project-" + PROJECT.id + "-topic-" + $scope.topic_id;
                    var draft = $localStorage[draft_id];
                    draft ? topicChanged(topic, topic.copy) || 0 !== $scope.fetch_draft_at ? topicChanged(topic, draft) && saveDraft(draft_id, topic) : (Common.safeApply.call($scope, function() {
                        topic.content = draft.content,
                            topic.title = draft.title,
                            topic.selected_tags = draft.selected_tags,
                            $scope.fetch_draft_at = draft.draft_saving_time,
                            toggleTagsActive(!0, topic.selected_tags)
                    }),
                        $timeout(function() {
                            $scope.fetch_draft_at = !1
                        }, 3e3)) : topicChanged(topic, topic.copy) && saveDraft(draft_id, topic)
                }
            }
        }
        $scope.$watchCollection("topic", _.debounce(function(topic) {
            topic && draftHandler(topic)
        }), 100),
            $scope.$watchCollection("topic.selected_tags", _.debounce(function() {
                $scope.topic && draftHandler($scope.topic)
            }), 100)
    }
    ]),
    angular.module("app").controller("TopicDetailController", ["$scope", "$rootScope", "$routeParams", "Topic", "Errors", "Project", "$anchorScroll", "$timeout", "$location", "Pager", "Flash", "PageTitle", "Common", "$filter", "LightMdEditorService", function($scope, $rootScope, $routeParams, Topic, Errors, Project, $anchorScroll, $timeout, $location, Pager, Flash, PageTitle, Common, $filter, LightMdEditorService) {
        var id = +$routeParams.region
            , PROJECT = $rootScope.PROJECT
            , USER = $rootScope.USER;
        $scope.PROJECT = PROJECT;
        var topic_detail_pager_id = $scope.topic_detail_pager_id = Pager.timeBasedId();
        if (Pager = Pager.instance(topic_detail_pager_id, $scope),
                isNaN(id))
            return void $location.path(PROJECT.project_path + "/topic");
        $scope.loaded = !1,
            $scope.topic = {},
            $scope.comment = {
                content: ""
            },
            $scope.comments = [],
            $scope.detail_loading = !0,
            $scope.comments_loading = !0,
            $scope.comments_loaded = !1,
            $scope.commenting = !1,
            $scope.comment_type = 0;
        var topic_promise = Topic.detail({
            id: id
        }, function(result) {
            $scope.detail_loading = !1,
                $scope.topic = result.data || {},
                $scope.topic.content = $filter("restyleMarkDownImage")($scope.topic.content, 800, 800),
                $scope.comment.parent_id = result.data.id,
                PageTitle.set($scope.topic.title, PROJECT.name, "Coding.net")
        });
        topic_promise["catch"](function(error, result) {
            return result && 404 == result.code ? ($location.path(PROJECT.project_path + "/topic"),
                Flash.fail().send("该讨论不存在！"),
                !1) : void 0
        }),
            topic_promise.then(function() {
                $scope.loadComments(Pager.currentPage()),
                    loadWatchers()
            }),
            $scope.loadComments = function(page, type) {
                Topic.comments({
                    id: id,
                    page: page || 1,
                    pageSize: 10,
                    type: type || 0
                }, function(result) {
                    $scope.comments_loading = !1,
                        $scope.comments_loaded = !0,
                        $scope.comments = result.data.list || [],
                        _.map($scope.comments, function(comment) {
                            comment.content = $filter("restyleMarkDownImage")(comment.content, 800, 800)
                        }),
                        $("#comment-form").find("input:first").focus(),
                        Pager.optionsReady(result.data)
                })
            }
            ,
            $scope.scrollTo = function(id) {
                var old = $location.hash();
                $location.hash(id),
                    $anchorScroll(),
                    $location.hash(old)
            }
            ,
            $scope.watch_show_limit = 10,
            $scope.watchers = [],
            $scope.watcher_loading = !1,
            $scope.watching = !1;
        var loadWatchers = function() {
                $scope.watcher_loading = !0;
                var promise = Topic.watchers({
                    project: PROJECT.id,
                    topic: $scope.topic.id,
                    pageSize: 1e3
                });
                promise.then(function(result) {
                    result.data && ($scope.watchers = result.data.list || [])
                }),
                    promise["finally"](function() {
                        $scope.watcher_loading = !1
                    })
            }
            ;
        $scope.addWatcher = function(member) {
            return Topic.addWatcher({
                id: $scope.topic.id,
                global_key: member.global_key
            }, {})
        }
            ,
            $scope.removeWatcher = function(member) {
                return Topic.removeWatcher({
                    id: $scope.topic.id,
                    global_key: member.global_key
                }, {})
            }
            ,
            $scope.loadCommentsOfType = function(type) {
                $scope.comment_type = type,
                    this.loadComments(1, type)
            }
            ,
            Pager.onChange(function(page) {
                $scope.loadComments(page, $scope.comment_type)
            }),
            $scope.deleteTopic = function(topic) {
                topic && confirm("确认删除该讨论？") && Topic["delete"]({
                    id: topic.id
                }, function(result) {
                    0 == result.code ? (Flash.success().send("讨论删除成功！"),
                        $location.path(PROJECT.project_path + "/topic")) : Errors.handle(result)
                })
            }
            ,
            $scope.commentTopic = function(content) {
                if (!$rootScope.USER)
                    return void Flash.send("请登录后再评论");
                if (content.length > 0) {
                    var promise = Topic.comment({
                        parent: id,
                        id: PROJECT.id
                    }, {
                        content: content
                    });
                    return promise.then(function(result) {
                        0 === $scope.comment_type ? (result.data.content = $filter("restyleMarkDownImage")(result.data.content, 800, 800),
                            $scope.comments.push(result.data)) : $scope.comments.splice(0, 0, result.data),
                            $scope.topic.child_count += 1
                    }),
                        promise
                }
            }
            ,
            $scope.deleteComment = function(comment) {
                comment && confirm("确认删除该评论？") && Topic["delete"]({
                    id: comment.id
                }, function(result) {
                    $scope.comments = Common.removeOfId($scope.comments, comment.id),
                        $scope.topic.child_count -= 1
                })
            }
            ,
            $scope.replyTopic = function(comment) {
                if (comment && comment.owner) {
                    var name = comment.owner.name;
                    LightMdEditorService.atPerson(name, "project-topic-comment-editor")
                }
            }
        ;
        var isOwnerOf = $filter("isOwnerOf");
        $scope.canDelete = function() {
            return isOwnerOf(USER, PROJECT) || isOwnerOf(USER, $scope.topic)
        }
            ,
            $scope.canDeleteComment = function(item) {
                return this.canDelete() || isOwnerOf(USER, item)
            }
            ,
            $scope.canEdit = function() {
                return isOwnerOf(USER, PROJECT) || isOwnerOf(USER, $scope.topic)
            }
            ,
            $scope.can_edit_tag = !1,
            $scope.$watch("Members", function(members) {
                angular.isDefined(members) && angular.forEach(members, function(member) {
                    member.user_id === $scope.USER.id && ($scope.can_edit_tag = !0)
                })
            }),
            $scope.onTagRemove = function(tag) {
                var promise = Topic.delTag({
                    id: $scope.topic.id,
                    label_id: tag.id
                }, {});
                return promise
            }
            ,
            $scope.onTagAdd = function(tag) {
                var promise = Topic.addTag({
                    id: $scope.topic.id,
                    label_id: tag.id
                }, {});
                return promise
            }
            ,
            $scope.onTagCreate = function(tag) {
                if (tag.color && tag.name) {
                    var promise = Project.addTag({
                        id: $scope.PROJECT.id
                    }, {
                        name: tag.name,
                        color: tag.color
                    });
                    return promise.then(function(result) {
                        var id = result.data;
                        tag.id = id,
                            $scope.$emit("project.tag.create", tag)
                    }),
                        promise
                }
            }
    }
    ]),
    angular.module("app").controller("ProjectTopicEditTagController", ["$scope", "Project", "Common", "$rootScope", "TagDropdownService", function($scope, Project, Common, $rootScope, TagDropdownService) {
        $scope.new_tag = {
            name: "",
            color: TagDropdownService.randomColor(),
            saving: !1
        },
            $scope.tag_editable = !1,
            $scope.enableTagEditable = function() {
                $scope.tag_editable = !0
            }
            ,
            $scope.disableTagEditable = function() {
                $scope.tag_editable = !1,
                    angular.forEach($scope.tags, function(tag) {
                        tag.name !== tag.copy.name && tag.copy.name && (tag.name = tag.copy.name),
                        tag.color !== tag.copy.color && tag.copy.color && (tag.color = tag.copy.color)
                    })
            }
            ,
            $scope.tagName = function(tag) {
                return tag.name + (tag.count ? " (" + tag.count + ")" : "")
            }
        ;
        var afterTagCreate = function(tag) {
                var t = {
                    name: tag.name,
                    color: tag.color,
                    id: tag.id,
                    owner_id: tag.owner_id || $scope.USER.id
                };
                t.copy = angular.copy(t),
                    $scope.tags.push(t)
            }
            ;
        $rootScope.$on("project.tag.create", function(event, tag) {
            afterTagCreate(tag)
        }),
            $scope.addIssuesTag = function(tag) {
                if (tag.color && tag.name) {
                    tag.saving = !0;
                    var tPromise = Project.addTag({
                        id: $scope.PROJECT.id
                    }, {
                        name: tag.name,
                        color: tag.color
                    });
                    tPromise.then(function(result) {
                        var id = result.data;
                        tag.id = id,
                            afterTagCreate(tag, id),
                            tag.name = "",
                            tag.color = TagDropdownService.randomColor()
                    }),
                        tPromise["finally"](function() {
                            tag.saving = !1
                        })
                }
            }
            ,
            $scope.removeTag = function(tag) {
                if (confirm("确认删除标签 " + tag.name + " ?")) {
                    tag.updating = !0;
                    var tPromise = Project.delTag({
                        id: $scope.PROJECT.id,
                        label_id: tag.id
                    });
                    tPromise.then(function() {
                        $scope.tags = Common.removeOfId($scope.tags, tag.id),
                            $rootScope.$broadcast("project.tag.remove", tag),
                            $scope.$emit("project.tag.removed", tag)
                    }),
                        tPromise["finally"](function() {
                            tag.updating = !1
                        })
                }
            }
            ,
            $scope.updateTag = function(tag) {
                tag.updating = !0;
                var tPromise = Project.updateTag({
                    id: $scope.PROJECT.id,
                    label_id: tag.id
                }, {
                    name: tag.reverted_name,
                    color: tag.color
                });
                tPromise.then(function() {
                    tag.name = Common.html(tag.reverted_name),
                        tag.copy.name = tag.name,
                        tag.copy.color = tag.color,
                        $rootScope.$broadcast("project.tag.updated", tag)
                }),
                    tPromise["catch"](function() {
                        tag.name = tag.copy.name,
                            tag.color = tag.copy.color
                    }),
                    tPromise["finally"](function() {
                        tag.updating = !1
                    })
            }
            ,
            $scope.onColorChange = function(tag) {
                $scope.updateTag(tag)
            }
            ,
            $scope.selectTag = function(tag) {
                $scope.$emit("project.tag.selected", tag)
            }
            ,
            $scope.can_remove_tag = {},
            $scope.can_edit = !1,
            $scope.$watch("Members", function(members) {
                angular.isDefined(members) && angular.forEach(members, function(member) {
                    member.user_id === $scope.USER.id && ($scope.can_edit = !0)
                })
            }),
            $scope.$watchCollection("tags", function(tags) {
                angular.isDefined(tags) && angular.forEach(tags, function(tag) {
                    tag.reverted_name = Common.revertHtml(tag.name)
                })
            })
    }
    ]),
    angular.module("app").controller("TopicController", ["$scope", "$rootScope", "$routeParams", "Flash", "Errors", "location", "Topic", "Project", function($scope, $rootScope, $routeParams, Flash, Errors, $location, Topic, Project) {
        var region = $routeParams.region || "list"
            , watchers = $routeParams.watchers;
        $scope.tag_menu = "topic",
            $scope.tags = [],
            $scope.watcher_page = "watchers" === watchers,
            isNaN(region) ? "list" === region ? ($scope.region = "list",
                $scope.inner_menu = "all") : "create" === region ? $scope.region = "create" : "tag" !== region || isNaN(parseInt(watchers)) ? ($scope.region = "list",
                $scope.inner_menu = $routeParams.region || "all") : ($scope.region = "list",
                $scope.inner_menu = "tag",
                $scope.cur_tag = $routeParams.tag_name || "") : "edit" === watchers ? $scope.region = "create" : "watchers" === watchers ? $scope.region = "watchers" : $scope.region = "detail";
        var PROJECT = $rootScope.PROJECT
            , USER = $rootScope.USER;
        $scope.order = "desc",
            $scope.orderBy = "comment",
            $scope.counts = {
                my: 0,
                all: 0,
                watching: 0
            };
        var orderValue = function(orderBy, order) {
                var values = {
                    "time.desc": 49,
                    "time.asc": 50,
                    "comment.desc": 51,
                    "comment.asc": 52,
                    "hot.desc": 53,
                    "hot.asc": 54
                };
                return values[orderBy + "." + order]
            }
            ;
        $scope.$on("project.topic.watching", function() {
            loadCount()
        });
        var loadCount = function() {
                Topic.count({
                    id: PROJECT.id
                }, function(result) {
                    $scope.counts = result.data
                })
            }
            ;
        $scope.$on("project.topic.watching", function() {
            loadCount()
        });
        var loadTags = function() {
                var tPromise = Project.tags({
                    id: PROJECT.id,
                    withCount: !0
                });
                tPromise.then(function(result) {
                    $scope.tags = result.data || [],
                        angular.forEach($scope.tags, function(tag) {
                            tag.active = !1,
                                tag.updating = !1
                        })
                })
            }
            ;
        $scope.$on("project.tag.create", function() {
            loadTags()
        }),
            $scope.$on("project.tag.remove", function() {
                loadTags()
            });
        var loadMembers = function() {
                var promise = Project.members({
                    id: $scope.PROJECT.id
                });
                promise.then(function(result) {
                    var members = result.data && result.data.list || [];
                    $scope.Members = members
                })
            }
            ;
        if ($scope.changeTopicListSimply = function(type) {
                if (type) {
                    var url = PROJECT.project_path + "/topic/" + type;
                    $location.search("page", void 0),
                        $location.path(url)
                }
            }
                ,
                $scope.changeTopicList = function(type, orderBy) {
                    if (type) {
                        $scope.region = "list",
                            $scope.inner_menu = type,
                            $scope.order = $scope.orderBy == orderBy && "desc" == $scope.order ? "asc" : "desc",
                            $scope.orderBy = orderBy || "comment";
                        var url = PROJECT.project_path + "/topic/" + type;
                        $location.path(url),
                            $scope.$broadcast("project.topic.change.list", {
                                type: type,
                                orderBy: orderValue($scope.orderBy, $scope.order)
                            })
                    }
                }
                ,
                $scope.canCreate = function() {
                    return PROJECT.is_public && USER || !PROJECT.is_public && PROJECT.current_user_role_id >= $scope.MEMBER_NO_CODE
                }
                ,
                $scope.$on("project.tag.selected", function(event, tag) {
                    var url = PROJECT.project_path + "/topic/tag/" + tag.id;
                    $location.path(url)
                }),
                loadCount(),
                loadTags(),
            $scope.USER && loadMembers(),
            "undefined" == typeof $routeParams.region) {
            var url = PROJECT.project_path + "/topic";
            $location.skipReload().path(url)
        }
    }
    ]),
    angular.module("app").controller("InsertImageController", ["$scope", "$rootScope", function($scope, $rootScope) {
        $scope.PROJECT;
        $scope.insertImages = function(images) {
            $rootScope.$broadcast("on.project.image.insert", images)
        }
    }
    ]),
    angular.module("app").controller("TopicListController", ["$scope", "$rootScope", "$routeParams", "Topic", "Pager", "Markdown", "Errors", "hljsService", "$timeout", "location", "Project", function($scope, $rootScope, $routeParams, Topic, Pager, Markdown, Errors, hljs, $timeout, $location, Project) {
        $scope.topics = [],
            $scope.loading = !1,
            $scope.loaded = !1,
            $scope.preview_loading = !1;
        var region = $routeParams.region;
        region && 0 === region.indexOf("tag") && ($scope.inner_menu = "tag",
            $scope.current_tag = $routeParams.watchers);
        var pager_id = $scope.topic_pager_id = (new Date).getTime();
        Pager = Pager.instance(pager_id, $scope);
        var PROJECT = $rootScope.PROJECT
            , default_type = $routeParams.region
            , orderByCache = 51
            , loadList = function(type, orderBy, tag, page) {
                $scope.loading = !0,
                    $scope.loaded = !1,
                    $scope.topics = [];
                var callback = function(result) {
                    $scope.loaded = !0,
                        $scope.loading = !1,
                    result.data && ($scope.topics = result.data.list || [],
                        Pager.optionsReady(result.data))
                }
                    , promise = null ;
                orderByCache = orderBy || orderByCache,
                    "mine" === type ? (default_type = "mine",
                        promise = Topic.mine({
                            id: PROJECT.id,
                            page: page || 1,
                            pageSize: 10,
                            orderBy: orderBy
                        })) : type && type.indexOf("tag") >= 0 ? (default_type = "tag",
                        promise = Project.tagged({
                            id: PROJECT.id,
                            label_id: tag,
                            page: page || 1,
                            pageSize: 10
                        })) : "watching" === type ? (default_type = "watching",
                        promise = Topic.list_watch({
                            project: PROJECT.id,
                            page: page || 1,
                            pageSize: 10,
                            orderBy: orderBy
                        })) : (default_type = "all",
                        promise = Topic.list({
                            id: PROJECT.id,
                            page: page || 1,
                            pageSize: 10,
                            type: "all" == default_type ? 1 : 2,
                            orderBy: orderBy
                        })),
                    promise.then(callback),
                    promise["catch"](function(error, result) {
                        if (result && 900 === result.code && type.indexOf("tag") >= 0) {
                            var url = PROJECT.project_path + "/topic/all";
                            return $location.path(url),
                                !1
                        }
                    })
            }
            ;
        Pager.onChange(function(page) {
            loadList(default_type, orderByCache, $scope.current_tag, page)
        }),
            loadList(default_type, null , $scope.current_tag, Pager.currentPage()),
            $scope.$on("project.topic.change.list", function(e, opt) {
                loadList(opt.type, opt.orderBy, $scope.current_tag)
            }),
            $scope.goDetail = function(topic) {
                if (topic) {
                    var url = PROJECT.project_path + "/topic/" + topic.id;
                    $location.path(url)
                }
            }
        ;
        var hidePreviewBut = function(topic) {
                for (var i = 0; i < $scope.topics.length; i++) {
                    var t = $scope.topics[i];
                    t.previewed = !1,
                    topic.id == t.id && (t.previewed = !0)
                }
                topic.previewed = !0
            }
            ;
        $scope.previewTopic = function(event, topic) {
            if (topic) {
                if (topic.previewed = !topic.previewed,
                    topic.previewed && !topic.preview) {
                    $scope.preview_loading = !0;
                    var promise = Markdown.simple_preview({
                        content: topic.content
                    });
                    promise.then(function(result) {
                        $scope.preview_loading = !1,
                            topic.preview = result.data || "",
                            $timeout(function() {
                                $("#topics-list .preview").find("pre code, code").each(function(i, e) {
                                    hljs.highlightBlock(e)
                                })
                            }, 100)
                    })
                }
                topic.previewed && ($timeout(function() {
                    $("#topics-list .preview").find("pre code, code").each(function(i, e) {
                        hljs.highlightBlock(e)
                    })
                }, 100),
                    hidePreviewBut(topic)),
                    event.preventDefault()
            }
        }
            ,
            $scope.$watch("tags", function(tags) {
                if (tags && tags.length > 0) {
                    var tag_id = $routeParams.watchers;
                    angular.forEach(tags, function(tag) {
                        tag.id == tag_id && ($scope.cur_tag = tag.name)
                    })
                }
            })
    }
    ]),
    angular.module("app").controller("TopicWatchersController", ["$scope", "$rootScope", "$routeParams", "$anchorScroll", "Topic", "Errors", "$timeout", "$location", "Pager", "Flash", "PageTitle", "Common", "$filter", "LightMdEditorService", function($scope, $rootScope, $routeParams, $anchorScroll, Topic, Errors, $timeout, $location, Pager, Flash, PageTitle, Common, $filter, LightMdEditorService) {
        var id = +$routeParams.region
            , PROJECT = $rootScope.PROJECT
            , USER = $rootScope.USER;
        $scope.PROJECT = PROJECT;
        var topic_detail_pager_id = $scope.topic_detail_pager_id = Pager.timeBasedId();
        if (Pager = Pager.instance(topic_detail_pager_id, $scope),
                isNaN(id))
            return void $location.path(PROJECT.project_path + "/topic");
        $scope.loaded = !1,
            $scope.watched_msg = "已关注",
            $scope.topic = {},
            $scope.comment = {
                content: ""
            },
            $scope.comments = [],
            $scope.detail_loading = !0,
            $scope.comments_loading = !0,
            $scope.comments_loaded = !1,
            $scope.commenting = !1,
            $scope.comment_type = 0;
        var topic_promise = Topic.detail({
            id: id
        }, function(result) {
            $scope.detail_loading = !1,
                $scope.topic = result.data || {},
                $scope.comment.parent_id = result.data.id,
                PageTitle.set($scope.topic.title, PROJECT.name, "Coding.net")
        });
        topic_promise["catch"](function(error, result) {
            return result && 404 == result.code ? ($location.path(PROJECT.project_path + "/topic"),
                Flash.fail().send("该讨论不存在！"),
                !1) : void 0
        }),
            topic_promise.then(function() {
                $scope.loadComments(Pager.currentPage()),
                    loadWatchers()
            }),
            $scope.loadComments = function(page, type) {
                Topic.comments({
                    id: id,
                    page: page || 1,
                    pageSize: 10,
                    type: type || 0
                }, function(result) {
                    $scope.comments_loading = !1,
                        $scope.comments_loaded = !0,
                        $scope.comments = result.data.list || [],
                        $("#comment-form").find("input:first").focus(),
                        Pager.optionsReady(result.data)
                })
            }
            ,
            $scope.scrollTo = function(id) {
                var old = $location.hash();
                $location.hash(id),
                    $anchorScroll(),
                    $location.hash(old)
            }
            ,
            $scope.watch_show_limit = 10,
            $scope.total_watcher_count = 0,
            $scope.watchers = [],
            $scope.watcher_loading = !1,
            $scope.watching = !1;
        var loadWatchers = function() {
                $scope.watcher_loading = !0;
                var promise = Topic.watchers({
                    project: PROJECT.id,
                    topic: $scope.topic.id
                });
                promise.then(function(result) {
                    result.data && ($scope.total_watcher_count = result.data.totalRow || 0,
                        $scope.watchers = result.data.list || [])
                }),
                    promise["finally"](function() {
                        $scope.watcher_loading = !1
                    })
            }
            ;
        $scope.toggleWatch = function() {
            $scope.watching = !0;
            var promise = Topic.watch({
                project: PROJECT.id,
                topic: $scope.topic.id
            }, {});
            promise.then(function() {
                loadWatchers(),
                    $scope.topic.watching = !$scope.topic.watching
            }),
                promise["finally"](function() {
                    $scope.watching = !1
                })
        }
            ,
            $scope.loadCommentsOfType = function(type) {
                $scope.comment_type = type,
                    this.loadComments(1, type)
            }
            ,
            Pager.onChange(function(page) {
                $scope.loadComments(page, $scope.comment_type)
            }),
            $scope.deleteTopic = function(topic) {
                topic && confirm("确认删除该讨论？") && Topic["delete"]({
                    id: topic.id
                }, function(result) {
                    0 == result.code ? (Flash.success().send("讨论删除成功！"),
                        $location.path(PROJECT.project_path + "/topic")) : Errors.handle(result)
                })
            }
            ,
            $scope.commentTopic = function(content) {
                if (!$rootScope.USER)
                    return void Flash.send("请登录后再评论");
                if (content.length > 0) {
                    var promise = Topic.comment({
                        parent: id,
                        id: PROJECT.id
                    }, {
                        content: content
                    });
                    return promise.then(function(result) {
                        0 === $scope.comment_type ? $scope.comments.push(result.data) : $scope.comments.splice(0, 0, result.data),
                            $scope.topic.child_count += 1
                    }),
                        promise
                }
            }
            ,
            $scope.deleteComment = function(comment) {
                comment && confirm("确认删除该评论？") && Topic["delete"]({
                    id: comment.id
                }, function(result) {
                    $scope.comments = Common.removeOfId($scope.comments, comment.id),
                        $scope.topic.child_count -= 1
                })
            }
            ,
            $scope.replyTopic = function(comment) {
                if (comment && comment.owner) {
                    var name = comment.owner.name;
                    LightMdEditorService.atPerson(name)
                }
            }
        ;
        var isOwnerOf = $filter("isOwnerOf");
        $scope.canDelete = function() {
            return isOwnerOf(USER, PROJECT) || isOwnerOf(USER, $scope.topic)
        }
            ,
            $scope.canDeleteComment = function(item) {
                return this.canDelete() || isOwnerOf(USER, item)
            }
            ,
            $scope.canEdit = function() {
                return isOwnerOf(USER, PROJECT) || isOwnerOf(USER, $scope.topic)
            }
            ,
            $scope.can_edit_tag = !1,
            $scope.$watch("Members", function(members) {
                angular.isDefined(members) && angular.forEach(members, function(member) {
                    member.user_id === $scope.USER.id && ($scope.can_edit_tag = !0)
                })
            })
    }
    ]),
    angular.module("app").controller("ProjectTweetController", ["$scope", "$rootScope", "Tweet", "location", "Common", "$filter", "BubbleCommentFormService", "Flash", function($scope, $rootScope, Tweet, $location, Common, $filter, bcfService, Flash) {
        function load() {
            Number($location.search().pp) ? (getTweet(),
                $scope.one = !0) : (getTweets(),
                $scope.one = !1)
        }
        function getTweets(lastId, callback) {
            $scope.loading = !0;
            var p = Tweet.project_tweets({
                project_id: PROJECT.id,
                last_id: lastId
            }, function(result) {
                return 0 === result.code ? angular.isFunction(callback) ? void callback(result.data) : void ($scope.tweets = filterImage(result.data)) : void 0
            });
            p["finally"](function() {
                $scope.loading = !1
            })
        }
        function getTweet() {
            var tweetId = Number($location.search().pp);
            if (tweetId) {
                $scope.loading = !0;
                var p = Tweet.project_tweet({
                    project_id: PROJECT.id,
                    tweet_id: tweetId
                }, function(result) {
                    0 === result.code && ($scope.tweets = filterImage([result.data]))
                });
                p["finally"](function() {
                    $scope.loading = !1
                })
            }
        }
        function filterImage(tweets) {
            return angular.forEach(tweets, function(t, key) {
                t.content = $filter("restyleMarkDownImage")(t.content),
                    t.content = $filter("restyleEmoji")(t.content)
            }),
                tweets
        }
        var PROJECT = ($rootScope.USER,
            $rootScope.PROJECT);
        $scope.PAGE_SIZE = 20,
            $scope.show_more = !0,
            $scope.tweets = [],
            $scope.one = !1,
            $scope.loading = !0,
            $scope.feed_editor_config = {
                content: ""
            },
            $scope.rand = Common.uuid,
            load();
        var unLocate = $rootScope.$on("$locationChangeStart", function() {
            load()
        });
        $scope.$on("$destroy", function() {
            unLocate(),
                unSubmit()
        }),
            $scope.refresh = function() {
                $scope.loading || load()
            }
            ,
            $scope.more = function(lastId) {
                getTweets(lastId, function(tweets) {
                    tweets && tweets.length < $scope.PAGE_SIZE && ($scope.show_more = !1);
                    for (var i = 0, l = tweets.length; l > i; i++)
                        $scope.tweets.push(tweets[i])
                })
            }
        ;
        var unSubmit = $scope.$on("feed.editor.submit", function($e, content, progress) {
            progress.pending();
            var p = Tweet.project_tweet_create({
                project_id: PROJECT.id
            }, {
                content: $scope.feed_editor_config.content
            }, function(result) {
                0 === result.code && ($scope.tweets.unshift(result.data),
                    $scope.feed_editor_config.content = "",
                    Flash.success().send("发表成功"),
                    progress.done())
            });
            p["catch"](function() {
                progress.error()
            })
        });
        $scope["delete"] = function(tweet) {
            if (confirm("确认删除该泡泡?")) {
                Tweet.project_tweet_delete({
                    project_id: PROJECT.id,
                    tweet_id: tweet.id
                }, function(result) {
                    if (0 === result.code) {
                        var index = Common.findIndex($scope.tweets, tweet, "_id");
                        $scope.tweets.splice(index, 1)
                    }
                })
            }
        }
            ,
            $scope.comment = function(tweet) {
                if (!tweet.sending) {
                    tweet.sending = !0;
                    var p = Tweet.project_tweet_comment({
                        project_id: PROJECT.id,
                        tweet_id: tweet.id
                    }, {
                        content: tweet.comment_content
                    }, function(result) {
                        0 === result.code && (tweet.comment_list.unshift(result.data),
                            tweet.comments++,
                            tweet.comment_content = "")
                    });
                    p["finally"](function() {
                        tweet.sending = !1
                    })
                }
            }
            ,
            $scope.deleteComment = function(comment, tweet) {
                if (confirm("确认删除该评论?")) {
                    Tweet.project_tweet_comment_delete({
                        project_id: PROJECT.id,
                        tweet_id: comment.tweet_id,
                        id: comment.id
                    }, function(result) {
                        if (0 === result.code) {
                            var index = Common.findIndex(tweet.comment_list, comment, "_id");
                            tweet.comment_list.splice(index, 1),
                                tweet.comments = --tweet.comments || 0
                        }
                    })
                }
            }
            ,
            $scope.reply = function(comment, tweet, $event) {
                tweet.comment_content = bcfService.atPerson("", tweet.comment_content, comment.owner.name),
                    $($event.target).closest(".tweet-item").find(".tweet-comment-input").focus()
            }
            ,
            $scope.comments = function(tweet) {
                if (!tweet.commentLoading || tweet.commentMore) {
                    tweet.commentLoading = !0;
                    var p = Tweet.project_tweet_comments({
                        project_id: PROJECT.id,
                        tweet_id: tweet.id,
                        last_id: tweet.comment_list[tweet.comment_list.length - 1].id
                    }, function(result) {
                        if (0 === result.code) {
                            tweet.commentMore = !1;
                            for (var i = 0, l = result.data.length; l > i; i++)
                                tweet.comment_list.push(result.data[i])
                        }
                    });
                    p["finally"](function() {
                        tweet.commentLoading = !1
                    })
                }
            }
            ,
            $scope.detail = function(tweet) {
                tweet.id && $location.search("pp", tweet.id)
            }
            ,
            $scope.back = function() {
                $location.search("pp", void 0)
            }
    }
    ]),
    angular.module("app").controller("TweetListController", ["$scope", "$rootScope", "$location", "$routeParams", "User", "Tweet", "Activity", "Common", "TweetTopic", "Flash", "$timeout", function($scope, $rootScope, $location, $routeParams, User, Tweet, Activity, Common, TweetTopic, Flash, $timeout) {
        var startedRefresh = !1
            , lastId = 0
            , TWEET_SIZE = 20;
        $scope.best_users = [],
            $scope.hot_topics = [],
            $scope.tweet_loading = !1,
            $scope.tweets = [],
            $scope.sort = $routeParams.region || "time",
            $scope.show_sort = $scope.sort,
            $scope.load_auto_refresh = null ,
            $scope.show_more = !1,
            $scope.hot_loading = !1,
            $scope.filter_switch = !0;
        var loadHotUsers = function() {
                Tweet.best_user({}, function(result) {
                    $scope.best_users = result.data,
                        angular.forEach($scope.best_users, function(user) {
                            user.avatar = Common.thumbnail(user.avatar, 128)
                        })
                })
            }
            , loadHotTopic = function() {
                if (!$scope.hot_loading) {
                    $scope.hot_loading = !0;
                    var tPromise = TweetTopic.hot_topic({
                        limit: 6
                    }, function(result) {
                        $scope.hot_topics = result.data
                    });
                    tPromise["finally"](function() {
                        $scope.hot_loading = !1
                    })
                }
            }
            , loadTweets = function(id, userTweetPromise) {
                var tPromise = null ;
                if ($scope.show_more = !0,
                        $scope.tweet_loading = !0,
                    "friends" === $scope.sort)
                    tPromise = userTweetPromise || Activity.user_tweet({
                            last_id: id
                        });
                else {
                    var params = {
                        sort: $scope.sort,
                        last_id: id,
                        size: TWEET_SIZE
                    };
                    "time" === $scope.sort && (params.filter = $scope.filter_switch),
                        tPromise = Tweet.public_tweets(params)
                }
                return tPromise.then(function(result) {
                    $scope.show_sort = $scope.sort;
                    var tweets = result.data || [];
                    0 === tweets.length && ($scope.show_more = !1)
                }),
                    tPromise["finally"](function() {
                        $scope.tweet_loading = !1
                    }),
                    tPromise
            }
            , loadTweetBySort = function(userTweetPromise) {
                $scope.tweet_loading = !0,
                    $scope.tweets = [];
                var aPromise = loadTweets(null , userTweetPromise);
                aPromise.then(function(result) {
                    $scope.tweets = result.data || [],
                    $scope.tweets.length > 0 && (lastId = $scope.tweets[$scope.tweets.length - 1].id)
                }),
                    loadHotUsers(),
                    loadHotTopic()
            }
            ;
        $scope.onBubbleRemove = function(tweet) {
            $scope.tweets = Common.removeOfId($scope.tweets, tweet.id)
        }
            ,
            $scope.showMore = function() {
                if ($scope.tweets.length > 0) {
                    var tPromise = loadTweets(lastId);
                    tPromise.then(function(result) {
                        var tweets = result.data || [];
                        $scope.tweets = $scope.tweets.concat(tweets),
                        tweets.length > 0 && (lastId = $scope.tweets[$scope.tweets.length - 1].id)
                    })
                }
            }
            ,
            $scope.switchSort = function(mode) {
                $scope.tweet_loading || ($scope.sort = mode,
                    "hot" === mode ? (startedRefresh = !1,
                        $location.skipReload().path("/pp/" + mode)) : "friends" === mode ? $location.skipReload().path("/pp/" + mode) : $location.skipReload().path("/pp/" + mode),
                    loadTweetBySort())
            }
            ,
            $scope.watch_topic = function(topic) {
                if (!topic.watching) {
                    topic.watching = !0;
                    var promise = TweetTopic.watch({
                        id: topic.id
                    }, {}, function() {
                        topic.watched = !0,
                            Flash.success().send("关注成功")
                    });
                    promise["finally"](function() {
                        topic.watching = !1
                    })
                }
            }
            ,
            $scope.unwatch_topic = function(topic) {
                if (!topic.unwatching) {
                    topic.unwatching = !0;
                    var promise = TweetTopic.unwatch({
                        id: topic.id
                    }, {}, function() {
                        topic.watched = !1,
                            Flash.success().send("取消关注成功")
                    });
                    promise["finally"](function() {
                        topic.unwatching = !1
                    })
                }
            }
            ,
            $scope.$on("$destroy", function() {
                $timeout.cancel($scope.load_auto_refresh),
                    $scope.load_auto_refresh = []
            }),
            $scope.refreshPublicTweets = function() {
                $scope.tweet_loading || ($scope.tweets = [],
                    loadTweetBySort())
            }
            ,
            $scope.toggleFilter = function() {
                $scope.tweet_loading || ($scope.filter_switch = !$scope.filter_switch,
                    loadTweetBySort())
            }
            ,
            loadTweetBySort()
    }
    ]),
    angular.module("app").controller("TweetFeedEditController", ["$scope", "$localStorage", "$rootScope", "Tweet", "Errors", "Flash", "TweetTopic", function($scope, $localStorage, $rootScope, Tweet, Errors, Flash, TweetTopic) {
        $scope.topics = [],
            $scope.feedEditor = void 0;
        var _updateTweetsMessage = function(tweet) {
                return $scope.tweets.splice(0, 0, angular.extend(tweet, {
                    comment_list: [],
                    like_users: [],
                    owner: $rootScope.USER
                }))
            }
            ;
        $scope.feed_editor_config = {
            content: $localStorage.tweet_message || ""
        },
            $scope.$watch("feed_editor_config.content", function(content) {
                $localStorage.tweet_message = content
            });
        var initFeedEditor = function() {
                TweetTopic.default_topics(function(result) {
                    $scope.topics = result.data || []
                })
            }
            ;
        $scope.$on("feed.editor.submit", function($event, content, progress) {
            if ($event.stopPropagation(),
                    progress.pending(),
                    $.isEmptyObject(content))
                return void progress.error();
            var promise = Tweet.create({
                content: content
            }, function(result) {
                progress.done();
                var tweet = result.data;
                _updateTweetsMessage(tweet),
                    Flash.success().send("发表成功")
            });
            promise["catch"](function() {
                progress.error()
            })
        }),
            initFeedEditor()
    }
    ]),
    angular.module("app").controller("TweetTopicListController", ["$scope", "$rootScope", "$location", "$routeParams", "User", "TweetTopic", "TextService", "Flash", "Common", "USER", "$injector", function($scope, $rootScope, $location, $routeParams, User, TweetTopic, TextService, Flash, Common, USER, $injector) {
        var USER = USER.resolve($injector);
        $scope.topics = [],
            $scope.marketing_topics = [],
            $scope.watched_topics = [],
            $scope.user = void 0,
            $scope.hot_loading = !1,
            $scope.marketing_loading = !1,
            $scope.watched_loading = !1,
            $scope.joined_loading = !1,
            $scope.show_watch = !0,
            $scope.new_show_limit = 10;
        var loadHotTopic = function() {
                if (!$scope.hot_loading) {
                    $scope.hot_loading = !0;
                    var tPromise = TweetTopic.hot_topic({
                        page: 1,
                        pageSize: 20
                    }, function(result) {
                        $scope.topics = result.data,
                            angular.forEach($scope.topics, function(topic) {
                                topic.hot_tweet && (topic.hot_tweet.content = TextService.text(topic.hot_tweet.content))
                            })
                    });
                    tPromise["finally"](function() {
                        $scope.hot_loading = !1
                    })
                }
            }
            , loadTopTopic = function() {
                if (!$scope.marketing_loading) {
                    $scope.marketing_loading = !0;
                    var tPromise = TweetTopic.marketing_ad({
                        page: 1,
                        pageSize: 3
                    }, function(result) {
                        angular.forEach(result.data, function(topic) {
                            topic.description = TextService.text(topic.description)
                        }),
                            $scope.marketing_topics = result.data
                    });
                    tPromise["finally"](function() {
                        $scope.marketing_loading = !1
                    })
                }
            }
            , loadWatched = function() {
                if (!$scope.watched_loading) {
                    $scope.watched_loading = !0;
                    var tPromise = TweetTopic.watched({
                        global_key: $scope.user.global_key
                    }, {
                        page: 1,
                        pageSize: 6
                    }, function(result) {
                        $scope.watched_topics = result.data && result.data.list || []
                    });
                    tPromise["finally"](function() {
                        $scope.watched_loading = !1
                    })
                }
            }
            , synchronizeTopicStatus = function(topic, topic_list) {
                if (topic_list && topic) {
                    var t = Common.findOfId(topic_list, topic.id, "id");
                    t ? t.watched = topic.watched : topic.watched && topic_list.splice(0, 0, topic)
                }
            }
            ;
        $scope.watch = function(topic) {
            if (!topic.watching) {
                topic.watching = !0;
                var promise = TweetTopic.watch({
                    id: topic.id
                }, {}, function() {
                    topic.watched = !0,
                        synchronizeTopicStatus(topic, $scope.watched_topics),
                        synchronizeTopicStatus(topic, $scope.topics),
                        Flash.success().send("关注成功")
                });
                promise["finally"](function() {
                    topic.watching = !1
                })
            }
        }
            ,
            $scope.unwatch = function(topic) {
                if (!topic.unwatching) {
                    topic.unwatching = !0;
                    var promise = TweetTopic.unwatch({
                        id: topic.id
                    }, {}, function() {
                        topic.watched = !1,
                            synchronizeTopicStatus(topic, $scope.watched_topics),
                            synchronizeTopicStatus(topic, $scope.topics),
                            Flash.success().send("取消关注成功")
                    });
                    promise["finally"](function() {
                        topic.unwatching = !1
                    })
                }
            }
            ,
            $scope.showMoreNew = function(topic) {
                return topic.user_count > 10
            }
            ,
            USER.then(function(user) {
                $scope.user = user,
                    loadWatched()
            }),
            loadHotTopic(),
            loadTopTopic()
    }
    ]),
    angular.module("app").controller("TweetTopicDetailController", ["$scope", "$rootScope", "$routeParams", "location", "User", "Tweet", "TweetTopic", "Errors", "Flash", "Common", "Pager", "PageTitle", function($scope, $rootScope, $routeParams, location, User, Tweet, TweetTopic, Errors, Flash, Common, Pager, PageTitle) {
        var USER = $scope.USER;
        $rootScope.$watch("USER", function(user) {
            USER = user
        }),
            $scope.topic_id = $routeParams.topic_id,
            $scope.region = $routeParams.region || "detail",
            $scope.sort = $routeParams.tab || "new",
            $scope.topic = {},
            $scope.hot_topics = [],
            $scope.top_tweet = {},
            $scope.hot_joins = [],
            $scope.topic_tweets = [],
            $scope.watchers = [],
            $scope.joins = [],
            $scope.topic_loading = !1,
            $scope.topic_watching = !1,
            $scope.topic_unwatching = !1,
            $scope.hot_loading = !1,
            $scope.tweet_loading = !1,
            $scope.hot_joined_loading = !1,
            $scope.watcher_loading = !1,
            $scope.join_loading = !1,
            $scope.global_following = !1,
            $scope.top_loading = !1,
            $scope.show_more = !0;
        var pager_id = $scope.pager_id = (new Date).getTime()
            , CPager = Pager.instance(pager_id, $scope);
        CPager.onChange(function(page) {
            "watchers" === $scope.region ? loadWatchers(page) : "joins" === $scope.region && loadJoins(page)
        });
        var loadTopic = function(just_topic) {
                if (!$scope.topic_loading) {
                    just_topic || ($scope.topic_loading = !0);
                    var promise = TweetTopic.detail({
                        id: $scope.topic_id
                    }, function(result) {
                        $scope.topic = result.data;
                        var arr = [];
                        arr.push("话题"),
                            arr.push("#" + $scope.topic.name + "#"),
                            arr.push("Coding.net"),
                            PageTitle.set.apply(this, arr),
                        !just_topic && initFeedEditor($scope.topic)
                    });
                    promise["finally"](function() {
                        $scope.topic_loading = !1,
                        !just_topic && loadTweets($scope.sort)
                    })
                }
            }
            ;
        $scope.watchTopic = function() {
            if (!$scope.topic_watching) {
                $scope.topic_watching = !0;
                var promise = TweetTopic.watch({
                    id: $scope.topic_id
                }, {}, function() {
                    $scope.topic.watched = !0,
                        $scope.topic.watchers++,
                        Flash.success().send("关注成功")
                });
                promise["finally"](function() {
                    $scope.topic_watching = !1
                })
            }
        }
            ,
            $scope.unwatchTopic = function() {
                if (!$scope.topic_unwatching) {
                    $scope.topic_unwatching = !0;
                    var promise = TweetTopic.unwatch({
                        id: $scope.topic_id
                    }, {}, function() {
                        $scope.topic.watched = !1,
                            $scope.topic.watchers--,
                            Flash.success().send("取消关注成功")
                    });
                    promise["finally"](function() {
                        $scope.topic_unwatching = !1
                    })
                }
            }
        ;
        var loadHotTopic = function() {
                if (!$scope.hot_loading) {
                    $scope.hot_loading = !0;
                    var promise = TweetTopic.hot_topic({
                        limit: 6
                    }, function(result) {
                        $scope.hot_topics = result.data
                    });
                    promise["finally"](function() {
                        $scope.hot_loading = !1
                    })
                }
            }
            , loadHotJoined = function() {
                $scope.hot_joined_loading || ($scope.hot_joined_loading = !0,
                    TweetTopic.hot_joined({
                        id: $scope.topic_id
                    }, {}, function(result) {
                        $scope.hot_joins = result.data
                    })["finally"](function() {
                        $scope.hot_joined_loading = !1
                    }))
            }
            , loadTweets = function(sort) {
                if (!$scope.tweet_loading) {
                    $scope.tweet_loading = !0;
                    var promise = TweetTopic.tweets({
                        id: $scope.topic_id,
                        sort: sort
                    }, {}, function(result) {
                        $scope.topic_tweets = result.data || [];
                        var size = 20;
                        $scope.topic_tweets.length < size && ($scope.show_more = !1)
                    });
                    promise["finally"](function() {
                        $scope.tweet_loading = !1
                    })
                }
            }
            , loadWatchers = function(page) {
                $scope.watcher_loading || ($scope.watcher_loading = !0,
                    TweetTopic.watchers({
                        id: $scope.topic_id,
                        page: page,
                        pageSize: 10
                    }, {}, function(result) {
                        $scope.watchers = result.data && result.data.list || [],
                            CPager.optionsReady(result.data)
                    })["finally"](function() {
                        $scope.watcher_loading = !1
                    }))
            }
            , loadJoins = function(page) {
                $scope.join_loading || ($scope.join_loading = !0,
                    TweetTopic.joins({
                        id: $scope.topic_id,
                        page: page,
                        pageSize: 10
                    }, {}, function(result) {
                        $scope.joins = result.data && result.data.list || [],
                            CPager.optionsReady(result.data)
                    })["finally"](function() {
                        $scope.join_loading = !1
                    }))
            }
            , loadTopTweets = function() {
                $scope.top_loading || ($scope.top_loading = !0,
                    TweetTopic.top_tweet({
                        id: $scope.topic_id
                    }, {}, function(result) {
                        $scope.top_tweet = result.data
                    })["finally"](function() {
                        $scope.top_loading = !1
                    }))
            }
            , _updateTweetsMessage = function(tweet) {
                return $scope.topic_tweets.splice(0, 0, angular.extend(tweet, {
                    comment_list: [],
                    like_users: [],
                    owner: $rootScope.USER
                }))
            }
            ;
        $scope.follow = function(user) {
            if (!USER)
                return void (confirm("需要登录后才能关注，是否立即登录？") && (location.href = "/login"));
            if (!$scope.global_following) {
                $scope.global_following = !0,
                    user.following = !0;
                var promise = User.follow({
                    users: user.global_key
                }, function(result) {
                    0 == result.code ? (user.followed = !0,
                        Flash.success().send("关注成功")) : Errors.handle(result)
                });
                promise["finally"](function() {
                    user.following = !1,
                        $scope.global_following = !1
                })
            }
        }
            ,
            $scope.watch = function(topic) {
                if (!topic.watching) {
                    topic.watching = !0;
                    var promise = TweetTopic.watch({
                        id: topic.id
                    }, {}, function() {
                        topic.watched = !0,
                            Flash.success().send("关注成功")
                    });
                    promise["finally"](function() {
                        topic.watching = !1
                    })
                }
            }
            ,
            $scope.unwatch = function(topic) {
                if (!topic.unwatching) {
                    topic.unwatching = !0;
                    var promise = TweetTopic.unwatch({
                        id: topic.id
                    }, {}, function() {
                        topic.watched = !1,
                            Flash.success().send("取消关注成功")
                    });
                    promise["finally"](function() {
                        topic.unwatching = !1
                    })
                }
            }
            ,
            $scope.switchSort = function(mode) {
                $scope.tweet_loading || ($scope.sort = mode,
                    "hot" === mode ? location.skipReload().path("/pp/topic/" + $scope.topic_id + "/detail/" + mode) : location.skipReload().path("/pp/topic/" + $scope.topic_id + "/detail/" + mode),
                    loadTweets(mode))
            }
            ,
            $scope.onBubbleRemove = function(tweet) {
                $scope.topic_tweets = Common.removeOfId($scope.topic_tweets, tweet.id)
            }
            ,
            $scope.onTopBubbleRemove = function() {
                $scope.top_tweet = {}
            }
            ,
            $scope.showMore = function() {
                if ($scope.tweet_loading = !0,
                    $scope.topic_tweets.length > 0) {
                    var id = $scope.topic_tweets[$scope.topic_tweets.length - 1].id
                        , size = 20;
                    TweetTopic.tweets({
                        sort: $scope.sort,
                        last_id: id,
                        size: size,
                        id: $scope.topic_id
                    }, function(result) {
                        var tweets = result.data;
                        tweets.length < size && ($scope.show_more = !1),
                            $scope.topic_tweets = $scope.topic_tweets.concat(tweets)
                    })["finally"](function() {
                        $scope.tweet_loading = !1
                    })
                }
            }
            ,
            $scope.refreshPublicTweets = function() {
                $scope.tweet_loading || ($scope.topic_tweets = [],
                    loadTweets($scope.sort))
            }
            ,
            $scope.showMoreNew = function(topic) {
                return topic.user_count > 10
            }
        ;
        var initFeedEditor = function(default_topic) {
                var name = default_topic.name ? "#" + default_topic.name + "#" : "";
                $scope.feed_editor_config = {
                    content: name || ""
                }
            }
            ;
        $scope.$on("feed.editor.submit", function($event, content, progress) {
            if ($event.stopPropagation(),
                    progress.pending(),
                    $.isEmptyObject(content))
                return void progress.error();
            var promise = Tweet.create({
                content: content
            }, function(result) {
                progress.done();
                var tweet = result.data;
                _updateTweetsMessage(tweet),
                    Flash.success().send("发表成功"),
                    loadTopic(!0)
            });
            promise["catch"](function() {
                progress.error()
            })
        }),
            loadTopic(),
            loadHotTopic(),
            loadTopTweets(),
            "detail" === $scope.region ? loadHotJoined() : "watchers" === $scope.region ? (loadWatchers(),
                loadHotJoined(1)) : "joins" === $scope.region && (loadJoins(),
                loadHotJoined(1))
    }
    ]),
    angular.module("app").controller("CodingUIController", ["$scope", "$routeParams", function($scope, $routeParams) {
        var region = $routeParams.region;
        $scope.modules = ["home", "link", "button", "input", "avatar", "loadMore", "util", "icon"],
            $scope.region = $.inArray(region, $scope.modules) >= 0 ? region : "home",
            $scope.sizes = ["mini", "small", "default", "medium", "large", "huge", "disabled"],
            $scope.colors = ["white", "blue", "light gray", "gray", "dark gray", "red", "green", "yellow"],
            $scope.default_avatar_size = 32,
            $scope.avatar_sizes = [18, 24, 32, 42, 48, 56, 64, 96, 128, 208],
            $scope.icons = ["monkey", "logo", "logo-v", "bubble", "project", "read", "advanced-setting", "fork", "pull-request", "coding-url", "merge-request", "coding-recommended", "coding-anchor", "coding-gold", "no-newline", "coding-share", "coding-organization", "coding-compare", "coding-commit"],
            $scope.activity_icons = [{
                name: "Depot",
                icons: ["code"]
            }, {
                name: "MergeRequestBean",
                icons: ["coding merge-request"]
            }, {
                name: "MergeRequestComment",
                icons: ["coding merge-request"]
            }, {
                name: "Project",
                icons: ["coding project"]
            }, {
                name: "ProjectFile",
                icons: ["file", "open folder"]
            }, {
                name: "ProjectMember",
                icons: ["coding project", "users"]
            }, {
                name: "ProjectStar",
                icons: ["star"]
            }, {
                name: "ProjectTopic",
                icons: ["chat", "comment"]
            }, {
                name: "ProjectWatcher",
                icons: ["unhide"]
            }, {
                name: "PullRequestBean",
                icons: ["coding pull-request"]
            }, {
                name: "PullRequestComment",
                icons: ["coding pull-request"]
            }, {
                name: "QcTask",
                icons: ["certificate"]
            }, {
                name: "Task",
                icons: ["tasks"]
            }]
    }
    ]),
    angular.module("app").controller("AccountAboutController", ["$scope", "AccountAboutService", function($scope, AccountAboutService) {
        AccountAboutService.getPhotoBy().then(function(photo_by) {
            $scope.photo_by = photo_by
        })
    }
    ]).service("AccountAboutService", [function() {
        var photo_by = ["http://eput.com/sima", "http://eput.com/bagedar", "http://eput.com/bagedar", "http://eput.com/yisheng", "http://eput.com/panpanvision", "http://eput.com/hxwjja", "http://eput.com/helentang", "http://eput.com/zhouzhi", "http://eput.com/kevinmark3", "http://eput.com/oasis", "http://eput.com/stanleychen", "http://eput.com/Thomasfan"];
        return {
            setPhotoBy: function(photoby) {
                this.photo_by = photoby
            },
            getPhotoBy: function() {
                return this.photo_by
            },
            photoBy: function(index) {
                return photo_by[index - 1]
            }
        }
    }
    ]),
    angular.module("app").controller("ConfirmController", ["$rootScope", "$scope", "$location", "User", "$http", "Flash", "Common", "RegisterService", "$q", "$interval", function($rootScope, $scope, $location, User, $http, Flash, Common, RegisterService, $q, $interval) {
        function canSubmit() {
            return "phone" === $scope.activateType() ? $scope.global_key_ok && $scope.email_ok : "email" === $scope.activateType() ? $scope.email_ok : $scope.form.email && $scope.form.key && $scope.password_ok && $scope.confirm_ok
        }
        var oauth = $scope.oauth = $location.search();
        if ($scope.activateType = function() {
                return $location.search().phone ? "phone" : "email" === $location.search().type ? "email" : oauth.via ? "oauth" : "normal"
            }
                ,
                $scope.form = {
                    password: "",
                    confirm: ""
                },
            "phone" === $scope.activateType())
            $scope.form.phone = oauth.phone;
        else {
            $scope.form.email = oauth.email,
                $scope.form.key = oauth.key;
            var baPromise = User.beforeActivate($scope.form);
            baPromise["catch"](function(error, result) {
                return 1024 === result.code ? (Flash.fail().send("用户激活链接失效，请选择<a href='/user/activate'>重发激活邮件</a>"),
                    !1) : ($location.search(""),
                    void $location.path("/"))
            })
        }
        $scope.global_key_ok = !0,
            $scope.global_key_checking = !1,
            $scope.checkGlobalKey = function(global_key) {
                var deferred = $q.defer();
                return $scope.global_key_checking = !0,
                    RegisterService.checkGlobalKeyIllegal(global_key, function(error) {
                        $scope.global_key_checking = !1,
                            deferred.resolve(),
                            error ? ($scope.global_key_ok = !1,
                                $scope.gk_error_msg = error) : $scope.global_key_ok = !0
                    }),
                    deferred.promise
            }
            ,
            $scope.email_checking = !1,
            $scope.showEmailNotice = !1,
            $scope.email_ok = !0,
            $scope.email_error_msg = "",
            $scope.checkEmail = function(email) {
                var deferred = $q.defer();
                return $scope.email_checking = !0,
                    RegisterService.checkEmailIllegal(email, function(error) {
                        if ($scope.email_checking = !1,
                                error) {
                            if (3 == error[0])
                                return $scope.showEmailNotice = !0,
                                    $scope.emailNotice = error[1],
                                    void ($scope.email_ok = !0);
                            $scope.showEmailNotice = !1,
                                $scope.email_ok = !1,
                                $scope.email_error_msg = error[1]
                        } else
                            $scope.email_ok = !0,
                                $scope.showEmailNotice = !1;
                        deferred.resolve()
                    }),
                    deferred.promise
            }
            ,
            $scope.password_ok = !0,
            $scope.checkPassword = function(password) {
                var deferred = $q.defer();
                return password.length >= 6 && password.length <= 64 ? ($scope.password_ok = !0,
                    deferred.resolve(),
                    deferred.promise) : ($scope.password_ok = !1,
                    password.length < 6 ? $scope.password_error_msg = "密码太短" : $scope.password_error_msg = "密码太长")
            }
            ,
            $scope.confirm_ok = !0,
            $scope.checkConfirm = function(password, confirm) {
                var deferred = $q.defer();
                return password !== confirm ? ($scope.confirm_ok = !1,
                    $scope.confirm_error_msg = "两次输入密码不一致") : $scope.confirm_ok = !0,
                    deferred.resolve(),
                    deferred.promise
            }
            ,
            $scope.activating = !1,
            $scope.doConfirm = function(form) {
                var type = $scope.activateType()
                    , promiseArr = [];
                "phone" === type ? (promiseArr.push($scope.checkGlobalKey(form.global_key)),
                    promiseArr.push($scope.checkEmail(form.email))) : "email" !== type && (promiseArr.push($scope.checkPassword(form.password)),
                    promiseArr.push($scope.checkConfirm(form.password, form.confirm))),
                    $q.all(promiseArr).then(function() {
                        if (canSubmit()) {
                            var submit_form = {
                                email: encodeURI(form.email)
                            };
                            $scope.activating = !0;
                            var promise;
                            "phone" === type ? (submit_form.phone = form.phone,
                                submit_form.global_key = form.global_key,
                                promise = User.confirm_phone(submit_form)) : "normal" === type ? (submit_form.key = form.key,
                                submit_form.password = SHA1(form.password),
                                submit_form.confirm_password = SHA1(form.confirm),
                                promise = User.confirm(submit_form)) : "oauth" === type ? (submit_form.key = form.key,
                                submit_form.password = SHA1(form.password),
                                submit_form.confirm_password = SHA1(form.confirm),
                                promise = User.oauthActivate(submit_form)) : "email" === type && (submit_form.key = form.key,
                                promise = User.confirm(submit_form)),
                                promise.then(function(result) {
                                    Flash.success().send("激活成功"),
                                        $location.path("/user"),
                                        $rootScope.USER = result.data
                                }),
                                promise["finally"](function() {
                                    $scope.activating = !1
                                })
                        }
                    })
            }
    }
    ]),
    angular.module("app").controller("InputTwoFactorAuthCode", ["$rootScope", "$scope", "location", "User", "TwoFactorAuth", "Flash", "ipCookie", "Setting", "PageTitle", function($rootScope, $scope, $location, User, TwoFactorAuth, Flash, ipCookie, Setting, PageTitle) {
        $rootScope.$watch("USER", function(user) {
            return $scope.USER ? $location.path("/user") : void 0
        }),
            $scope.checkCode = function() {
                $scope.logining = !0;
                var loginPromise = function() {
                    return TwoFactorAuth.check_two_factor_auth_code({
                        code: $scope.code
                    }, function(result) {
                        Flash.success().send("Welcome! " + result.data.name),
                            $rootScope.USER = result.data,
                            $location.path("/user")
                    })
                }
                    , promise = loginPromise();
                promise["finally"](function() {
                    $scope.logining = !1
                })
            }
        ;
        var check2FACode = function(code, callback) {
                /^[\d\s]*$/.test(code) && 6 == code.replace(/\s/g, "").length ? callback && callback(!1) : callback && callback("请输入6位纯数字")
            }
            ;
        $scope.code_ok = !0,
            $scope.code_error_msg = "";
        var check_2FA_code = function(code) {
                check2FACode(code, function(error) {
                    error ? ($scope.code_ok = !1,
                        $scope.code_error_msg = error) : $scope.code_ok = !0
                })
            }
            ;
        $scope.check_2FA_code = check_2FA_code
    }
    ]),
    angular.module("app").controller("LoginController", ["$rootScope", "$scope", "location", "User", "Flash", "ipCookie", "Setting", "PageTitle", "Common", "$interval", function($rootScope, $scope, $location, User, Flash, ipCookie, Setting, PageTitle, Common, $interval) {
        $scope.search = $location.search();
        var removeUserWatch = $rootScope.$watch("USER", function(user) {
            $scope.USER && (Common.loginRedirect(),
                removeUserWatch())
        });
        $scope.show_captcha = !1,
            $scope.form = {
                email: $scope.search && $scope.search.email || "",
                remember_me: !1
            },
            User.captcha({
                action: "login"
            }, function(result) {
                return $scope.show_captcha = result.data
            }),
            $scope.loginType = function() {
                return $scope.search.via ? "oauth" : "normal"
            }
            ,
            $scope.refreshCaptcha = function() {
                return $scope.captcha = Setting.api_host + "/api/getCaptcha?code=" + Math.random()
            }
            ,
            $scope.refreshCaptcha(),
            $scope.logining = !1,
            $scope.dologin = function(form) {
                var type = $scope.loginType()
                    , submit_form = {
                    password: SHA1(form.password),
                    remember_me: form.remember_me || !1
                }
                    , isPhone = !1;
                "oauth" !== type && Common.isPhone(form.email) ? (isPhone = !0,
                    submit_form.phone = form.email) : submit_form.email = form.email,
                $scope.show_captcha && (submit_form.j_captcha = form.j_captcha),
                    $scope.logining = !0;
                var promise = null ;
                "oauth" === type ? (promise = User.oauthBind(submit_form),
                    promise.then(function(result) {
                        Flash.success().send($scope.search.via + " 账号绑定成功!"),
                            $rootScope.USER = result.data
                    })) : (promise = isPhone ? User.sign_in_phone(submit_form) : User.sign_in(submit_form),
                    promise.then(function(result) {
                        Flash.success().send("Welcome! " + result.data.name),
                            $rootScope.USER = result.data
                    })),
                    promise["catch"](function(error, result) {
                        return 3205 === result.code ? ($location.path("/input_two_factor_auth_code"),
                            !1) : ($scope.refreshCaptcha(),
                            $scope.form.j_captcha = "",
                            User.captcha({
                                action: "login"
                            }, function(result) {
                                return $scope.show_captcha = result.data
                            }),
                            1037 === result.code ? (Flash.fail().send('你需要<a href="/user/activate">激活邮箱</a>才可以使用邮箱登录'),
                                !1) : void 0)
                    }),
                    promise["finally"](function() {
                        $scope.logining = !1
                    })
            }
            ,
        "oauth" === $scope.loginType() && PageTitle.set("账号绑定", "Coding.net"),
            $scope.enableSubmit = function(form) {
                return form.email && form.password
            }
    }
    ]),
    angular.module("app").controller("OAuthController", ["$scope", "OAuthService", "$location", function($scope, OAuthService, $location) {
        $scope.oauthLogin = function(key) {
            OAuthService.login(key)
        }
            ,
            $scope.isOAuth = $location.search().via
    }
    ]).service("OAuthService", [function() {
        var goLogin = function(key) {
                var targets = {
                    github: "/api/oauth/github/login"
                }
                    , url = targets[key];
                url && (location.href = url)
            }
            ;
        return {
            login: goLogin
        }
    }
    ]),
    angular.module("app").controller("PhoneController", ["$scope", "location", function($scope, $location) {
        $scope.toggle = function() {
            $location.search().phone ? $location.search("phone", null ) : $location.search("phone", "phone")
        }
            ,
            $scope.type = function() {
                return $location.search().phone
            }
    }
    ]),
    angular.module("app").controller("ReActivateController", ["$rootScope", "$scope", "$location", "User", "$http", "Flash", "Setting", "RegisterService", "$q", "$interval", "Common", "PageTitle", function($rootScope, $scope, $location, User, $http, Flash, Setting, RegisterService, $q, $interval, Common, PageTitle) {
        $scope.form = {},
            $scope.step = function() {
                return $location.search().email ? "email" : $location.search().phone ? "phone" : "judge"
            }
            ,
            $scope.refreshCaptcha = function() {
                $scope.captcha = Setting.api_host + "/api/getCaptcha?code=" + Math.random()
            }
            ,
            $scope.refreshCaptcha(),
            $scope.judge_ok = !0,
            $scope.checkJudge = function(judge) {
                return judge ? Common.isPhone(judge) ? $scope.judge_ok = !0 : RegisterService.isEmail(judge) ? $scope.judge_ok = !0 : ($scope.judge_error_msg = "请输入正确的邮箱或者手机号码",
                    $scope.judge_ok = !1) : ($scope.judge_error_msg = "请输入邮箱或者手机号码",
                    $scope.judge_ok = !1),
                    $scope.judge_ok
            }
            ,
            $scope.next = function() {
                var judge = $scope.form.judge;
                $scope.checkJudge(judge) && (Common.isPhone(judge) ? ($scope.form.phone = judge,
                    $location.search({
                        phone: judge,
                        email: null
                    })) : ($scope.form.email = judge,
                    $location.search({
                        email: judge,
                        phone: null
                    })))
            }
            ,
            $scope.code_ok = !0,
            $scope.checkCode = function(code) {
                var deferred = $q.defer();
                return RegisterService.checkCodeIllegal(code, function(error) {
                    error ? ($scope.code_ok = !1,
                        $scope.code_error_msg = error[1]) : $scope.code_ok = !0,
                        deferred.resolve()
                }),
                    deferred.promise
            }
            ,
            $scope.sendCode = function() {
                if (!$scope.code_btn_disabled) {
                    $scope.code_btn_disabled = !0;
                    var p = User.generate_activate_code({
                        phone: $scope.form.phone
                    });
                    p.then(function(result) {
                        Flash.success().send("已发送验证码到" + $scope.form.phone + "，请查收"),
                            countDown()
                    }),
                        p["catch"](function() {
                            $scope.code_btn_disabled = !1
                        })
                }
            }
            ,
            $scope.code_btn_text = "发送验证码";
        var unCountDown, counting = !1, countDown = function() {
                $interval.cancel(unCountDown),
                    $scope.code_btn_disabled = !0,
                    counting = !0;
                var sec = 60;
                $scope.code_btn_text = sec + "秒",
                    unCountDown = $interval(function() {
                        return 0 >= sec ? ($interval.cancel(unCountDown),
                            $scope.code_btn_text = "发送验证码",
                            $scope.code_btn_disabled = !1,
                            void (counting = !1)) : (sec--,
                            void ($scope.code_btn_text = sec + "秒"))
                    }, 1e3)
            }
            ;
        $scope.password_ok = !0,
            $scope.checkPassword = function(password) {
                var deferred = $q.defer();
                return RegisterService.checkPasswordIllegal(password, function(error) {
                    error ? ($scope.password_ok = !1,
                        $scope.password_error_msg = error) : $scope.password_ok = !0,
                        deferred.resolve()
                }),
                    deferred.promise
            }
            ,
            $scope.confirm_ok = !0,
            $scope.checkConfirm = function(password, confirm) {
                var deferred = $q.defer();
                return RegisterService.checkConfirmIllegal(password, confirm, function(error) {
                    error ? ($scope.confirm_ok = !1,
                        $scope.confirm_error_msg = error) : $scope.confirm_ok = !0,
                        deferred.resolve()
                }),
                    deferred.promise
            }
            ,
            $scope.email_ok = !0,
            $scope.phone_ok = !0,
            $location.search().email ? ($scope.form.email = $location.search().email,
                RegisterService.isEmail($scope.form.email) ? RegisterService.isNotIncluded($scope.form.email) ? ($scope.show_email_notice = !0,
                    $scope.email_notice = "该邮箱可能接收不到邮件") : $scope.show_email_notice = !1 : ($scope.email_ok = !1,
                    $scope.email_error_msg = "邮箱格式错误")) : $location.search().phone && (PageTitle.set("设置密码"),
                $scope.form.phone = $location.search().phone,
                Common.isPhone($scope.form.phone) ? $scope.sendCode() : ($scope.phone_ok = !1,
                    $scope.phone_error_msg = "手机号码错误")),
            $scope.canSubmit = function() {
                return "phone" === $scope.step() ? $scope.phone_ok && $scope.code_ok && $scope.password_ok && $scope.confirm_ok && $scope.form.j_captcha : $scope.email_ok && $scope.form.j_captcha
            }
            ,
            $scope.doactivate = function(form) {
                form.j_captcha || Flash.fail().send("验证码不能为空");
                var type = $scope.step()
                    , promiseArr = [];
                "phone" === type && (promiseArr.push($scope.checkCode(form.code)),
                    promiseArr.push($scope.checkPassword(form.password)),
                    promiseArr.push($scope.checkConfirm(form.password, form.confirm))),
                    $q.all(promiseArr).then(function() {
                        if ($scope.canSubmit()) {
                            $scope.activating = !0;
                            var p;
                            p = "phone" === type ? User.set_phone_password({
                                phone: form.phone,
                                code: form.code,
                                password: SHA1(form.password),
                                j_captcha: form.j_captcha
                            }, function(result) {
                                0 === result.code && (Flash.success().send("设置密码成功"),
                                    $location.path("/login"))
                            }) : User.send_activate({
                                email: form.email,
                                j_captcha: form.j_captcha
                            }, function(result) {
                                0 === result.code && (Flash.success().send("已经发送邮件"),
                                    $location.search("phone", "phone"),
                                    $location.path("/login"))
                            }),
                                p["catch"](function() {
                                    $scope.refreshCaptcha()
                                }),
                                p["finally"](function() {
                                    $scope.activating = !1
                                })
                        }
                    })
            }
    }
    ]),
    angular.module("app").controller("RegisterController", ["$scope", "$rootScope", "RegisterService", "$location", "$routeParams", "$q", "OAuth", "User", "Flash", "Common", "$interval", function($scope, $rootScope, RegisterService, $location, $routeParams, $q, OAuth, User, Flash, Common, $interval) {
        var oauth = $scope.oauth = $location.search()
            , removeUserWatch = $rootScope.$watch("USER", function(logined) {
            logined && (Common.loginRedirect(),
                removeUserWatch())
        })
            , INVITE_NOT_LIMITED = "email_not_limited";
        $scope.form = {
            email: $routeParams.email || "",
            global_key: $routeParams.gk || "",
            j_captcha: "",
            channel: $routeParams.channel || "coding-web"
        },
            $scope.email_checking = !1,
            $scope.global_key_checking = !1,
            $scope.email_ok = !0,
            $scope.global_key_ok = !0,
            $scope.email_error_msg = "",
            $scope.gk_error_msg = "",
            $scope.registering = !1,
            $scope.captcha = "",
            $scope.showEmailNotice = !1,
            $scope.key_type = "";
        var key = $scope.key = $routeParams.key
            , registerType = function() {
                return "phone" === $location.search().phone ? "phone" : oauth.via ? "oauth" : key && key.length > 0 ? $scope.key_type && $scope.key_type === INVITE_NOT_LIMITED ? "invite_not_limited" : "invite" : "normal"
            }
            , checkShowCaptcha = function() {
                RegisterService.showRegisterCaptcha(function(show) {
                    show && $scope.refreshCaptcha(),
                        $scope.show_captcha = show
                })
            }
            , canSubmit = function() {
                return "phone" === registerType() ? $scope.phone_ok && $scope.code_ok && $scope.password_ok && $scope.confirm_ok : $scope.email_ok && $scope.global_key_ok
            }
            , checkEmail = function(email) {
                var deferred = $q.defer();
                return $scope.email_checking = !0,
                RegisterService.isMagicEmail(email) && "oauth" !== registerType() && ($scope.show_captcha || $scope.refreshCaptcha(),
                    $scope.show_captcha = !0),
                    RegisterService.checkEmailIllegal(email, function(error) {
                        if ($scope.email_checking = !1,
                                deferred.resolve(),
                                error) {
                            if (3 == error[0])
                                return $scope.showEmailNotice = !0,
                                    $scope.emailNotice = error[1],
                                    void ($scope.email_ok = !0);
                            $scope.showEmailNotice = !1,
                                $scope.email_ok = !1,
                                $scope.email_error_msg = error[1]
                        } else
                            $scope.email_ok = !0,
                                $scope.showEmailNotice = !1;
                        var type = registerType();
                        "oauth" === type && error && 2 == error[0] && (Flash.success().send("该账号已注册，可直接绑定！"),
                            $location.search(oauth),
                            $location.path("/login"))
                    }),
                    deferred.promise
            }
            , checkGlobalKey = function(global_key) {
                var deferred = $q.defer();
                return $scope.global_key_checking = !0,
                    RegisterService.checkGlobalKeyIllegal(global_key, function(error) {
                        $scope.global_key_checking = !1,
                            deferred.resolve(),
                            error ? ($scope.global_key_ok = !1,
                                $scope.gk_error_msg = error) : $scope.global_key_ok = !0
                    }),
                    deferred.promise
            }
            ;
        $scope.code_btn_disabled = !0,
            $scope.phone_ok = !0,
            $scope.checkPhone = function(phone) {
                var deferred = $q.defer();
                return $scope.phone_checking = !0,
                    RegisterService.checkPhoneIllegal(phone, function(error) {
                        $scope.phone_checking = !1,
                            error ? ($scope.phone_ok = !1,
                                $scope.code_btn_disabled = !0,
                                $scope.phone_error_msg = error[1]) : ($scope.phone_ok = !0,
                                $scope.code_btn_disabled = counting ? !0 : !1),
                            deferred.resolve()
                    }),
                    deferred.promise
            }
            ,
            $scope.code_ok = !0,
            $scope.checkCode = function(code) {
                var deferred = $q.defer();
                return RegisterService.checkCodeIllegal(code, function(error) {
                    error ? ($scope.code_ok = !1,
                        $scope.code_error_msg = error[1]) : $scope.code_ok = !0,
                        deferred.resolve()
                }),
                    deferred.promise
            }
            ,
            $scope.password_ok = !0,
            $scope.checkPassword = function(password) {
                var deferred = $q.defer();
                return RegisterService.checkPasswordIllegal(password, function(error) {
                    error ? ($scope.password_ok = !1,
                        $scope.password_error_msg = error) : $scope.password_ok = !0,
                        deferred.resolve()
                }),
                    deferred.promise
            }
            ,
            $scope.confirm_ok = !0,
            $scope.checkConfirm = function(password, confirm) {
                var deferred = $q.defer();
                return RegisterService.checkConfirmIllegal(password, confirm, function(error) {
                    error ? ($scope.confirm_ok = !1,
                        $scope.confirm_error_msg = error) : $scope.confirm_ok = !0,
                        deferred.resolve()
                }),
                    deferred.promise
            }
        ;
        var register = function(form) {
                var type = registerType()
                    , promiseArr = [];
                "phone" === type ? (promiseArr.push($scope.checkPhone(form.phone)),
                    promiseArr.push($scope.checkCode(form.code)),
                    promiseArr.push($scope.checkPassword(form.password)),
                    promiseArr.push($scope.checkConfirm(form.password, form.confirm))) : (promiseArr.push(checkEmail(form.email)),
                    promiseArr.push(checkGlobalKey(form.global_key))),
                    $q.all(promiseArr).then(function() {
                        if (canSubmit()) {
                            $scope.registering = !0;
                            var args;
                            args = "phone" === type ? [type, form.channel, form.phone, form.code, SHA1(form.password), form.j_captcha] : [type, form.channel, form.email, form.global_key, form.j_captcha],
                            ("invite" === type || "invite_not_limited" === type) && args.push($scope.key);
                            var regPromise = RegisterService.registerAgent.apply(this, args);
                            regPromise.then(function(result) {
                                $scope.registering = !1,
                                    $rootScope.USER = result.data
                            }),
                                regPromise["catch"](function(err, result) {
                                    $scope.registering = !1,
                                        checkShowCaptcha(),
                                    result && 903 === result.code && ($scope.form.j_captcha = "")
                                })
                        }
                    })
            }
            , refreshCaptcha = function() {
                $scope.captcha = RegisterService.refreshCaptcha()
            }
            , loadEmailByOauthCode = function(code) {
                var promise = OAuth.github_email({
                    code: code
                });
                promise.then(function(result) {
                    result.data ? $scope.form.email = result.data : location.href = "/user"
                })
            }
            , loadEmailByInviteKey = function(key) {
                var promise = User.inviteEmail({
                    key: key
                });
                promise.then(function(result) {
                    $scope.key_type = result.data.type,
                    result.data.type !== INVITE_NOT_LIMITED && ($scope.form.email = result.data.email)
                }),
                    promise["catch"](function() {
                        return Flash.fail().send("邀请链接无效！"),
                            $location.path("/register"),
                            !1
                    })
            }
            ;
        $scope.togglePhoneRegister = function() {
            $location.search().phone ? $location.search("phone", null ) : $location.search("phone", "phone")
        }
            ,
            $scope.sendCode = function() {
                if (!$scope.code_btn_disabled) {
                    $scope.code_btn_disabled = !0;
                    var p = User.generate_register_code({
                        phone: $scope.form.phone
                    });
                    p.then(function(result) {
                        Flash.success().send("已发送验证码到" + $scope.form.phone + "，请查收"),
                            countDown()
                    }),
                        p["catch"](function() {
                            $scope.code_btn_disabled = !1
                        })
                }
            }
            ,
            $scope.code_btn_text = "发送验证码";
        var unCountDown, counting = !1, countDown = function() {
                $interval.cancel(unCountDown),
                    $scope.code_btn_disabled = !0,
                    counting = !0;
                var sec = 60;
                $scope.code_btn_text = sec + "秒",
                    unCountDown = $interval(function() {
                        return 0 >= sec ? ($interval.cancel(unCountDown),
                            $scope.code_btn_text = "发送验证码",
                            $scope.code_btn_disabled = !1,
                            void (counting = !1)) : (sec--,
                            void ($scope.code_btn_text = sec + "秒"))
                    }, 1e3)
            }
            ;
        $scope.checkGlobalKey = checkGlobalKey,
            $scope.checkEmail = checkEmail,
            $scope.canSubmit = canSubmit,
            $scope.doRegister = register,
            $scope.refreshCaptcha = refreshCaptcha,
            $scope.registerType = registerType,
            checkShowCaptcha(),
        oauth.code && loadEmailByOauthCode(oauth.code),
        key && key.length > 0 && loadEmailByInviteKey(key),
            $scope.$on("$destroy", function() {
                removeUserWatch(),
                    removeUserWatch = void 0
            })
    }
    ]).service("RegisterService", ["Setting", "User", "Common", function(Setting, User, Common) {
        var not_include_domains = ["hotmail.com", "outlook.com", "live.cn", "live.com"]
            , checkGlobalKey = function(global_key, callback) {
                if (!global_key || global_key.length < 3)
                    return void (callback && callback("个性后缀至少为3位字符"));
                if (!Common.isGlobalKey(global_key))
                    return void (callback && callback("个性后缀仅支持英文字母、数字、横线(-)以及下划线(_)"));
                if (/^\d{11}$/.test(global_key))
                    return void (callback && callback("个性后缀不支持连续 11 位数字"));
                var gkPromise = User.check({
                    key: global_key
                });
                gkPromise.then(function(result) {
                    result.data ? callback && callback(!1) : callback && callback("个性后缀已存在")
                }),
                    gkPromise["catch"](function() {
                        return callback && callback("个性后缀已存在"),
                            !1
                    })
            }
            , isEmail = Common.isEmail
            , isNotIncluded = function(email) {
                var domain = email.split("@")[1];
                return not_include_domains.indexOf(domain) >= 0
            }
            , isMagicEmail = Common.isMagicEmail
            , isPhone = Common.isPhone
            , isCode = Common.isCode
            , checkEmail = function(email, callback) {
                if (!isEmail(email))
                    return void (callback && callback([1, "邮件格式错误"]));
                var emailPromise = User.check({
                    key: email
                });
                emailPromise.then(function(result) {
                    return result.data ? void (isNotIncluded(email) ? callback && callback([3, "该邮箱可能接收不到邮件，建议改用其他邮箱"]) : callback && callback(!1)) : void (callback && callback([2, "邮箱已被注册"]))
                }),
                    emailPromise["catch"](function() {
                        return callback && callback([2, "邮箱已被注册"]),
                            !1
                    })
            }
            , checkPhone = function(phone, callback) {
                if (!isPhone(phone))
                    return void (callback && callback([1, "手机号码错误"]));
                var p = User.check_phone({
                    phone: phone
                });
                p.then(function(result) {
                    result.data ? callback && callback(!1) : 1033 === result.code ? callback && callback([3, "手机号码错误"]) : callback && callback([2, "手机已被注册"])
                }),
                    p["catch"](function() {
                        return callback && callback([2, "手机已被注册"]),
                            !1
                    })
            }
            , checkCode = function(code, callback) {
                isCode(code) ? callback && callback(!1) : callback && callback([1, "手机验证码错误"])
            }
            , checkPassword = function(password, callback) {
                return password ? password.length < 6 ? void (callback && callback("密码太短")) : password.length > 64 ? void (callback && callback("密码太长")) : void (callback && callback(!1)) : void (callback && callback("密码不能为空"))
            }
            , checkConfirm = function(password, confirm, callback) {
                password != confirm ? callback && callback("两次输入密码不一致") : callback && callback(!1)
            }
            , refreshCaptcha = function() {
                var timestamp = (new Date).getTime();
                return Setting.api_host + "/api/getCaptcha?code=" + timestamp
            }
            , showCaptcha = function(callback) {
                User.captcha({
                    action: "register"
                }, function(result) {
                    callback && callback(result && !!result.data)
                })
            }
            , register = function(channel, email, global_key, captcha) {
                return User.sign_up({
                    channel: channel,
                    email: email,
                    global_key: global_key,
                    j_captcha: captcha
                })
            }
            , registerOfInvite = function(channel, email, global_key, captcha, key) {
                return User.inviteRegister({
                    channel: channel,
                    email: email,
                    global_key: global_key,
                    j_captcha: captcha,
                    key: key
                })
            }
            , registerOfInviteNotLimited = function(channel, email, global_key, captcha, key) {
                return User.inviteNotLimitedRegister({
                    channel: channel,
                    email: email,
                    global_key: global_key,
                    j_captcha: captcha,
                    key: key
                })
            }
            , registerOfOAuth = function(channel, email, global_key, captcha) {
                return User.oauthRegister({
                    channel: channel,
                    email: email,
                    global_key: global_key,
                    j_captcha: captcha
                })
            }
            , registerOfPhone = function(channel, phone, code, password, captcha) {
                return User.sign_up_phone({
                    channel: channel,
                    phone: phone,
                    code: code,
                    password: password,
                    j_captcha: captcha
                })
            }
            , registerAgent = function() {
                var len = arguments.length
                    , slice = Array.prototype.slice
                    , args = slice.call(arguments, 1, len)
                    , type = arguments[0]
                    , registerMethod = null ;
                return "normal" === type ? registerMethod = register : "invite" === type ? registerMethod = registerOfInvite : "oauth" === type ? registerMethod = registerOfOAuth : "invite_not_limited" === type ? registerMethod = registerOfInviteNotLimited : "phone" === type && (registerMethod = registerOfPhone),
                registerMethod && registerMethod.apply(this, args)
            }
            ;
        return {
            checkGlobalKeyIllegal: checkGlobalKey,
            checkEmailIllegal: checkEmail,
            checkPhoneIllegal: checkPhone,
            checkCodeIllegal: checkCode,
            checkPasswordIllegal: checkPassword,
            checkConfirmIllegal: checkConfirm,
            refreshCaptcha: refreshCaptcha,
            showRegisterCaptcha: showCaptcha,
            doRegister: register,
            registerAgent: registerAgent,
            registerOfInvite: registerOfInvite,
            isEmail: isEmail,
            isNotIncluded: isNotIncluded,
            isMagicEmail: isMagicEmail
        }
    }
    ]),
    angular.module("app").controller("SendResetPasswordController", ["$rootScope", "$scope", "$location", "User", "$http", "Flash", "Setting", "RegisterService", "$q", "Common", "$interval", function($rootScope, $scope, $location, User, $http, Flash, Setting, RegisterService, $q, Common, $interval) {
        $rootScope.$watch("USER", function(user) {
            $scope.USER && $location.path("/user")
        }),
            $scope.form = {},
            $scope.step = function() {
                return $location.search().email ? "email" : $location.search().phone ? "phone" : "judge"
            }
            ,
            $scope.refreshCaptcha = function() {
                $scope.captcha = Setting.api_host + "/api/getCaptcha?code=" + Math.random()
            }
            ,
            $scope.refreshCaptcha(),
            $scope.judge_ok = !0,
            $scope.checkJudge = function(judge) {
                return judge ? Common.isPhone(judge) ? $scope.judge_ok = !0 : RegisterService.isEmail(judge) ? $scope.judge_ok = !0 : ($scope.judge_error_msg = "请输入正确的邮箱或者手机号码",
                    $scope.judge_ok = !1) : ($scope.judge_error_msg = "请输入邮箱或者手机号码",
                    $scope.judge_ok = !1),
                    $scope.judge_ok
            }
            ,
            $scope.next = function() {
                var judge = $scope.form.judge;
                $scope.checkJudge(judge) && (Common.isPhone(judge) ? ($scope.form.phone = judge,
                    $location.search({
                        phone: judge,
                        email: null
                    })) : ($scope.form.email = judge,
                    $location.search({
                        email: judge,
                        phone: null
                    })))
            }
            ,
            $scope.code_ok = !0,
            $scope.checkCode = function(code) {
                var deferred = $q.defer();
                return RegisterService.checkCodeIllegal(code, function(error) {
                    error ? ($scope.code_ok = !1,
                        $scope.code_error_msg = error[1]) : $scope.code_ok = !0,
                        deferred.resolve()
                }),
                    deferred.promise
            }
            ,
            $scope.sendCode = function() {
                if (!$scope.code_btn_disabled) {
                    $scope.code_btn_disabled = !0;
                    var p = User.generate_reset_code({
                        phone: $scope.form.phone
                    });
                    p.then(function(result) {
                        Flash.success().send("已发送验证码到" + $scope.form.phone + "，请查收"),
                            countDown()
                    }),
                        p["catch"](function() {
                            $scope.code_btn_disabled = !1
                        })
                }
            }
            ,
            $scope.code_btn_text = "发送验证码";
        var unCountDown, counting = !1, countDown = function() {
                $interval.cancel(unCountDown),
                    $scope.code_btn_disabled = !0,
                    counting = !0;
                var sec = 60;
                $scope.code_btn_text = sec + "秒",
                    unCountDown = $interval(function() {
                        return 0 >= sec ? ($interval.cancel(unCountDown),
                            $scope.code_btn_text = "发送验证码",
                            $scope.code_btn_disabled = !1,
                            void (counting = !1)) : (sec--,
                            void ($scope.code_btn_text = sec + "秒"))
                    }, 1e3)
            }
            ;
        $scope.password_ok = !0,
            $scope.checkPassword = function(password) {
                var deferred = $q.defer();
                return RegisterService.checkPasswordIllegal(password, function(error) {
                    error ? ($scope.password_ok = !1,
                        $scope.password_error_msg = error) : $scope.password_ok = !0,
                        deferred.resolve()
                }),
                    deferred.promise
            }
            ,
            $scope.confirm_ok = !0,
            $scope.checkConfirm = function(password, confirm) {
                var deferred = $q.defer();
                return RegisterService.checkConfirmIllegal(password, confirm, function(error) {
                    error ? ($scope.confirm_ok = !1,
                        $scope.confirm_error_msg = error) : $scope.confirm_ok = !0,
                        deferred.resolve()
                }),
                    deferred.promise
            }
            ,
            $scope.email_ok = !0,
            $scope.phone_ok = !0,
            $location.search().email ? ($scope.form.email = $location.search().email,
                RegisterService.isEmail($scope.form.email) ? RegisterService.isNotIncluded($scope.form.email) ? ($scope.show_email_notice = !0,
                    $scope.email_notice = "该邮箱可能接收不到邮件") : $scope.show_email_notice = !1 : ($scope.email_ok = !1,
                    $scope.email_error_msg = "邮箱格式错误")) : $location.search().phone && ($scope.form.phone = $location.search().phone,
                Common.isPhone($scope.form.phone) ? $scope.sendCode() : ($scope.phone_ok = !1,
                    $scope.phone_error_msg = "手机号码错误")),
            $scope.canSubmit = function() {
                return "email" === $scope.step() ? $scope.email_ok && $scope.form.j_captcha : $scope.phone_ok && $scope.code_ok && $scope.password_ok && $scope.confirm_ok && $scope.form.j_captcha
            }
            ,
            $scope.dosendreset = function(form) {
                form.j_captcha || Flash.fail().send("验证码不能为空");
                var promiseArr = []
                    , type = $scope.step();
                "phone" === type && (promiseArr.push($scope.checkCode(form.code)),
                    promiseArr.push($scope.checkPassword(form.password)),
                    promiseArr.push($scope.checkConfirm(form.password, form.confirm))),
                    $q.all(promiseArr).then(function() {
                        if ($scope.canSubmit()) {
                            $scope.resetting = !0;
                            var p;
                            p = "phone" === type ? User.phone_reset_pwd({
                                phone: form.phone,
                                code: form.code,
                                password: SHA1(form.password),
                                j_captcha: form.j_captcha
                            }, function(result) {
                                0 === result.code && (Flash.success().send("修改成功"),
                                    $location.search("phone", "phone"),
                                    $location.path("/login"))
                            }) : User.send_reset_pwd({
                                email: form.email,
                                j_captcha: form.j_captcha
                            }, function(result) {
                                0 === result.code && (Flash.success().send("已经发送邮件"),
                                    $location.path("/login"))
                            }),
                                p["catch"](function(error, result) {
                                    $scope.refreshCaptcha()
                                }),
                                p["finally"](function() {
                                    $scope.resetting = !1
                                })
                        }
                    })
            }
    }
    ]),
    angular.module("app").controller("OAuthLoginController", ["$scope", "OAuthLoginService", function($scope, OAuthLoginService) {}
    ]).service("OAuthLoginService", [function() {}
    ]),
    angular.module("app").controller("AccountSummaryCtrl", ["$scope", "ModalService", "Payment", function($scope, ModalService, Payment) {
        $scope.summary = {};
        var modal = $scope.exchange_coin_modal = ModalService.instance("account-exchange-coin-modal")
            , loadSummary = function() {
                var promise = Payment.summary();
                promise.then(function(result) {
                    $scope.summary = result.data || {}
                })
            }
            ;
        $scope.memoryRate = function(summary) {
            var percent = summary.used_memory / summary.total_memory * 100;
            return (percent > 100 ? 100 : percent) + "%"
        }
            ,
            $scope.exchangeCoin = function() {
                modal.toggle()
            }
            ,
            loadSummary()
    }
    ]),
    angular.module("app").controller("AccountPointCtrl", ["$scope", "$routeParams", "$location", "ModalService", "Payment", "Point", "Common", "Flash", "Pager", function($scope, $routeParams, $location, ModalService, Payment, Point, Common, Flash, Pager) {
        $scope.tab = $routeParams.tab || "",
            $scope.points = {},
            $scope.point_records = [],
            $scope.record_loading = !1,
            $scope.points_loading = !1,
            $scope.gifts = [],
            $scope.gifts_loading = !1,
            $scope.gift_id = $routeParams.id || void 0;
        var modal = $scope.exchange_coin_modal = ModalService.instance("account-exchange-coin-modal")
            , getPointRecords = function(page) {
                if (!$scope.record_loading) {
                    $scope.record_loading = !0;
                    var promise = Point.record({
                        page: page,
                        pageSize: 10
                    }, function(result) {
                        $scope.point_records = result.data && result.data.list || [],
                            CPager.optionsReady(result.data)
                    });
                    promise["finally"](function() {
                        $scope.record_loading = !1
                    })
                }
            }
            , getPoints = function() {
                if (!$scope.points_loading) {
                    $scope.points_loading = !0;
                    var promise = Point.points(function(result) {
                        $scope.points = result.data || {}
                    });
                    promise["finally"](function() {
                        $scope.points_loading = !1
                    })
                }
            }
            , getGifts = function() {
                if (!$scope.gifts_loading) {
                    $scope.gift_loading = !0;
                    var promise = Point.gifts(function(result) {
                        $scope.gifts = result.data || result.data.list || []
                    });
                    promise["finally"](function() {
                        $scope.gifts_loading = !1
                    })
                }
            }
            ;
        $scope.exchange = function(gift_id) {
            var gift = Common.findOfId($scope.gifts, gift_id, "id");
            gift && ($scope.points.points_left < gift.points_cost ? Flash.fail().send("码币不够哦，努力赚码币吧！") : $location.path("/user/account/credit/gift/" + gift_id))
        }
            ,
            $scope.exchangeCoin = function() {
                modal.toggle()
            }
        ;
        var pager_id = $scope.pager_id = (new Date).getTime()
            , CPager = Pager.instance(pager_id, $scope);
        CPager.onChange(function(page) {
            getPointRecords(page)
        }),
            "gift" === $scope.tab ? getGifts() : getPointRecords(1),
            getPoints()
    }
    ]),
    angular.module("app").controller("GiftExchangeController", ["$scope", "$routeParams", "$location", "Point", "Messages", "Common", "Flash", function($scope, $routeParams, $location, Point, Messages, Common, Flash) {
        $scope.gift_id = $routeParams.id || "",
            $scope.exchang_user = {},
            $scope.gift = {},
            $scope.loading = !1,
            $scope.submitting = !1,
            $scope.sending = !1;
        var getGift = function() {
                if (!$scope.loading) {
                    $scope.loading = !0;
                    var promise = Point.gifts(function(result) {
                        var list = result.data || result.data.list || [];
                        $scope.gift = Common.findOfId(list, $scope.gift_id, "id")
                    });
                    promise["finally"](function() {
                        $scope.loading = !1
                    })
                }
            }
            ;
        $scope.submit = function(user) {
            if (!$scope.submitting && !$scope.sending) {
                if (!(user && user.name && user.address && user.phone && user.password))
                    return void Flash.fail().send("请把信息补全");
                $scope.submitting = !0;
                var pPromise = Point.exchange({
                    receiverName: user.name,
                    receiverAddress: user.address,
                    receiverPhone: user.phone,
                    password: SHA1(user.password),
                    giftId: $scope.gift_id
                }, function(result) {
                    if ($scope.sending = !0,
                        0 === result.code) {
                        var msg = ["**兑换商品**", "\n", "\n", "![图片](", $scope.gift.image, ")", "\n", $scope.gift.name, "\n", "\n", "---", "\n", "\n", "**收件信息**", "\n", "\n", "收件人：", user.name, "\n", "收件地址：", user.address, "\n", "手机号码：", user.phone].join("")
                            , mPromise = Messages.send_message({
                            receiver_global_key: "coding",
                            content: msg
                        }, function(result) {
                            0 === result.code && ($scope.submitting = !1,
                                Flash.success().send("兑换成功！"),
                                $location.path("/user/messages/history/coding"))
                        });
                        mPromise["finally"](function() {
                            $scope.sending = !1
                        })
                    }
                });
                pPromise["finally"](function() {
                    $scope.submitting = !1
                })
            }
        }
            ,
            getGift()
    }
    ]),
    angular.module("app").controller("AccountInvoiceCtrl", ["$scope", "ModalService", "Payment", "Flash", "Pager", function($scope, ModalService, Payment, Flash, Pager) {
        var modal = $scope.invoice_modal = ModalService.instance("account-invoice-modal");
        $scope.invoice_price = "",
            $scope.available_invoice_price = 0,
            $scope.invoices = [],
            $scope.loaded = !1,
            $scope.loading = !1,
            $scope.invoice_pager_id = "invoice_pager",
            $scope.invoice_edit_type = "add",
            $scope.current_update_invoice = {};
        var MIN_INVOICE_PRICE = $scope.MIN_INVOICE_PRICE = 100
            , pager = Pager.instance($scope.invoice_pager_id, $scope);
        $scope.invoice_status = {
            1: "等待受理",
            2: "受理中",
            3: "已发出",
            4: "已签收"
        },
            $scope.expressInfo = function(invoice) {
                return invoice.status >= 3 ? invoice.express_company + ":" + invoice.express_order_id : "尚未寄送"
            }
            ,
            $scope.createInvoice = function() {
                $scope.invoice_edit_type = "add",
                    $scope.invoice_price < MIN_INVOICE_PRICE ? Flash.fail().send("开票金额最小额度为 " + MIN_INVOICE_PRICE + " 元") : $scope.invoice_price > $scope.available_invoice_price ? Flash.fail().send("开票金额不能超过可开票金额") : $scope.available_invoice_price < MIN_INVOICE_PRICE ? Flash.fail().send("可开票金额不足 " + MIN_INVOICE_PRICE + " 元") : modal.toggle()
            }
            ,
            $scope.editInvoice = function(invoice) {
                $scope.invoice_edit_type = "update",
                    $scope.current_update_invoice = angular.copy(invoice),
                    $scope.current_update_invoice.opt_timestamp = (new Date).getTime(),
                    modal.toggle()
            }
            ,
            $scope.removeInvoice = function(invoice) {
                if (confirm("确认删除金额为 ￥" + invoice.price + " 的发票么？")) {
                    var promise = Payment.remove_invoice({
                        id: invoice.id
                    });
                    promise.then(function() {
                        loadInvoicePrice(),
                            loadInvoices(pager.currentPage())
                    })
                }
            }
            ,
            $scope.signInvoice = function(invoice) {
                if (confirm("确认签收" + invoice.express_company + ":" + invoice.express_order_id + "?")) {
                    var promise = Payment.sign_invoice({
                        id: invoice.id
                    }, {});
                    promise.then(function() {
                        loadInvoicePrice(),
                            loadInvoices(pager.currentPage())
                    })
                }
            }
        ;
        var loadInvoicePrice = function() {
                var promise = Payment.invoice_price();
                promise.then(function(result) {
                    $scope.available_invoice_price = result.data || 0
                })
            }
            , loadInvoices = function(page) {
                $scope.invoices = [],
                    $scope.loading = !0,
                    $scope.loaded = !1;
                var promise = Payment.invoices({
                    page: page || 1,
                    pageSize: 20
                });
                promise.then(function(result) {
                    $scope.invoices = result.data && result.data.list || [],
                        pager.optionsReady(result.data)
                }),
                    promise["finally"](function() {
                        $scope.loading = !1,
                            $scope.loaded = !0
                    })
            }
            ;
        $scope.$on("account.update.invoice.success", function(event) {
            event.preventDefault(),
                loadInvoicePrice(),
                loadInvoices(pager.currentPage())
        }),
            pager.onChange(function(page) {
                loadInvoices(page)
            }),
            loadInvoicePrice(),
            loadInvoices(pager.currentPage())
    }
    ]),
    angular.module("app").controller("AccountExchangeCoinCtrl", ["$scope", "$filter", "$location", "$route", "ModalService", "Flash", "Payment", function($scope, $filter, $location, $route, ModalService, Flash, Payment) {
        $scope.summary = {},
            $scope.form = {
                num: "",
                password: ""
            },
            $scope.exchanging = !1,
            $scope.available = "";
        var modal = ModalService.get("account-exchange-coin-modal");
        modal.on("hide", function() {
            $scope.form.password = ""
        });
        var loadExchangeBalance = function() {
                var promise = Payment.exchange_balance();
                promise.then(function(result) {
                    if ($scope.summary = result.data || {},
                            $scope.summary.exchange_rate) {
                        var tokens = $scope.summary.exchange_rate.split(":")
                            , rmb = tokens[0].trim()
                            , mb = tokens[1].trim();
                        $scope.summary.exchange_message = mb + "码币 = " + rmb + "人民币"
                    }
                    caculateAvailable()
                })
            }
            , checkNum = function(num) {
                return isNaN(parseFloat(num)) ? !0 : 0 >= num
            }
            , caculateAvailable = function() {
                if ($scope.summary.exchange_rate) {
                    var rate_tokens = $scope.summary.exchange_rate.split(":")
                        , rmb = rate_tokens[0]
                        , mb = rate_tokens[1]
                        , balance = $scope.summary.balance || 0
                        , result = balance / (rmb / mb);
                    $scope.available = "当前最多能购买 " + $filter("number")(result, 1) + " 码币，0.1 码币起购买"
                }
            }
            , hideModal = function() {
                $(".account-exchange-coin-modal").modal("hide")
            }
            ;
        $scope.exchange = function() {
            if (!$scope.exchanging) {
                if (checkNum($scope.form.num))
                    return void Flash.fail().send("码币数不正确");
                $scope.exchanging = !0;
                var promise = Payment.exchange_point({
                    num: $scope.form.num,
                    password: SHA1($scope.form.password)
                });
                promise.then(function() {
                    hideModal(),
                        Flash.success().send("购买成功！"),
                        "/user/account/credit" == $location.path() ? $route.reload() : $location.path("/user/account/credit")
                }),
                    promise["finally"](function() {
                        $scope.exchanging = !1
                    })
            }
        }
            ,
            loadExchangeBalance()
    }
    ]),
    angular.module("app").controller("AccountAddInvoiceCtrl", ["$scope", "Payment", "ModalService", "Flash", function($scope, Payment, ModalService, Flash) {
        $scope.saving = !1,
            $scope.current_available_invoice_price = 0;
        var initForm = function() {
            var latest = $scope.invoices[0] || {};
            $scope.form = {
                price: $scope.invoice_price || "",
                title: latest.title || "",
                receiver: latest.receiver || "",
                receiver_phone: latest.receiver_phone || "",
                receiver_address: latest.receiver_address || ""
            }
        }
            , modal = ModalService.get("account-invoice-modal");
        modal.on("hide", function() {
            initForm(),
                $scope.saving = !1
        });
        var checkInvoiceEmpty = function(form) {
                return 0 === form.title.length || 0 === form.receiver.length || 0 === form.receiver_phone.length || 0 === form.receiver_address.length
            }
            , checkPhone = function(phone) {
                return !/^1[0-9]{10}/gi.test(phone) || phone.length > 11
            }
            ;
        $scope.addInvoice = function(form) {
            var data = angular.copy(form);
            if (checkInvoiceEmpty(form))
                return Flash.fail().send("发票信息不能为空"),
                    !1;
            if (checkPhone(form.receiver_phone))
                return Flash.fail().send("手机号格式错误"),
                    !1;
            $scope.saving = !0;
            var promise = Payment.invoice(data);
            promise.then(function() {
                modal.action("hide"),
                    $scope.$emit("account.update.invoice.success"),
                    Flash.success().send("开具发票申请成功！您提交的发票申请我们的客服会在月初和月中分别集中处理，并在第一时间快递到您的手上，请您合理安排时间提交发票申请并耐心等待， 谢谢。")
            }),
                promise["finally"](function() {
                    $scope.saving = !1
                })
        }
            ,
            $scope.updateInvoice = function(form) {
                if (checkInvoiceEmpty(form))
                    return Flash.fail().send("发票信息不能为空"),
                        !1;
                if (checkPhone(form.receiver_phone))
                    return Flash.fail().send("手机号格式错误"),
                        !1;
                if (form.price < $scope.MIN_INVOICE_PRICE)
                    return Flash.fail().send("开票金额最小额度为 " + $scope.MIN_INVOICE_PRICE + " 元"),
                        !1;
                if (form.price > $scope.current_available_invoice_price)
                    return Flash.fail().send("开票金额不能超过可开票金额"),
                        !1;
                $scope.saving = !0;
                var data = {
                    invoiceId: form.id,
                    price: form.price,
                    title: form.title,
                    receiver: form.receiver,
                    receiver_phone: form.receiver_phone,
                    receiver_address: form.receiver_address
                }
                    , promise = Payment.update_invoice(data);
                promise.then(function() {
                    modal.action("hide"),
                        $scope.$emit("account.update.invoice.success"),
                        Flash.success().send("更新成功！")
                }),
                    promise["finally"](function() {
                        $scope.saving = !1
                    })
            }
            ,
            $scope.$watchCollection(function() {
                return [$scope.invoice_edit_type, $scope.current_update_invoice]
            }, function() {
                "update" === $scope.invoice_edit_type ? ($scope.form = $scope.current_update_invoice,
                    $scope.current_available_invoice_price = $scope.available_invoice_price + $scope.current_update_invoice.price) : initForm()
            }),
            $scope.$watch("invoice_price", function() {
                initForm()
            })
    }
    ]),
    angular.module("app").controller("UserPayedProjectCtrl", ["$scope", "Payment", "ProjectVersions", function($scope, Payment, ProjectVersions) {
        $scope.projects = [],
            $scope.loaded = !1,
            $scope.loading = !1,
            $scope.total_size = 0,
            $scope.versions = ProjectVersions;
        var loadProjects = function() {
                $scope.loaded = !1,
                    $scope.loading = !0;
                var promise = Payment.projects();
                promise.then(function(result) {
                    $scope.projects = result.data && result.data.list || [],
                        $scope.total_size = result.data && result.data.totalRow || 0
                }),
                    promise["finally"](function() {
                        $scope.loaded = !0,
                            $scope.loading = !1
                    })
            }
            ;
        $scope.renewalStatus = function(project) {
            return project.auto ? "自动续费" : "非自动续费"
        }
            ,
            loadProjects()
    }
    ]),
    angular.module("app").controller("AccountPaymentHistoryCtrl", ["$scope", "$routeParams", "Payment", "Flash", "$window", "$route", "ModalService", "Pager", function($scope, $routeParams, Payment, Flash, $window, $route, ModalService, Pager) {
        $scope.tab = $routeParams.tab || "pay",
            $scope.load = {
                pay: {
                    loading: !1,
                    loaded: !1
                },
                top_up: {
                    loading: !1,
                    loaded: !1
                }
            },
            $scope.charge_logs = [],
            $scope.pay_logs = [],
            $scope.payment_platforms = {
                alipay: "支付宝",
                weixin: "微信支付"
            },
            $scope.total_size = {
                pay: 0,
                top_up: 0
            },
            $scope.payment_status = {
                0: "待支付",
                1: "交易成功",
                2: "交易关闭"
            };
        var modal_setting = {
            closable: !0
        }
            , modal = $scope.top_up_modal = ModalService.instance("account-top-up-modal", modal_setting);
        $scope.goPay = function($event, log) {
            modal.toggle()
        }
            ,
            $scope.cancelPay = function(id, price) {
                if (confirm("确认关闭金额为 ￥" + price + " 的交易？")) {
                    var promise = Payment.close({
                        id: id
                    }, {});
                    promise.then(function() {
                        Flash.success().send("交易关闭成功！"),
                            loadChargeLogs()
                    })
                }
            }
        ;
        var closeModal = function() {
                modal.action("hide")
            }
            ;
        $scope.payError = function() {
            loadChargeLogs(),
                closeModal()
        }
            ,
            $scope.paySuccess = function() {
                loadChargeLogs(),
                    closeModal()
            }
            ,
            $scope.charge_pager_id = "charge_pager",
            $scope.payment_pager_id = "payment_pager";
        var charge_pager = Pager.instance($scope.charge_pager_id, $scope)
            , payment_pager = Pager.instance($scope.payment_pager_id, $scope)
            , loadChargeLogs = function(page) {
                $scope.charge_logs = [],
                    $scope.load.top_up.loading = !0,
                    $scope.load.top_up.loaded = !1;
                var promise = Payment.charge_log({
                    page: page || 1,
                    pageSize: 20
                });
                promise.then(function(result) {
                    $scope.charge_logs = result.data && result.data.list || [],
                        $scope.total_size.top_up = result.data && result.data.totalRow || 0,
                        charge_pager.optionsReady(result.data)
                }),
                    promise["finally"](function() {
                        $scope.load.top_up.loading = !1,
                            $scope.load.top_up.loaded = !0
                    })
            }
            ;
        charge_pager.onChange(function(page) {
            loadChargeLogs(page)
        });
        var loadPaymentLog = function(all, page) {
                $scope.pay_logs = [],
                    $scope.load.pay.loading = !0,
                    $scope.load.pay.loaded = !1;
                var promise = Payment.pay_log({
                    page: page || 1,
                    pageSize: all ? 5 : 20
                });
                promise.then(function(result) {
                    $scope.pay_logs = result.data && result.data.list || [],
                        $scope.total_size.pay = result.data && result.data.totalRow || 0,
                        payment_pager.optionsReady(result.data)
                }),
                    promise["finally"](function() {
                        $scope.load.pay.loading = !1,
                            $scope.load.pay.loaded = !0
                    })
            }
            ;
        if (payment_pager.onChange(function(page) {
                loadPaymentLog("pay" === $routeParams.tab, page)
            }),
            "top-up" === $scope.tab) {
            var page = charge_pager.currentPage();
            loadChargeLogs(page)
        } else {
            var page = payment_pager.currentPage();
            loadPaymentLog("pay" === $routeParams.tab, page)
        }
    }
    ]),
    angular.module("app").controller("AccountTopUpCtrl", ["$scope", "ModalService", "Payment", "Flash", "$window", "location", "$timeout", function($scope, ModalService, Payment, Flash, $window, location, $timeout) {
        var modal_setting = {
            closable: !0
        };
        $scope.balance = 0,
            $scope.url = "",
            $scope.url_loading = !1,
            $scope.form = {
                platform: "alipay",
                price: ""
            },
            $scope.chargeResult = $.extend({
                result: !1,
                price: 0
            }, location.$$search);
        var modal = $scope.top_up_modal = ModalService.instance("account-top-up-modal", modal_setting)
            , loadBalance = function() {
                Payment.balance(function(result) {
                    $scope.balance = +result.data || 0
                })
            }
            ;
        $scope.topUp = function($event, form) {
            return $scope.url_loading ? ($event.preventDefault(),
                !1) : +form.price < .01 ? (Flash.fail().send("充值金额最少为 0.01 元"),
                $event.preventDefault(),
                !1) : +form.price > 1e5 ? (Flash.fail().send("充值金额最大限额为 10 万元"),
                $event.preventDefault(),
                !1) : isNaN(form.price) ? (Flash.fail().send("充值金额有误!"),
                $event.preventDefault(),
                !1) : confirm("确认充值 ￥" + form.price + "?") ? void modal.toggle() : ($event.preventDefault(),
                !1)
        }
        ;
        var closeModal = function() {
                modal.action("hide")
            }
            ;
        if ($scope.payError = function() {
                closeModal(),
                    location.path("/user/account/payment-history/top-up")
            }
                ,
                $scope.paySuccess = function() {
                    location.path("/user/account/payment-history/top-up"),
                        closeModal()
                }
                ,
                loadBalance(),
                $scope.chargeResult.result) {
            location.skipReload().search("result", void 0).search("price", void 0);
            var modal_setting = {
                onShow: function() {
                    $timeout(function() {
                        charge_result_modal.action("hide")
                    }, 3e3)
                }
            }
                , charge_result_modal = $scope.result_modal = ModalService.instance("account-top-up-result-modal", modal_setting);
            charge_result_modal.toggle()
        }
    }
    ]),
    angular.module("app").controller("UserAccountSettingController", ["$scope", "$routeParams", "Common", function($scope, $routeParams, Common) {
        var region = $routeParams.region || "account"
            , tab = $routeParams.tab || "setting" === region && "basic";
        $scope.inner_menu = region,
            $scope.tab = tab,
            $scope.keysPath = function() {
                var cases = {
                    setting: function(tab) {
                        return "keys" === tab ? "app/git/key/keys.html" : "app/user/account_setting/setting/" + tab + ".html"
                    },
                    "default": function() {
                        return "app/user/account_setting/account/" + region + ".html"
                    }
                };
                return Common.smartSwitch(cases, region, tab)
            }
    }
    ]),
    angular.module("app").config(["$routeProvider", "$locationProvider", "UserResolver", function($routeProvider, $locationProvider, UserResolver) {
        $routeProvider.when("/user/account/:region?[/]?:tab?[/]?:id?", {
            templateUrl: "app/user/account_setting/index.html",
            controller: "UserAccountSettingController",
            resolve: {
                USER: UserResolver
            },
            reloadOnSearch: !1,
            module: "account",
            title: function($routeParams, Common) {
                var region = $routeParams.region
                    , tab = $routeParams.tab
                    , titles = {
                    keys: "SSH公钥",
                    security: "密码设置",
                    notification: "提醒设置",
                    oauth: "绑定设置",
                    applications: "应用设置"
                }
                    , regions = {
                    setting: function(tab) {
                        return titles[tab] || "个人设置"
                    },
                    "top-up": "账户充值",
                    "payed-project": "付费项目",
                    "payment-history": function(tab) {
                        return "top-up" === tab ? "充值记录" : "消费记录"
                    },
                    invoice: "发票管理",
                    credit: "码币",
                    "default": "账户概览"
                };
                return Common.smartSwitch(regions, region, tab)
            }
        })
    }
    ]),
    angular.module("app").controller("ApplicationController", ["$scope", "$routeParams", "$location", "Customer", "Common", "Errors", "Setting", "Flash", function($scope, $routeParams, $location, Customer, Common, Errors, Setting, Flash) {
        var USER = $scope.USER;
        $scope.inner_menu = "applications",
            $scope.application_id = $routeParams.id,
            $scope.type = "list",
            $scope.current_app_id = "list" == $scope.type ? $scope.application_id : void 0,
            $scope.creating = !1,
            $scope.updating = !1,
            $scope.current_app = {},
            $scope.app_list = [],
            $scope.authorized_list = [],
            $scope.uploading = !1,
            $scope.loading = !1,
            $scope.reseting = !1,
            $scope.revoking = !1,
            $scope.deleting = !1,
            $scope.authorized_loading = !1;
        var scope_map = {
                "user:email": "邮箱地址(只读)",
                user: "用户基本信息(只读)"
            }
            , HTTP_REG = /((http|https):\/\/)?[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;:/~\+#]*[\w\-\@?^=%&amp;/~\+#])?/
            , LOCALHOST_REG = /((http|https):\/\/)?(localhost)(\:\d+)?([\/\w\-_\.]+)?/
            , loadApplications = function() {
                $scope.loading = !0;
                var cPromise = Customer.list({}, function(result) {
                    $scope.app_list = result.data.list
                });
                cPromise["finally"](function() {
                    $scope.loading = !1
                })
            }
            , loadApplication = function(application_id) {
                var cPromise = Customer.info({
                    application_id: application_id
                }, function(result) {
                    $scope.current_app = result.data,
                        $scope.current_app.copy = angular.copy($scope.current_app),
                        loadUserCount(application_id)
                });
                cPromise["catch"](function() {
                    $location.path("/user/account/setting/applications")
                })
            }
            , loadUserCount = function(application_id) {
                Customer.user_count({
                    application_id: application_id
                }, function(result) {
                    $scope.current_app.user_count = result.data
                })
            }
            , loadAuthorized = function() {
                if (!$scope.authorized_loading) {
                    $scope.authorized_loading = !0;
                    var aPromise = Customer.authorized(function(result) {
                        $scope.authorized_list = result.data && result.data.list || [],
                            angular.forEach($scope.authorized_list, function(authorized) {
                                authorized.scopes = scope_map[authorized.scopes]
                            })
                    });
                    aPromise["finally"](function() {
                        $scope.authorized_loading = !1
                    })
                }
            }
            ;
        $scope.createApplication = function(app) {
            if (!$scope.creating) {
                if (!HTTP_REG.test(app.homepage_url) && !LOCALHOST_REG.test(app.homepage_url))
                    return void Flash.fail().send("主页地址格式错误");
                if (!HTTP_REG.test(app.callback_url) && !LOCALHOST_REG.test(app.callback_url))
                    return void Flash.fail().send("回调地址格式错误");
                $scope.creating = !0;
                var cPromise = Customer.save({
                    name: app.name,
                    description: app.description,
                    icon: app.icon,
                    homepage_url: app.homepage_url,
                    callback_url: app.callback_url,
                    owner_id: USER.id
                }, function(result) {
                    $location.path("/user/account/setting/applications/" + result.data.id),
                        Flash.success().send("创建成功！")
                });
                cPromise["finally"](function() {
                    $scope.creating = !1
                })
            }
        }
            ,
            $scope.updateApplication = function(app) {
                if (!$scope.updating && !compare(app, app.copy)) {
                    if (!HTTP_REG.test(app.homepage_url) && !LOCALHOST_REG.test(app.homepage_url))
                        return void Flash.fail().send("主页地址格式错误");
                    if (!HTTP_REG.test(app.callback_url) && !LOCALHOST_REG.test(app.callback_url))
                        return void Flash.fail().send("回调地址格式错误");
                    $scope.updating = !0;
                    var cPromise = Customer.update({
                        application_id: app.id
                    }, {
                        name: app.name,
                        description: app.description,
                        icon: app.icon,
                        homepage_url: app.homepage_url,
                        callback_url: app.callback_url,
                        owner_id: app.owner_id
                    }, function(result) {
                        $scope.current_app = result.data,
                            $scope.current_app.copy = angular.copy($scope.current_app),
                            loadUserCount($scope.current_app.id),
                            Flash.success().send("修改成功")
                    });
                    cPromise["finally"](function() {
                        $scope.updating = !1
                    })
                }
            }
        ;
        var compare = function(app1, app2) {
                return app1.name === app2.name && app1.homepage_url === app2.homepage_url && app1.callback_url === app2.callback_url && app1.description === app2.description && app1.icon === app2.icon
            }
            ;
        $scope.deleteApplication = function(application) {
            if (!$scope.deleting)
                if ($scope.deleting = !0,
                    application.id && confirm("确认删除该应用？")) {
                    var cPromise = Customer["delete"]({
                        application_id: application.id
                    }, {}, function(result) {
                        return 0 != result.code ? void Errors.handle(result) : void $location.path("/user/account/setting/applications")
                    });
                    cPromise["finally"](function() {
                        $scope.deleting = !1
                    })
                } else
                    $scope.deleting = !1
        }
            ,
            $scope.resetSecretKey = function(application) {
                if (!$scope.reseting) {
                    $scope.reseting = !0;
                    var cPromise = Customer.reset_secret({
                        application_id: application.id
                    }, {}, function(result) {
                        application.secret_key = result.data
                    });
                    cPromise["finally"](function() {
                        $scope.reseting = !1
                    })
                }
            }
            ,
            $scope.revokeAllUsers = function(application) {
                if (!$scope.revoking && 0 !== application.user_count) {
                    $scope.revoking = !0;
                    var cPromise = Customer.revoke_users({
                        application_id: application.id
                    }, {}, function() {});
                    cPromise["finally"](function() {
                        $scope.revoking = !1
                    })
                }
            }
            ,
            $scope.revokeAuthorized = function(authorized) {
                if (!authorized.revoking) {
                    authorized.revoking = !0;
                    var rPromise = Customer.revoke({
                        application_id: authorized.id
                    }, {}, function() {
                        $scope.authorized_list = Common.removeOfId($scope.authorized_list, authorized.id, "id")
                    });
                    rPromise["finally"](function() {
                        authorized.revoking = !1
                    })
                }
            }
            ,
            $scope["switch"] = function(mode) {
                $scope.type = mode,
                "list" === $scope.type && $location.path("/user/account/setting/applications")
            }
        ;
        var upload_url = [Setting.api_host, "/api/oauth/applications/icon"].join("");
        $scope.uploadSetting = {
            xhrFields: {
                withCredentials: !0
            },
            url: upload_url,
            dropZone: $("#application-icon"),
            loadImageMaxFileSize: 52428800,
            imageMaxWidth: 800,
            imageMaxHeight: 800,
            imageMinWidth: 128,
            imageMinHeight: 128,
            processstart: function() {
                Common.safeApply.call($scope, function() {
                    $scope.uploading = !0
                })
            },
            done: function(e, data) {
                0 === data.result.code ? ($scope.current_app.icon = data.result.data,
                    $scope.uploading = !1,
                    Flash.success().send("上传成功！")) : (Errors.handle(data.result),
                    $scope.uploading = !1)
            },
            fail: function(e, data) {
                $scope.uploading = !1,
                    Flash.fail().end("上传失败！")
            }
        },
        "list" === $scope.type && ($scope.application_id ? loadApplication($scope.application_id) : (loadApplications(),
            loadAuthorized()))
    }
    ]),
    angular.module("app").controller("UserAvatarSettingController", ["$scope", "$rootScope", "Errors", "Setting", "Flash", "$http", "$location", "User", "Common", "$timeout", "$q", function($scope, $rootScope, Errors, Setting, Flash, $http, $location, User, Common, $timeout, $q) {
        var upload_url = [Setting.api_host, "/api/user/avatar"].join("")
            , CropAvatarModal = $rootScope.CropAvatarModal;
        $scope.current_user = $scope.USER,
            $scope.avatar = !1,
            $scope.uploading = !1,
            $scope.changing = !1,
            $scope.new_avatar = "",
            $scope.img = {
                src: "",
                top: 0,
                left: 0,
                size: 0
            },
            $scope.array = ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"],
            $scope.poll = void 0,
            $scope.choiceAvatar = function(avatar) {
                return isNaN(avatar) ? "none" === avatar ? $scope.current_avatar = "/static/fruit_avatar/none.jpg" : $scope.current_avatar = avatar : $scope.current_avatar = "/static/fruit_avatar/Fruit-" + avatar + ".png",
                    $scope.selected = avatar,
                    $scope.new_avatar = avatar
            }
            ,
            $scope.changeAvatar = function() {
                if (!$scope.changing) {
                    var av;
                    return "" !== $scope.new_avatar ? ("gravatar" === $scope.new_avatar && (av = $scope.gravatar),
                        $scope.changing = !0,
                        $http.post("/api/user/updateavatar", {
                            avatar: $scope.new_avatar
                        }).success(function(result) {
                            return Flash.success().send("修改成功"),
                                $rootScope.USER.lavatar = result.data.lavatar,
                                $rootScope.USER.avatar = result.data.lavatar,
                                $scope.changing = !1,
                                $location.path("/user/account/setting")
                        }).error(function() {
                            $scope.changing = !1
                        })) : void 0
                }
            }
            ,
            $scope.gravatar = void 0;
        var getGravatar = function() {
                var uPromise = User.by_key({
                    key: $scope.current_user.global_key
                });
                return uPromise.then(function(result) {
                    $scope.poll && $timeout.cancel($scope.poll),
                        $scope.gravatar = result.data.gravatar,
                        $scope.poll = void 0,
                        $scope.refresh_gravatar = !1
                }),
                    uPromise
            }
            ;
        getGravatar(),
            $scope.refresh_gravatar = !1;
        var refreshGravatarStatus = function() {
                User.refresh_gravatar_status(function() {
                    $scope.refresh_gravatar = !0,
                        pollStatus()
                })["catch"](function() {
                    return getGravatar(),
                        !1
                })
            }
            , pollStatus = function() {
                $scope.poll = $timeout(function() {
                    refreshGravatarStatus()
                }, 3e3)
            }
            ;
        pollStatus(),
            User.get_avatar(function(result) {
                return $scope.current_avatar = result.data
            }),
            $scope.refreshGravatar = function() {
                if (!$scope.refresh_gravatar) {
                    var uPromise = User.refresh_gravatar(function() {
                        $scope.refresh_gravatar = !0,
                            pollStatus()
                    });
                    uPromise["catch"](function() {
                        return Flash.fail().send("同步失败！"),
                            !1
                    })
                }
            }
            ,
            $scope.uploadSetting = {
                xhrFields: {
                    withCredentials: !0
                },
                url: upload_url,
                dropZone: $("#avatar-upload-zone"),
                disableImageResize: !1,
                loadImageMaxFileSize: 52428800,
                imageMaxWidth: 800,
                imageMaxHeight: 800,
                imageMinWidth: 128,
                imageMinHeight: 128,
                processstart: function() {
                    Common.safeApply.call($scope, function() {
                        $scope.uploading = !0
                    })
                },
                done: function(e, data) {
                    0 === data.result.code ? ($scope.avatar = data.result.data,
                        $scope.img.src = data.result.data,
                        $scope.uploading = !1,
                        Flash.success().send("上传成功!")) : (Errors.handle(data.result),
                        $scope.uploading = !1),
                        cropAvatar().then(function() {
                            $rootScope.$broadcast("on.submit.crop.avatar", data.result.data)
                        })
                },
                fail: function(e, data) {
                    $scope.uploading = !1,
                        Flash.fail().send("上传失败!")
                }
            };
        var cropAvatar = $scope.cropAvatar = function() {
                var deferred = $q.defer();
                return CropAvatarModal.activate(),
                    setTimeout(function() {
                        $("#crop-avatar-modal").modal("setting", {
                            duration: 100,
                            closable: !1
                        }).modal("show"),
                            deferred.resolve()
                    }, 100),
                    deferred.promise
            }
            ;
        $scope.$on("$destroy", function() {
            $scope.poll && ($timeout.cancel($scope.poll),
                $scope.poll = void 0),
                CropAvatarModal.deactivate()
        }),
            $scope.$on("on.crop.avatar.success", function(event, avatar) {
                $scope.current_avatar = avatar,
                    $scope.new_avatar = avatar
            })
    }
    ]),
    angular.module("app").controller("UserBasicSettingController", ["$scope", "$rootScope", "User", "Errors", "Flash", "$http", "$interval", "Email", "Options", "Tags", "Common", "UserBasicSettingService", "ModalService", function($scope, $rootScope, User, Errors, Flash, $http, $interval, Email, Options, Tags, Common, UBService, ModalService) {
        var USER = $scope.USER;
        $scope.show_warn = !0,
            $scope.JOBs = [],
            $scope.TAGs = [],
            $scope.tags = USER.tags.split(","),
            $scope.phone_validate_error = !1,
            $scope.phone_validator_showed = !1,
            $scope.show_timer = !1,
            $scope.resend_code = !1,
            $scope.resend_second = void 0,
            $scope.code_sending = !1,
            $scope.phone_updating = !1,
            $scope.phone_error_msg = "",
            $scope.phone_passed = !1,
            $scope.pickmeup_opts = {
                max: (new Date).getTime()
            };
        var modal = ($scope.password_required_modal = ModalService.instance("password-required-modal"),
            $scope.reset_email_modal = ModalService.instance("reset_email_modal", {
                duration: 150,
                onApprove: function() {
                    return !1
                }
            }));
        $scope.activate_email_modal = ModalService.instance("activate_email_modal", {
            onShow: function() {
                $rootScope.$broadcast("activate.email.show")
            },
            onApprove: function() {
                return !1
            }
        }),
            $scope.$on("activate.email.success", function(event) {
                $scope.activate_email_modal.action("hide")
            }),
            $scope.$on("reset.email.success", function(event) {
                modal.toggle(),
                    event.preventDefault()
            }),
            $scope.user = UBService.initUserSetting(USER),
            Options.jobs(function(result) {
                $scope.JOBs = result.data
            }),
            Tags.user_tag_list(function(result) {
                $scope.TAGs = result.data
            }),
            $scope.$on("user.avatar.update", function(event, avatar) {
                $scope.user.lavatar = avatar
            }),
            $scope.selectTags = function(tags) {
                $scope.user.tags = tags.join(",")
            }
            ,
            $scope.beforeResetEmail = function() {
                modal.action("show")
            }
            ,
            $scope.activateEmail = function() {
                $scope.activate_email_modal.action("show")
            }
            ,
            $scope.closeModal = function(m) {
                m.action("hide")
            }
        ;
        var phone_reg = /^1[0-9]{10}/;
        $scope.phone_passed = $scope.user.is_phone_validated,
            $scope.checkPhoneNumber = function(phone) {
                phone ? (phone === $scope.user.copy.phone ? ($scope.phone_passed = $scope.user.copy.is_phone_validated,
                    $scope.phone_validator_showed = !$scope.phone_passed) : $scope.phone_passed = !1,
                    $scope.phone_validate_error = phone.length > 11 || !phone_reg.test(phone)) : $scope.user.copy.phone ? ($scope.phone_passed = !1,
                    $scope.phone_validate_error = !0,
                    $scope.phone_validator_showed = !0) : ($scope.phone_validator_showed = !1,
                    $scope.phone_validate_error = !1)
            }
        ;
        var timer = function() {
                $scope.resend_second = 60,
                    $scope.show_timer = !0;
                var timeout = $interval(function() {
                    $scope.resend_second--,
                    $scope.resend_second <= 0 && ($interval.cancel(timeout),
                        $scope.resend_second = void 0,
                        $scope.show_timer = !1)
                }, 1e3)
            }
            ;
        $scope.sendCode = function(user) {
            if ((!$scope.phone_passed || user.phone !== user.copy.phone) && user.phone && !$scope.phone_validate_error && !$scope.resend_code) {
                var uPromise = User.generate_code({
                    phone: user.phone
                }, function() {
                    timer()
                });
                uPromise["catch"](function() {
                    $scope.show_timer = !1,
                        $scope.resend_second = 0
                })
            }
        }
            ,
            $scope.showPhoneValidator = function() {
                $scope.phone_validator_showed = !0
            }
            ,
            $scope.submit = function(user) {
                if ($scope.user.is_phone_validated && !$scope.user.phone && Flash.fail().send("手机号码不能为空！"),
                        !$scope.phone_validate_error) {
                    if (user.phone !== user.copy.phone && !user.code)
                        return void Flash.fail().send("手机验证码错误！");
                    var updateUser = function() {
                            $scope.updating = !0;
                            var copy = angular.copy(user.copy);
                            user.copy = void 0;
                            var promise = User.update_info(user, function(result) {
                                var user = result.data;
                                Common.safeApply.call($rootScope, function() {
                                    $rootScope.USER = user
                                }),
                                    $scope.resend_second = 0,
                                    $scope.show_timer = !1,
                                    $scope.phone_validator_showed = !1,
                                    user.code = "",
                                    $scope.user = UBService.initUserSetting(user),
                                    $scope.user.copy = void 0,
                                    $scope.user.copy = angular.copy($scope.user),
                                    $scope.phone_passed = user.is_phone_validated,
                                    $scope.updating = !1,
                                    Flash.success().send("个人信息更新成功！")
                            });
                            promise["catch"](function() {
                                $scope.updating = !1,
                                    user.copy = angular.copy(copy)
                            })
                        }
                        ;
                    (UBService.userChanged(user) || user.code) && updateUser()
                }
            }
            ,
            $scope.onDateChange = function(date) {
                $scope.user.birthday = date
            }
    }
    ]).service("UserBasicSettingService", ["Common", function(Common) {
        var resolve_fields = ["email", "global_key", "name", "sex", "phone", "birthday", "company", "location", "slogan", "introduction", "job", "tags", "lavatar", "is_phone_validated"]
            , copyUser = function(user) {
                var u = {};
                for (var key in user)
                    user.hasOwnProperty(key) && resolve_fields.indexOf(key) >= 0 && (u[key] = user[key]);
                return u.id = user.id,
                    u
            }
            , init = function(user) {
                var new_user = copyUser(user);
                return new_user.slogan = Common.revertHtml(new_user.slogan),
                    new_user.copy = angular.copy(new_user),
                    new_user
            }
            , userChanged = function(user) {
                var copy = user.copy;
                if (!copy)
                    throw new Error("copy variable required in user!");
                var result = !1;
                for (var key in user)
                    user.hasOwnProperty(key) && resolve_fields.indexOf(key) >= 0 && !result && (result = ("job" === key ? user[key] + "" : user[key]) !== ("job" === key ? user.copy[key] + "" : user.copy[key]));
                return result
            }
            ;
        return {
            initUserSetting: init,
            userChanged: userChanged
        }
    }
    ]),
    angular.module("app").controller("CropAvatarController", ["$scope", "$rootScope", "Setting", "$http", "$location", "Flash", "Common", "Errors", function($scope, $rootScope, Setting, $http, $location, Flash, Common, Errors) {
        $scope.avatar = !1,
            $scope.img = {
                src: "",
                top: 0,
                left: 0,
                size: 0
            },
            $scope.onImgChange = function(img) {
                return $scope.img = img
            }
        ;
        var closeModal = $scope.closeModal = function() {
                $("#crop-avatar-modal").modal("hide")
            }
            , refreshModal = function() {
                $("#crop-avatar-modal").modal("refresh")
            }
            ;
        $scope.doImageCrop = function(img) {
            $scope.uploading || isNaN(img.top) || isNaN(img.left) || isNaN(img.size) || 0 === img.size || ($scope.uploading = !0,
                $http.post("/api/user/avatarCrop2", {
                    url: img.src,
                    top: parseInt(img.top),
                    left: parseInt(img.left),
                    size: parseInt(img.size)
                }).success(function(result) {
                    0 === result.code && ($scope.avatar = !1,
                        $scope.uploading = !1,
                        $scope.new_avatar = "",
                        $scope.img = {
                            src: "",
                            top: 0,
                            left: 0,
                            size: 0
                        },
                        closeModal(),
                        $rootScope.$broadcast("on.crop.avatar.success", result.data),
                        $scope.uploading = !1)
                }).error(function() {
                    $scope.uploading = !1
                }))
        }
            ,
            $rootScope.$on("on.submit.crop.avatar", function(event, img) {
                $scope.avatar = img,
                    $scope.img.src = img,
                    setTimeout(function() {
                        refreshModal()
                    }, 500)
            })
    }
    ]),
    angular.module("app").controller("OAuthSettingController", ["$scope", "Common", "OAuth", "Flash", function($scope, Common, OAuth, Flash) {
        $scope.platforms = [],
            $scope.unbinding = !1,
            $scope.binding = !1,
            $scope.loading = !1,
            $scope.loaded = !1;
        var loadPlatforms = function() {
                $scope.loading = !0,
                    $scope.loaded = !1;
                var promise = OAuth.platforms();
                promise.then(function(result) {
                    $scope.platforms = result.data && result.data.list || []
                }),
                    promise["finally"](function() {
                        $scope.loading = !1,
                            $scope.loaded = !0
                    })
            }
            ;
        loadPlatforms(),
            $scope.oauthIcon = function(name) {
                name = name.toLowerCase();
                var icons = {
                    github: "github alternate",
                    weibo: "weibo",
                    "default": "user"
                }
                    , clazz = {}
                    , icon = Common.smartSwitch(icons, name, name);
                return clazz[icon] = !0,
                    clazz
            }
            ,
            $scope.unbind = function(name) {
                if (confirm("确定取消 " + name + " 账号绑定？")) {
                    var promise = OAuth.unbind({
                        platform: name
                    }, {});
                    $scope.unbinding = !0,
                        promise.then(function() {
                            Flash.success().send("解绑 " + name + " 账号成功！"),
                                loadPlatforms()
                        }),
                        promise["catch"](function() {
                            return Flash.fail().send("解绑 " + name + " 账号失败！"),
                                !1
                        }),
                        promise["finally"](function() {
                            $scope.unbinding = !1
                        })
                }
            }
            ,
            $scope.rebind = function(platform) {
                $scope.binding = !0,
                    location.href = "/api/oauth/" + platform.toLowerCase() + "/rebind"
            }
    }
    ]),
    angular.module("app").controller("SecretQuestionController", ["$scope", "User", "Errors", "Flash", "$location", "Common", "$rootScope", "$timeout", "SecretQuestion", "$q", "ModalService", function($scope, User, Errors, Flash, $location, Common, $rootScope, $timeout, SecretQuestion, $q, ModalService) {
        $scope.questions = ["您父亲的名称是？", "您母亲的名称是？", " 您的小学的名称是？", "您的第一个宠物的名称是？", "您的中学的名称是？"],
            $scope.question1 = 0,
            $scope.question2 = 0,
            $scope.question3 = 0;
        var password_modal = $scope.password_required_modal = ModalService.instance("password-required-modal");
        password_modal.on("show", function() {
            $scope.$broadcast("required.password.show")
        }),
            $scope.$on("set.required.password", function(event, password) {
                event.currentScope && event.targetScope && event.currentScope.$id !== event.targetScope.$id && (requirePassword(password),
                    event.preventDefault())
            });
        var requirePassword = angular.noop;
        $scope.setting_secret_question = function() {
            var question1 = $scope.question1
                , question2 = $scope.question2
                , question3 = $scope.question3;
            1 == $scope.question1 && (question1 = $scope.custom_question1),
            1 == $scope.question2 && (question2 = $scope.custom_question2),
            1 == $scope.question3 && (question3 = $scope.custom_question3),
                password_modal.toggle(),
                requirePassword = function(password) {
                    var promise = SecretQuestion.setting_secret_question({}, {
                        question1: question1,
                        answer1: $scope.answer1,
                        question2: question2,
                        answer2: $scope.answer2,
                        question3: question3,
                        answer3: $scope.answer3,
                        two_factor_code: password
                    });
                    promise.then(function() {
                        password_modal.action("hide"),
                            Flash.success().send("密保设置成功！")
                    }),
                        promise["catch"](function(err, result) {
                            result && result.code > 0 && password_modal.action("show")
                        })
                }
        }
        ;
        var get_secret_question = function() {
                var count_promise = SecretQuestion.count_secret_question();
                count_promise.then(function(result) {
                    3 === result.data && (password_modal.toggle(),
                            requirePassword = function(password) {
                                var promise = SecretQuestion.get_secret_question({
                                    two_factor_code: password
                                });
                                promise.then(function(result) {
                                    3 === result.data.length && ($scope.question1 = result.data[0].question,
                                        $scope.answer1 = result.data[0].answer,
                                    -1 === $.inArray($scope.question1, $scope.questions) && ($scope.custom_question1 = $scope.question1,
                                        $scope.question1 = 1),
                                        $scope.question2 = result.data[1].question,
                                        $scope.answer2 = result.data[1].answer,
                                    -1 === $.inArray($scope.question2, $scope.questions) && ($scope.custom_question2 = $scope.question2,
                                        $scope.question2 = 1),
                                        $scope.question3 = result.data[2].question,
                                        $scope.answer3 = result.data[2].answer,
                                    -1 === $.inArray($scope.question3, $scope.questions) && ($scope.custom_question3 = $scope.question3,
                                        $scope.question3 = 1)),
                                        password_modal.action("hide")
                                }),
                                    promise["catch"](function(err, result) {
                                        result && result.code > 0 && password_modal.action("show")
                                    })
                            }
                    )
                })
            }
            ;
        get_secret_question()
    }
    ]),
    angular.module("app").controller("UserSecuritySettingController", ["$scope", "User", "Errors", "Flash", "$location", "Common", "$rootScope", "$timeout", function($scope, User, Errors, Flash, $location, Common, $rootScope, $timeout) {
        var submit_passwd = {
            current_password: "",
            password: "",
            confirm_password: ""
        };
        $scope.submit = function(passwd) {
            return submit_passwd.current_password = SHA1(passwd.current_password),
                submit_passwd.password = SHA1(passwd.password),
                submit_passwd.confirm_password = SHA1(passwd.confirm_password),
                passwd.password.length > 64 || passwd.password.length < 6 ? void Flash.fail().send("新密码长度为6~64位") : User.update_passwd(submit_passwd, function(result) {
                    0 === result.code ? (Flash.success().send("修改成功,请使用新密码重新登录！"),
                        Common.safeApply.call($rootScope, function() {
                            $rootScope.USER = void 0
                        }),
                        $timeout(function() {
                            $location.path("/login")
                        }, 1500)) : Flash.fail().send(result.msg),
                        passwd.current_password = "",
                        passwd.password = "",
                        passwd.confirm_password = ""
                })
        }
    }
    ]),
    angular.module("app").controller("TotpSettingController", ["$scope", "$localStorage", "$rootScope", "$route", "User", "Messages", "Errors", "Flash", "Setting", "$timeout", "TwoFactorAuth", "Flash", function($scope, $localStorage, $rootScope, $route, User, Messages, Errors, Flash, Setting, $timeout, TwoFactorAuth) {
        $rootScope.$on("on.two_factor_auth.method", function(result) {
            TwoFactorAuth.new_totp_info(function(result) {
                $scope.image_url = result.data.image_url,
                    $scope.two_factor_token = result.data.two_factor_token,
                    $scope.two_factor_code = ""
            })
        }),
            $scope.verifyCode = function() {
                var promise = TwoFactorAuth.open_totp({
                    twoFactorToken: $scope.two_factor_token,
                    twoFactorCode: $scope.two_factor_code
                });
                promise.then(function() {
                    $timeout(function() {
                        $rootScope.$broadcast("on.two_factor_auth.totp", !0)
                    }, 700),
                        $("#totp-setting-modal").modal("hide"),
                        Flash.success().send("成功开启两步验证！")
                })
            }
    }
    ]),
    angular.module("app").controller("UserTwoFactorAuthSettingController", ["$scope", "User", "Errors", "Flash", "$location", "Common", "$rootScope", "$timeout", "TwoFactorAuth", "$q", "ModalService", "SecretQuestion", function($scope, User, Errors, Flash, $location, Common, $rootScope, $timeout, TwoFactorAuth, $q, ModalService, SecretQuestion) {
        $scope.method = "",
            $scope.opening = !1,
            $scope.step = 1;
        var TotpSettingModal = $rootScope.TotpSettingModal
            , password_modal = $scope.password_required_modal = ModalService.instance("password-required-modal");
        $scope.$watch("opening", function(newValue, oldValue) {
            newValue === !1 ? $scope.password_words = "关闭两步验证" : $scope.password_words = "开启两步验证"
        }),
            $scope.showTotpModal = function() {
                var deferred = $q.defer();
                return TotpSettingModal.activate(),
                    setTimeout(function() {
                        $("#totp-setting-modal").modal("setting", {
                            duration: 100,
                            onApprove: function() {
                                return !1
                            },
                            onShow: function() {
                                $rootScope.$broadcast("on.two_factor_auth.method")
                            },
                            onVisible: function() {
                                setTimeout(function() {
                                    $("totp-setting-modal").find("input:first").trigger("focus")
                                }, 0)
                            },
                            onHide: function() {}
                        }).modal("show"),
                            deferred.resolve()
                    }, 100),
                    deferred.promise
            }
            ,
            $scope.$on("set.required.password", function(event, password) {
                event.currentScope && event.targetScope && event.currentScope.$id !== event.targetScope.$id && (requirePassword(password),
                    event.preventDefault())
            });
        var requirePassword = angular.noop;
        $scope.closeTwoFactorAuth = function() {
            password_modal.toggle(),
                $scope.$broadcast("required.password.show"),
                requirePassword = function(password) {
                    var promise = TwoFactorAuth.close_two_factor_auth({
                        two_factor_code: password
                    });
                    promise.then(function() {
                        password_modal.action("hide"),
                            $scope.method = "password",
                            Flash.success().send("关闭两步验证成功")
                    }),
                        promise["catch"](function(err, result) {
                            result && result.code > 0 && result.msg.password && password_modal.action("show")
                        })
                }
        }
            ,
            $scope.$on("$destroy", function() {
                TotpSettingModal.deactivate()
            }),
            $rootScope.$on("on.two_factor_auth.totp", function(result) {
                result && ($scope.method = "totp")
            }),
            TwoFactorAuth.method(function(result) {
                $scope.method = result.data
            }),
            $scope.openTotp = function() {
                $rootScope.USER.is_phone_validated && ($scope.opening = !0,
                    $scope.step = 1,
                    TwoFactorAuth.new_totp_info(function(result) {
                        $scope.image_url = result.data.image_url,
                            $scope.two_factor_token = result.data.two_factor_token,
                            $scope.two_factor_code = "",
                            $scope.secret = result.data.secret,
                            $scope.username = result.data.username
                    }))
            }
            ,
            $scope.prevStep = function() {
                $scope.step = $scope.step > 1 ? $scope.step - 1 : 1
            }
            ,
            $scope.nextStep = function() {
                $scope.step = $scope.step < 3 ? $scope.step + 1 : 3
            }
            ,
            $scope.verifyCode = function() {
                "" !== $scope.two_factor_code && (password_modal.toggle(),
                        $scope.$broadcast("required.password.show"),
                        requirePassword = function(password) {
                            var promise = TwoFactorAuth.open_totp({
                                twoFactorToken: $scope.two_factor_token,
                                twoFactorCode: $scope.two_factor_code,
                                password: password
                            });
                            promise.then(function() {
                                $scope.opening = !1,
                                    password_modal.action("hide"),
                                    $scope.method = "totp",
                                    Flash.success().send("成功开启两步验证！")
                            }),
                                promise["catch"](function(err, result) {
                                    result && result.code > 0 && result.msg.two_factor_code_error ? password_modal.action("hide") : password_modal.action("show")
                                })
                        }
                )
            }
    }
    ]),
    angular.module("app").controller("ActivateEmailModalCtrl", ["$scope", "$rootScope", "User", "Setting", "Flash", "$timeout", function($scope, $rootScope, User, Setting, Flash, $timeout) {
        $scope.form = {
            email: $rootScope.USER.email,
            j_captcha: ""
        },
            $scope.refreshCaptcha = function() {
                $timeout(function() {
                    $scope.captcha = Setting.api_host + "/api/getCaptcha?code=" + Math.random()
                }, 100)
            }
            ,
            $scope.$on("activate.email.show", function() {
                $scope.refreshCaptcha(),
                    $scope.captcha = ""
            }),
            $scope.activateEmail = function() {
                if (!$scope.form.j_captcha)
                    return void Flash.fail().send("请输入验证码");
                $scope.sending = !0;
                var p = User.send_activate($scope.form, function(result) {
                    result.data && Flash.success().send("激活邮件发送成功，请注意查收"),
                        $scope.$emit("activate.email.success")
                });
                p["catch"](function() {
                    $scope.refreshCaptcha()
                }),
                    p["finally"](function() {
                        $scope.sending = !1
                    })
            }
    }
    ]),
    angular.module("app").controller("MyActivitiesController", ["$rootScope", "$route", "$scope", "Tweet", "Activity", "Errors", "hljsService", "$routeParams", "location", "Common", function($rootScope, $route, $scope, Tweet, Activity, Errors, hljs, $routeParams, $location, Common) {
        var USER = $scope.USER;
        $rootScope.$watch("USER", function(user) {
            USER = user
        }),
            $scope.activities = [],
            $scope.tweet_content = "",
            $scope.mode = $routeParams.region || "all",
            $scope.activity_loading = !1;
        var loadActivities = function(mode) {
                $scope.activity_loading = !0,
                    $scope.activities = [],
                    Activity.last({
                        type: mode
                    }, function(result) {
                        if (result.data) {
                            var res_data = [];
                            $.each(result.data, function(i, a) {
                                a && a.id > 0 && res_data.push(a)
                            }),
                                $scope.activities = Common.unifyActivity(res_data)
                        }
                    })["finally"](function() {
                        $scope.activity_loading = !1
                    })
            }
            ;
        $scope.switchType = function(mode) {
            $scope.mode = mode,
                loadActivities(mode),
                $location.skipReload().path("/user/activities/" + mode),
                $scope.no_more_data = !1
        }
            ,
            $scope.no_more_data = !1;
        var page_size = 20;
        $scope.showMore = function() {
            if ($scope.activities && $scope.activities.length > 0) {
                var last_id = +$scope.activities[$scope.activities.length - 1].id;
                if (!last_id)
                    return;
                $scope.activity_loading = !0,
                    Activity.last({
                        last_id: last_id,
                        type: $scope.mode,
                        pageSize: page_size
                    }, function(result) {
                        if (0 === result.data.length)
                            return void ($scope.no_more_data = !0);
                        $scope.no_more_data = !1;
                        var res_data = [];
                        $.each(result.data, function(i, a) {
                            a && a.id > 0 && res_data.push(a)
                        }),
                            $scope.activities = Common.unifyActivity($scope.activities.concat(res_data))
                    })["finally"](function() {
                        $scope.activity_loading = !1
                    })
            }
        }
            ,
            loadActivities($scope.mode)
    }
    ]),
    angular.module("app").controller("AddFriendController", ["$scope", "$rootScope", "User", "Errors", "Common", "InviteFriendService", "RegisterService", "Flash", function($scope, $rootScope, User, Errors, Common, InviteFriendService, RegisterService, Flash) {
        var USER = $rootScope.USER;
        $scope.friends = [],
            $scope.selected_users = [],
            $scope.single_user = !1,
            $scope.key = "",
            $scope.loading = !1,
            $scope.loaded = !1;
        var initStatus = function(friends) {
                return angular.forEach(friends, function(friend) {
                    friend.status = 0
                }),
                    friends
            }
            ;
        $scope.loadFriend = function(key) {
            key.length > 0 ? ($scope.loading = !0,
                $scope.loaded = !1,
                $scope.friends = [],
                User.search({
                    key: key
                }, function(result) {
                    $scope.loaded = !0,
                        $scope.loading = !1,
                        0 == result.code ? ($scope.friends = initStatus(result.data || []),
                            $scope.single_user = 1 == $scope.friends.length && $scope.friends[0]) : Errors.handle(result)
                })) : ($scope.friends = [],
                $scope.loaded = !1)
        }
            ,
            $scope.selectFriend = function(user) {
                user.selected = !user.selected,
                    user.selected ? $scope.selected_users.push(user) : $scope.removeSelected(user)
            }
            ,
            $scope.removeSelected = function(user) {
                return user.selected = !1,
                    $scope.selected_users = Common.removeOfId($scope.selected_users, user.id),
                    $scope.friends = Common.replaceWith($scope.friends, user),
                    !1
            }
            ,
            $scope.doFollow = function(user) {
                if (user && 0 == user.status) {
                    var uPromise = User.follow({
                        users: user.global_key
                    }, {}, function(result) {
                        $scope.$emit("friend.add", user),
                            $scope.$broadcast("friend.add", user),
                            USER.follows_count++,
                            user.status = 1
                    });
                    uPromise["catch"](function(error, result) {
                        return result && 1 == result.code && (user.status = 2,
                            user.msg = result.msg),
                            !1
                    })
                }
            }
            ,
            $scope.doUnfollow = function(user) {
                if (user) {
                    var uPromise = User.unfollow({
                        users: user.global_key
                    }, {}, function(result) {
                        $scope.$emit("friend.remove", user),
                            $scope.$broadcast("friend.remove", user),
                            user.status = 0
                    });
                    uPromise["catch"](function(error, result) {
                        return user.status = 2,
                            user.msg = result.msg,
                            !1
                    })
                }
            }
            ,
            $scope.isEmail = function(email) {
                return RegisterService.isEmail(email) && $scope.USER.email !== email
            }
            ,
            $scope.inviteFriend = function() {
                var words = "Hi，我推荐你试试 https://coding.net 这个网站，感觉很不错哦！";
                InviteFriendService.invite($scope.key, words, InviteFriendService.INVITE_FRIEND),
                    $("#add-friend-modal").modal("hide")
            }
            ,
            $("#add-friend-modal").modal("setting", {
                allowMultiple: !0,
                onHide: function() {
                    $scope.friends = [],
                        $scope.selected_users = [],
                        $scope.key = "",
                        $scope.loaded = !1
                },
                onShow: function() {
                    $rootScope.InviteFriendModal.activate()
                }
            }),
            InviteFriendService.onAfterInvite(function(event, email, invited, id) {
                id === InviteFriendService.INVITE_FRIEND && ($("#add-friend-modal").modal("show"),
                    $scope.key = email,
                    $scope.loadFriend(email),
                invited && Flash.success().send("已向 " + email + " 发送邀请邮件！"))
            }),
            $("#add-friend-modal").on("click", ".avatar", function(e) {
                $("#add-friend-modal").modal("hide")
            })
    }
    ]),
    angular.module("app").controller("MyGroupController", ["$scope", "location", "Groups", "Group", "$routeParams", "$route", function($scope, $location, Groups, Group, $routeParams, $route) {
        $scope.groups = {},
            $scope.group_creating = !1,
            $scope.group = {};
        var loadGroup = function() {
                Groups.query(function(result) {
                    0 == result.code && ($scope.groups = result.data)
                })
            }
            ;
        $scope.createGroup = function(group) {
            $scope.group_creating = !0,
                Group.create(group, function(result) {
                    if ($scope.group_creating = !1,
                        1e3 == result.code)
                        return void $location.path("/login");
                    if (0 == result.code) {
                        var group_url = result.data;
                        return void (location.href = group_url)
                    }
                    $.extend($scope, {}, result)
                })
        }
            ,
            loadGroup()
    }
    ]),
    angular.module("app").controller("InviteFriendController", ["$scope", "$rootScope", "InviteFriendService", "User", "$timeout", "Flash", "Setting", function($scope, $rootScope, InviteFriendService, User, $timeout, Flash, Setting) {
        $scope.copied = !1;
        var PROJECT = $rootScope.PROJECT
            , removeWatch = $rootScope.$watch("PROJECT", function(project) {
            project && (PROJECT = project,
                removeWatch())
        });
        $scope.form = {
            email: "",
            content: ""
        },
            $scope.inviting = !1,
            $scope.invited = !1,
            InviteFriendService.onInvite(function(event, email, words) {
                $scope.inviting = !1,
                    $scope.invited = !1,
                    $("#invite-friend-modal").modal("setting", {
                        duration: 200,
                        closable: !1,
                        allowMultiple: !1,
                        onHide: function() {
                            InviteFriendService.afterInvite($scope.form.email, $scope.invited)
                        },
                        onShow: function() {
                            generateInviteUrl()
                        }
                    }).modal("show"),
                email && ($scope.form.email = email),
                0 === $scope.form.content.length && words && ($scope.form.content = words)
            }),
            $scope.inviteFriend = function() {
                $scope.inviting = !0;
                var invite_type = InviteFriendService.id()
                    , iPromise = invite_type === InviteFriendService.INVITE_FRIEND ? User.invite($scope.form) : User.inviteMember(angular.extend({
                    username: PROJECT.owner_user_name,
                    project_name: PROJECT.name
                }, $scope.form), {});
                iPromise.then(function() {
                    $scope.invited = !0,
                        $("#invite-friend-modal").modal("hide")
                }),
                    iPromise["catch"](function() {
                        $("#invite-friend-modal").modal("hide")
                    }),
                    iPromise["finally"](function() {
                        $scope.inviting = !1
                    })
            }
        ;
        var generateInviteUrl = function() {
                var uPromise = User.inviteNotLimited();
                uPromise.then(function(result) {
                    $scope.invite_url = Setting.host + "/register?key=" + result.data
                })
            }
            ;
        $scope.doCopy = function() {
            $scope.copied = !0,
                Flash.success().send("链接已复制到粘贴板")
        }
            ,
            $scope.getCopy = function() {
                return $scope.invite_url
            }
    }
    ]).service("InviteFriendService", ["$rootScope", "$timeout", function($rootScope, $timeout) {
        var INVITE_KEY = "on.invite.friend"
            , AFTER_INVITE_KEY = INVITE_KEY + ".after"
            , INVITE_MEMBER = "member"
            , INVITE_FRIEND = "friend"
            , id = null
            , itv = 700
            , invite = function(email, words, i) {
                id = i,
                    $timeout(function() {
                        $rootScope.$broadcast(INVITE_KEY, email, words)
                    }, itv)
            }
            , onInvite = function(callback) {
                $rootScope.$on(INVITE_KEY, callback)
            }
            , afterInvite = function(email, invited) {
                $timeout(function() {
                    $rootScope.$broadcast(AFTER_INVITE_KEY, email, invited, id)
                }, itv)
            }
            , onAfterInvite = function(callback) {
                $rootScope.$on(AFTER_INVITE_KEY, callback)
            }
            , getId = function() {
                return id
            }
            ;
        return {
            invite: invite,
            onInvite: onInvite,
            afterInvite: afterInvite,
            onAfterInvite: onAfterInvite,
            id: getId,
            INVITE_FRIEND: INVITE_FRIEND,
            INVITE_MEMBER: INVITE_MEMBER
        }
    }
    ]),
    angular.module("app").controller("MessageController", ["$routeParams", "$localStorage", "$rootScope", "$scope", "$location", "User", "Messages", "Errors", "Pager", "PageTitle", "Flash", "Setting", "TextService", "$interval", "RequestValidModalService", function($routeParams, $localStorage, $rootScope, $scope, $location, User, Messages, Errors, Pager, PageTitle, Flash, Setting, TextService, $interval, RequestValidModalService) {
        var AUTO_LOAD_INTERVAL = 5e3
            , MAX_MESSAGE_LENGTH = 1024
            , region = $routeParams.region;
        $scope.inner_menu = region || "basic";
        var USER = $rootScope.USER
            , pager_id = ($routeParams.user_key,
            $scope.pager_id = "messages-list");
        Pager = Pager.instance(pager_id, $scope);
        var pagePromise = Pager.onChange()
            , cpager_id = $scope.cpager_id = "messages-history"
            , CPager = Pager.instance(cpager_id, $scope)
            , cPagePromise = CPager.onChange();
        $scope.loadConversation = function(conversation, $event) {
            angular.element($event.target).is("a, i[ng-click], img") || ($location.search("page", void 0),
                $location.path("/user/messages/history/" + conversation.friend.global_key))
        }
            ,
            $scope.showSendMsgDialog = function() {
                $rootScope.send_msg_target = void 0,
                    $("#send-message-modal").modal("show")
            }
            ,
            $scope.msg = "",
            $scope.clearAllMessages = function() {
                confirm("这将删除你和所有人的会话，确定继续？") && Messages.clear_all({}, function(result) {
                    0 === result.code ? $scope.conversations = [] : Errors.handle(result)
                })
            }
            ,
            $scope.delConversation = function(conversation, index) {
                if (confirm("这将删除你和 " + conversation.friend.name + " 的所有会话，确定继续？")) {
                    var userUnreadMessageCount = conversation.unreadCount
                        , unreadMessageCount = $rootScope.unread.messages;
                    Messages.del_conversation({
                        id: conversation.friend.id
                    }, {}, function(result) {
                        0 === result.code ? ($rootScope.unread.messages = unreadMessageCount - userUnreadMessageCount,
                            $scope.conversations.splice(index, 1)) : Errors.handle(result)
                    })
                }
            }
            ,
            $scope.formatConversationTitle = function(conversation) {
                return USER.id === conversation.sender.id ? "我发送给 " + conversation.sender.name + ": " + conversation.content : conversation.sender.name + " 发送给我: " + conversation.content
            }
        ;
        var allPage = function(page) {
                $scope.loading = !0;
                var loadConversations = function(page) {
                        $scope.conversations = void 0,
                            Messages.conversations({
                                page: page || 1
                            }, function(result) {
                                $scope.loading = !1,
                                    0 === result.code ? (Pager.optionsReady(result.data),
                                        $scope.conversations = result.data.list,
                                        angular.forEach($scope.conversations, function(conversation) {
                                            conversation.content = TextService.text(conversation.content)
                                        })) : Errors.handle(result)
                            })
                    }
                    ;
                pagePromise.then(null , null , function(page) {
                    loadConversations(page)
                }),
                    loadConversations(page)
            }
            , unreadPage = function(page) {
                $scope.loading = !0;
                var loadConversations = function(page) {
                        $scope.conversations = void 0,
                            Messages.conversations({
                                status: 0,
                                page: page || 1
                            }, function(result) {
                                $scope.loading = !1,
                                    0 === result.code ? (Pager.optionsReady(result.data),
                                        $scope.conversations = result.data.list,
                                        angular.forEach($scope.conversations, function(conversation) {
                                            conversation.content = TextService.text(conversation.content)
                                        })) : Errors.handle(result)
                            })
                    }
                    ;
                pagePromise.then(null , null , function(page) {
                    loadConversations(page)
                }),
                    loadConversations(page)
            }
            ;
        $scope.sending = !1;
        var historyPage = function(page) {
                $scope.loading = !0,
                    $scope.feed_editor = {
                        content: $localStorage.user_reply_message || ""
                    },
                    $scope.$watch("feed_editor.content", function(content) {
                        $localStorage.user_reply_message = content
                    }),
                    $scope.$on("feed.editor.submit", function(event, content, progress) {
                        return progress.pending(),
                            event.stopPropagation(),
                            $.isEmptyObject(content) ? void progress.error() : content.length > MAX_MESSAGE_LENGTH ? (Flash.fail().send("私信内容不能超过 " + MAX_MESSAGE_LENGTH + " 个字符！"),
                                void progress.error()) : void startLoadUnreadItv(function() {
                                $scope.sending = !0;
                                var promise = Messages.send_message({
                                    receiver_global_key: $scope.friend.global_key,
                                    content: content
                                }, function(result) {
                                    return 0 != result.code ? (progress.error(),
                                        $scope.sending = !1,
                                        void Errors.handle(result)) : (progress.done(),
                                        $scope.conversations.unshift(result.data),
                                        $scope.showUnreadMessages(),
                                        void ($scope.sending = !1))
                                });
                                promise["finally"](function() {
                                    $scope.sending = !1
                                }),
                                    promise["catch"](function(err, result) {
                                        progress.error(),
                                        result && 3302 === result.code && RequestValidModalService.setType(RequestValidModalService.MESSAGE_LIMIT).setMessageReceiver($scope.friend.global_key).show()
                                    }),
                                    delete $localStorage.user_reply_message
                            })
                    }),
                    $scope.delMessage = function(id, index) {
                        confirm("确定删除？") && Messages.del_message({
                            id: id
                        }, function(result) {
                            0 === result.code ? $scope.conversations.splice(index, 1) : Errors.handle(result)
                        })
                    }
                    ,
                    $scope.unread_messages = [],
                    $scope.unread_messages_count = 0,
                    $scope.loading_unread_messages = !1,
                    $scope.last_message_id = 0,
                    $scope.unread_auto_itv = null ;
                var startLoadUnreadItv = function(afterLoad) {
                        if (stopLoadUnreadItv(),
                                angular.isFunction(afterLoad)) {
                            var promise = $scope.loadUnreadMessages($routeParams.user_key, $scope.last_message_id);
                            promise.then(function() {
                                afterLoad(),
                                    startLoadUnreadItv()
                            })
                        } else
                            $scope.unread_auto_itv = $interval(function() {
                                $scope.loadUnreadMessages($routeParams.user_key, $scope.last_message_id)
                            }, AUTO_LOAD_INTERVAL)
                    }
                    , stopLoadUnreadItv = function() {
                        $scope.unread_auto_itv && $interval.cancel($scope.unread_auto_itv)
                    }
                    , reOrderUnreadMessages = function(prev_messages, unread_messages) {
                        var re_order_messages = [];
                        return angular.forEach(unread_messages, function(msg) {
                            var id = msg.id
                                , found = _.find(prev_messages, function(item) {
                                return item.id === id
                            });
                            found || re_order_messages.push(msg)
                        }),
                            re_order_messages = re_order_messages.concat(prev_messages),
                            re_order_messages = _.sortBy(re_order_messages, function(item) {
                                return -item.id
                            })
                    }
                    ;
                $scope.loadUnreadMessages = function(user_key, last_id) {
                    $scope.loading_unread_messages = !0;
                    var promise = Messages.last({
                        user_key: user_key,
                        id: last_id
                    });
                    return promise.then(function(result) {
                        if (result.data.length > 0) {
                            $scope.unread_messages = result.data;
                            var prevs = $scope.conversations.map(function(c) {
                                return c.id
                            })
                                , unreads = $scope.unread_messages.map(function(c) {
                                return c.id
                            });
                            $scope.unread_messages_count = _.union(prevs, unreads).length - prevs.length
                        }
                    }),
                        promise["catch"](function() {}),
                        promise["finally"](function() {
                            $scope.loading_unread_messages = !1
                        }),
                        promise
                }
                    ,
                    $scope.showUnreadMessages = function() {
                        $scope.conversations = reOrderUnreadMessages($scope.conversations, $scope.unread_messages),
                            $scope.last_message_id = $scope.conversations[0].id,
                            $scope.unread_messages = [],
                            $scope.unread_messages_count = 0,
                            startLoadUnreadItv()
                    }
                ;
                var readConversation = function(user_key) {
                        Messages.read_conversation({
                            user_key: user_key
                        }, {}, function(result) {
                            0 === result.code && angular.isNumber(result.data) && ($rootScope.unread.messages = result.data)
                        })
                    }
                    ;
                $scope.$on("$destroy", function() {
                    stopLoadUnreadItv()
                });
                var loadConversation = $scope.refreshMessages = function(page) {
                        $scope.loading = !0,
                            page = page || 1,
                            stopLoadUnreadItv(),
                            Messages.conversation({
                                user_key: $routeParams.user_key,
                                page: page
                            }, function(result) {
                                if (0 === result.code) {
                                    CPager.optionsReady(result.data),
                                        $scope.conversations = result.data.list;
                                    for (var i = 0; i < result.data.list.length; i++) {
                                        var conversation = result.data.list[i];
                                        if (0 === conversation.status) {
                                            readConversation($routeParams.user_key);
                                            break
                                        }
                                    }
                                    1 === page && $scope.conversations.length > 0 && ($scope.unread_messages_count = 0,
                                        $scope.unread_messages = [],
                                        $scope.last_message_id = $scope.conversations[0].id,
                                        startLoadUnreadItv())
                                } else
                                    Errors.handle(result);
                                $scope.loading = !1
                            })
                    }
                    ;
                User.byKey({
                    key: $routeParams.user_key
                }, function(result) {
                    0 === result.code ? ($scope.friend = result.data,
                        $scope.header = "与 " + $scope.friend.name + " 的对话",
                        PageTitle.set($scope.header, "Coding.net")) : Errors.handle(result)
                }),
                    cPagePromise.then(null , null , function(page) {
                        loadConversation(page)
                    }),
                    loadConversation(page)
            }
            ;
        switch ($scope.inner_menu) {
            case "basic":
                $scope.header = "所有私信",
                    $scope.empty_msg = "没有发送或收到的私信，点击右上角的“发送私信”来开始：）",
                    $scope.currentTpl = "/user/tpl-message-list.html",
                    allPage(Pager.currentPage());
                break;
            case "unread":
                $scope.header = "未读私信",
                    $scope.empty_msg = "没有未读私信：）",
                    $scope.currentTpl = "/user/tpl-message-list.html",
                    unreadPage(Pager.currentPage());
                break;
            case "history":
                $scope.header = "",
                    $scope.currentTpl = "/user/tpl-message-history.html",
                    historyPage(CPager.currentPage())
        }
        $scope.multipleLines = function(msg) {
            return msg.replace(/\n/g, " <br/>")
        }
    }
    ]),
    angular.module("app").controller("NotificationController", ["$routeParams", "$rootScope", "$scope", "Notifications", "Errors", "Pager", "ipCookie", function($routeParams, $rootScope, $scope, Notifications, Errors, Pager, ipCookie) {
        function loadNotifications(params, page) {
            $scope.loading = !0,
                $scope.notifications = void 0,
                $scope.unreadCount = void 0,
                Notifications.unread_count(params, function(result) {
                    0 == result.code ? ($scope.unreadCount = result.data,
                    $scope.unreadCount >= 10 && !ipCookie(key) && ($scope.annoy = !0)) : Errors.handle(result)
                }),
                params.page = page || 1,
                Notifications.all(params, function(result) {
                    $scope.loading = !1,
                        0 == result.code ? (Pager.optionsReady(result.data),
                            $scope.notifications = result.data.list,
                            angular.forEach($scope.notifications, function(notification) {
                                notification.content = notification.content.replace(/\n/g, "")
                            })) : Errors.handle(result)
                })
        }
        function MarkPageReadUI() {
            angular.forEach($scope.notifications, function(notification) {
                0 == notification.status && (notification.status = 1)
            })
        }
        var region = $routeParams.region;
        $scope.inner_menu = region || "basic";
        var key = "close-notification-annoy";
        $scope.annoy = !1;
        var iconMap = {
            Task: "tasks",
            ProjectMember: "users",
            ProjectTopic: "chat",
            TweetComment: "comment",
            UserFollow: "unhide",
            PullRequestBean: "fork code",
            TweetLike: "heart",
            MergeRequestBean: "coding merge-request",
            QcTask: "certificate",
            TaskComment: "tasks",
            MergeRequestComment: "coding merge-request"
        };
        $scope.closeAnnoy = function() {
            var date = new Date;
            date.setTime(date.getTime() + 3942e6),
                ipCookie(key, "true", {
                    expires: date
                }),
                $scope.annoy = !1
        }
        ;
        var pager_id = $scope.pager_id = (new Date).getTime();
        Pager = Pager.instance(pager_id, $scope);
        var pagePromise = Pager.onChange()
            , loadUnreadNotifications = function(page) {
                $scope.loading = !0,
                    $scope.notifications = void 0,
                    $scope.unreadCount = void 0,
                    Notifications.unread({
                        page: page
                    }, function(result) {
                        $scope.loading = !1,
                            0 == result.code ? (Pager.optionsReady(result.data),
                                $scope.notifications = result.data.list,
                                $scope.unreadCount = result.data.totalRow,
                                angular.forEach($scope.notifications, function(notification) {
                                    notification.content = notification.content.replace(/\n/g, "")
                                })) : Errors.hanlde(result)
                    })
            }
            ;
        switch ($scope.eventIcon = function(notification) {
            if (0 == notification.type)
                return "basic email";
            var icon = "inbox";
            for (var key in iconMap)
                if (key == notification.target_type) {
                    icon = iconMap[key];
                    break
                }
            return icon
        }
            ,
            $scope.markRead = function(notification, event) {
                1 != notification.status && Notifications.mark_read({
                    id: notification.id
                }, {}, function(response) {
                    0 == response.code ? 1 == response.data && (notification.status = 1,
                        $scope.unreadCount--,
                        $rootScope.unread.notifications--) : Errors.handle(response)
                })
            }
            ,
            $scope.markPageRead = function() {
                var ids = [];
                angular.forEach($scope.notifications, function(notification) {
                    0 == notification.status && ids.push(notification.id)
                }),
                    Notifications.mark_read({
                        id: ids
                    }, {}, function(response) {
                        0 == response.code ? 1 == response.data && (MarkPageReadUI(),
                            $scope.unreadCount -= ids.length,
                            $rootScope.unread.notifications -= ids.length) : Errors.handle(response)
                    })
            }
            ,
            $scope.markAllRead = function() {
                confirm("这将会把您所有接收到的通知标记为已读（包括没有在本页显示的），确定继续？") && Notifications.mark_read({
                    all: !0
                }, {}, function(response) {
                    0 == response.code ? 1 == response.data && (MarkPageReadUI(),
                        $scope.unreadCount = 0,
                        $rootScope.unread.notifications = 0) : Errors.handle(response)
                })
            }
            ,
            $scope.inner_menu) {
            case "basic":
                $scope.header = "所有通知",
                    pagePromise.then(null , null , function(page) {
                        loadNotifications({}, page)
                    }),
                    loadNotifications({}, Pager.currentPage());
                break;
            case "unread":
                $scope.header = "未读通知",
                    pagePromise.then(null , null , function(page) {
                        loadUnreadNotifications(page)
                    }),
                    loadUnreadNotifications(Pager.currentPage());
                break;
            case "atme":
                $scope.header = "提到我的",
                    pagePromise.then(null , null , function(page) {
                        loadNotifications({
                            type: 0
                        }, page)
                    }),
                    loadNotifications({
                        type: 0
                    }, Pager.currentPage());
                break;
            case "comments":
                $scope.header = "评论",
                    pagePromise.then(null , null , function(page) {
                        loadNotifications({
                            type: [1, 2]
                        }, page)
                    }),
                    loadNotifications({
                        type: [1, 2]
                    }, Pager.currentPage());
                break;
            case "system":
                $scope.header = "系统通知",
                    pagePromise.then(null , null , function(page) {
                        loadNotifications({
                            type: 4
                        }, page)
                    }),
                    loadNotifications({
                        type: 4
                    }, Pager.currentPage())
        }
    }
    ]),
    angular.module("app").controller("WeixinPaymentController", ["$rootScope", "$route", "$scope", "$location", "Payment", function($rootScope, $route, $scope, $location, Payment) {
        $scope.charge_id = $location.search().charge_id,
            $scope.qr = "",
            $scope.status,
            $scope.price,
            Payment.get_weixin_qr({
                charge_id: $scope.charge_id
            }, {}, function(result) {
                $scope.qr = result.data.qr_url
            });
        var checkPay = function() {
            Payment.get({
                id: $scope.charge_id
            }, function(result) {
                $scope.status = result.data.status,
                    $scope.price = result.data.price,
                1 == $scope.status && (window.clearInterval(checkPayTimer),
                    window.setTimeout(function() {
                        window.close()
                    }, 3e3))
            })
        }
            , checkPayTimer = window.setInterval(checkPay, 1e3);
        $scope.$on("$destroy", function() {
            window.clearInterval(checkPayTimer)
        })
    }
    ]),
    angular.module("app").controller("MyProjectActivitiesController", ["$scope", "$routeParams", function($scope, $routeParams) {}
    ]),
    angular.module("app").controller("ProjectCreateController", ["$scope", "Project", "$location", "ProjectVersions", "Payment", "Flash", "User", "Common", "ModalService", function($scope, Project, $location, ProjectVersions, Payment, Flash, User, Common, ModalService) {
        $scope.init_repo = !0,
            $scope.project_creating = !1,
            $scope.show_warn_osc = !1,
            $scope.enterise_plan = !1,
            $scope.project = {
                type: 1,
                gitEnabled: !0,
                gitReadmeEnabled: !1,
                gitIgnore: "no",
                gitLicense: "no",
                vcsType: "git",
                importFrom: ""
            },
            $scope.seniorForm = {
                version: "free",
                period: "month",
                renewal: !0
            },
            $scope.periods = {
                free: ProjectVersions.free.period,
                dev: ProjectVersions.dev.period,
                pro: ProjectVersions.pro.period
            };
        var password_modal = $scope.password_required_modal = ModalService.instance("password-required-modal");
        $scope.password_words = "创建项目";
        var requirePassword = angular.noop;
        $scope.createProject = function(project) {
            var seniorForm = ProjectVersions.humanToData($scope.seniorForm)
                , members = _.map($scope.selected_users, "id")
                , maxMember = ProjectVersions[seniorForm.plan].limits.member
                , data = project;
            return data = $.extend(data, {
                members: members.join(",")
            }),
                members.length > maxMember - 1 ? void Flash.fail("超出最大人数") : "" == project.name ? void Flash.fail("项目名称不能为空") : void (seniorForm.plan > 1 ? Payment.balance(function(result) {
                    $scope.balance = +result.data || 0,
                        calculatePrice($scope.seniorForm),
                        $scope.insufficient ? Flash.fail().send('余额不足，请点击<a href="/user/account/top-up" target="_blank">这里</a>进行充值。') : (password_modal.toggle(),
                                $scope.$broadcast("required.password.show"),
                                requirePassword = function(password) {
                                    data = $.extend(data, {
                                        two_factor_code: password
                                    }),
                                        data = $.extend(data, seniorForm),
                                    $scope.voucher && (data = $.extend(data, {
                                        voucherCode: $scope.voucher.code
                                    })),
                                        $scope.project_creating = !0;
                                    var promise = Project.create(data);
                                    promise.then(function(result) {
                                        password_modal.action("hide"),
                                            $scope.project_creating = !1;
                                        var project_url = result.data;
                                        $location.path(project_url),
                                            $scope.$emit("project.create")
                                    }),
                                        promise["catch"](function(error, result) {
                                            result && result.code > 0 && result.msg.password ? password_modal.action("show") : password_modal.action("hide")
                                        }),
                                        promise["finally"](function() {
                                            $scope.project_creating = !1
                                        })
                                }
                        )
                }) : ($scope.project_creating = !0,
                    Project.create(project, function(result) {
                        $scope.project_creating = !1;
                        var project_url = result.data;
                        $location.path(project_url),
                            $scope.$emit("project.create")
                    })["catch"](function() {
                        $scope.project_creating = !1
                    })))
        }
            ,
            $scope.$on("set.required.password", function(event, password) {
                event.currentScope && event.targetScope && event.currentScope.$id !== event.targetScope.$id && (requirePassword(password),
                    event.preventDefault())
            }),
            $scope.checkUrl = function(url) {
                var reg = new RegExp("^(http|https)://git.oschina.net");
                reg.test(url) ? $scope.show_warn_osc = !0 : $scope.show_warn_osc = !1
            }
            ,
            $scope.showSenior = !1,
            $scope.project_versions = ProjectVersions;
        var loadBalance = function() {
                Payment.balance(function(result) {
                    $scope.balance = +result.data || 0
                })
            }
            ;
        $scope.voucher = void 0;
        var calculatePrice = function(form) {
                if (angular.isDefined(form)) {
                    if ("free" === form.version ? $scope.max_member = 10 : "dev" === form.version ? $scope.max_member = 20 : "pro" === form.version && ($scope.max_member = 50),
                            calculateMemberSize(),
                        "free" === form.version)
                        return $scope.voucher = void 0,
                            $scope.version_price = 0,
                            void $scope.$broadcast("project.voucher.cancel", $scope.voucher);
                    var current_version = ProjectVersions[form.version];
                    $scope.voucher ? ($scope.version_price = current_version.period[form.period] - $scope.voucher.money,
                    $scope.version_price < 0 && "free" != $scope.seniorForm.version && ($scope.version_price += $scope.voucher.money,
                        $scope.voucher = void 0,
                        $scope.$broadcast("project.voucher.cancel", $scope.voucher),
                        Flash.warn().send("代金券金额大于消费金额"))) : $scope.version_price = current_version.period[form.period],
                        $scope.insufficient = $scope.balance < $scope.version_price
                }
            }
            ;
        $scope.$watchCollection("seniorForm", calculatePrice),
            $scope.$watch("balance", function(balance) {
                angular.isDefined(balance) && calculatePrice($scope.seniorForm)
            }),
            $scope.$watch("project.type", function(type) {
                1 == type && ($scope.seniorForm.version = "free")
            }),
            $scope.$on("project.voucher.change", function(event, voucher) {
                $scope.voucher = voucher,
                    calculatePrice($scope.seniorForm)
            }),
            loadBalance(),
            $scope.selected_users = [],
            $scope.member_users = [],
            $scope.max_member = 10,
            $scope.member_users.push($scope.USER);
        var checkSelected = function(friends) {
                return $.map(friends, function(f) {
                    var item = f;
                    return $.each($scope.selected_users, function(i, s) {
                        s.id == f.id && (item.selected = !0)
                    }),
                        item
                })
            }
            , isMember = function(user) {
                if (user.is_member)
                    return !0;
                var hasJoined = !!Common.findOfId($scope.member_users, user.id);
                return hasJoined ? user.is_member = !0 : user.is_member = !1,
                    hasJoined
            }
            ;
        $scope.loadFriend = function(key) {
            key.length > 0 ? ($scope.selected_menu = null ,
                handleUserLoad(function() {
                    return User.search({
                        key: key
                    })
                })) : ($scope.friends = [],
                $scope.loaded = !1)
        }
            ,
            $scope.selectFriend = function(user) {
                if (user.global_key !== $scope.USER.global_key) {
                    if (user.is_member)
                        return void $scope.removeSelected(user);
                    if (user.selected = !user.selected,
                            user.selected) {
                        if ($scope.member_size <= 0)
                            return void (user.selected = !1);
                        $scope.selected_users.splice(0, 0, user),
                            calculateMemberSize()
                    } else
                        $scope.removeSelected(user)
                }
            }
        ;
        var calculateMemberSize = function() {
                var size = $scope.max_member - $scope.selected_users.length - $scope.member_users.length;
                $scope.member_size = 0 >= size ? 0 : size
            }
            ;
        calculateMemberSize(),
            $scope.max_member_warning_info = "已到达到成员最大数，不能再继续选择成员！",
            $scope.removeSelected = function(user, $event) {
                return user.selected = !1,
                    $scope.friends = Common.replaceWith($scope.friends, user),
                    $scope.selected_users = Common.removeOfId($scope.selected_users, user.id),
                    calculateMemberSize(),
                    $event ? ($event.stopPropagation(),
                        !1) : void 0
            }
        ;
        var handleUserLoad = function(invoker, resultHandler) {
                $scope.loading = !0,
                    $scope.loaded = !1,
                    $scope.friends = [];
                var promise = invoker && invoker();
                return promise && promise.then(function(result) {
                    var users = result.data && angular.isArray(result.data) ? result.data : result.data.list || [];
                    users = resultHandler && resultHandler(users) || users,
                        angular.forEach(users, function(user) {
                            user.is_member = isMember(user)
                        }),
                        $scope.friends = checkSelected(users || [])
                }) && promise["finally"](function() {
                    $scope.loaded = !0,
                        $scope.loading = !1
                }),
                    promise
            }
            ;
        $scope.loadFriends = function(page) {
            $scope.selected_menu = "friend",
                $scope.key = "",
                handleUserLoad(function() {
                    return User.friends({
                        page: page || 1,
                        pageSize: 1e3
                    })
                })
        }
            ,
            $scope.loadFollowers = function(page) {
                $scope.selected_menu = "follower",
                    $scope.key = "",
                    handleUserLoad(function() {
                        return User.followers({
                            page: page || 1,
                            pageSize: 1e3
                        })
                    })
            }
            ,
            $scope.loadProjectMembers = function(project) {
                $scope.selected_menu = project,
                    $scope.key = "",
                    handleUserLoad(function() {
                        return Project.members({
                            id: project
                        })
                    }, function(members) {
                        return Common.m2u(members)
                    })
            }
            ,
            $scope.selectMenuIs = function(type, id) {
                return "member" === type && "undefined" == typeof id ? !1 : isNaN(this.selected_menu) ? type === this.selected_menu : "member" === type && id === this.selected_menu
            }
            ,
            $scope.selectUserTitle = function(friend) {
                return friend.name
            }
            ,
            User.enterprise_plan(function(result) {
                $scope.enterise_plan = result.data
            })
    }
    ]),
    angular.module("app").controller("MyProjectController", ["$scope", "Project", "$location", "Projects", "PageTitle", "$routeParams", "Pager", "ipCookie", "Common", "Flash", "ItemsGroupService", "$timeout", function($scope, Project, $location, Projects, PageTitle, $routeParams, Pager, ipCookie, Common, Flash, ItemsGroupService, $timeout) {
        $scope.projects = {},
            $scope.projects_copy = null ,
            $scope.count = {
                all: 0,
                created: 0,
                joined: 0,
                watched: 0,
                stared: 0,
                deploy: 0,
                archive: 0
            },
            $scope.count_copy = null ,
            $scope.projects_loading = !1,
            $scope.all_projects = {},
            $scope.view_type = ipCookie("project_view_type") || "icon",
            $scope.inner_menu = $routeParams.region || "all";
        var MAX_PROJECT_COUNT = 1e3
            , pager_id = $scope.pager_id = (new Date).getTime()
            , CPager = Pager.instance(pager_id, $scope)
            , lpPromise = null ;
        CPager.onChange(function(page) {
            lpPromise = loadProjects($scope.inner_menu, page)
        });
        var setPageTitle = function(type) {
                var titles = {
                    create: "创建项目",
                    created: "我创建的项目",
                    joined: "我参与的项目",
                    deploy: "已开启演示的项目",
                    archive: "归档项目",
                    watched: "我关注的项目",
                    stared: "我收藏的项目"
                };
                PageTitle.set(titles[type] || "我的所有项目", "Coding.net")
            }
            , loadProjectsSilently = function(type, page) {
                var is_project_group = "all" === type && "icon" === $scope.view_type
                    , pageSize = is_project_group ? MAX_PROJECT_COUNT : 20;
                return lpPromise = Projects.query({
                    page: page || 1,
                    pageSize: pageSize,
                    type: type
                }, function(result) {
                    $scope.projects_copy = angular.extend({}, result.data),
                        $scope.projects = result.data.list,
                        CPager.optionsReady(result.data)
                })
            }
            , loadProjects = function(type, page) {
                $scope.projects_loading = !0,
                    $scope.projects = [];
                var is_project_group = "all" === type && "icon" === $scope.view_type
                    , pageSize = is_project_group ? MAX_PROJECT_COUNT : 20;
                return lpPromise = Projects.query({
                    page: page || 1,
                    pageSize: pageSize,
                    type: type
                }, function(result) {
                    $scope.projects_loading = !1,
                        $scope.projects_copy = angular.extend({}, result.data),
                        $scope.projects = result.data.list,
                        CPager.optionsReady(result.data),
                    is_project_group && collectGroups()
                })["catch"](function() {
                    $scope.projects_loading = !1
                }),
                    setPageTitle(type),
                    lpPromise
            }
            , loadProjectCount = function() {
                Project.count(function(result) {
                    $scope.count = result.data,
                        $scope.count_copy = angular.extend({}, result.data)
                })
            }
            ;
        loadProjectCount(),
            $scope.switchTab = function(type) {
                var url = "/user/projects/" + type;
                $location.skipReload().path(url),
                    $scope.inner_menu = type,
                    $scope.resetProject(),
                    $scope.search.key = "",
                    $scope.loadSearchList(),
                    loadProjectCount(),
                    loadProjects(type)
            }
            ,
            $scope.showCreateButton = function(type) {
                return "watched" !== type && "stared" !== type
            }
            ,
            $scope.headerTitle = function(type) {
                var titles = {
                    created: "我创建的(" + $scope.count.created + ")",
                    joined: "我参与的(" + $scope.count.joined + ")",
                    watched: "我关注的(" + $scope.count.watched + ")",
                    stared: "我收藏的(" + $scope.count.stared + ")",
                    deploy: "已开启演示(" + $scope.count.deploy + ")",
                    archive: "归档项目(" + $scope.count.archive + ")"
                };
                return titles[type] || "所有项目（" + $scope.count.all + "）"
            }
            ,
            $scope.staredOrWatched = function(type) {
                var names = {
                    watched: "关注",
                    stared: "收藏"
                };
                return names[type]
            }
            ,
            $scope.toggleViewType = function(type) {
                $scope.view_type = type;
                var date = new Date;
                date.setTime(date.getTime() + 31536e6),
                    ipCookie("project_view_type", type, {
                        expires: date
                    }),
                    $scope.search.key = "",
                    $scope.loadSearchList(),
                    lpPromise = loadProjects($scope.inner_menu, 1)
            }
            ,
            $scope.editable = !1,
            $scope.groups = [],
            $scope.group_name = "";
        var selected_projects = []
            , collectGroups = function(callback) {
                lpPromise.then(function(result) {
                    var projects = result.data && result.data.list || []
                        , groups = [];
                    angular.forEach(projects, function(project) {
                        var exists = Common.findOfId(groups, project.groupId);
                        0 === project.groupId || exists ? exists && exists.count++ : groups.push({
                            id: project.groupId,
                            name: project.groupName,
                            count: 1,
                            open: !1
                        })
                    }),
                        $scope.groups = groups,
                    angular.isFunction(callback) && callback($scope.groups)
                })
            }
            ;
        $scope.toggleEditable = function() {
            $scope.editable = !$scope.editable,
                $scope.editable ? collectGroups() : (selected_projects = [],
                    angular.forEach($scope.projects, function(project) {
                        project.selected = !1
                    }))
        }
            ,
            $scope.onProjectSelect = function(projects) {
                projects && (selected_projects = projects)
            }
            ,
            $scope.stopPropagation = function($event) {
                $event.stopPropagation()
            }
        ;
        var selectedProjectIds = function() {
                return $.map(selected_projects, function(prj) {
                    return prj.selected ? prj.id : void 0
                }).join(",")
            }
            , selectedProjectCount = $scope.selectedProjectCount = function() {
                var count = 0;
                return angular.forEach(selected_projects, function(prj) {
                    prj.selected && count++
                }),
                    count
            }
            , afterActions = function(callback) {
                lpPromise = loadProjectsSilently($scope.inner_menu, 1),
                    collectGroups(callback),
                    selected_projects = [],
                    $scope.group_name = ""
            }
            , beforeActions = function(projects_limit) {
                return 0 === selectedProjectCount() ? (Flash.fail().send("请先选择项目再进行操作！"),
                    !1) : selected_projects.length > projects_limit ? (Flash.fail().send("每个分组项目数不能超过 9 个！"),
                    !1) : !0
            }
            , selectAutoNameGroup = function(count, name) {
                return function(groups) {
                    return isNaN(count) ? groups : (angular.forEach(groups, function(group) {
                        group.name === name ? (group.open = !0,
                            group.editing = !0) : group.open = !1
                    }),
                        groups)
                }
            }
            , pickGroupName = function(name, count) {
                do {
                    var tmp = name + count
                        , exists = Common.findOfId($scope.groups, tmp, "name");
                    exists && count++
                } while (exists);return name + count
            }
            ;
        $scope.createGroup = function(name, count) {
            if (count > 0 && (name = pickGroupName(name, 1)),
                name.length > 0 && beforeActions(9)) {
                var promise = Project.createGroup({
                    name: name,
                    ids: selectedProjectIds()
                });
                promise.then(function() {
                    afterActions && afterActions(selectAutoNameGroup(count, name))
                })
            }
        }
            ,
            $scope.moveToGroup = function(group) {
                var cur_group = Common.findOfId($scope.groups, group);
                if (0 == group || beforeActions(9 - cur_group.count)) {
                    var promise = Project.moveToGroup({
                        group_id: group
                    }, {
                        ids: selectedProjectIds()
                    });
                    promise.then(afterActions)
                }
            }
            ,
            $scope.moveOutGroup = function() {
                if (selected_projects.length > 0) {
                    var group = selected_projects[0].groupId
                        , in_group_ids = [];
                    if (angular.forEach(selected_projects, function(prj) {
                            0 !== prj.groupId ? in_group_ids.push(prj.id) : prj.selected = !1
                        }),
                        0 === in_group_ids.length)
                        Flash.fail().send("请在分组内选择需要移出的项目！");
                    else {
                        var promise = Project.moveOutGroup({
                            group_id: group,
                            ids: in_group_ids.join(",")
                        }, {});
                        promise.then(afterActions)
                    }
                }
            }
            ,
            ItemsGroupService.onGroupNameUpdate(function($event, group) {
                angular.forEach($scope.projects, function(prj) {
                    prj.groupId === group.id && (prj.groupName = group.name)
                }),
                    collectGroups()
            }),
            lpPromise = loadProjects($scope.inner_menu, CPager.currentPage()),
            $scope.search = {
                key: "",
                list: null ,
                count: 0
            };
        var options = {
            keys: ["name", "owner_user_name"],
            sortFn: function(a, b) {
                var ret = 0;
                return ret = a.score == b.score ? a.item.name == b.item.name ? a.item.owner_id == $scope.USER.id ? -1 : 1 : a.item.name.length - b.item.name.length : a.score - b.score
            }
        };
        $scope.loadSearchList = function() {
            Projects.query({
                page: 1,
                pageSize: 1e3,
                type: $scope.inner_menu
            }, function(result) {
                $scope.search.list = [],
                    angular.forEach(result.data.list, function(item) {
                        item.groupId = -1,
                            this.push(item)
                    }, $scope.search.list),
                    $scope.search.count = ($scope.projects || []).length || 0
            })
        }
            ,
            $scope.loadSearchList(),
            $scope.searchPress = function(event, key) {
                if (key && key.length > 0) {
                    var f = new Fuse($scope.search.list,options);
                    $scope.projects = f.search(key),
                        $scope.search.count = ($scope.projects || []).length || 0,
                        $timeout(function() {
                            var first = angular.element(".projects-view  li.projects-item:first");
                            first.addClass("focus")
                        }, 500),
                        CPager.optionsReady({}),
                        $scope.view_type = "icon"
                } else
                    $scope.resetProject(),
                        $timeout(function() {
                            var first = angular.element(".projects-view  li.projects-item:first");
                            first.removeClass("focus")
                        })
            }
            ,
            $scope.enterFirst = function() {
                $scope.search.key.length <= 0 || $timeout(function() {
                    var first = angular.element(".projects-view  li.projects-item:first");
                    first.removeClass("focus").focus(),
                        first.find("a").click()
                })
            }
            ,
            $scope.tabFirst = function() {
                $scope.search.key.length <= 0 || $timeout(function() {
                    var first = angular.element(".projects-view  li.projects-item:first");
                    first.removeClass("focus").focus()
                })
            }
            ,
            $scope.listItemFocus = function(event) {
                $timeout(function() {
                    angular.element(".projects-view  li.projects-item").removeClass("focus")
                })
            }
            ,
            $scope.enterItem = function(event) {
                $timeout(function() {
                    angular.element(event.target).find("a").click()
                })
            }
            ,
            $scope.resetProject = function() {
                $scope.projects = angular.extend({}, $scope.projects_copy.list),
                    CPager.optionsReady($scope.projects_copy),
                    $scope.view_type = ipCookie("project_view_type") || "icon"
            }
            ,
            $scope.clearSearch = function() {
                $scope.search.key = "",
                    $scope.resetProject()
            }
            ,
            $scope.unarchive = function(id) {
                if (confirm("将该项目解除归档？")) {
                    var p = Project.unarchive({
                        id: id
                    }, {});
                    p.then(function(result) {
                        $location.path("/user/projects/all")
                    })
                }
            }
    }
    ]),
    angular.module("app").controller("RelationshipController", ["$scope", "$rootScope", "$routeParams", "location", "Errors", "Pager", "User", "Common", "Setting", "Flash", function($scope, $rootScope, $routeParams, $location, Errors, Pager, User, Common, Setting, Flash) {
        var region = $routeParams.region;
        $scope.USER = $rootScope.USER,
        "fans" !== region && "friends" !== region && (region = "friends",
            $location.skipReload().path("/user/relationship/friends").replace()),
            $scope.inner_menu = region || "friends",
            $scope.relation_header_title = "friends" === $scope.inner_menu ? "我关注的人" : "我的粉丝",
            $scope.friends = [],
            $scope.loading = !0,
            $scope.copied = !1;
        var friends_pager_id = $scope.friends_pager_id = "friends" + (new Date).getTime()
            , friends_cpager = Pager.instance(friends_pager_id, $scope)
            , fans_pager_id = $scope.fans_pager_id = "fans" + (new Date).getTime()
            , fans_cpager = Pager.instance(fans_pager_id, $scope)
            , loadFriends = function(page) {
                "friends" === region ? User.friends({
                    page: page,
                    pageSize: 12
                }, function(result) {
                    if ($scope.loading = !1,
                        0 === result.code && result.data) {
                        $scope.friends = result.data.list || [];
                        var follows_count = result.data.totalRow;
                        $scope.USER.follows_count !== follows_count && ($scope.USER.follows_count = follows_count),
                            friends_cpager.optionsReady(result.data)
                    } else
                        Errors.handle(result)
                }) : User.followers({
                    page: page,
                    pageSize: 12
                }, function(result) {
                    if ($scope.loading = !1,
                        0 === result.code && result.data) {
                        $scope.friends = result.data.list || [];
                        var fans_count = result.data.totalRow;
                        $scope.USER.fans_count !== fans_count && ($scope.USER.fans_count = fans_count),
                            fans_cpager.optionsReady(result.data)
                    } else
                        Errors.handle(result)
                })
            }
            , generateInviteUrl = function() {
                var uPromise = User.inviteNotLimited();
                uPromise.then(function(result) {
                    Common.safeApply.call($scope, function() {
                        $scope.invite_url = Setting.host + "/register?key=" + result.data
                    })
                })
            }
            ;
        $scope.doCopy = function() {
            $scope.copied = !0,
                Flash.success().send("链接已复制到粘贴板")
        }
            ,
            $scope.getCopy = function() {
                return $scope.invite_url
            }
            ,
            friends_cpager.onChange(function(page) {
                loadFriends(page)
            }),
            fans_cpager.onChange(function(page) {
                loadFriends(page)
            }),
            $scope.follow = function(user) {
                if (user) {
                    if (user.following === !0)
                        return;
                    user.following = !0,
                        User.follow({
                            users: user.global_key
                        }, {}, function(result) {
                            user.followed = !0,
                                $scope.USER.follows_count++,
                                $scope.friends = Common.replaceWith($scope.friends, user)
                        })["finally"](function() {
                            user.following = !1
                        })
                }
            }
            ,
            $scope.unfollow = function(user) {
                if (user) {
                    if (user.unfollowing === !0)
                        return;
                    user.unfollowing = !0,
                        User.unfollow({
                            users: user.global_key
                        }, {}, function(result) {
                            $scope.USER.follows_count -= 1,
                                "friends" === region ? $scope.friends = Common.removeOfId($scope.friends, user.id) : (user.followed = !1,
                                    $scope.friends = Common.replaceWith($scope.friends, user))
                        })["finally"](function() {
                            user.unfollowing = !1
                        })
                }
            }
            ,
            $rootScope.$on("friend.add", function() {
                "friends" === region && loadFriends(1)
            });
        var current_page = "friends" === region ? friends_cpager.currentPage() : fans_cpager.currentPage();
        loadFriends(current_page),
            generateInviteUrl()
    }
    ]),
    angular.module("app").controller("RequestValidController", ["$scope", "User", "Setting", "Flash", "RequestValidModalService", "$rootScope", "Common", function($scope, User, Setting, Flash, RequestValidModalService, $rootScope, Common) {
        $scope.j_captcha = "",
            $scope.POST_LIMIT = RequestValidModalService.POST_LIMIT,
            $scope.MESSAGE_LIMIT = RequestValidModalService.MESSAGE_LIMIT,
            $("#request-valid-modal").modal("setting", {
                duration: 100,
                onApprove: function() {
                    return !1
                },
                onShow: function() {},
                onVisible: function() {
                    RequestValidModalService.beforeShow(),
                        Common.safeApply.call($scope, function() {
                            var type = RequestValidModalService.getType();
                            $scope.type = type,
                                $scope.captcha = Setting.api_host + "/api/getCaptcha?type=" + type + "&code=" + Math.random()
                        }),
                        setTimeout(function() {
                            $("#request-valid-modal").find("input:first").trigger("focus")
                        }, 0)
                },
                onHide: function() {
                    refreshCaptcha(),
                        $scope.j_captcha = "",
                        RequestValidModalService.afterHide()
                }
            }),
            $scope.doValid = function(captcha) {
                if (!captcha)
                    return !1;
                var params = {
                    j_captcha: captcha
                };
                $scope.type === RequestValidModalService.MESSAGE_LIMIT && (params.receiver_global_key = RequestValidModalService.getMessageReceiver());
                var promise = User.request_valid({
                    type: RequestValidModalService.getType()
                }, params);
                promise.then(function() {
                    $("#request-valid-modal").modal("hide")
                }),
                    promise["catch"](function() {
                        refreshCaptcha()
                    })
            }
        ;
        var refreshCaptcha = $scope.refreshCaptcha = function() {
                return $scope.captcha = Setting.api_host + "/api/getCaptcha?type=" + RequestValidModalService.getType() + "&code=" + Math.random()
            }
            ;
        refreshCaptcha()
    }
    ]).service("RequestValidModalService", ["$rootScope", function($rootScope) {
        function getType() {
            return _limit_type
        }
        function setType(type) {
            return (0 > type || type > 1) && (type = 0),
                _limit_type = type,
                this
        }
        function setMessageReceiver(key) {
            return _message_receiver = key,
                this
        }
        function getMessageReceiver() {
            return _message_receiver
        }
        function show() {
            $("#request-valid-modal").modal("show")
        }
        function hide() {
            $("#request-valid-modal").modal("hide")
        }
        function beforeShow() {
            _show_callback()
        }
        function afterHide() {
            _hide_callback()
        }
        function onBeforeShow(callback) {
            angular.isFunction(callback) && (_show_callback = callback)
        }
        function onAfterHide(callback) {
            angular.isFunction(callback) && (_hide_callback = callback)
        }
        function offBeforeShow(callback) {
            _show_callback = function() {}
        }
        function offAfterHide(callback) {
            _hide_callback = function() {}
        }
        var POST_LIMIT = 0
            , MESSAGE_LIMIT = 1
            , SHOW_EVENT = "REQUEST_VALID_MODAL_SHOW_EVENT"
            , HIDE_EVENT = "REQUEST_VALID_MODAL_HIDE_EVENT"
            , _limit_type = POST_LIMIT
            , _message_receiver = ""
            , _show_callback = function() {}
            , _hide_callback = function() {}
            ;
        return {
            POST_LIMIT: POST_LIMIT,
            MESSAGE_LIMIT: MESSAGE_LIMIT,
            SHOW_EVENT: SHOW_EVENT,
            HIDE_EVENT: HIDE_EVENT,
            getType: getType,
            setType: setType,
            getMessageReceiver: getMessageReceiver,
            setMessageReceiver: setMessageReceiver,
            show: show,
            hide: hide,
            beforeShow: beforeShow,
            afterHide: afterHide,
            onBeforeShow: onBeforeShow,
            onAfterHide: onAfterHide,
            offBeforeShow: offBeforeShow,
            offAfterHide: offAfterHide
        }
    }
    ]),
    angular.module("app").controller("SendBobbleController", ["$scope", "$localStorage", "Tweet", "TweetTopic", "Flash", "Common", function($scope, $localStorage, Tweet, TweetTopic, Flash, Common) {
        var USER = $scope.USER;
        $scope.topics = [],
            $("#send-bobble-modal").modal("setting", {
                duration: 100,
                onShow: function() {
                    TweetTopic.default_topics(function(result) {
                        $scope.topics = result.data || []
                    })
                }
            }),
            $scope.$on("feed.editor.submit", function(event, tweet_content, progress) {
                if (event.stopPropagation(),
                        progress.pending(),
                        $.isEmptyObject(tweet_content))
                    return void progress.error();
                var promise = Tweet.create({
                    content: tweet_content
                }, function(result) {
                    progress.done();
                    var activity = Common.wrapperTweetIntoActivity(result.data, USER);
                    $scope.$broadcast("activity.add", activity),
                        $("#send-bobble-modal").modal("hide"),
                        Flash.success().send("冒泡发布成功！")
                });
                promise["catch"](function() {
                    progress.error()
                })
            }),
            $scope.bobble_editor_options = {
                content: $localStorage.tweet_modal_message || ""
            },
            $scope.$watch("bobble_editor_options.content", function(content) {
                $localStorage.tweet_modal_message = content
            })
    }
    ]),
    angular.module("app").controller("SendMessageController", ["$scope", "$localStorage", "$rootScope", "$route", "User", "Messages", "Errors", "Flash", "Setting", "RequestValidModalService", "$timeout", function($scope, $localStorage, $rootScope, $route, User, Messages, Errors, Flash, Setting, RequestValidModalService, $timeout) {
        $scope.j_captcha = "",
            $scope.captcha = "";
        var MAX_MESSAGE_LENGTH = 1024;
        $scope.doValid = function() {
            User.request_valid({
                type: 1
            }, {
                j_captcha: $scope.j_captcha
            }).then(function(result) {})
        }
            ,
            $("#send-message-modal").modal("setting", {
                duration: 100,
                onApprove: function() {
                    return !1
                },
                onShow: function() {
                    $scope.no_receiver = !$rootScope.send_msg_target,
                    $rootScope.send_msg_target && ($scope.receiver_global_key = $rootScope.send_msg_target.global_key)
                },
                onVisible: function() {
                    $timeout(function() {
                        $("#send-message-modal").find("input:first").trigger("focus")
                    }, 0)
                },
                onHide: function() {}
            }),
            $scope.sending = !1,
            $scope.receiver = "",
            $scope.receiver_global_key = "",
            $scope.getUserByName = function() {
                return $scope.no_receiver && !$scope.receiver ? void Flash.fail().send("请输入用户昵称。") : $scope.no_receiver ? void User.byName({
                    name: $scope.receiver
                }, function(result) {
                    0 === result.code ? result.data.global_key && "" !== result.data.global_key ? ($scope.receiver_not_found = !1,
                        $scope.receiver_global_key = result.data.global_key,
                        $scope.$broadcast("feed.editor.do.submit")) : ($scope.receiver_not_found = !0,
                        $scope.not_found_user = $scope.receiver,
                        Flash.fail().send("无法找到用户:" + $scope.not_found_user)) : Errors.handle(result)
                }) : void $scope.$broadcast("feed.editor.do.submit")
            }
            ,
            $scope.feed_editor = {
                content: $localStorage.send_message || ""
            },
            $scope.$watch("feed_editor.content", function(content) {
                $localStorage.send_message = content
            }),
            $scope.$on("feed.editor.submit", function(event, content, progress) {
                if (progress.pending(),
                        event.stopPropagation(),
                        $.isEmptyObject(content))
                    return Flash.fail().send("请输入私信内容！"),
                        void progress.error();
                var send_message = function(receiver, msg) {
                        if ($scope.sending = !0,
                            msg.length > MAX_MESSAGE_LENGTH)
                            return Flash.fail().send("私信内容不能超过 " + MAX_MESSAGE_LENGTH + " 个字符！"),
                                void progress.error();
                        var promise = Messages.send_message({
                            receiver_global_key: receiver,
                            content: msg
                        }, function(result) {
                            0 === result.code && (progress.done(),
                                $scope.receiver = "",
                                Flash.success().send("发送成功！"),
                                $scope.sending = !1,
                                $route.reload()),
                                $("#send-message-modal").modal("hide")
                        });
                        promise["finally"](function() {
                            $scope.sending = !1
                        }),
                            promise["catch"](function(err, result) {
                                result && 3302 !== result.code || ($("#send-message-modal").modal("hide"),
                                    RequestValidModalService.onAfterHide(function() {
                                        result && 3302 === result.code && $timeout(function() {
                                            $("#send-message-modal").modal("show")
                                        }, 700),
                                            RequestValidModalService.offAfterHide()
                                    }),
                                    $timeout(function() {
                                        RequestValidModalService.setType(RequestValidModalService.MESSAGE_LIMIT).setMessageReceiver($scope.receiver_global_key).show()
                                    }, 1e3),
                                    progress.error())
                            })
                    }
                    ;
                if ($scope.no_receiver) {
                    if (!$scope.receiver)
                        return Flash.fail().send("无法找到用户:" + $scope.receiver),
                            void progress.error();
                    $scope.receiver_global_key && send_message($scope.receiver_global_key, content)
                } else
                    send_message($rootScope.send_msg_target.global_key, content)
            })
    }
    ]),
    angular.module("app").controller("ResetEmailController", ["$scope", "$rootScope", "$location", "Flash", "User", "Email", function($scope, $rootScope, $location, Flash, User, Email) {
        $scope.reseting = !1,
            $scope.is_activated = !1;
        var form = $scope.form = $location.search()
            , brPromise = User.beforeReset(form, function(result) {
            $scope.is_activated = result.data
        });
        brPromise["catch"](function() {
            return $location.search(""),
                $location.path("/user"),
                !1
        }),
            $scope.doreset = function(form) {
                if (!$scope.reseting && (!$scope.is_activated || form.password)) {
                    var ePromise = Email.activate_email({
                        global_key: form.global_key,
                        email: form.email,
                        key: form.key,
                        password: form.password && SHA1(form.password)
                    }, function() {
                        $location.search(""),
                            Flash.success().send("邮箱修改成功！"),
                        $rootScope.USER && ($rootScope.USER.email = form.email),
                            $location.path("/user/setting")
                    });
                    ePromise["finally"](function() {
                        $scope.reseting = !1
                    })
                }
            }
    }
    ]),
    angular.module("app").controller("ResetEmailModalCtrl", ["$scope", "$rootScope", "Flash", "RegisterService", "User", "Email", "Setting", "ModalService", "$timeout", function($scope, $rootScope, Flash, RegisterService, User, Email, Setting, ModalService, $timeout) {
        var USER = $rootScope.USER;
        $scope.form = {},
            $scope.reseting = !1;
        var password_modal = $scope.password_required_modal = ModalService.get("password-required-modal");
        $scope.password_words = "修改邮箱";
        var checkEmail = $scope.checkEmail = function(form) {
            return form.email ? USER.email === form.email ? (Flash.fail().send("不能修改成当前邮箱"),
                !1) : RegisterService.isEmail(form.email) ? RegisterService.isNotIncluded(form.email) ? (Flash.warn().send("该邮箱可能接收不到邮件，建议改用其他邮箱"),
                !0) : !0 : (Flash.fail().send("邮件格式错误"),
                !1) : (Flash.fail().send("邮箱不能为空"),
                !1)
        }
            , requirePassword = angular.noop;
        $scope.$on("set.required.password", function(event, password) {
            requirePassword(password),
                event.preventDefault()
        }),
            $scope.resetEmail = function(form) {
                checkEmail(form) && ($scope.$emit("reset.email.success"),
                    requirePassword = function(password) {
                        $scope.reseting = !0;
                        var ePromise = Email.reset_email({}, {
                            email: form.email,
                            two_factor_code: password
                        }, function() {
                            password_modal.toggle(),
                                form.email = "",
                                form = {},
                                Flash.success().send("验证邮件发送成功！<br>请尽快去邮箱查收验证邮件以确认修改。<br>如若在收件箱中未看到激活邮件，请留意一下垃圾邮件箱(T_T)。")
                        });
                        ePromise["catch"](function(err, result) {
                            result && result.code > 0 && result.msg.password && password_modal.action("show")
                        }),
                            ePromise["finally"](function() {
                                $scope.reseting = !1
                            })
                    }
                    ,
                    ModalService.get("reset_email_modal").action("hide"),
                    $timeout(function() {
                        password_modal.toggle(),
                            $scope.$parent.$broadcast("required.password.show")
                    }, 1e3))
            }
    }
    ]),
    angular.module("app").controller("UserSpaceController", ["$scope", "$rootScope", "$routeParams", "$filter", "Projects", "User", "Tweet", "Activity", "Errors", "Pager", "Flash", "PageTitle", "Common", "location", "TweetTopic", "TextService", function($scope, $rootScope, $routeParams, $filter, Projects, User, Tweet, Activity, Errors, Pager, Flash, PageTitle, Common, $location, TweetTopic, TextService) {
        var USER = $scope.USER;
        $rootScope.$watch("USER", function(user) {
            USER = user
        }),
            $scope.show_project = !0,
            $scope.show_joined = !0,
            $scope.projects = [],
            $scope.activities = [],
            $scope.tweets = [],
            $scope.tweet_topics = [],
            $scope.user = {},
            $scope.tags = [],
            $scope.activities_mode = "all",
            $scope.tweet_mode = "my",
            $scope.tweet_topic_mode = "watched",
            $scope.show_more_info = !1,
            $scope.show_more_info_msg = "展开",
            $scope.tweet_loading = !1,
            $scope.project_loading = !1,
            $scope.show_tab = $routeParams.region || "project",
            $scope.second_tab = $routeParams.second_tab || ("project" === $scope.show_tab ? "joined" : $scope.activities_mode),
            $scope.tweet_comment_content = [],
            $scope.no_more_tweet = !1,
            $scope.activity_no_more = !1,
            $scope.following = !1,
            $scope.follower_list = [],
            $scope.relation_header_title = "",
            $scope.show_follower_list = !1,
            $scope.follower_page_size = 16,
            $scope.inner_menu = "follower",
            $scope.follower_loading = !1,
            $scope.open_following = !1,
            $scope.global_watching = !1;
        var friendly_number = $filter("friendlyNumber")
            , loadFollowers = $scope.loadFollowers = function(page) {
                $scope.relation_header_title = "关注 TA 的人（" + friendly_number($scope.user.fans_count) + "）",
                    $scope.show_follower_list = !0,
                    $scope.follower_loading = !0,
                    User.open_followers({
                        global_key: $scope.user.global_key,
                        page: page,
                        pageSize: $scope.follower_page_size
                    }, function(result) {
                        $scope.follower_list = result.data && result.data.list || [],
                            CPager.optionsReady(result.data),
                            $scope.inner_menu = "follower",
                            $scope.follower_loading = !1;
                        var url = "/u/" + $scope.user.global_key + "/followers";
                        $location.skipReload().path(url)
                    })
            }
            , loadFriends = $scope.loadFriends = function(page) {
                $scope.relation_header_title = "TA 关注的人（" + friendly_number($scope.user.follows_count) + "）",
                    $scope.show_follower_list = !0,
                    $scope.follower_loading = !0,
                    User.open_friends({
                        global_key: $scope.user.global_key,
                        page: page,
                        pageSize: $scope.follower_page_size
                    }, function(result) {
                        $scope.follower_list = result.data && result.data.list || [],
                            CPager.optionsReady(result.data),
                            $scope.inner_menu = "friend",
                            $scope.follower_loading = !1;
                        var url = "/u/" + $scope.user.global_key + "/friends";
                        $location.skipReload().path(url)
                    })
            }
            ;
        "activity" == $routeParams.tab && ($scope.show_project = !1,
        "pp" == $routeParams.type && ($scope.activities_mode = "tweet")),
        "bubble" === $scope.show_tab && ($scope.tweet_mode = $scope.second_tab = $routeParams.second_tab || "my",
        -1 === ["my", "commented", "liked"].indexOf($scope.second_tab) && ($scope.tweet_mode = $scope.second_tab = "my")),
        "bubble-topic" === $scope.show_tab && ($scope.tweet_topic_mode = $scope.seconde_tab = $routeParams.second_tab || "watched",
        -1 === ["joined", "watched"].indexOf($scope.second_tab) && ($scope.tweet_topic_mode = $scope.second_tab = "watched"));
        var userPromise = User.byKey({
            key: $routeParams.username
        }, function(result) {
            $scope.user = result.data,
                $scope.tags = $scope.user.tags_str.split(", "),
                PageTitle.set($scope.user.name + "的个人首页 - Coding.Net")
        })
            , pager_id = $scope.pager_id = (new Date).getTime()
            , CPager = Pager.instance(pager_id, $scope);
        CPager.onChange(function(page) {
            "project" === $scope.show_tab ? loadProjects($scope.show_joined ? "joined" : "stared", page) : "bubble-topic" === $scope.show_tab ? load_bubble_topics($scope.second_tab, page) : $scope.show_follower_list && ("follower" == $scope.inner_menu ? loadFollowers(page) : loadFriends(page))
        });
        var loadTweets = function(last_id, load_more, type) {
                type || (type = "my"),
                    $scope.tweet_loading = !0,
                load_more || ($scope.tweets = []),
                    Tweet.user_public({
                        last_id: last_id,
                        global_key: $scope.user.global_key,
                        type: type
                    }, function(result) {
                        if ($scope.tweet_loading = !1,
                            0 == result.code) {
                            if (0 == result.data.length)
                                return void ($scope.no_more_tweet = !0);
                            load_more ? $scope.tweets = $scope.tweets.concat(result.data) : $scope.tweets = result.data
                        } else
                            Errors.handle(result)
                    })
            }
            , loadProjects = function(type, page) {
                $scope.project_loading = !0,
                    $scope.projects = [],
                    Projects["public"]({
                        username: $routeParams.username,
                        page: page,
                        pageSize: 10,
                        type: type
                    }, function(result) {
                        $scope.project_loading = !1,
                            $scope.projects = result.data && result.data.list || [],
                            CPager.optionsReady(result.data)
                    })
            }
            , load_activities = function(mode, load_more) {
                $scope.activity_loading = !0,
                load_more || ($scope.activities = []),
                    Activity.user_public({
                        type: mode,
                        username: $routeParams.username
                    }, function(result) {
                        if (0 == result.code) {
                            var res_data = result.data;
                            load_more ? $(res_data).each(function(i, a) {
                                a && a.id > 0 && $scope.activities.push(a)
                            }) : $scope.activities = res_data,
                                $($scope.activities).each(function(i, a) {
                                    a && (a.show_icon = !0)
                                })
                        } else
                            Errors.handle(result);
                        $scope.activity_loading = !1
                    })
            }
            , load_bubble_topics = function(type, page) {
                $scope.bubble_topic_loading = !0,
                    $scope.tweet_topics = [];
                var promise = void 0;
                promise = "joined" === type ? TweetTopic.joined({
                    extraInfo: 1,
                    page: page,
                    pageSize: 10,
                    global_key: $scope.user.global_key
                }, function(result) {
                    $scope.tweet_topics = result.data && result.data.list || [],
                        angular.forEach($scope.tweet_topics, function(topic) {
                            topic.hot_tweet && (topic.hot_tweet.content = TextService.text(topic.hot_tweet.content))
                        }),
                        CPager.optionsReady(result.data)
                }) : TweetTopic.watched({
                    global_key: $scope.user.global_key,
                    extraInfo: 1,
                    page: page,
                    pageSize: 10
                }, function(result) {
                    $scope.tweet_topics = result.data && result.data.list || [],
                        angular.forEach($scope.tweet_topics, function(topic) {
                            topic.hot_tweet && (topic.hot_tweet.content = TextService.text(topic.hot_tweet.content))
                        }),
                        CPager.optionsReady(result.data)
                }),
                    promise["finally"](function() {
                        $scope.bubble_topic_loading = !1
                    })
            }
            ;
        $scope.show_more_tweet = function() {
            loadTweets($scope.tweets[$scope.tweets.length - 1].id, !0, $scope.tweet_mode)
        }
            ,
            $scope.switch_tab = function(type) {
                "project" == type ? ($scope.show_tab = "project",
                    loadProjects(type, 1)) : "bubble" == type ? ($scope.show_tab = "bubble",
                    loadTweets(99999999, !1)) : "activity" == type ? ($scope.show_tab = "activity",
                    load_activities("all", !1)) : "bubble-topic" == type && ($scope.show_tab = "bubble-topic",
                    load_bubble_topics("watched", 1));
                var url = "/u/" + $scope.user.global_key + "/" + type;
                $location.skipReload().path(url);
                var titles = {
                    project: "项目",
                    bubble: "冒泡",
                    "bubble-topic": "话题",
                    activity: "动态"
                }
                    , title = titles[type] || "";
                PageTitle.set(title, $scope.user.name + "的个人首页", "Coding.Net")
            }
            ,
            $scope.switch_projects = function(type) {
                "joined" == type ? $scope.show_joined = !0 : "stared" == type && ($scope.show_joined = !1),
                    loadProjects(type, 1);
                var url = "/u/" + $scope.user.global_key + "/" + $scope.show_tab + "/" + type;
                $location.skipReload().path(url)
            }
            ,
            $scope.switch_tweets = function(type) {
                $scope.tweet_mode = type,
                -1 === ["my", "liked", "commented"].indexOf(type) && ($scope.tweet_mode = "my"),
                    loadTweets(99999999, !1, $scope.tweet_mode);
                var url = "/u/" + $scope.user.global_key + "/" + $scope.show_tab + "/" + type;
                $location.skipReload().path(url)
            }
            ,
            $scope.switch_activities = function(mode) {
                $scope.activities_mode = mode,
                    $scope.activity_no_more = !1,
                    $scope.activities = [],
                    load_activities(mode, !1);
                var url = "/u/" + $scope.user.global_key + "/" + $scope.show_tab + "/" + mode;
                $location.skipReload().path(url)
            }
            ,
            $scope.switch_bubble_topic = function(mode) {
                $scope.second_tab = $scope.tweet_topic_mode = mode,
                    load_bubble_topics($scope.tweet_topic_mode, CPager.currentPage());
                var url = "/u/" + $scope.user.global_key + "/" + $scope.show_tab + "/" + mode;
                $location.skipReload().path(url)
            }
            ,
            $scope.show_more = function() {
                $scope.activity_loading = !0,
                    Activity.user_public({
                        type: $scope.activities_mode,
                        last_id: $scope.activities[$scope.activities.length - 1].id,
                        username: $routeParams.username
                    }, function(result) {
                        if (0 == result.code) {
                            var res_data = result.data;
                            (!res_data || res_data.length < 20) && ($scope.activity_no_more = !0),
                                $(res_data).each(function(i, a) {
                                    a && a.id > 0 && $scope.activities.push(a)
                                }),
                                $($scope.activities).each(function(i, a) {
                                    a && (a.show_icon = !0)
                                })
                        } else
                            Errors.handle(result);
                        $scope.activity_loading = !1
                    })
            }
            ,
            $scope.follow = function(user) {
                if (!USER)
                    return void (confirm("需要登录后才能关注，是否立即登录？") && (location.href = "/login"));
                if (user) {
                    $scope.following || ($scope.following = !0);
                    var promise = User.follow({
                        users: user.global_key
                    }, {}, function(result) {
                        0 == result.code ? ($scope.user.followed = !0,
                            $scope.user.fans_count++,
                            $scope.USER.follows_count++,
                            Flash.success().send("关注成功")) : Errors.handle(result)
                    });
                    promise["finally"](function() {
                        $scope.following = !1
                    })
                }
            }
            ,
            $scope.open_follow = function(user) {
                if (!USER)
                    return void (confirm("需要登录后才能关注，是否立即登录？") && (location.href = "/login"));
                if (user) {
                    user.open_following || (user.open_following = !0),
                    $scope.open_following || ($scope.open_following = !0);
                    var promise = User.follow({
                        users: user.global_key
                    }, {}, function(result) {
                        0 == result.code ? (user.followed = !0,
                            Flash.success().send("关注成功")) : Errors.handle(result)
                    });
                    promise["finally"](function() {
                        user.open_following = !1,
                            $scope.open_following = !1
                    })
                }
            }
            ,
            $scope.unfollow = function(user) {
                if (user) {
                    $scope.following || ($scope.following = !0);
                    var promise = User.unfollow({
                        users: user.global_key
                    }, {}, function(result) {
                        0 == result.code ? ($scope.user.followed = !1,
                            $scope.user.fans_count--,
                            $scope.USER.follows_count--,
                            Flash.success().send("取消关注成功")) : Errors.handle(result)
                    });
                    promise["finally"](function() {
                        $scope.following = !1
                    })
                }
            }
            ,
            $scope.watch = function(topic) {
                $scope.global_watching || ($scope.global_watching = !0,
                    topic.watching = !0,
                    TweetTopic.watch({
                        id: topic.id
                    }, {}, function() {
                        topic.watched = !0,
                            Flash.success().send("关注成功")
                    })["finally"](function() {
                        $scope.global_watching = !1,
                            topic.watching = !1
                    }))
            }
            ,
            $scope.unwatch = function(topic) {
                topic.unwatching || (topic.unwatching = !0,
                    TweetTopic.unwatch({
                        id: topic.id
                    }, {}, function() {
                        topic.watched = !1,
                            Flash.success().send("取消关注成功")
                    })["finally"](function() {
                        topic.unwatching = !1
                    }))
            }
            ,
            $scope.has_more_info = function(user) {
                return user ? 0 == user.sex || 1 == user.sex || !angular.isUndefined(user.company) && user.company.length > 0 || !angular.isUndefined(user.job_str) && user.job_str.length > 0 || !angular.isUndefined(user.location) && user.location.length > 0 || !angular.isUndefined(user.tags_str) && user.tags_str.length > 0 : !1
            }
            ,
            $scope.onBubbleRemove = function(tweet) {
                $scope.tweets = Common.removeOfId($scope.tweets, tweet.id)
            }
            ,
            $scope.removeComment = function(tweet, tweet_comment) {
                tweet && tweet_comment && confirm("确认删除该评论？") && Tweet.delete_comment({
                    id: tweet.id,
                    comment: tweet_comment.id
                }, function(result) {
                    return 0 != result.code ? void Errors.handle(result) : (tweet.comments--,
                        void (tweet.comment_list = Common.removeOfId(tweet.comment_list, tweet_comment.id)))
                })
            }
            ,
            $scope.replyComment = function(tweet, comment) {
                return USER ? ($scope.tweet_comment_content[tweet.id] = "@" + comment.owner.name + " : ",
                    void $("#tweet_comment_" + tweet.id).focus()) : void (confirm("需要登录后才能回复，是否立即登录？") && (location.href = "/login"))
            }
            ,
            $scope.toggleLike = function(tweet) {
                return USER ? void (tweet && !tweet.liked_loading && (tweet.liked_loading = !0,
                    tweet.liked ? Tweet.un_like({
                        id: tweet.id
                    }, {}, function(result) {
                        tweet.liked_loading = !1,
                        0 == result.code && (tweet.liked = !1,
                            tweet.likes--,
                            tweet.like_users = $(tweet.like_users).map(function(i, a) {
                                return a.global_key != USER.global_key ? a : null
                            }))
                    }) : Tweet.like({
                        id: tweet.id
                    }, {}, function(result) {
                        tweet.liked_loading = !1,
                        0 == result.code && (tweet.liked = !0,
                            tweet.likes++,
                            tweet.like_users.push({
                                avatar: USER.avatar,
                                path: USER.path,
                                name: USER.name,
                                global_key: USER.global_key
                            }))
                    }))) : void (confirm("需要登录后才能点赞，是否立即登录？") && (location.href = "/login"))
            }
            ,
            "project" === $scope.show_tab ? ("joined" === $scope.second_tab ? $scope.show_joined = !0 : "stared" === $scope.second_tab && ($scope.show_joined = !1),
                loadProjects($scope.second_tab, CPager.currentPage())) : "bubble" === $scope.show_tab ? userPromise.then(function() {
                loadTweets(9999999, !1, $scope.tweet_mode)
            }) : "activity" === $scope.show_tab ? ($scope.activities_mode = $scope.second_tab,
                userPromise.then(function() {
                    load_activities($scope.activities_mode, !1)
                })) : "followers" === $scope.show_tab ? userPromise.then(function() {
                loadFollowers(CPager.currentPage())
            }) : "friends" === $scope.show_tab ? userPromise.then(function() {
                loadFriends(CPager.currentPage())
            }) : "bubble-topic" === $scope.show_tab && userPromise.then(function() {
                load_bubble_topics($scope.second_tab, CPager.currentPage())
            })
    }
    ]),
    angular.module("app").controller("TaskCenterController", ["$scope", "$routeParams", "Task", "Projects", "TaskCenterService", "Project", "Pager", "$location", "Common", "TaskItemService", "$q", "$rootScope", function($scope, $routeParams, Task, Projects, TaskCenterService, Project, Pager, $location, Common, TaskItemService, $q, $rootScope) {
        function setFiltersFromUrl(resetLeftMenu) {
            var params = $location.search()
                , page = params.page || 1;
            $scope.keyword = params.keyword || "",
                angular.forEach($scope.filters, function(filter, key) {
                    var data = filter.data
                        , valueStr = params[key]
                        , values = [];
                    if (valueStr && valueStr.length > 0 && (values = valueStr.split(",")),
                        0 == values.length)
                        return void clearSingleFilter(filter);
                    var fn = function(item) {
                            var innerkey = item.key;
                            return innerkey && values.indexOf(innerkey) > -1
                        }
                        ;
                    ["project", "owner", "creator", "watcher"].indexOf(key) > -1 && (fn = function(item) {
                            var innerkey = item.key;
                            return innerkey && values.indexOf(innerkey.split(":")[0]) > -1
                        }
                    ),
                    "sort" === key && (fn = function(item) {
                            var order = "asc" === params.order ? "asc" : "desc"
                                , innerKey = item.key;
                            return innerKey && values.indexOf(innerKey) > -1 ? "asc" === order ? "asc" === item.order : void 0 === item.order || "desc" === item.order : !1
                        }
                    );
                    var result = [];
                    angular.forEach(data, function(item, index) {
                        fn(item) ? (item.selected = !0,
                            result.push(item.key),
                        "sort" === key && (filter.order = item.order || "desc")) : item.selected = !1
                    }),
                        result.length > 0 ? filter.result = result.join() : (filter.result = "_default",
                            data[0].selected = !0)
                }),
                $scope.updateSearch(page, resetLeftMenu, !1)
        }
        function clearSingleFilter(filter) {
            var data = filter.data;
            if (data.length > 0)
                for (var j = data.length - 1; j >= 0; j--)
                    data[j].selected && (data[j].selected = !1,
                        data[0].selected = !0),
                        filter.result = "_default"
        }
        function collectSearchInfoFromUrl() {
            var params = {};
            return angular.extend(params, $location.search()),
                params.projectId = params.project,
                params
        }
        function collectSearchInfoFromFilters() {
            var projectId = $scope.filters.project.result.replace(/:[^,]+/g, "")
                , status = $scope.filters.status.result
                , priority = $scope.filters.priority.result
                , label = $scope.filters.label.result
                , owner = $scope.filters.owner.result.replace(/:[^,]+/g, "")
                , creator = $scope.filters.creator.result.replace(/:[^,]+/g, "")
                , watcher = $scope.filters.watcher.result.replace(/:[^,]+/g, "")
                , sort = void 0
                , order = void 0;
            return "_default" != $scope.filters.sort.result && (sort = $scope.filters.sort.result,
                order = $scope.filters.sort.order),
            {
                keyword: "" === $scope.keyword ? void 0 : $scope.keyword,
                projectId: "_default" === projectId ? void 0 : projectId,
                status: "_default" === status ? void 0 : status,
                priority: "_default" === priority ? void 0 : priority,
                label: "_default" === label ? void 0 : label,
                owner: "_default" === owner ? void 0 : owner,
                creator: "_default" === creator ? void 0 : creator,
                watcher: "_default" === watcher ? void 0 : watcher,
                sort: sort,
                order: order
            }
        }
        function setupFilters() {
            var memberMap = {}
                , labelMap = {}
                , projectData = $scope.filters.project.data
                , ownerData = $scope.filters.owner.data
                , creatorData = $scope.filters.creator.data
                , watcherData = $scope.filters.watcher.data
                , labelData = $scope.filters.label.data;
            projectData.push({
                key: "_default",
                value: "所有项目",
                selected: !0,
                excluded: !0
            }),
                ownerData.push({
                    key: "_default",
                    value: "所有人",
                    selected: !0,
                    excluded: !0
                }),
                creatorData.push({
                    key: "_default",
                    value: "所有人",
                    selected: !0,
                    excluded: !0
                }),
                watcherData.push({
                    key: "_default",
                    value: "所有人",
                    selected: !0,
                    excluded: !0
                }),
                labelData.push({
                    key: "_default",
                    value: "所有标签",
                    selected: !0,
                    excluded: !0
                });
            var allPromises = [];
            angular.forEach($scope.projects, function(prj) {
                projectData.push({
                    key: prj.id + ":" + prj.name,
                    value: prj.name,
                    avatar: prj.icon
                });
                var memberPromise = TaskCenterService.loadMembers(prj.id);
                memberPromise.then(function(members) {
                    angular.forEach(members, function(member) {
                        var user = member.user;
                        memberMap.hasOwnProperty(user.id) || (memberMap[user.id] = !0,
                            creatorData.push({
                                key: user.id + ":" + user.name,
                                avatar: user.avatar,
                                value: user.name,
                                excluded: !1,
                                pinyin: user.name_pinyin
                            }),
                            ownerData.push({
                                key: user.id + ":" + user.name,
                                avatar: user.avatar,
                                value: user.name,
                                excluded: !1,
                                pinyin: user.name_pinyin
                            }),
                            watcherData.push({
                                key: user.id + ":" + user.name,
                                avatar: user.avatar,
                                value: user.name,
                                excluded: !1,
                                pinyin: user.name_pinyin
                            }))
                    })
                });
                var labelPromise = Project.tags({
                    id: prj.id
                });
                labelPromise.then(function(result) {
                    0 === result.code && angular.forEach(result.data, function(label) {
                        labelMap.hasOwnProperty(label.name) || (labelMap[label.name] = !0,
                            labelData.push({
                                key: label.name,
                                value: label.name,
                                excluded: !1
                            }))
                    })
                }),
                    allPromises.push(memberPromise),
                    allPromises.push(labelPromise)
            }),
                $q.all(allPromises).then(function() {
                    setFiltersFromUrl(!1)
                })
        }
        function setLeftMenu() {
            $scope.left_menu = "";
            var searchObj = $location.search();
            0 === Object.keys(searchObj).length ? $scope.left_menu = "all" : 1 === Object.keys(searchObj).length && (searchObj.owner == USER.id && ($scope.left_menu = "mine"),
            searchObj.watcher == USER.id && ($scope.left_menu = "watch"),
            searchObj.creator == USER.id && ($scope.left_menu = "create"))
        }
        var USER = $scope.USER
            , removeWatchers = [];
        $scope.tasks = [],
            $scope.tasks_loading = !1,
            $scope.tasks_loaded = !1,
            $scope.task = {
                content: "",
                owner: USER,
                status: {
                    processing: 1,
                    done: 2
                }
            },
            setLeftMenu(),
            $scope.projects = [],
            $scope.tasks_total_count = 0,
            $scope.searchUsers = {},
            $scope.is_user_tasks = !0,
            $scope.members = [],
            $scope.show_task_detail_modal = !1,
            $scope.current_task = null ,
            $scope.searchQuery = "",
            $scope.keyword = "",
            $scope.filterKeys = ["sort", "watcher", "creator", "owner", "label", "priority", "status", "project"],
            $scope.filters = {
                project: {
                    title: "项目",
                    data: [],
                    type: "project",
                    result: "_default"
                },
                status: {
                    title: "状态",
                    data: [{
                        key: "_default",
                        value: "所有",
                        selected: !0,
                        excluded: !0
                    }, {
                        key: 1,
                        value: "正在进行",
                        excluded: !0
                    }, {
                        key: 2,
                        value: "已完成",
                        excluded: !0
                    }],
                    type: "plainText",
                    result: "_default"
                },
                priority: {
                    title: "紧急程度",
                    data: [{
                        key: "_default",
                        value: "所有",
                        selected: !0,
                        excluded: !0
                    }, {
                        key: 3,
                        value: "十万火急"
                    }, {
                        key: 2,
                        value: "优先处理"
                    }, {
                        key: 1,
                        value: "正常处理"
                    }, {
                        key: 0,
                        value: "有空再说"
                    }],
                    type: "priority",
                    result: "_default"
                },
                owner: {
                    title: "执行者",
                    data: [],
                    type: "user",
                    result: "_default"
                },
                creator: {
                    title: "创建者",
                    data: [],
                    type: "user",
                    result: "_default"
                },
                watcher: {
                    title: "关注者",
                    data: [],
                    type: "user",
                    result: "_default"
                },
                label: {
                    title: "标签",
                    data: [],
                    type: "tag",
                    result: "_default"
                },
                sort: {
                    title: "排序",
                    data: [{
                        key: "_default",
                        value: "默认",
                        selected: !0,
                        excluded: !0
                    }, {
                        key: "priority",
                        value: "紧急程度",
                        excluded: !0
                    }, {
                        key: "created_at",
                        value: "最近创建",
                        excluded: !0
                    }, {
                        key: "created_at",
                        value: "最早创建",
                        excluded: !0,
                        order: "asc"
                    }, {
                        key: "updated_at",
                        value: "最近更新",
                        excluded: !0
                    }, {
                        key: "updated_at",
                        value: "最早更新",
                        excluded: !0,
                        order: "asc"
                    }],
                    type: "sort",
                    result: "_default"
                }
            },
            $scope.onModalClose = function() {
                $scope.show_task_detail_modal = !1,
                    $location.skipReload().path($scope.prePath),
                    $location.skipReload().search($scope.preSearch)
            }
            ,
            $scope.onTaskChange = function(task) {
                $scope.tasks = Common.replaceWith($scope.tasks, task)
            }
            ,
            $scope.onSelectTask = function(task) {
                $scope.current_task = task,
                    $scope.show_task_detail_modal = !0,
                    $scope.prePath = $location.path(),
                    $scope.preSearch = $location.search(),
                    $location.skipReload().path(task.project.project_path + "/task/" + task.id),
                    $location.skipReload().search("")
            }
        ;
        var task_pager_id = $scope.task_pager_id = (new Date).getTime();
        Pager = Pager.instance(task_pager_id, $scope);
        var pagePromise = Pager.onChange();
        pagePromise.then(null , null , function(page) {
            $scope.loadTasks(page)
        }),
            $scope.loadTasks = function(page, searchInfoFromUrl) {
                if (!$scope.tasks_loading) {
                    $scope.tasks_total_count = 0,
                        $scope.tasks_loading = !0,
                        $scope.tasks_loaded = !1,
                        $scope.tasks = [];
                    var searchInfo = {};
                    searchInfo = searchInfoFromUrl === !0 ? collectSearchInfoFromUrl() : collectSearchInfoFromFilters();
                    var callback = function(result) {
                        0 == result.code && (Pager.optionsReady(result.data),
                            $scope.tasks_loading = !1,
                            $scope.tasks_loaded = !0,
                            $scope.tasks = result.data.list,
                            angular.forEach($scope.tasks, function(task) {
                                task.content = Common.revertHtml(task.content)
                            }),
                            $scope.tasks_total_count = result.data ? result.data.totalRow : 0)
                    }
                        , cuPromise = Task.listOfCurrentUserWithSearch({
                        project_id: searchInfo.projectId,
                        keyword: searchInfo.keyword,
                        priority: searchInfo.priority,
                        label: searchInfo.label,
                        owner: searchInfo.owner,
                        creator: searchInfo.creator,
                        watcher: searchInfo.watcher,
                        sort: searchInfo.sort,
                        order: searchInfo.order,
                        status: searchInfo.status,
                        page: page || 1,
                        pageSize: 20
                    });
                    cuPromise.then(function(result) {
                        callback(result);
                        var tasks = result.data && result.data.list || [];
                        angular.forEach(tasks, function(task) {
                            var project = task.project.id
                                , promise = TaskCenterService.loadMembers(project);
                            promise.then(function(members) {
                                task.members = members
                            })
                        })
                    })
                }
            }
            ,
            $scope.loadTasks($location.search().page || 1, !0);
        var filterAndReorderProjects = function(projects, counts) {
            var prjs = [];
            return angular.forEach(projects, function(prj) {
                var count = Common.findOfId(counts, prj.id, "project");
                count || (count = {
                    total: 0,
                    done: 0,
                    processing: 0
                });
                var total = count.done + count.processing;
                !prj.is_public && prj.name && (count.total = total,
                    prj.count = count || {
                            processing: 0,
                            done: 0,
                            total: 0,
                            project: prj.id
                        },
                    prjs.push(prj))
            }),
                prjs = _.sortBy(prjs, function(prj) {
                    return [!prj.count.total, prj.name.toLowerCase()]
                })
        }
            , bindProjectCount = function(projects, counts) {
            angular.forEach(projects, function(project) {
                var count = Common.findOfId(counts, project.id, "project");
                count || (count = {
                    total: 0,
                    done: 0,
                    processing: 0
                }),
                    count.total = count.done + count.processing,
                    project.count = count
            })
        }
            , loadUserCount = function(callback) {
            var cuPromise = Task.countOfCurrentUser();
            return cuPromise.then(function(result) {
                $scope.tasks_count = result.data || {},
                callback && callback()
            }),
                cuPromise
        }
            , loadUserProjectCount = function() {
            var cupPromise = Task.countOfCurrentUserInProject();
            return cupPromise.then(function(result) {
                var counts = result.data;
                bindProjectCount($scope.projects, counts)
            }),
                cupPromise
        }
            , puPromise = Projects.query({
            page: 1,
            pageSize: 200
        })
            , cupPromise = puPromise.then(function(result) {
            return $scope.projects_tmp = result.data.list || [],
                Task.countOfCurrentUserInProject()
        });
        cupPromise.then(function(result) {
            var counts = result.data || {};
            $scope.projects = filterAndReorderProjects($scope.projects_tmp, counts),
                setupFilters()
        });
        var updateCount = function(task) {
                loadUserProjectCount(),
                    loadUserCount()
            }
            ;
        angular.forEach(["update.owner", "update.status", "update.watch", "remove", "add", "watcher.remove", "watcher.add"], function(signal) {
            var removeWatcher = TaskItemService.onProjectTaskSignal(signal, function(event, task) {
                if ("remove" === signal)
                    $scope.tasks = Common.removeOfId($scope.tasks, task.id);
                else if ("add" === signal) {
                    var promise = TaskCenterService.loadMembers(task.project_id);
                    promise.then(function(members) {
                        task.members = members,
                            Common.prepend($scope.tasks, task)
                    })
                }
                updateCount(task)
            });
            removeWatchers.push(removeWatcher)
        }),
            $scope.$on("goto.task.detail", function(event, task) {
                var url = [task.project.project_path, "task", task.id, task.just_show_comment ? "comment" : ""].join("/");
                $location.search(""),
                    $location.path(url)
            }),
            loadUserCount(),
            $scope.$on("$destroy", function() {
                removeWatchers.map(function(removeWatcher) {
                    angular.isFunction(removeWatcher) && removeWatcher()
                })
            }),
            $scope.updateSearch = function(page, resetLeftMenu, needsToLoadTask) {
                needsToLoadTask !== !1 && (page = page || 1,
                    $scope.loadTasks(page)),
                resetLeftMenu !== !1 && ($scope.left_menu = "");
                var strs = {
                    project: "",
                    status: "",
                    priority: "",
                    label: "",
                    owner: "",
                    creator: "",
                    watcher: "",
                    sort: ""
                }
                    , identities = {
                    project: "项目",
                    status: "状态",
                    priority: "紧急程度",
                    label: "标签",
                    owner: "执行者",
                    creator: "创建者",
                    watcher: "关注者",
                    sort: "排序"
                }
                    , keys = ["project", "owner", "creator", "watcher"];
                if (angular.forEach(keys, function(key, index) {
                        if ("_default" != $scope.filters[key].result) {
                            strs[key] = identities[key] + ": " + $scope.filters[key].result.replace(/\d+:/g, "");
                            var id = $scope.filters[key].result.replace(/:[^,]+/g, "");
                            $location.skipReload().search(key, id)
                        } else
                            $location.skipReload().search(key, null )
                    }),
                        "_default" != $scope.filters.status.result ? (strs.status = identities.status + ": " + $scope.filters.status.result.replace("2", "已完成").replace("1", "正在进行"),
                            $location.skipReload().search("status", $scope.filters.status.result)) : $location.skipReload().search("status", null ),
                        "_default" != $scope.filters.priority.result ? (strs.priority = identities.priority + ": " + $scope.filters.priority.result.replace("3", "十万火急").replace("2", "优先处理").replace("1", "正常处理").replace("0", "有空再说"),
                            $location.skipReload().search("priority", $scope.filters.priority.result)) : $location.skipReload().search("priority", null ),
                        "_default" != $scope.filters.label.result ? (strs.label = identities.label + ": " + $scope.filters.label.result,
                            $location.skipReload().search("label", $scope.filters.label.result)) : $location.skipReload().search("label", null ),
                    "_default" != $scope.filters.sort.result) {
                    var order = $scope.filters.sort.order;
                    switch ($scope.filters.sort.result) {
                        case "priority":
                            strs.sort = "紧急程度排序";
                            break;
                        case "created_at":
                            strs.sort = "asc" === order ? "最早创建排序" : "最近创建排序";
                            break;
                        case "updated_at":
                            strs.sort = "asc" === order ? "最早更新排序" : "最近更新排序"
                    }
                    $location.skipReload().search("sort", $scope.filters.sort.result),
                        $location.skipReload().search("order", $scope.filters.sort.order)
                } else
                    $location.skipReload().search("sort", null ),
                        $location.skipReload().search("order", null );
                var query = $scope.keyword;
                query && query.length > 0 ? ($location.skipReload().search("keyword", query),
                    query = "关键词: " + query) : $location.skipReload().search("keyword", null );
                for (var i = $scope.filterKeys.length - 1; i >= 0; i--)
                    query += " " + strs[$scope.filterKeys[i]];
                $scope.searchQuery = query.trim()
            }
            ,
            $scope.quickLink = function(type, projectId) {
                "project" === type ? $scope.left_menu = "project_" + projectId : $scope.left_menu = type;
                var userId = USER.id
                    , searchStr = "";
                switch (type) {
                    case "all":
                        searchStr = "";
                        break;
                    case "mine":
                        searchStr = "owner=" + userId;
                        break;
                    case "watch":
                        searchStr = "watcher=" + userId;
                        break;
                    case "create":
                        searchStr = "creator=" + userId;
                        break;
                    case "project":
                        searchStr = "project=" + projectId + "&owner=" + userId
                }
                $location.skipReload().search(searchStr),
                    $scope.loadTasks(1, !0),
                    setFiltersFromUrl(!1)
            }
            ,
            $scope.clearSearchQuery = function() {
                $location.skipReload().search(""),
                    $scope.searchQuery = "",
                    $scope.loadTasks(1, !0),
                    setFiltersFromUrl(!0)
            }
            ,
            $scope.createTask = function() {
                $rootScope.createTask()
            }
            ,
            $scope.showNum = function(num) {
                return void 0 === num ? 0 : num
            }
    }
    ]).service("TaskCenterService", ["Project", "$q", "$timeout", function(Project, $q, $timeout) {
        var members_cache = {}
            , loadMembers = function(project) {
                var members = members_cache[project] || []
                    , deferred = $q.defer()
                    , promise = deferred.promise;
                if (members.then)
                    members.then(function(result) {
                        var ms = result.data.list;
                        deferred.resolve(ms)
                    });
                else if (members.length > 0)
                    $timeout(function() {
                        deferred.resolve(members)
                    }, 0);
                else {
                    var mPromise = Project.members({
                        id: project
                    });
                    mPromise.then(function(result) {
                        var ms = result.data.list;
                        members_cache[project] = ms,
                            deferred.resolve(ms)
                    }),
                        members_cache[project] = mPromise
                }
                return promise
            }
            ;
        return {
            loadMembers: loadMembers
        }
    }
    ]),
    angular.module("app").config(["$routeProvider", "$locationProvider", "UserResolver", function($routeProvider, $locationProvider, UserResolver) {
        $routeProvider.when("/user/tasks", {
            controller: "TaskCenterController",
            templateUrl: "app/user/task/index.html",
            resolve: {
                USER: UserResolver
            },
            module: "tasks",
            title: "任务中心"
        })
    }
    ]),
    angular.module("app").controller("TweetController", ["$scope", "$rootScope", "$routeParams", "Tweet", "User", "Activity", "Errors", "location", "PageTitle", "Common", "Flash", function($scope, $rootScope, $routeParams, Tweet, User, Activity, Errors, $location, PageTitle, Common, Flash) {
        var USER = $scope.USER;
        $rootScope.$watch("USER", function(user) {
            USER = user
        }),
            $scope.user = {},
            $scope.tweet = {},
            $scope.tweet_comment_content = [],
            $scope.tags = [],
            User.byKey({
                key: $routeParams.username
            }, function(result) {
                $scope.user = result.data,
                    $scope.tags = $scope.user.tags_str.split(", "),
                    PageTitle.set($scope.user.name + "的冒泡 - Coding.Net")
            });
        var promise = Tweet.query({
            tweet_id: $routeParams.id,
            global_key: $routeParams.username
        }, function(result) {
            $scope.tweet = result.data,
                $scope.tweet.hide_avatar = !0,
                $($scope.tweet.comment_list).each(function(i, a) {
                    a.show_reply_form = !1
                })
        });
        promise["catch"](function(error, result) {
            if (result) {
                if (404 == result.code)
                    return void $location.path("/user");
                if (900 == result.code)
                    return Flash.fail().send("冒泡不存在！"),
                        $location.path("/user"),
                        !1
            }
        }),
            $scope.onSpaceBubbleRemove = function(tweet) {
                $location.path(tweet.owner.path),
                    Flash.success().send("冒泡删除成功!")
            }
            ,
            $scope.toggle_show_more_info = function() {
                $scope.show_more_info ? ($scope.show_more_info = !1,
                    $scope.show_more_info_msg = "展开") : ($scope.show_more_info = !0,
                    $scope.show_more_info_msg = "收起")
            }
            ,
            $scope.follow = function(user) {
                return USER ? void (user && User.follow({
                    users: user.global_key
                }, {}, function(result) {
                    0 == result.code ? ($scope.user.followed = !0,
                        $scope.USER.follows_count++,
                        Flash.success().send("关注成功")) : Errors.handle(result)
                })) : void (confirm("需要登录后才能关注，是否立即登录？") && (location.href = "/login"))
            }
            ,
            $scope.unfollow = function(user) {
                user && User.unfollow({
                    users: user.global_key
                }, {}, function(result) {
                    0 == result.code ? ($scope.user.followed = !1,
                        $scope.USER.follows_count--,
                        Flash.success().send("取消关注成功")) : Errors.handle(result)
                })
            }
            ,
            $scope.has_more_info = function(user) {
                return user ? 0 == user.sex || 1 == user.sex || !angular.isUndefined(user.company) && user.company.length > 0 || !angular.isUndefined(user.job_str) && user.job_str.length > 0 || !angular.isUndefined(user.location) && user.location.length > 0 || !angular.isUndefined(user.tags_str) && user.tags_str.length > 0 : !1
            }
    }
    ]),
    angular.module("app").controller("UserController", ["$scope", "$localStorage", "$rootScope", "Activity", "Tweet", "Task", "Projects", "Errors", "Flash", "ipCookie", "Common", function($scope, $localStorage, $rootScope, Activity, Tweet, Task, Projects, Errors, Flash, ipCookie, Common) {
        var USER = $scope.USER
            , wsk = "welcome_showed_" + USER.id;
        if (!ipCookie(wsk) && 0 == USER.status) {
            var date = new Date;
            date.setTime(date.getTime() + 31536e6),
                ipCookie(wsk, (new Date).getTime(), {
                    expires: date
                }),
                $("#first-login-info").dimmer("show")
        }
        $scope.project_activities = [],
            $scope.tweet_comment_content = [],
            $scope.watched_tweet_count = 0,
            $scope.activity_type = 1,
            $scope.show_tweet = !0;
        var width = document.body.clientWidth
            , project_count = parseInt(((width - 80 - 80) / 8 * 5 - 40) / 160);
        $scope.project_count = project_count,
            $scope.projects_loading = !1,
            $scope.projects = [],
            project_count > 10 ? project_count = 10 : 4 > project_count && (project_count = 4);
        var loadProjects = function(project_count, page) {
                $scope.projects_loading = !0,
                    Projects.query({
                        sort: "hot",
                        page: page || 1,
                        pageSize: project_count
                    }, function(result) {
                        $scope.projects_loading = !1,
                            $scope.projects = result.data && result.data.list || []
                    })["catch"](function() {
                        $scope.projects_loading = !1
                    })
            }
            ;
        loadProjects(project_count),
            $scope.prj_activities_loading = !0,
            $scope.prj_activities_loaded = !1,
            $scope.activities_of_date = null ;
        var loadProjectActivity = function() {
                return Activity.projects_last(function(result) {
                    0 == result.code ? $scope.project_activities = Common.unifyActivity(Common.removeNullItem(result.data)) : Errors.handle(result)
                })
            }
            , loadWatchedActivity = function() {
                return Activity.watched_projects_last(function(result) {
                    0 == result.code ? $scope.project_activities = Common.unifyActivity(Common.removeNullItem(result.data)) : Errors.handle(result)
                })
            }
            , loadFollwedActivity = function() {
                return Activity.following(function(result) {
                    0 == result.code ? $scope.project_activities = Common.removeNullItem(result.data) : Errors.handle(result)
                })
            }
            , loadMyTasks = function() {
                $scope.task_loading = !0;
                var tPromise = Task.listOfCurrentUser({
                    status: "processing",
                    pageSize: 20
                });
                tPromise.then(function(result) {
                    $scope.tasks = result.data && result.data.list || [],
                        angular.forEach($scope.tasks, function(task) {
                            task.content = Common.revertHtml(task.content)
                        })
                }),
                    tPromise["finally"](function() {
                        $scope.task_loading = !1
                    })
            }
            ;
        $scope.switchProjectActivities = function(type) {
            $scope.activity_type = type,
                $scope.project_activities = [];
            var handlers = {
                1: loadProjectActivity,
                2: loadWatchedActivity,
                3: loadFollwedActivity
            }
                , handler = handlers[type] || handlers[1]
                , promise = handler && handler();
            promise && ($scope.prj_activities_loading = !0,
                $scope.prj_activities_loaded = !1,
                promise.then(function() {
                    $scope.prj_activities_loading = !1,
                        $scope.prj_activities_loaded = !0
                }))
        }
            ,
            $rootScope.$on("$routeChangeSuccess", function(event, current) {
                clearInterval($scope.timer)
            }),
            $scope.focus_tweet_form = function() {
                $(".feed-editor textarea").focus()
            }
            ,
            $scope.hideWelcomeInfo = function() {
                $("#first-login-info").dimmer("hide")
            }
        ;
        var promise = loadProjectActivity();
        promise.then(function() {
            $scope.prj_activities_loaded = !0,
                $scope.prj_activities_loading = !1
        }),
            loadMyTasks()
    }
    ]),
    angular.module("constants").constant("PROJECT", {
        resolve: function($injector) {
            return $injector.invoke(function($q, $rootScope) {
                var deferred = $q.defer()
                    , success = function() {
                        deferred.resolve($rootScope.PROJECT)
                    }
                    , failure = function() {
                        deferred.reject()
                    }
                    ;
                if ($rootScope.PROJECT)
                    $rootScope.$evalAsync(success);
                else if ($rootScope.PROJECT === !1)
                    $rootScope.$evalAsync(failure);
                else
                    var removeUserWatcher = $rootScope.$watch("PROJECT", function() {
                        $rootScope.PROJECT ? (success(),
                            removeUserWatcher()) : $rootScope.PROJECT === !1 && (failure(),
                            removeUserWatcher())
                    });
                return deferred.promise
            })
        }
    }),
    angular.module("constants").constant("USER", {
        resolve: function($injector) {
            return $injector.invoke(function($q, $rootScope) {
                var deferred = $q.defer()
                    , success = function() {
                        deferred.resolve($rootScope.USER)
                    }
                    , failure = function() {
                        deferred.reject()
                    }
                    ;
                if ($rootScope.USER)
                    $rootScope.$evalAsync(success);
                else if ($rootScope.USER === !1)
                    $rootScope.$evalAsync(failure);
                else
                    var removeUserWatcher = $rootScope.$watch("USER", function() {
                        $rootScope.USER ? (success(),
                            removeUserWatcher()) : $rootScope.USER === !1 && (failure(),
                            removeUserWatcher())
                    });
                return deferred.promise
            })
        }
    }),
    angular.module("constants").constant("DepotResolver", function($q, $rootScope) {
        var deferred = $q.defer()
            , success = function() {
                deferred.resolve($rootScope.DEPOT)
            }
            , failure = function() {
                deferred.reject()
            }
            ;
        return $rootScope.DEPOT && $rootScope.$evalAsync(success),
            $rootScope.DEPOT === !1 ? $rootScope.$evalAsync(failure) : $rootScope.$watch("DEPOT", function() {
                $rootScope.DEPOT ? success() : $rootScope.DEPOT === !1 && failure()
            }),
            deferred.promise
    }),
    angular.module("constants").constant("Emoji", {
        normal: [{
            code: "+1",
            image: "emojis/+1.png"
        }, {
            code: "-1",
            image: "emojis/-1.png"
        }, {
            code: "100",
            image: "emojis/100.png"
        }, {
            code: "1234",
            image: "emojis/1234.png"
        }, {
            code: "8ball",
            image: "emojis/8ball.png"
        }, {
            code: "a",
            image: "emojis/a.png"
        }, {
            code: "ab",
            image: "emojis/ab.png"
        }, {
            code: "abc",
            image: "emojis/abc.png"
        }, {
            code: "abcd",
            image: "emojis/abcd.png"
        }, {
            code: "accept",
            image: "emojis/accept.png"
        }, {
            code: "aerial_tramway",
            image: "emojis/aerial_tramway.png"
        }, {
            code: "airplane",
            image: "emojis/airplane.png"
        }, {
            code: "alarm_clock",
            image: "emojis/alarm_clock.png"
        }, {
            code: "alien",
            image: "emojis/alien.png"
        }, {
            code: "ambulance",
            image: "emojis/ambulance.png"
        }, {
            code: "anchor",
            image: "emojis/anchor.png"
        }, {
            code: "angel",
            image: "emojis/angel.png"
        }, {
            code: "anger",
            image: "emojis/anger.png"
        }, {
            code: "angry",
            image: "emojis/angry.png"
        }, {
            code: "anguished",
            image: "emojis/anguished.png"
        }, {
            code: "ant",
            image: "emojis/ant.png"
        }, {
            code: "apple",
            image: "emojis/apple.png"
        }, {
            code: "aquarius",
            image: "emojis/aquarius.png"
        }, {
            code: "aries",
            image: "emojis/aries.png"
        }, {
            code: "arrows_clockwise",
            image: "emojis/arrows_clockwise.png"
        }, {
            code: "arrows_counterclockwise",
            image: "emojis/arrows_counterclockwise.png"
        }, {
            code: "arrow_backward",
            image: "emojis/arrow_backward.png"
        }, {
            code: "arrow_double_down",
            image: "emojis/arrow_double_down.png"
        }, {
            code: "arrow_double_up",
            image: "emojis/arrow_double_up.png"
        }, {
            code: "arrow_down",
            image: "emojis/arrow_down.png"
        }, {
            code: "arrow_down_small",
            image: "emojis/arrow_down_small.png"
        }, {
            code: "arrow_forward",
            image: "emojis/arrow_forward.png"
        }, {
            code: "arrow_heading_down",
            image: "emojis/arrow_heading_down.png"
        }, {
            code: "arrow_heading_up",
            image: "emojis/arrow_heading_up.png"
        }, {
            code: "arrow_left",
            image: "emojis/arrow_left.png"
        }, {
            code: "arrow_lower_left",
            image: "emojis/arrow_lower_left.png"
        }, {
            code: "arrow_lower_right",
            image: "emojis/arrow_lower_right.png"
        }, {
            code: "arrow_right",
            image: "emojis/arrow_right.png"
        }, {
            code: "arrow_right_hook",
            image: "emojis/arrow_right_hook.png"
        }, {
            code: "arrow_up",
            image: "emojis/arrow_up.png"
        }, {
            code: "arrow_upper_left",
            image: "emojis/arrow_upper_left.png"
        }, {
            code: "arrow_upper_right",
            image: "emojis/arrow_upper_right.png"
        }, {
            code: "arrow_up_down",
            image: "emojis/arrow_up_down.png"
        }, {
            code: "arrow_up_small",
            image: "emojis/arrow_up_small.png"
        }, {
            code: "art",
            image: "emojis/art.png"
        }, {
            code: "articulated_lorry",
            image: "emojis/articulated_lorry.png"
        }, {
            code: "astonished",
            image: "emojis/astonished.png"
        }, {
            code: "atm",
            image: "emojis/atm.png"
        }, {
            code: "b",
            image: "emojis/b.png"
        }, {
            code: "baby",
            image: "emojis/baby.png"
        }, {
            code: "baby_bottle",
            image: "emojis/baby_bottle.png"
        }, {
            code: "baby_chick",
            image: "emojis/baby_chick.png"
        }, {
            code: "baby_symbol",
            image: "emojis/baby_symbol.png"
        }, {
            code: "baggage_claim",
            image: "emojis/baggage_claim.png"
        }, {
            code: "balloon",
            image: "emojis/balloon.png"
        }, {
            code: "ballot_box_with_check",
            image: "emojis/ballot_box_with_check.png"
        }, {
            code: "bamboo",
            image: "emojis/bamboo.png"
        }, {
            code: "banana",
            image: "emojis/banana.png"
        }, {
            code: "bangbang",
            image: "emojis/bangbang.png"
        }, {
            code: "bank",
            image: "emojis/bank.png"
        }, {
            code: "barber",
            image: "emojis/barber.png"
        }, {
            code: "bar_chart",
            image: "emojis/bar_chart.png"
        }, {
            code: "baseball",
            image: "emojis/baseball.png"
        }, {
            code: "basketball",
            image: "emojis/basketball.png"
        }, {
            code: "bath",
            image: "emojis/bath.png"
        }, {
            code: "bathtub",
            image: "emojis/bathtub.png"
        }, {
            code: "battery",
            image: "emojis/battery.png"
        }, {
            code: "bear",
            image: "emojis/bear.png"
        }, {
            code: "bee",
            image: "emojis/bee.png"
        }, {
            code: "beer",
            image: "emojis/beer.png"
        }, {
            code: "beers",
            image: "emojis/beers.png"
        }, {
            code: "beetle",
            image: "emojis/beetle.png"
        }, {
            code: "beginner",
            image: "emojis/beginner.png"
        }, {
            code: "bell",
            image: "emojis/bell.png"
        }, {
            code: "bento",
            image: "emojis/bento.png"
        }, {
            code: "bicyclist",
            image: "emojis/bicyclist.png"
        }, {
            code: "bike",
            image: "emojis/bike.png"
        }, {
            code: "bikini",
            image: "emojis/bikini.png"
        }, {
            code: "bird",
            image: "emojis/bird.png"
        }, {
            code: "birthday",
            image: "emojis/birthday.png"
        }, {
            code: "black_circle",
            image: "emojis/black_circle.png"
        }, {
            code: "black_joker",
            image: "emojis/black_joker.png"
        }, {
            code: "black_nib",
            image: "emojis/black_nib.png"
        }, {
            code: "black_square",
            image: "emojis/black_square.png"
        }, {
            code: "black_square_button",
            image: "emojis/black_square_button.png"
        }, {
            code: "blossom",
            image: "emojis/blossom.png"
        }, {
            code: "blowfish",
            image: "emojis/blowfish.png"
        }, {
            code: "blue_book",
            image: "emojis/blue_book.png"
        }, {
            code: "blue_car",
            image: "emojis/blue_car.png"
        }, {
            code: "blue_heart",
            image: "emojis/blue_heart.png"
        }, {
            code: "blush",
            image: "emojis/blush.png"
        }, {
            code: "boar",
            image: "emojis/boar.png"
        }, {
            code: "boat",
            image: "emojis/boat.png"
        }, {
            code: "bomb",
            image: "emojis/bomb.png"
        }, {
            code: "book",
            image: "emojis/book.png"
        }, {
            code: "bookmark",
            image: "emojis/bookmark.png"
        }, {
            code: "bookmark_tabs",
            image: "emojis/bookmark_tabs.png"
        }, {
            code: "books",
            image: "emojis/books.png"
        }, {
            code: "boom",
            image: "emojis/boom.png"
        }, {
            code: "boot",
            image: "emojis/boot.png"
        }, {
            code: "bouquet",
            image: "emojis/bouquet.png"
        }, {
            code: "bow",
            image: "emojis/bow.png"
        }, {
            code: "bowling",
            image: "emojis/bowling.png"
        }, {
            code: "bowtie",
            image: "emojis/bowtie.png"
        }, {
            code: "boy",
            image: "emojis/boy.png"
        }, {
            code: "bread",
            image: "emojis/bread.png"
        }, {
            code: "bride_with_veil",
            image: "emojis/bride_with_veil.png"
        }, {
            code: "bridge_at_night",
            image: "emojis/bridge_at_night.png"
        }, {
            code: "briefcase",
            image: "emojis/briefcase.png"
        }, {
            code: "broken_heart",
            image: "emojis/broken_heart.png"
        }, {
            code: "bug",
            image: "emojis/bug.png"
        }, {
            code: "bulb",
            image: "emojis/bulb.png"
        }, {
            code: "bullettrain_front",
            image: "emojis/bullettrain_front.png"
        }, {
            code: "bullettrain_side",
            image: "emojis/bullettrain_side.png"
        }, {
            code: "bus",
            image: "emojis/bus.png"
        }, {
            code: "busstop",
            image: "emojis/busstop.png"
        }, {
            code: "busts_in_silhouette",
            image: "emojis/busts_in_silhouette.png"
        }, {
            code: "bust_in_silhouette",
            image: "emojis/bust_in_silhouette.png"
        }, {
            code: "cactus",
            image: "emojis/cactus.png"
        }, {
            code: "cake",
            image: "emojis/cake.png"
        }, {
            code: "calendar",
            image: "emojis/calendar.png"
        }, {
            code: "calling",
            image: "emojis/calling.png"
        }, {
            code: "camel",
            image: "emojis/camel.png"
        }, {
            code: "camera",
            image: "emojis/camera.png"
        }, {
            code: "cancer",
            image: "emojis/cancer.png"
        }, {
            code: "candy",
            image: "emojis/candy.png"
        }, {
            code: "capital_abcd",
            image: "emojis/capital_abcd.png"
        }, {
            code: "capricorn",
            image: "emojis/capricorn.png"
        }, {
            code: "car",
            image: "emojis/car.png"
        }, {
            code: "card_index",
            image: "emojis/card_index.png"
        }, {
            code: "carousel_horse",
            image: "emojis/carousel_horse.png"
        }, {
            code: "cat",
            image: "emojis/cat.png"
        }, {
            code: "cat2",
            image: "emojis/cat2.png"
        }, {
            code: "cd",
            image: "emojis/cd.png"
        }, {
            code: "chart",
            image: "emojis/chart.png"
        }, {
            code: "chart_with_downwards_trend",
            image: "emojis/chart_with_downwards_trend.png"
        }, {
            code: "chart_with_upwards_trend",
            image: "emojis/chart_with_upwards_trend.png"
        }, {
            code: "checkered_flag",
            image: "emojis/checkered_flag.png"
        }, {
            code: "cherries",
            image: "emojis/cherries.png"
        }, {
            code: "cherry_blossom",
            image: "emojis/cherry_blossom.png"
        }, {
            code: "chestnut",
            image: "emojis/chestnut.png"
        }, {
            code: "chicken",
            image: "emojis/chicken.png"
        }, {
            code: "children_crossing",
            image: "emojis/children_crossing.png"
        }, {
            code: "chocolate_bar",
            image: "emojis/chocolate_bar.png"
        }, {
            code: "christmas_tree",
            image: "emojis/christmas_tree.png"
        }, {
            code: "church",
            image: "emojis/church.png"
        }, {
            code: "cinema",
            image: "emojis/cinema.png"
        }, {
            code: "circus_tent",
            image: "emojis/circus_tent.png"
        }, {
            code: "city_sunrise",
            image: "emojis/city_sunrise.png"
        }, {
            code: "city_sunset",
            image: "emojis/city_sunset.png"
        }, {
            code: "cl",
            image: "emojis/cl.png"
        }, {
            code: "clap",
            image: "emojis/clap.png"
        }, {
            code: "clapper",
            image: "emojis/clapper.png"
        }, {
            code: "clipboard",
            image: "emojis/clipboard.png"
        }, {
            code: "clock1",
            image: "emojis/clock1.png"
        }, {
            code: "clock10",
            image: "emojis/clock10.png"
        }, {
            code: "clock1030",
            image: "emojis/clock1030.png"
        }, {
            code: "clock11",
            image: "emojis/clock11.png"
        }, {
            code: "clock1130",
            image: "emojis/clock1130.png"
        }, {
            code: "clock12",
            image: "emojis/clock12.png"
        }, {
            code: "clock1230",
            image: "emojis/clock1230.png"
        }, {
            code: "clock130",
            image: "emojis/clock130.png"
        }, {
            code: "clock2",
            image: "emojis/clock2.png"
        }, {
            code: "clock230",
            image: "emojis/clock230.png"
        }, {
            code: "clock3",
            image: "emojis/clock3.png"
        }, {
            code: "clock330",
            image: "emojis/clock330.png"
        }, {
            code: "clock4",
            image: "emojis/clock4.png"
        }, {
            code: "clock430",
            image: "emojis/clock430.png"
        }, {
            code: "clock5",
            image: "emojis/clock5.png"
        }, {
            code: "clock530",
            image: "emojis/clock530.png"
        }, {
            code: "clock6",
            image: "emojis/clock6.png"
        }, {
            code: "clock630",
            image: "emojis/clock630.png"
        }, {
            code: "clock7",
            image: "emojis/clock7.png"
        }, {
            code: "clock730",
            image: "emojis/clock730.png"
        }, {
            code: "clock8",
            image: "emojis/clock8.png"
        }, {
            code: "clock830",
            image: "emojis/clock830.png"
        }, {
            code: "clock9",
            image: "emojis/clock9.png"
        }, {
            code: "clock930",
            image: "emojis/clock930.png"
        }, {
            code: "closed_book",
            image: "emojis/closed_book.png"
        }, {
            code: "closed_lock_with_key",
            image: "emojis/closed_lock_with_key.png"
        }, {
            code: "closed_umbrella",
            image: "emojis/closed_umbrella.png"
        }, {
            code: "cloud",
            image: "emojis/cloud.png"
        }, {
            code: "clubs",
            image: "emojis/clubs.png"
        }, {
            code: "cn",
            image: "emojis/cn.png"
        }, {
            code: "cocktail",
            image: "emojis/cocktail.png"
        }, {
            code: "coffee",
            image: "emojis/coffee.png"
        }, {
            code: "cold_sweat",
            image: "emojis/cold_sweat.png"
        }, {
            code: "collision",
            image: "emojis/collision.png"
        }, {
            code: "computer",
            image: "emojis/computer.png"
        }, {
            code: "confetti_ball",
            image: "emojis/confetti_ball.png"
        }, {
            code: "confounded",
            image: "emojis/confounded.png"
        }, {
            code: "confused",
            image: "emojis/confused.png"
        }, {
            code: "congratulations",
            image: "emojis/congratulations.png"
        }, {
            code: "construction",
            image: "emojis/construction.png"
        }, {
            code: "construction_worker",
            image: "emojis/construction_worker.png"
        }, {
            code: "convenience_store",
            image: "emojis/convenience_store.png"
        }, {
            code: "cookie",
            image: "emojis/cookie.png"
        }, {
            code: "cool",
            image: "emojis/cool.png"
        }, {
            code: "cop",
            image: "emojis/cop.png"
        }, {
            code: "copyright",
            image: "emojis/copyright.png"
        }, {
            code: "corn",
            image: "emojis/corn.png"
        }, {
            code: "couple",
            image: "emojis/couple.png"
        }, {
            code: "couplekiss",
            image: "emojis/couplekiss.png"
        }, {
            code: "couple_with_heart",
            image: "emojis/couple_with_heart.png"
        }, {
            code: "cow",
            image: "emojis/cow.png"
        }, {
            code: "cow2",
            image: "emojis/cow2.png"
        }, {
            code: "credit_card",
            image: "emojis/credit_card.png"
        }, {
            code: "crocodile",
            image: "emojis/crocodile.png"
        }, {
            code: "crossed_flags",
            image: "emojis/crossed_flags.png"
        }, {
            code: "crown",
            image: "emojis/crown.png"
        }, {
            code: "cry",
            image: "emojis/cry.png"
        }, {
            code: "crying_cat_face",
            image: "emojis/crying_cat_face.png"
        }, {
            code: "crystal_ball",
            image: "emojis/crystal_ball.png"
        }, {
            code: "cupid",
            image: "emojis/cupid.png"
        }, {
            code: "curly_loop",
            image: "emojis/curly_loop.png"
        }, {
            code: "currency_exchange",
            image: "emojis/currency_exchange.png"
        }, {
            code: "curry",
            image: "emojis/curry.png"
        }, {
            code: "custard",
            image: "emojis/custard.png"
        }, {
            code: "customs",
            image: "emojis/customs.png"
        }, {
            code: "cyclone",
            image: "emojis/cyclone.png"
        }, {
            code: "dancer",
            image: "emojis/dancer.png"
        }, {
            code: "dancers",
            image: "emojis/dancers.png"
        }, {
            code: "dango",
            image: "emojis/dango.png"
        }, {
            code: "dart",
            image: "emojis/dart.png"
        }, {
            code: "dash",
            image: "emojis/dash.png"
        }, {
            code: "date",
            image: "emojis/date.png"
        }, {
            code: "de",
            image: "emojis/de.png"
        }, {
            code: "deciduous_tree",
            image: "emojis/deciduous_tree.png"
        }, {
            code: "department_store",
            image: "emojis/department_store.png"
        }, {
            code: "diamonds",
            image: "emojis/diamonds.png"
        }, {
            code: "diamond_shape_with_a_dot_inside",
            image: "emojis/diamond_shape_with_a_dot_inside.png"
        }, {
            code: "disappointed",
            image: "emojis/disappointed.png"
        }, {
            code: "disappointed_relieved",
            image: "emojis/disappointed_relieved.png"
        }, {
            code: "dizzy",
            image: "emojis/dizzy.png"
        }, {
            code: "dizzy_face",
            image: "emojis/dizzy_face.png"
        }, {
            code: "dog",
            image: "emojis/dog.png"
        }, {
            code: "dog2",
            image: "emojis/dog2.png"
        }, {
            code: "dollar",
            image: "emojis/dollar.png"
        }, {
            code: "dolls",
            image: "emojis/dolls.png"
        }, {
            code: "dolphin",
            image: "emojis/dolphin.png"
        }, {
            code: "donut",
            image: "emojis/donut.png"
        }, {
            code: "door",
            image: "emojis/door.png"
        }, {
            code: "doughnut",
            image: "emojis/doughnut.png"
        }, {
            code: "do_not_litter",
            image: "emojis/do_not_litter.png"
        }, {
            code: "dragon",
            image: "emojis/dragon.png"
        }, {
            code: "dragon_face",
            image: "emojis/dragon_face.png"
        }, {
            code: "dress",
            image: "emojis/dress.png"
        }, {
            code: "dromedary_camel",
            image: "emojis/dromedary_camel.png"
        }, {
            code: "droplet",
            image: "emojis/droplet.png"
        }, {
            code: "dvd",
            image: "emojis/dvd.png"
        }, {
            code: "e-mail",
            image: "emojis/e-mail.png"
        }, {
            code: "ear",
            image: "emojis/ear.png"
        }, {
            code: "earth_africa",
            image: "emojis/earth_africa.png"
        }, {
            code: "earth_americas",
            image: "emojis/earth_americas.png"
        }, {
            code: "earth_asia",
            image: "emojis/earth_asia.png"
        }, {
            code: "ear_of_rice",
            image: "emojis/ear_of_rice.png"
        }, {
            code: "egg",
            image: "emojis/egg.png"
        }, {
            code: "eggplant",
            image: "emojis/eggplant.png"
        }, {
            code: "eight",
            image: "emojis/eight.png"
        }, {
            code: "eight_pointed_black_star",
            image: "emojis/eight_pointed_black_star.png"
        }, {
            code: "eight_spoked_asterisk",
            image: "emojis/eight_spoked_asterisk.png"
        }, {
            code: "electric_plug",
            image: "emojis/electric_plug.png"
        }, {
            code: "elephant",
            image: "emojis/elephant.png"
        }, {
            code: "email",
            image: "emojis/email.png"
        }, {
            code: "end",
            image: "emojis/end.png"
        }, {
            code: "envelope",
            image: "emojis/envelope.png"
        }, {
            code: "es",
            image: "emojis/es.png"
        }, {
            code: "euro",
            image: "emojis/euro.png"
        }, {
            code: "european_castle",
            image: "emojis/european_castle.png"
        }, {
            code: "european_post_office",
            image: "emojis/european_post_office.png"
        }, {
            code: "evergreen_tree",
            image: "emojis/evergreen_tree.png"
        }, {
            code: "exclamation",
            image: "emojis/exclamation.png"
        }, {
            code: "expressionless",
            image: "emojis/expressionless.png"
        }, {
            code: "eyeglasses",
            image: "emojis/eyeglasses.png"
        }, {
            code: "eyes",
            image: "emojis/eyes.png"
        }, {
            code: "facepunch",
            image: "emojis/facepunch.png"
        }, {
            code: "factory",
            image: "emojis/factory.png"
        }, {
            code: "fallen_leaf",
            image: "emojis/fallen_leaf.png"
        }, {
            code: "family",
            image: "emojis/family.png"
        }, {
            code: "fast_forward",
            image: "emojis/fast_forward.png"
        }, {
            code: "fax",
            image: "emojis/fax.png"
        }, {
            code: "fearful",
            image: "emojis/fearful.png"
        }, {
            code: "feelsgood",
            image: "emojis/feelsgood.png"
        }, {
            code: "feet",
            image: "emojis/feet.png"
        }, {
            code: "ferris_wheel",
            image: "emojis/ferris_wheel.png"
        }, {
            code: "file_folder",
            image: "emojis/file_folder.png"
        }, {
            code: "finnadie",
            image: "emojis/finnadie.png"
        }, {
            code: "fire",
            image: "emojis/fire.png"
        }, {
            code: "fireworks",
            image: "emojis/fireworks.png"
        }, {
            code: "fire_engine",
            image: "emojis/fire_engine.png"
        }, {
            code: "first_quarter_moon",
            image: "emojis/first_quarter_moon.png"
        }, {
            code: "first_quarter_moon_with_face",
            image: "emojis/first_quarter_moon_with_face.png"
        }, {
            code: "fish",
            image: "emojis/fish.png"
        }, {
            code: "fishing_pole_and_fish",
            image: "emojis/fishing_pole_and_fish.png"
        }, {
            code: "fish_cake",
            image: "emojis/fish_cake.png"
        }, {
            code: "fist",
            image: "emojis/fist.png"
        }, {
            code: "five",
            image: "emojis/five.png"
        }, {
            code: "flags",
            image: "emojis/flags.png"
        }, {
            code: "flashlight",
            image: "emojis/flashlight.png"
        }, {
            code: "floppy_disk",
            image: "emojis/floppy_disk.png"
        }, {
            code: "flower_playing_cards",
            image: "emojis/flower_playing_cards.png"
        }, {
            code: "flushed",
            image: "emojis/flushed.png"
        }, {
            code: "foggy",
            image: "emojis/foggy.png"
        }, {
            code: "football",
            image: "emojis/football.png"
        }, {
            code: "fork_and_knife",
            image: "emojis/fork_and_knife.png"
        }, {
            code: "fountain",
            image: "emojis/fountain.png"
        }, {
            code: "four",
            image: "emojis/four.png"
        }, {
            code: "four_leaf_clover",
            image: "emojis/four_leaf_clover.png"
        }, {
            code: "fr",
            image: "emojis/fr.png"
        }, {
            code: "free",
            image: "emojis/free.png"
        }, {
            code: "fried_shrimp",
            image: "emojis/fried_shrimp.png"
        }, {
            code: "fries",
            image: "emojis/fries.png"
        }, {
            code: "frog",
            image: "emojis/frog.png"
        }, {
            code: "frowning",
            image: "emojis/frowning.png"
        }, {
            code: "fu",
            image: "emojis/fu.png"
        }, {
            code: "fuelpump",
            image: "emojis/fuelpump.png"
        }, {
            code: "full_moon",
            image: "emojis/full_moon.png"
        }, {
            code: "full_moon_with_face",
            image: "emojis/full_moon_with_face.png"
        }, {
            code: "game_die",
            image: "emojis/game_die.png"
        }, {
            code: "gb",
            image: "emojis/gb.png"
        }, {
            code: "gem",
            image: "emojis/gem.png"
        }, {
            code: "gemini",
            image: "emojis/gemini.png"
        }, {
            code: "ghost",
            image: "emojis/ghost.png"
        }, {
            code: "gift",
            image: "emojis/gift.png"
        }, {
            code: "gift_heart",
            image: "emojis/gift_heart.png"
        }, {
            code: "girl",
            image: "emojis/girl.png"
        }, {
            code: "globe_with_meridians",
            image: "emojis/globe_with_meridians.png"
        }, {
            code: "goat",
            image: "emojis/goat.png"
        }, {
            code: "goberserk",
            image: "emojis/goberserk.png"
        }, {
            code: "godmode",
            image: "emojis/godmode.png"
        }, {
            code: "golf",
            image: "emojis/golf.png"
        }, {
            code: "grapes",
            image: "emojis/grapes.png"
        }, {
            code: "green_apple",
            image: "emojis/green_apple.png"
        }, {
            code: "green_book",
            image: "emojis/green_book.png"
        }, {
            code: "green_heart",
            image: "emojis/green_heart.png"
        }, {
            code: "grey_exclamation",
            image: "emojis/grey_exclamation.png"
        }, {
            code: "grey_question",
            image: "emojis/grey_question.png"
        }, {
            code: "grimacing",
            image: "emojis/grimacing.png"
        }, {
            code: "grin",
            image: "emojis/grin.png"
        }, {
            code: "grinning",
            image: "emojis/grinning.png"
        }, {
            code: "guardsman",
            image: "emojis/guardsman.png"
        }, {
            code: "guitar",
            image: "emojis/guitar.png"
        }, {
            code: "gun",
            image: "emojis/gun.png"
        }, {
            code: "haircut",
            image: "emojis/haircut.png"
        }, {
            code: "hamburger",
            image: "emojis/hamburger.png"
        }, {
            code: "hammer",
            image: "emojis/hammer.png"
        }, {
            code: "hamster",
            image: "emojis/hamster.png"
        }, {
            code: "hand",
            image: "emojis/hand.png"
        }, {
            code: "handbag",
            image: "emojis/handbag.png"
        }, {
            code: "hankey",
            image: "emojis/hankey.png"
        }, {
            code: "hash",
            image: "emojis/hash.png"
        }, {
            code: "hatched_chick",
            image: "emojis/hatched_chick.png"
        }, {
            code: "hatching_chick",
            image: "emojis/hatching_chick.png"
        }, {
            code: "headphones",
            image: "emojis/headphones.png"
        }, {
            code: "heart",
            image: "emojis/heart.png"
        }, {
            code: "heartbeat",
            image: "emojis/heartbeat.png"
        }, {
            code: "heartpulse",
            image: "emojis/heartpulse.png"
        }, {
            code: "hearts",
            image: "emojis/hearts.png"
        }, {
            code: "heart_decoration",
            image: "emojis/heart_decoration.png"
        }, {
            code: "heart_eyes",
            image: "emojis/heart_eyes.png"
        }, {
            code: "heart_eyes_cat",
            image: "emojis/heart_eyes_cat.png"
        }, {
            code: "hear_no_evil",
            image: "emojis/hear_no_evil.png"
        }, {
            code: "heavy_check_mark",
            image: "emojis/heavy_check_mark.png"
        }, {
            code: "heavy_division_sign",
            image: "emojis/heavy_division_sign.png"
        }, {
            code: "heavy_dollar_sign",
            image: "emojis/heavy_dollar_sign.png"
        }, {
            code: "heavy_exclamation_mark",
            image: "emojis/heavy_exclamation_mark.png"
        }, {
            code: "heavy_minus_sign",
            image: "emojis/heavy_minus_sign.png"
        }, {
            code: "heavy_multiplication_x",
            image: "emojis/heavy_multiplication_x.png"
        }, {
            code: "heavy_plus_sign",
            image: "emojis/heavy_plus_sign.png"
        }, {
            code: "helicopter",
            image: "emojis/helicopter.png"
        }, {
            code: "herb",
            image: "emojis/herb.png"
        }, {
            code: "hibiscus",
            image: "emojis/hibiscus.png"
        }, {
            code: "high_brightness",
            image: "emojis/high_brightness.png"
        }, {
            code: "high_heel",
            image: "emojis/high_heel.png"
        }, {
            code: "hocho",
            image: "emojis/hocho.png"
        }, {
            code: "honeybee",
            image: "emojis/honeybee.png"
        }, {
            code: "honey_pot",
            image: "emojis/honey_pot.png"
        }, {
            code: "horse",
            image: "emojis/horse.png"
        }, {
            code: "horse_racing",
            image: "emojis/horse_racing.png"
        }, {
            code: "hospital",
            image: "emojis/hospital.png"
        }, {
            code: "hotel",
            image: "emojis/hotel.png"
        }, {
            code: "hotsprings",
            image: "emojis/hotsprings.png"
        }, {
            code: "hourglass",
            image: "emojis/hourglass.png"
        }, {
            code: "hourglass_flowing_sand",
            image: "emojis/hourglass_flowing_sand.png"
        }, {
            code: "house",
            image: "emojis/house.png"
        }, {
            code: "house_with_garden",
            image: "emojis/house_with_garden.png"
        }, {
            code: "hurtrealbad",
            image: "emojis/hurtrealbad.png"
        }, {
            code: "hushed",
            image: "emojis/hushed.png"
        }, {
            code: "icecream",
            image: "emojis/icecream.png"
        }, {
            code: "ice_cream",
            image: "emojis/ice_cream.png"
        }, {
            code: "id",
            image: "emojis/id.png"
        }, {
            code: "ideograph_advantage",
            image: "emojis/ideograph_advantage.png"
        }, {
            code: "imp",
            image: "emojis/imp.png"
        }, {
            code: "inbox_tray",
            image: "emojis/inbox_tray.png"
        }, {
            code: "incoming_envelope",
            image: "emojis/incoming_envelope.png"
        }, {
            code: "information_desk_person",
            image: "emojis/information_desk_person.png"
        }, {
            code: "information_source",
            image: "emojis/information_source.png"
        }, {
            code: "innocent",
            image: "emojis/innocent.png"
        }, {
            code: "interrobang",
            image: "emojis/interrobang.png"
        }, {
            code: "iphone",
            image: "emojis/iphone.png"
        }, {
            code: "it",
            image: "emojis/it.png"
        }, {
            code: "izakaya_lantern",
            image: "emojis/izakaya_lantern.png"
        }, {
            code: "jack_o_lantern",
            image: "emojis/jack_o_lantern.png"
        }, {
            code: "japan",
            image: "emojis/japan.png"
        }, {
            code: "japanese_castle",
            image: "emojis/japanese_castle.png"
        }, {
            code: "japanese_goblin",
            image: "emojis/japanese_goblin.png"
        }, {
            code: "japanese_ogre",
            image: "emojis/japanese_ogre.png"
        }, {
            code: "jeans",
            image: "emojis/jeans.png"
        }, {
            code: "joy",
            image: "emojis/joy.png"
        }, {
            code: "joy_cat",
            image: "emojis/joy_cat.png"
        }, {
            code: "jp",
            image: "emojis/jp.png"
        }, {
            code: "key",
            image: "emojis/key.png"
        }, {
            code: "keycap_ten",
            image: "emojis/keycap_ten.png"
        }, {
            code: "kimono",
            image: "emojis/kimono.png"
        }, {
            code: "kiss",
            image: "emojis/kiss.png"
        }, {
            code: "kissing",
            image: "emojis/kissing.png"
        }, {
            code: "kissing_cat",
            image: "emojis/kissing_cat.png"
        }, {
            code: "kissing_closed_eyes",
            image: "emojis/kissing_closed_eyes.png"
        }, {
            code: "kissing_face",
            image: "emojis/kissing_face.png"
        }, {
            code: "kissing_heart",
            image: "emojis/kissing_heart.png"
        }, {
            code: "kissing_smiling_eyes",
            image: "emojis/kissing_smiling_eyes.png"
        }, {
            code: "koala",
            image: "emojis/koala.png"
        }, {
            code: "koko",
            image: "emojis/koko.png"
        }, {
            code: "kr",
            image: "emojis/kr.png"
        }, {
            code: "large_blue_circle",
            image: "emojis/large_blue_circle.png"
        }, {
            code: "large_blue_diamond",
            image: "emojis/large_blue_diamond.png"
        }, {
            code: "large_orange_diamond",
            image: "emojis/large_orange_diamond.png"
        }, {
            code: "last_quarter_moon",
            image: "emojis/last_quarter_moon.png"
        }, {
            code: "last_quarter_moon_with_face",
            image: "emojis/last_quarter_moon_with_face.png"
        }, {
            code: "laughing",
            image: "emojis/laughing.png"
        }, {
            code: "leaves",
            image: "emojis/leaves.png"
        }, {
            code: "ledger",
            image: "emojis/ledger.png"
        }, {
            code: "leftwards_arrow_with_hook",
            image: "emojis/leftwards_arrow_with_hook.png"
        }, {
            code: "left_luggage",
            image: "emojis/left_luggage.png"
        }, {
            code: "left_right_arrow",
            image: "emojis/left_right_arrow.png"
        }, {
            code: "lemon",
            image: "emojis/lemon.png"
        }, {
            code: "leo",
            image: "emojis/leo.png"
        }, {
            code: "leopard",
            image: "emojis/leopard.png"
        }, {
            code: "libra",
            image: "emojis/libra.png"
        }, {
            code: "light_rail",
            image: "emojis/light_rail.png"
        }, {
            code: "link",
            image: "emojis/link.png"
        }, {
            code: "lips",
            image: "emojis/lips.png"
        }, {
            code: "lipstick",
            image: "emojis/lipstick.png"
        }, {
            code: "lock",
            image: "emojis/lock.png"
        }, {
            code: "lock_with_ink_pen",
            image: "emojis/lock_with_ink_pen.png"
        }, {
            code: "lollipop",
            image: "emojis/lollipop.png"
        }, {
            code: "loop",
            image: "emojis/loop.png"
        }, {
            code: "loudspeaker",
            image: "emojis/loudspeaker.png"
        }, {
            code: "love_hotel",
            image: "emojis/love_hotel.png"
        }, {
            code: "love_letter",
            image: "emojis/love_letter.png"
        }, {
            code: "low_brightness",
            image: "emojis/low_brightness.png"
        }, {
            code: "m",
            image: "emojis/m.png"
        }, {
            code: "mag",
            image: "emojis/mag.png"
        }, {
            code: "mag_right",
            image: "emojis/mag_right.png"
        }, {
            code: "mahjong",
            image: "emojis/mahjong.png"
        }, {
            code: "mailbox",
            image: "emojis/mailbox.png"
        }, {
            code: "mailbox_closed",
            image: "emojis/mailbox_closed.png"
        }, {
            code: "mailbox_with_mail",
            image: "emojis/mailbox_with_mail.png"
        }, {
            code: "mailbox_with_no_mail",
            image: "emojis/mailbox_with_no_mail.png"
        }, {
            code: "man",
            image: "emojis/man.png"
        }, {
            code: "mans_shoe",
            image: "emojis/mans_shoe.png"
        }, {
            code: "man_with_gua_pi_mao",
            image: "emojis/man_with_gua_pi_mao.png"
        }, {
            code: "man_with_turban",
            image: "emojis/man_with_turban.png"
        }, {
            code: "maple_leaf",
            image: "emojis/maple_leaf.png"
        }, {
            code: "mask",
            image: "emojis/mask.png"
        }, {
            code: "massage",
            image: "emojis/massage.png"
        }, {
            code: "meat_on_bone",
            image: "emojis/meat_on_bone.png"
        }, {
            code: "mega",
            image: "emojis/mega.png"
        }, {
            code: "melon",
            image: "emojis/melon.png"
        }, {
            code: "memo",
            image: "emojis/memo.png"
        }, {
            code: "mens",
            image: "emojis/mens.png"
        }, {
            code: "metal",
            image: "emojis/metal.png"
        }, {
            code: "metro",
            image: "emojis/metro.png"
        }, {
            code: "microphone",
            image: "emojis/microphone.png"
        }, {
            code: "microscope",
            image: "emojis/microscope.png"
        }, {
            code: "milky_way",
            image: "emojis/milky_way.png"
        }, {
            code: "minibus",
            image: "emojis/minibus.png"
        }, {
            code: "minidisc",
            image: "emojis/minidisc.png"
        }, {
            code: "mobile_phone_off",
            image: "emojis/mobile_phone_off.png"
        }, {
            code: "moneybag",
            image: "emojis/moneybag.png"
        }, {
            code: "money_with_wings",
            image: "emojis/money_with_wings.png"
        }, {
            code: "monkey",
            image: "/static/1666cf248f343226926d708cf3842126.png"
        }, {
            code: "monkey_face",
            image: "emojis/monkey_face.png"
        }, {
            code: "monorail",
            image: "emojis/monorail.png"
        }, {
            code: "moon",
            image: "emojis/moon.png"
        }, {
            code: "mortar_board",
            image: "emojis/mortar_board.png"
        }, {
            code: "mountain_bicyclist",
            image: "emojis/mountain_bicyclist.png"
        }, {
            code: "mountain_cableway",
            image: "emojis/mountain_cableway.png"
        }, {
            code: "mountain_railway",
            image: "emojis/mountain_railway.png"
        }, {
            code: "mount_fuji",
            image: "emojis/mount_fuji.png"
        }, {
            code: "mouse",
            image: "emojis/mouse.png"
        }, {
            code: "mouse2",
            image: "emojis/mouse2.png"
        }, {
            code: "movie_camera",
            image: "emojis/movie_camera.png"
        }, {
            code: "moyai",
            image: "emojis/moyai.png"
        }, {
            code: "muscle",
            image: "emojis/muscle.png"
        }, {
            code: "mushroom",
            image: "emojis/mushroom.png"
        }, {
            code: "musical_keyboard",
            image: "emojis/musical_keyboard.png"
        }, {
            code: "musical_note",
            image: "emojis/musical_note.png"
        }, {
            code: "musical_score",
            image: "emojis/musical_score.png"
        }, {
            code: "mute",
            image: "emojis/mute.png"
        }, {
            code: "nail_care",
            image: "emojis/nail_care.png"
        }, {
            code: "name_badge",
            image: "emojis/name_badge.png"
        }, {
            code: "neckbeard",
            image: "emojis/neckbeard.png"
        }, {
            code: "necktie",
            image: "emojis/necktie.png"
        }, {
            code: "negative_squared_cross_mark",
            image: "emojis/negative_squared_cross_mark.png"
        }, {
            code: "neutral_face",
            image: "emojis/neutral_face.png"
        }, {
            code: "new",
            image: "emojis/new.png"
        }, {
            code: "newspaper",
            image: "emojis/newspaper.png"
        }, {
            code: "new_moon",
            image: "emojis/new_moon.png"
        }, {
            code: "new_moon_with_face",
            image: "emojis/new_moon_with_face.png"
        }, {
            code: "ng",
            image: "emojis/ng.png"
        }, {
            code: "nine",
            image: "emojis/nine.png"
        }, {
            code: "non-potable_water",
            image: "emojis/non-potable_water.png"
        }, {
            code: "nose",
            image: "emojis/nose.png"
        }, {
            code: "notebook",
            image: "emojis/notebook.png"
        }, {
            code: "notebook_with_decorative_cover",
            image: "emojis/notebook_with_decorative_cover.png"
        }, {
            code: "notes",
            image: "emojis/notes.png"
        }, {
            code: "no_bell",
            image: "emojis/no_bell.png"
        }, {
            code: "no_bicycles",
            image: "emojis/no_bicycles.png"
        }, {
            code: "no_entry",
            image: "emojis/no_entry.png"
        }, {
            code: "no_entry_sign",
            image: "emojis/no_entry_sign.png"
        }, {
            code: "no_good",
            image: "emojis/no_good.png"
        }, {
            code: "no_mobile_phones",
            image: "emojis/no_mobile_phones.png"
        }, {
            code: "no_mouth",
            image: "emojis/no_mouth.png"
        }, {
            code: "no_pedestrians",
            image: "emojis/no_pedestrians.png"
        }, {
            code: "no_smoking",
            image: "emojis/no_smoking.png"
        }, {
            code: "nut_and_bolt",
            image: "emojis/nut_and_bolt.png"
        }, {
            code: "o",
            image: "emojis/o.png"
        }, {
            code: "o2",
            image: "emojis/o2.png"
        }, {
            code: "ocean",
            image: "emojis/ocean.png"
        }, {
            code: "octocat",
            image: "emojis/octocat.png"
        }, {
            code: "octopus",
            image: "emojis/octopus.png"
        }, {
            code: "oden",
            image: "emojis/oden.png"
        }, {
            code: "office",
            image: "emojis/office.png"
        }, {
            code: "ok",
            image: "emojis/ok.png"
        }, {
            code: "ok_hand",
            image: "emojis/ok_hand.png"
        }, {
            code: "ok_woman",
            image: "emojis/ok_woman.png"
        }, {
            code: "older_man",
            image: "emojis/older_man.png"
        }, {
            code: "older_woman",
            image: "emojis/older_woman.png"
        }, {
            code: "on",
            image: "emojis/on.png"
        }, {
            code: "oncoming_automobile",
            image: "emojis/oncoming_automobile.png"
        }, {
            code: "oncoming_bus",
            image: "emojis/oncoming_bus.png"
        }, {
            code: "oncoming_police_car",
            image: "emojis/oncoming_police_car.png"
        }, {
            code: "oncoming_taxi",
            image: "emojis/oncoming_taxi.png"
        }, {
            code: "one",
            image: "emojis/one.png"
        }, {
            code: "open_file_folder",
            image: "emojis/open_file_folder.png"
        }, {
            code: "open_hands",
            image: "emojis/open_hands.png"
        }, {
            code: "open_mouth",
            image: "emojis/open_mouth.png"
        }, {
            code: "ophiuchus",
            image: "emojis/ophiuchus.png"
        }, {
            code: "orange_book",
            image: "emojis/orange_book.png"
        }, {
            code: "outbox_tray",
            image: "emojis/outbox_tray.png"
        }, {
            code: "ox",
            image: "emojis/ox.png"
        }, {
            code: "pager",
            image: "emojis/pager.png"
        }, {
            code: "page_facing_up",
            image: "emojis/page_facing_up.png"
        }, {
            code: "page_with_curl",
            image: "emojis/page_with_curl.png"
        }, {
            code: "palm_tree",
            image: "emojis/palm_tree.png"
        }, {
            code: "panda_face",
            image: "emojis/panda_face.png"
        }, {
            code: "paperclip",
            image: "emojis/paperclip.png"
        }, {
            code: "parking",
            image: "emojis/parking.png"
        }, {
            code: "partly_sunny",
            image: "emojis/partly_sunny.png"
        }, {
            code: "part_alternation_mark",
            image: "emojis/part_alternation_mark.png"
        }, {
            code: "passport_control",
            image: "emojis/passport_control.png"
        }, {
            code: "paw_prints",
            image: "emojis/paw_prints.png"
        }, {
            code: "peach",
            image: "emojis/peach.png"
        }, {
            code: "pear",
            image: "emojis/pear.png"
        }, {
            code: "pencil",
            image: "emojis/pencil.png"
        }, {
            code: "pencil2",
            image: "emojis/pencil2.png"
        }, {
            code: "penguin",
            image: "emojis/penguin.png"
        }, {
            code: "pensive",
            image: "emojis/pensive.png"
        }, {
            code: "performing_arts",
            image: "emojis/performing_arts.png"
        }, {
            code: "persevere",
            image: "emojis/persevere.png"
        }, {
            code: "person_frowning",
            image: "emojis/person_frowning.png"
        }, {
            code: "person_with_blond_hair",
            image: "emojis/person_with_blond_hair.png"
        }, {
            code: "person_with_pouting_face",
            image: "emojis/person_with_pouting_face.png"
        }, {
            code: "phone",
            image: "emojis/phone.png"
        }, {
            code: "pig",
            image: "emojis/pig.png"
        }, {
            code: "pig2",
            image: "emojis/pig2.png"
        }, {
            code: "pig_nose",
            image: "emojis/pig_nose.png"
        }, {
            code: "pill",
            image: "emojis/pill.png"
        }, {
            code: "pineapple",
            image: "emojis/pineapple.png"
        }, {
            code: "pisces",
            image: "emojis/pisces.png"
        }, {
            code: "pizza",
            image: "emojis/pizza.png"
        }, {
            code: "plus1",
            image: "emojis/plus1.png"
        }, {
            code: "point_down",
            image: "emojis/point_down.png"
        }, {
            code: "point_left",
            image: "emojis/point_left.png"
        }, {
            code: "point_right",
            image: "emojis/point_right.png"
        }, {
            code: "point_up",
            image: "emojis/point_up.png"
        }, {
            code: "point_up_2",
            image: "emojis/point_up_2.png"
        }, {
            code: "police_car",
            image: "emojis/police_car.png"
        }, {
            code: "poodle",
            image: "emojis/poodle.png"
        }, {
            code: "poop",
            image: "emojis/poop.png"
        }, {
            code: "postal_horn",
            image: "emojis/postal_horn.png"
        }, {
            code: "postbox",
            image: "emojis/postbox.png"
        }, {
            code: "post_office",
            image: "emojis/post_office.png"
        }, {
            code: "potable_water",
            image: "emojis/potable_water.png"
        }, {
            code: "pouch",
            image: "emojis/pouch.png"
        }, {
            code: "poultry_leg",
            image: "emojis/poultry_leg.png"
        }, {
            code: "pound",
            image: "emojis/pound.png"
        }, {
            code: "pouting_cat",
            image: "emojis/pouting_cat.png"
        }, {
            code: "pray",
            image: "emojis/pray.png"
        }, {
            code: "princess",
            image: "emojis/princess.png"
        }, {
            code: "punch",
            image: "emojis/punch.png"
        }, {
            code: "purple_heart",
            image: "emojis/purple_heart.png"
        }, {
            code: "purse",
            image: "emojis/purse.png"
        }, {
            code: "pushpin",
            image: "emojis/pushpin.png"
        }, {
            code: "put_litter_in_its_place",
            image: "emojis/put_litter_in_its_place.png"
        }, {
            code: "question",
            image: "emojis/question.png"
        }, {
            code: "rabbit",
            image: "emojis/rabbit.png"
        }, {
            code: "rabbit2",
            image: "emojis/rabbit2.png"
        }, {
            code: "racehorse",
            image: "emojis/racehorse.png"
        }, {
            code: "radio",
            image: "emojis/radio.png"
        }, {
            code: "radio_button",
            image: "emojis/radio_button.png"
        }, {
            code: "rage",
            image: "emojis/rage.png"
        }, {
            code: "rage1",
            image: "emojis/rage1.png"
        }, {
            code: "rage2",
            image: "emojis/rage2.png"
        }, {
            code: "rage3",
            image: "emojis/rage3.png"
        }, {
            code: "rage4",
            image: "emojis/rage4.png"
        }, {
            code: "railway_car",
            image: "emojis/railway_car.png"
        }, {
            code: "rainbow",
            image: "emojis/rainbow.png"
        }, {
            code: "raised_hand",
            image: "emojis/raised_hand.png"
        }, {
            code: "raised_hands",
            image: "emojis/raised_hands.png"
        }, {
            code: "raising_hand",
            image: "emojis/raising_hand.png"
        }, {
            code: "ram",
            image: "emojis/ram.png"
        }, {
            code: "ramen",
            image: "emojis/ramen.png"
        }, {
            code: "rat",
            image: "emojis/rat.png"
        }, {
            code: "recycle",
            image: "emojis/recycle.png"
        }, {
            code: "red_car",
            image: "emojis/red_car.png"
        }, {
            code: "red_circle",
            image: "emojis/red_circle.png"
        }, {
            code: "registered",
            image: "emojis/registered.png"
        }, {
            code: "relaxed",
            image: "emojis/relaxed.png"
        }, {
            code: "relieved",
            image: "emojis/relieved.png"
        }, {
            code: "repeat",
            image: "emojis/repeat.png"
        }, {
            code: "repeat_one",
            image: "emojis/repeat_one.png"
        }, {
            code: "restroom",
            image: "emojis/restroom.png"
        }, {
            code: "revolving_hearts",
            image: "emojis/revolving_hearts.png"
        }, {
            code: "rewind",
            image: "emojis/rewind.png"
        }, {
            code: "ribbon",
            image: "emojis/ribbon.png"
        }, {
            code: "rice",
            image: "emojis/rice.png"
        }, {
            code: "rice_ball",
            image: "emojis/rice_ball.png"
        }, {
            code: "rice_cracker",
            image: "emojis/rice_cracker.png"
        }, {
            code: "rice_scene",
            image: "emojis/rice_scene.png"
        }, {
            code: "ring",
            image: "emojis/ring.png"
        }, {
            code: "rocket",
            image: "emojis/rocket.png"
        }, {
            code: "roller_coaster",
            image: "emojis/roller_coaster.png"
        }, {
            code: "rooster",
            image: "emojis/rooster.png"
        }, {
            code: "rose",
            image: "emojis/rose.png"
        }, {
            code: "rotating_light",
            image: "emojis/rotating_light.png"
        }, {
            code: "round_pushpin",
            image: "emojis/round_pushpin.png"
        }, {
            code: "rowboat",
            image: "emojis/rowboat.png"
        }, {
            code: "ru",
            image: "emojis/ru.png"
        }, {
            code: "rugby_football",
            image: "emojis/rugby_football.png"
        }, {
            code: "runner",
            image: "emojis/runner.png"
        }, {
            code: "running",
            image: "emojis/running.png"
        }, {
            code: "running_shirt_with_sash",
            image: "emojis/running_shirt_with_sash.png"
        }, {
            code: "sa",
            image: "emojis/sa.png"
        }, {
            code: "sagittarius",
            image: "emojis/sagittarius.png"
        }, {
            code: "sailboat",
            image: "emojis/sailboat.png"
        }, {
            code: "sake",
            image: "emojis/sake.png"
        }, {
            code: "sandal",
            image: "emojis/sandal.png"
        }, {
            code: "santa",
            image: "emojis/santa.png"
        }, {
            code: "satellite",
            image: "emojis/satellite.png"
        }, {
            code: "satisfied",
            image: "emojis/satisfied.png"
        }, {
            code: "saxophone",
            image: "emojis/saxophone.png"
        }, {
            code: "school",
            image: "emojis/school.png"
        }, {
            code: "school_satchel",
            image: "emojis/school_satchel.png"
        }, {
            code: "scissors",
            image: "emojis/scissors.png"
        }, {
            code: "scorpius",
            image: "emojis/scorpius.png"
        }, {
            code: "scream",
            image: "emojis/scream.png"
        }, {
            code: "scream_cat",
            image: "emojis/scream_cat.png"
        }, {
            code: "scroll",
            image: "emojis/scroll.png"
        }, {
            code: "seat",
            image: "emojis/seat.png"
        }, {
            code: "secret",
            image: "emojis/secret.png"
        }, {
            code: "seedling",
            image: "emojis/seedling.png"
        }, {
            code: "see_no_evil",
            image: "emojis/see_no_evil.png"
        }, {
            code: "seven",
            image: "emojis/seven.png"
        }, {
            code: "shaved_ice",
            image: "emojis/shaved_ice.png"
        }, {
            code: "sheep",
            image: "emojis/sheep.png"
        }, {
            code: "shell",
            image: "emojis/shell.png"
        }, {
            code: "ship",
            image: "emojis/ship.png"
        }, {
            code: "shipit",
            image: "emojis/shipit.png"
        }, {
            code: "shirt",
            image: "emojis/shirt.png"
        }, {
            code: "shit",
            image: "emojis/shit.png"
        }, {
            code: "shoe",
            image: "emojis/shoe.png"
        }, {
            code: "shower",
            image: "emojis/shower.png"
        }, {
            code: "signal_strength",
            image: "emojis/signal_strength.png"
        }, {
            code: "six",
            image: "emojis/six.png"
        }, {
            code: "six_pointed_star",
            image: "emojis/six_pointed_star.png"
        }, {
            code: "ski",
            image: "emojis/ski.png"
        }, {
            code: "skull",
            image: "emojis/skull.png"
        }, {
            code: "sleeping",
            image: "emojis/sleeping.png"
        }, {
            code: "sleepy",
            image: "emojis/sleepy.png"
        }, {
            code: "slot_machine",
            image: "emojis/slot_machine.png"
        }, {
            code: "small_blue_diamond",
            image: "emojis/small_blue_diamond.png"
        }, {
            code: "small_orange_diamond",
            image: "emojis/small_orange_diamond.png"
        }, {
            code: "small_red_triangle",
            image: "emojis/small_red_triangle.png"
        }, {
            code: "small_red_triangle_down",
            image: "emojis/small_red_triangle_down.png"
        }, {
            code: "smile",
            image: "emojis/smile.png"
        }, {
            code: "smiley",
            image: "emojis/smiley.png"
        }, {
            code: "smiley_cat",
            image: "emojis/smiley_cat.png"
        }, {
            code: "smile_cat",
            image: "emojis/smile_cat.png"
        }, {
            code: "smiling_imp",
            image: "emojis/smiling_imp.png"
        }, {
            code: "smirk",
            image: "emojis/smirk.png"
        }, {
            code: "smirk_cat",
            image: "emojis/smirk_cat.png"
        }, {
            code: "smoking",
            image: "emojis/smoking.png"
        }, {
            code: "snail",
            image: "emojis/snail.png"
        }, {
            code: "snake",
            image: "emojis/snake.png"
        }, {
            code: "snowboarder",
            image: "emojis/snowboarder.png"
        }, {
            code: "snowflake",
            image: "emojis/snowflake.png"
        }, {
            code: "snowman",
            image: "emojis/snowman.png"
        }, {
            code: "sob",
            image: "emojis/sob.png"
        }, {
            code: "soccer",
            image: "emojis/soccer.png"
        }, {
            code: "soon",
            image: "emojis/soon.png"
        }, {
            code: "sos",
            image: "emojis/sos.png"
        }, {
            code: "sound",
            image: "emojis/sound.png"
        }, {
            code: "space_invader",
            image: "emojis/space_invader.png"
        }, {
            code: "spades",
            image: "emojis/spades.png"
        }, {
            code: "spaghetti",
            image: "emojis/spaghetti.png"
        }, {
            code: "sparkler",
            image: "emojis/sparkler.png"
        }, {
            code: "sparkles",
            image: "emojis/sparkles.png"
        }, {
            code: "sparkling_heart",
            image: "emojis/sparkling_heart.png"
        }, {
            code: "speaker",
            image: "emojis/speaker.png"
        }, {
            code: "speak_no_evil",
            image: "emojis/speak_no_evil.png"
        }, {
            code: "speech_balloon",
            image: "emojis/speech_balloon.png"
        }, {
            code: "speedboat",
            image: "emojis/speedboat.png"
        }, {
            code: "squirrel",
            image: "emojis/squirrel.png"
        }, {
            code: "star",
            image: "emojis/star.png"
        }, {
            code: "star2",
            image: "emojis/star2.png"
        }, {
            code: "stars",
            image: "emojis/stars.png"
        }, {
            code: "station",
            image: "emojis/station.png"
        }, {
            code: "statue_of_liberty",
            image: "emojis/statue_of_liberty.png"
        }, {
            code: "steam_locomotive",
            image: "emojis/steam_locomotive.png"
        }, {
            code: "stew",
            image: "emojis/stew.png"
        }, {
            code: "straight_ruler",
            image: "emojis/straight_ruler.png"
        }, {
            code: "strawberry",
            image: "emojis/strawberry.png"
        }, {
            code: "stuck_out_tongue",
            image: "emojis/stuck_out_tongue.png"
        }, {
            code: "stuck_out_tongue_closed_eyes",
            image: "emojis/stuck_out_tongue_closed_eyes.png"
        }, {
            code: "stuck_out_tongue_winking_eye",
            image: "emojis/stuck_out_tongue_winking_eye.png"
        }, {
            code: "sunflower",
            image: "emojis/sunflower.png"
        }, {
            code: "sunglasses",
            image: "emojis/sunglasses.png"
        }, {
            code: "sunny",
            image: "emojis/sunny.png"
        }, {
            code: "sunrise",
            image: "emojis/sunrise.png"
        }, {
            code: "sunrise_over_mountains",
            image: "emojis/sunrise_over_mountains.png"
        }, {
            code: "sun_with_face",
            image: "emojis/sun_with_face.png"
        }, {
            code: "surfer",
            image: "emojis/surfer.png"
        }, {
            code: "sushi",
            image: "emojis/sushi.png"
        }, {
            code: "suspect",
            image: "emojis/suspect.png"
        }, {
            code: "suspension_railway",
            image: "emojis/suspension_railway.png"
        }, {
            code: "sweat",
            image: "emojis/sweat.png"
        }, {
            code: "sweat_drops",
            image: "emojis/sweat_drops.png"
        }, {
            code: "sweat_smile",
            image: "emojis/sweat_smile.png"
        }, {
            code: "sweet_potato",
            image: "emojis/sweet_potato.png"
        }, {
            code: "swimmer",
            image: "emojis/swimmer.png"
        }, {
            code: "symbols",
            image: "emojis/symbols.png"
        }, {
            code: "syringe",
            image: "emojis/syringe.png"
        }, {
            code: "tada",
            image: "emojis/tada.png"
        }, {
            code: "tanabata_tree",
            image: "emojis/tanabata_tree.png"
        }, {
            code: "tangerine",
            image: "emojis/tangerine.png"
        }, {
            code: "taurus",
            image: "emojis/taurus.png"
        }, {
            code: "taxi",
            image: "emojis/taxi.png"
        }, {
            code: "tea",
            image: "emojis/tea.png"
        }, {
            code: "telephone",
            image: "emojis/telephone.png"
        }, {
            code: "telephone_receiver",
            image: "emojis/telephone_receiver.png"
        }, {
            code: "telescope",
            image: "emojis/telescope.png"
        }, {
            code: "tennis",
            image: "emojis/tennis.png"
        }, {
            code: "tent",
            image: "emojis/tent.png"
        }, {
            code: "thought_balloon",
            image: "emojis/thought_balloon.png"
        }, {
            code: "three",
            image: "emojis/three.png"
        }, {
            code: "thumbsdown",
            image: "emojis/thumbsdown.png"
        }, {
            code: "thumbsup",
            image: "emojis/thumbsup.png"
        }, {
            code: "ticket",
            image: "emojis/ticket.png"
        }, {
            code: "tiger",
            image: "emojis/tiger.png"
        }, {
            code: "tiger2",
            image: "emojis/tiger2.png"
        }, {
            code: "tired_face",
            image: "emojis/tired_face.png"
        }, {
            code: "tm",
            image: "emojis/tm.png"
        }, {
            code: "toilet",
            image: "emojis/toilet.png"
        }, {
            code: "tokyo_tower",
            image: "emojis/tokyo_tower.png"
        }, {
            code: "tomato",
            image: "emojis/tomato.png"
        }, {
            code: "tongue",
            image: "emojis/tongue.png"
        }, {
            code: "top",
            image: "emojis/top.png"
        }, {
            code: "tophat",
            image: "emojis/tophat.png"
        }, {
            code: "tractor",
            image: "emojis/tractor.png"
        }, {
            code: "traffic_light",
            image: "emojis/traffic_light.png"
        }, {
            code: "train",
            image: "emojis/train.png"
        }, {
            code: "train2",
            image: "emojis/train2.png"
        }, {
            code: "tram",
            image: "emojis/tram.png"
        }, {
            code: "triangular_flag_on_post",
            image: "emojis/triangular_flag_on_post.png"
        }, {
            code: "triangular_ruler",
            image: "emojis/triangular_ruler.png"
        }, {
            code: "trident",
            image: "emojis/trident.png"
        }, {
            code: "triumph",
            image: "emojis/triumph.png"
        }, {
            code: "trolleybus",
            image: "emojis/trolleybus.png"
        }, {
            code: "trollface",
            image: "emojis/trollface.png"
        }, {
            code: "trophy",
            image: "emojis/trophy.png"
        }, {
            code: "tropical_drink",
            image: "emojis/tropical_drink.png"
        }, {
            code: "tropical_fish",
            image: "emojis/tropical_fish.png"
        }, {
            code: "truck",
            image: "emojis/truck.png"
        }, {
            code: "trumpet",
            image: "emojis/trumpet.png"
        }, {
            code: "tshirt",
            image: "emojis/tshirt.png"
        }, {
            code: "tulip",
            image: "emojis/tulip.png"
        }, {
            code: "turtle",
            image: "emojis/turtle.png"
        }, {
            code: "tv",
            image: "emojis/tv.png"
        }, {
            code: "twisted_rightwards_arrows",
            image: "emojis/twisted_rightwards_arrows.png"
        }, {
            code: "two",
            image: "emojis/two.png"
        }, {
            code: "two_hearts",
            image: "emojis/two_hearts.png"
        }, {
            code: "two_men_holding_hands",
            image: "emojis/two_men_holding_hands.png"
        }, {
            code: "two_women_holding_hands",
            image: "emojis/two_women_holding_hands.png"
        }, {
            code: "u5272",
            image: "emojis/u5272.png"
        }, {
            code: "u5408",
            image: "emojis/u5408.png"
        }, {
            code: "u55b6",
            image: "emojis/u55b6.png"
        }, {
            code: "u6307",
            image: "emojis/u6307.png"
        }, {
            code: "u6708",
            image: "emojis/u6708.png"
        }, {
            code: "u6709",
            image: "emojis/u6709.png"
        }, {
            code: "u6e80",
            image: "emojis/u6e80.png"
        }, {
            code: "u7121",
            image: "emojis/u7121.png"
        }, {
            code: "u7533",
            image: "emojis/u7533.png"
        }, {
            code: "u7981",
            image: "emojis/u7981.png"
        }, {
            code: "u7a7a",
            image: "emojis/u7a7a.png"
        }, {
            code: "uk",
            image: "emojis/uk.png"
        }, {
            code: "umbrella",
            image: "emojis/umbrella.png"
        }, {
            code: "unamused",
            image: "emojis/unamused.png"
        }, {
            code: "underage",
            image: "emojis/underage.png"
        }, {
            code: "unlock",
            image: "emojis/unlock.png"
        }, {
            code: "up",
            image: "emojis/up.png"
        }, {
            code: "us",
            image: "emojis/us.png"
        }, {
            code: "v",
            image: "emojis/v.png"
        }, {
            code: "vertical_traffic_light",
            image: "emojis/vertical_traffic_light.png"
        }, {
            code: "vhs",
            image: "emojis/vhs.png"
        }, {
            code: "vibration_mode",
            image: "emojis/vibration_mode.png"
        }, {
            code: "video_camera",
            image: "emojis/video_camera.png"
        }, {
            code: "video_game",
            image: "emojis/video_game.png"
        }, {
            code: "violin",
            image: "emojis/violin.png"
        }, {
            code: "virgo",
            image: "emojis/virgo.png"
        }, {
            code: "volcano",
            image: "emojis/volcano.png"
        }, {
            code: "vs",
            image: "emojis/vs.png"
        }, {
            code: "walking",
            image: "emojis/walking.png"
        }, {
            code: "waning_crescent_moon",
            image: "emojis/waning_crescent_moon.png"
        }, {
            code: "waning_gibbous_moon",
            image: "emojis/waning_gibbous_moon.png"
        }, {
            code: "warning",
            image: "emojis/warning.png"
        }, {
            code: "watch",
            image: "emojis/watch.png"
        }, {
            code: "watermelon",
            image: "emojis/watermelon.png"
        }, {
            code: "water_buffalo",
            image: "emojis/water_buffalo.png"
        }, {
            code: "wave",
            image: "/static/a3b359a70259cce7827a5d461b76ca15.png"
        }, {
            code: "wavy_dash",
            image: "emojis/wavy_dash.png"
        }, {
            code: "waxing_crescent_moon",
            image: "emojis/waxing_crescent_moon.png"
        }, {
            code: "waxing_gibbous_moon",
            image: "emojis/waxing_gibbous_moon.png"
        }, {
            code: "wc",
            image: "emojis/wc.png"
        }, {
            code: "weary",
            image: "emojis/weary.png"
        }, {
            code: "wedding",
            image: "emojis/wedding.png"
        }, {
            code: "whale",
            image: "emojis/whale.png"
        }, {
            code: "whale2",
            image: "emojis/whale2.png"
        }, {
            code: "wheelchair",
            image: "emojis/wheelchair.png"
        }, {
            code: "white_check_mark",
            image: "emojis/white_check_mark.png"
        }, {
            code: "white_circle",
            image: "emojis/white_circle.png"
        }, {
            code: "white_flower",
            image: "emojis/white_flower.png"
        }, {
            code: "white_square",
            image: "emojis/white_square.png"
        }, {
            code: "white_square_button",
            image: "emojis/white_square_button.png"
        }, {
            code: "wind_chime",
            image: "emojis/wind_chime.png"
        }, {
            code: "wine_glass",
            image: "emojis/wine_glass.png"
        }, {
            code: "wink",
            image: "emojis/wink.png"
        }, {
            code: "wolf",
            image: "emojis/wolf.png"
        }, {
            code: "woman",
            image: "emojis/woman.png"
        }, {
            code: "womans_clothes",
            image: "emojis/womans_clothes.png"
        }, {
            code: "womans_hat",
            image: "emojis/womans_hat.png"
        }, {
            code: "womens",
            image: "emojis/womens.png"
        }, {
            code: "worried",
            image: "emojis/worried.png"
        }, {
            code: "wrench",
            image: "emojis/wrench.png"
        }, {
            code: "x",
            image: "emojis/x.png"
        }, {
            code: "yellow_heart",
            image: "emojis/yellow_heart.png"
        }, {
            code: "yen",
            image: "emojis/yen.png"
        }, {
            code: "yum",
            image: "emojis/yum.png"
        }, {
            code: "zap",
            image: "emojis/zap.png"
        }, {
            code: "zero",
            image: "emojis/zero.png"
        }, {
            code: "zzz",
            image: "emojis/zzz.png"
        }],
        monkey: [{
            code: "哈哈",
            image: "coding-emotions/coding-emoji-01.png"
        }, {
            code: "吐",
            image: "coding-emotions/coding-emoji-02.png"
        }, {
            code: "压力山大",
            image: "coding-emotions/coding-emoji-03.png"
        }, {
            code: "忧伤",
            image: "coding-emotions/coding-emoji-04.png"
        }, {
            code: "坏人",
            image: "coding-emotions/coding-emoji-05.png"
        }, {
            code: "酷",
            image: "coding-emotions/coding-emoji-06.png"
        }, {
            code: "哼",
            image: "coding-emotions/coding-emoji-07.png"
        }, {
            code: "你咬我啊",
            image: "coding-emotions/coding-emoji-08.png"
        }, {
            code: "内急",
            image: "coding-emotions/coding-emoji-09.png"
        }, {
            code: "32个赞",
            image: "coding-emotions/coding-emoji-10.png"
        }, {
            code: "加油",
            image: "coding-emotions/coding-emoji-11.png"
        }, {
            code: "闭嘴",
            image: "coding-emotions/coding-emoji-12.png"
        }, {
            code: "wow",
            image: "coding-emotions/coding-emoji-13.png"
        }, {
            code: "泪流成河",
            image: "coding-emotions/coding-emoji-14.png"
        }, {
            code: "NO!",
            image: "coding-emotions/coding-emoji-15.png"
        }, {
            code: "疑问",
            image: "coding-emotions/coding-emoji-16.png"
        }, {
            code: "耶",
            image: "coding-emotions/coding-emoji-17.png"
        }, {
            code: "生日快乐",
            image: "coding-emotions/coding-emoji-18.png"
        }, {
            code: "求包养",
            image: "coding-emotions/coding-emoji-19.png"
        }, {
            code: "吹泡泡",
            image: "coding-emotions/coding-emoji-20.png"
        }, {
            code: "睡觉",
            image: "coding-emotions/coding-emoji-21.png"
        }, {
            code: "惊讶",
            image: "coding-emotions/coding-emoji-22.png"
        }, {
            code: "Hi",
            image: "coding-emotions/coding-emoji-23.png"
        }, {
            code: "打发点咯",
            image: "coding-emotions/coding-emoji-24.png"
        }, {
            code: "呵呵",
            image: "coding-emotions/coding-emoji-25.png"
        }, {
            code: "喷血",
            image: "coding-emotions/coding-emoji-26.png"
        }, {
            code: "Bug",
            image: "coding-emotions/coding-emoji-27.png"
        }, {
            code: "听音乐",
            image: "coding-emotions/coding-emoji-28.png"
        }, {
            code: "垒码",
            image: "coding-emotions/coding-emoji-29.png"
        }, {
            code: "我打你哦",
            image: "coding-emotions/coding-emoji-30.png"
        }, {
            code: "顶足球",
            image: "coding-emotions/coding-emoji-31.png"
        }, {
            code: "放毒气",
            image: "coding-emotions/coding-emoji-32.png"
        }, {
            code: "表白",
            image: "coding-emotions/coding-emoji-33.png"
        }, {
            code: "抓瓢虫",
            image: "coding-emotions/coding-emoji-34.png"
        }, {
            code: "下班",
            image: "coding-emotions/coding-emoji-35.png"
        }, {
            code: "冒泡",
            image: "coding-emotions/coding-emoji-36.png"
        }, {
            code: "2015",
            image: "coding-emotions/coding-emoji-38.png"
        }, {
            code: "拜年",
            image: "coding-emotions/coding-emoji-39.png"
        }, {
            code: "发红包",
            image: "coding-emotions/coding-emoji-40.png"
        }, {
            code: "放鞭炮",
            image: "coding-emotions/coding-emoji-41.png"
        }, {
            code: "求红包",
            image: "coding-emotions/coding-emoji-42.png"
        }, {
            code: "新年快乐",
            image: "coding-emotions/coding-emoji-43.png"
        }]
    }),
    angular.module("constants").constant("EmojiMap", {
        emoji: ["smiley", "heart_eyes", "pensive", "flushed", "grin", "kissing_heart", "wink", "angry", "disappointed", "disappointed_relieved", "sob", "stuck_out_tongue_closed_eyes", "rage", "persevere", "unamused", "smile", "mask", "kissing_face", "sweat", "joy", "blush", "cry", "stuck_out_tongue_winking_eye", "fearful", "cold_sweat", "astonished", "smirk", "scream", "sleepy", "confounded", "relieved", "smiling_imp", "ghost", "santa", "dog", "pig", "cat", "+1", "-1", "facepunch", "fist", "v", "muscle", "clap", "point_left", "point_up_2", "point_right", "point_down", "ok_hand", "heart", "broken_heart", "sunny", "moon", "star2", "zap", "cloud", "lips", "rose", "coffee", "birthday", "clock10", "beer", "mag", "iphone", "house", "car", "gift", "soccer", "bomb", "gem", "alien", "100", "money_with_wings", "video_game", "hankey", "sos", "zzz", "microphone", "umbrella", "book", "pray", "rocket", "tea", "watermelon"],
        coding: [{
            code: "哈哈",
            image: "coding-emoji-01"
        }, {
            code: "吐",
            image: "coding-emoji-02"
        }, {
            code: "压力山大",
            image: "coding-emoji-03"
        }, {
            code: "忧伤",
            image: "coding-emoji-04"
        }, {
            code: "坏人",
            image: "coding-emoji-05"
        }, {
            code: "酷",
            image: "coding-emoji-06"
        }, {
            code: "哼",
            image: "coding-emoji-07"
        }, {
            code: "你咬我啊",
            image: "coding-emoji-08"
        }, {
            code: "内急",
            image: "coding-emoji-09"
        }, {
            code: "32个赞",
            image: "coding-emoji-10"
        }, {
            code: "加油",
            image: "coding-emoji-11"
        }, {
            code: "闭嘴",
            image: "coding-emoji-12"
        }, {
            code: "wow",
            image: "coding-emoji-13"
        }, {
            code: "泪流成河",
            image: "coding-emoji-14"
        }, {
            code: "NO!",
            image: "coding-emoji-15"
        }, {
            code: "疑问",
            image: "coding-emoji-16"
        }, {
            code: "耶",
            image: "coding-emoji-17"
        }, {
            code: "生日快乐",
            image: "coding-emoji-18"
        }, {
            code: "求包养",
            image: "coding-emoji-19"
        }, {
            code: "吹泡泡",
            image: "coding-emoji-20"
        }, {
            code: "睡觉",
            image: "coding-emoji-21"
        }, {
            code: "惊讶",
            image: "coding-emoji-22"
        }, {
            code: "Hi",
            image: "coding-emoji-23"
        }, {
            code: "打发点咯",
            image: "coding-emoji-24"
        }, {
            code: "呵呵",
            image: "coding-emoji-25"
        }, {
            code: "喷血",
            image: "coding-emoji-26"
        }, {
            code: "Bug",
            image: "coding-emoji-27"
        }, {
            code: "听音乐",
            image: "coding-emoji-28"
        }, {
            code: "垒码",
            image: "coding-emoji-29"
        }, {
            code: "我打你哦",
            image: "coding-emoji-30"
        }, {
            code: "顶足球",
            image: "coding-emoji-31"
        }, {
            code: "放毒气",
            image: "coding-emoji-32"
        }, {
            code: "表白",
            image: "coding-emoji-33"
        }, {
            code: "抓瓢虫",
            image: "coding-emoji-34"
        }, {
            code: "下班",
            image: "coding-emoji-35"
        }, {
            code: "冒泡",
            image: "coding-emoji-36"
        }, {
            code: "2015",
            image: "coding-emoji-38"
        }, {
            code: "拜年",
            image: "coding-emoji-39"
        }, {
            code: "发红包",
            image: "coding-emoji-40"
        }, {
            code: "放鞭炮",
            image: "coding-emoji-41"
        }, {
            code: "求红包",
            image: "coding-emoji-42"
        }, {
            code: "新年快乐",
            image: "coding-emoji-43"
        }],
        festival: [{
            code: "奔月",
            image: "festival-emoji-01"
        }, {
            code: "吃月饼",
            image: "festival-emoji-02"
        }, {
            code: "捞月",
            image: "festival-emoji-03"
        }, {
            code: "打招呼",
            image: "festival-emoji-04"
        }, {
            code: "中秋快乐",
            image: "festival-emoji-05"
        }, {
            code: "赏月",
            image: "festival-emoji-06"
        }, {
            code: "悠闲",
            image: "festival-emoji-07"
        }, {
            code: "爬爬",
            image: "festival-emoji-08"
        }]
    }),
    angular.module("constants").constant("GroupResolver", function($q, $rootScope, $location) {
        var deferred = $q.defer()
            , success = function() {
                deferred.resolve($rootScope.GROUP)
            }
            , failure = function() {
                deferred.reject(),
                    $location.url("/user/groups")
            }
            ;
        return $rootScope.GROUP ? $rootScope.$evalAsync(success) : $rootScope.GROUP === !1 ? $rootScope.$evalAsync(failure) : $rootScope.$watch("GROUP", function() {
            $rootScope.GROUP ? success() : $rootScope.GROUP === !1 && failure()
        }),
            deferred.promise
    }),
    angular.module("constants").constant("PermissionResolver", function($q, $rootScope, $filter, $location, Flash, PROJECT, $injector) {
        var deferred = $q.defer()
            , success = function() {
                deferred.resolve({
                    role_id: $rootScope.PROJECT.current_user_role_id,
                    role_name: $rootScope.PROJECT.current_user_role
                })
            }
            , failure = function() {
                deferred.reject()
            }
            , gitPermission = function() {
                var isMember = $filter("isRole")($rootScope.PROJECT, $rootScope.MEMBER);
                return $rootScope.PROJECT ? $rootScope.PROJECT.is_public ? !0 : isMember : !1
            }
            ;
        return gitPermission() ? $rootScope.$evalAsync(success) : $rootScope.PROJECT === !1 ? $rootScope.$evalAsync(failure) : PROJECT.resolve($injector).then(function() {
            gitPermission() ? success() : (failure(),
            $rootScope.PROJECT && (Flash.fail().send("无权访问项目代码相关功能"),
                $location.path($rootScope.PROJECT.project_path)))
        }),
            deferred.promise
    }),
    angular.module("constants").constant("ProjectResolver", function($q, $rootScope, $location) {
        var deferred = $q.defer()
            , success = function() {
                deferred.resolve($rootScope.PROJECT)
            }
            , failure = function() {
                deferred.reject(),
                    $rootScope.USER ? $location.path("/user") : $location.path("/")
            }
            ;
        return $rootScope.PROJECT ? $rootScope.$evalAsync(success) : $rootScope.PROJECT === !1 ? $rootScope.$evalAsync(failure) : $rootScope.$watch("PROJECT", function() {
            $rootScope.PROJECT ? success() : $rootScope.PROJECT === !1 && failure()
        }),
            deferred.promise
    }),
    angular.module("services").service("ProjectVersions", function() {
        var versions = {
                free: {
                    id: "free",
                    name: "免费版",
                    icon: "coffee",
                    description: ["512M 免费内存", "1G Git 仓库", "项目成员 10 人", "邮件"],
                    period: {
                        month: 0,
                        half_year: 0,
                        full_year: 0
                    },
                    limits: {
                        member: 10,
                        git: "1G"
                    }
                },
                dev: {
                    id: "dev",
                    name: "开发版",
                    icon: "wrench",
                    color: "#5191bd",
                    description: ["1G 项目内存", "5G Git 仓库", "支持自定义域名", "项目成员 20 人", "支持数据打包", "支持工单"],
                    period: {
                        month: 49,
                        half_year: 245,
                        full_year: 441
                    },
                    limits: {
                        member: 20,
                        git: "5G"
                    }
                },
                pro: {
                    id: "pro",
                    name: "高级版",
                    icon: "trophy",
                    color: "#eb935d",
                    description: ["2G 项目内存", "10G Git 仓库", "支持自定义域名", "项目成员 50 人", "支持数据打包", "保证 99.9% SLA", "支持工单、QQ、电话"],
                    period: {
                        month: 199,
                        half_year: 995,
                        full_year: 1791
                    },
                    limits: {
                        member: 50,
                        git: "10G"
                    }
                }
            }
            , humanToData = function(form) {
                var plans = {
                    free: 1,
                    dev: 2,
                    pro: 3
                };
                return {
                    plan: plans[form.version],
                    month: humanToMonth(form.period),
                    auto: +form.renewal
                }
            }
            , humanToMonth = function(month) {
                var months = {
                    month: 1,
                    half_year: 6,
                    full_year: 12
                };
                return months[month]
            }
            , monthToHuman = function(month) {
                var months = {
                    1: "month",
                    6: "half_year",
                    12: "full_year"
                };
                return months[month]
            }
            ;
        return {
            free: versions.free,
            dev: versions.dev,
            pro: versions.pro,
            1: versions.free,
            2: versions.dev,
            3: versions.pro,
            humanToData: humanToData,
            monthToHuman: monthToHuman
        }
    }),
    angular.module("constants").constant("UserResolver", function(ipCookie, $location, USER, $injector) {
        var promise = USER.resolve($injector)
            , failure = function() {
                var url = $location.path();
                0 != url.indexOf("/register") && 0 != url.indexOf("/register") && 0 != url.indexOf("/resetPassword") && 0 != url.indexOf("/user/resetPassword") && 0 != url.indexOf("/activate") && $location.path("/login")
            }
            ;
        return promise["catch"](failure),
            promise
    }),
    angular.module("directives").directive("cgActivity", ["hljsService", "$timeout", "Tweet", "Errors", "Common", "TaskDeadlineService", "TaskUrgencyService", "TaskCommentService", "GitService", function(hljs, $timeout, Tweet, Errors, Common, TaskDeadlineService, TaskUrgencyService, TaskCommentService, GitService) {
        var support_type = ["Project", "ProjectMember", "Tweet", "TweetComment", "Depot", "Task", "TaskComment", "UserFollow", "ProjectFile", "ProjectTopic", "PullRequestBean", "PullRequestComment", "MergeRequestBean", "MergeRequestComment", "ProjectStar", "ProjectWatcher", "QcTask", "CommitLineNote", "ProjectFileComment"]
            , link = function(scope, element, attrs) {
            var tplName = attrs.cgActivity;
            if (scope.targetType = tplName,
                -1 != support_type.indexOf(tplName)) {
                var url = ["common/directives/activities/tpl/", tplName, ".html"].join("");
                scope.tplName = url,
                    scope.$on("activity.hljs", function() {
                        element.find("pre code").each(function(i, e) {
                            hljs.highlightBlock(e)
                        })
                    })
            }
        }
            , controller = ["$scope", function($scope) {
            $scope.activity_comment_content = {};
            var activity = $scope.activity;
            if (activity) {
                var removed = $.isEmptyObject(activity.target);
                removed && ($scope.activity.target = null ),
                "Tweet" == activity.target_type && activity.tweet && $timeout(function() {
                    $scope.$emit("activity.hljs")
                }, 30),
                    $scope.replyTweet = function(activity) {
                        activity.tweet.show_reply_form = !0,
                            $timeout(function() {
                                $("#tweet_comment_" + activity.tweet.id).focus()
                            }, 30)
                    }
                    ,
                    $scope.removeTweet = function(activity) {
                        activity.target;
                        activity && confirm("确认删除该泡泡？") && Tweet["delete"]({
                            tweet_id: activity.tweet.id
                        }, function(result) {
                            0 == result.code ? (activity.tweet = null ,
                                $scope.$emit("activity.remove", activity)) : Errors.handle(result)
                        })
                    }
                    ,
                    $scope.commentTweet = function(tweet, tweet_comment) {
                        tweet && tweet_comment && (tweet.loading = !0,
                            Tweet.comment({
                                id: tweet.id
                            }, {
                                content: tweet_comment
                            }, function(result) {
                                if (tweet.loading = !1,
                                    0 != result.code)
                                    return void Errors.handle(result);
                                var comment = result.data;
                                comment.owner = $scope.USER,
                                    tweet.comment_list.splice(0, 0, comment),
                                    tweet.comments_count++,
                                    $scope.activity_comment_content[tweet.id] = ""
                            })["catch"](function() {
                                tweet.loading = !1
                            }))
                    }
                    ,
                    $scope.removeComment = function(activity, tweet_comment) {
                        var tweet = activity.tweet;
                        tweet && tweet_comment && confirm("确认删除该评论？") && Tweet.delete_comment({
                            id: tweet.id,
                            comment: tweet_comment.id
                        }, function(result) {
                            return 0 != result.code ? void Errors.handle(result) : (tweet.comments_count--,
                                void (tweet.comment_list = Common.removeOfId(tweet.comment_list, tweet_comment.id)))
                        })
                    }
                    ,
                    $scope.replyComment = function(activity, comment) {
                        var tweet = activity.tweet;
                        tweet.show_reply_form = !0,
                            $scope.activity_comment_content[tweet.id] = "@" + comment.owner.name + " : ",
                            $("#tweet_comment_" + tweet.id).focus()
                    }
                    ,
                    $scope.parseDeadline = function(date) {
                        return date ? "[" + TaskDeadlineService.format(date).date + "]" : ""
                    }
                    ,
                    $scope.commitLink = GitService.activityCommitLink,
                    $scope.priorities = TaskUrgencyService.priorities,
                    $scope.commentToText = TaskCommentService.text
            }
        }
        ];
        return {
            link: link,
            template: '<ng-include src="tplName"></ng-include>',
            controller: controller
        }
    }
    ]),
    angular.module("directives").directive("cgActivities", ["hljsService", "$timeout", "Common", function(hljs, $timeout, Common) {
        var link = function(scope, element) {
            scope.$on("activity.hljs", function() {
                element.find("pre code").each(function(i, e) {
                    hljs.highlightBlock(e)
                })
            })
        }
            , controller = ["$scope", "$rootScope", function($scope, $rootScope) {
            $scope.activity_comments = {},
                $scope.activity_comment_content = {},
                $scope.$on("activity.add", function(event, activity) {
                    $scope.activities.splice(0, 0, activity),
                        $timeout(function() {
                            $scope.$emit("activity.hljs")
                        }, 30)
                }),
                $scope.$on("activity.remove", function(event, activity) {
                    $scope.activities = Common.removeOfId($scope.activities, activity.id)
                }),
                $scope.USER = $rootScope.USER
        }
        ];
        return {
            link: link,
            scope: {
                activities: "=cgActivities"
            },
            templateUrl: "common/directives/activities/tpl/activities.html",
            controller: controller
        }
    }
    ]),
    angular.module("directives").directive("cgAd", [function() {
        return {
            scope: {
                banner_id: "@cgAd",
                width: "@",
                height: "@"
            },
            link: function(scope, element, attrs) {
                scope.destory = function() {
                    element.remove()
                }
            },
            templateUrl: "common/directives/ad/tpl/ad.html",
            controller: "AdController",
            replace: !0
        }
    }
    ]).controller("AdController", ["$scope", "AdBanner", function($scope, AdBanner) {
        $scope.width = $scope.width || "auto",
            $scope.height = $scope.height || "auto",
            $scope.ad = {};
        var abPromise = AdBanner.get({
            id: $scope.banner_id
        }, {});
        abPromise.then(function(result) {
            $scope.ad = result.data
        }),
            abPromise["catch"](function() {
                return $scope.destory(),
                    !1
            }),
            abPromise["finally"](function() {
                $scope.loading = !1
            })
    }
    ]).service("AdService", [function() {}
    ]),
    angular.module("directives").directive("cgMultiAd", ["$timeout", function($timeout) {
        return {
            scope: {
                banner_ids: "=cgMultiAd",
                width: "@",
                height: "@",
                speed: "=speed"
            },
            link: function(scope, element, attrs) {
                scope.speed = scope.speed || 3e3,
                    scope.destory = function() {
                        element.remove()
                    }
                    ,
                    element.hide();
                var i = 0
                    , timeInstance = null
                    , timer = function() {
                        element.show();
                        var image = element.find(".multi-ad-banner")
                            , height = image.height();
                        element.css({
                            height: height
                        }),
                            angular.element(image[0]).css({
                                "margin-top": -i * height + "px",
                                "-webkit-transition": "margin-top 1s",
                                transition: "margin-top 1s",
                                "-moz-transition": "margin-top 1s",
                                "-o-transition": "margin-top 1s"
                            }),
                            i = ++i % (image.length || 0),
                            $timeout.cancel(timeInstance),
                            timeInstance = $timeout(timer, scope.speed)
                    }
                    ;
                $timeout(timer, scope.speed);
                var image = element.find(".multi-ad-banner");
                element.css({
                    height: image.height()
                })
            },
            templateUrl: "common/directives/ad/tpl/multi-ad.html",
            controller: "MultiAdController",
            replace: !0
        }
    }
    ]).controller("MultiAdController", ["$scope", "AdBanner", "$q", function($scope, AdBanner, $q) {
        $scope.width = $scope.width || "auto",
            $scope.height = $scope.height || "auto",
            $scope.ads = [];
        var deferred = $q.defer();
        deferred.resolve($scope.banner_ids);
        var promise = deferred.promise;
        promise.then(function(banner_ids) {
            for (var i in banner_ids)
                AdBanner.get({
                    id: banner_ids[i]
                }, function(result) {
                    0 == result.code && $scope.ads.push(result.data)
                })
        }),
            promise["catch"](function() {
                return $scope.destory(),
                    !1
            }),
            promise["finally"](function() {
                $scope.loading = !1
            })
    }
    ]).service("MultiAdService", [function() {}
    ]),
    angular.module("directives").directive("cgAtWho", ["At", "Common", function(At, Common) {
        var thumbnailNames = function(names, size) {
                angular.forEach(names, function(name) {
                    name.avatar = Common.thumbnail(name.avatar, size || 36)
                })
            }
            , conf = function(names, symbol, limit, insert_without_symbol) {
                symbol = symbol || "@",
                    thumbnailNames(names);
                var alias = (new Date).getTime() + "_" + Math.round(1e4 * Math.random());
                return {
                    at: symbol,
                    data: names,
                    search_key: ["name", "name_pinyin", "name_pinyin_short"],
                    tpl: '<li data-value="' + (insert_without_symbol ? "" : symbol) + '${name}"><img src="${avatar}" width="20" height="20" style="border-radius: 10px"/>${name}</li>',
                    show_the_at: !0,
                    insert_tpl: (insert_without_symbol ? "" : symbol) + "${name} ",
                    start_with_space: !1,
                    space_after: !0,
                    limit: limit || 5,
                    alias: alias
                }
            }
            ;
        return {
            scope: {
                at_symbol: "&atSymbol",
                at_suggestion_count: "&atSuggestionCount",
                insert_without_symbol: "&insertWithoutSymbol",
                at_member: "=atMember"
            },
            link: function(scope, element) {
                var removeWatcher = scope.$watch("at_member", function() {
                    var promise = null ;
                    promise = isNaN(scope.at_member) ? At.ofFriend() : At.ofProject(scope.at_member),
                        promise.then(function(names) {
                            var configure = conf(names, scope.at_symbol(), scope.at_suggestion_count(), scope.insert_without_symbol());
                            element.atwho(configure)
                        })
                });
                scope.$on("$destroy", function() {
                    removeWatcher();
                    var app = $(element).data("atwho");
                    app && (app.close(),
                        $(element).data("atwho", null ))
                })
            }
        }
    }
    ]),
    angular.module("directives").directive("cgAtContext", ["At", "Common", "User", function(At, Common, User) {
        var thumbnailNames = function(names, size) {
                angular.forEach(names, function(name) {
                    name.avatar = Common.thumbnail(name.avatar, size || 36)
                })
            }
            ;
        return {
            scope: {
                at_symbol: "&atSymbol",
                at_suggestion_count: "&atSuggestionCount",
                insert_without_symbol: "&insertWithoutSymbol",
                at_context_type: "=atContextType",
                at_item: "=atItem",
                extra_item: "=extraItem"
            },
            link: function(scope, element) {
                var callbacks = {
                    remote_filter: _.debounce(function(query, callback) {
                        var promise = User.get_at_who_context({
                            context_type: scope.at_context_type,
                            item_id: scope.at_item.iid || scope.at_item.id,
                            extra_id: scope.extra_item ? scope.extra_item.id : void 0
                        });
                        promise.then(function(result) {
                            var users = result.data;
                            thumbnailNames(users),
                                callback(users)
                        })
                    }, 300)
                }
                    , bindAtWho = function() {
                    $(element).data("atwho", null );
                    var symbol = scope.at_symbol() || "@"
                        , insert_without_symbol = scope.insert_without_symbol()
                        , at_suggestion_count = scope.at_suggestion_count();
                    element.atwho({
                        at: symbol,
                        show_the_at: !0,
                        start_with_space: !1,
                        search_key: ["name", "name_pinyin", "name_pinyin_short"],
                        space_after: !0,
                        limit: at_suggestion_count || 5,
                        tpl: '<li data-value="' + (insert_without_symbol ? "" : symbol) + '${name}"><img src="${avatar}" width="20" height="20" style="border-radius: 10px"/>${name}</li>',
                        callbacks: callbacks
                    })
                }
                    , removeWatcher = scope.$watch("at_item", function(at_item) {
                    !angular.isUndefined(at_item) && at_item && (at_item.then ? at_item.then(function() {
                        bindAtWho()
                    }) : at_item && bindAtWho())
                });
                scope.$on("$destroy", function() {
                    removeWatcher();
                    var app = $(element).data("atwho");
                    app && (app.close(),
                        $(element).data("atwho", null ))
                })
            }
        }
    }
    ]),
angular.module("directives").directive("cgAtTopic", ["TweetTopic", function(TweetTopic) {
    return {
        link: function(scope, element) {
            var callbacks = {
                    remote_filter: _.debounce(function(query, callback) {
                        TweetTopic.auto_complete({
                            key: query
                        }, function(result) {
                            var topics = result.data;
                            callback(topics)
                        })
                    }, 300)
                }
                , bindAtTopic = function() {
                    $(element).data("atwho", null ),
                        element.atwho({
                            at: "#",
                            show_the_at: !0,
                            start_with_space: !1,
                            space_after: !1,
                            search_key: "name",
                            tpl: '<li data-value="#${name}#" class="tweet-topic-name">${name}</li>',
                            callbacks: callbacks,
                            limit: 5
                        })
                }
                ;
            bindAtTopic(),
                scope.$on("$destroy", function() {
                    var app = $(element).data("atwho");
                    app && (app.close(),
                        $(element).data("atwho", null ))
                })
        }
    }
}
]),
angular.module("app").service("AttachmentOperatingService", ["$rootScope", "$timeout", function($rootScope, $timeout) {
    var EDITABLE_FILE_REG = /\.(txt|md)$/
        , OFFICE_FILE_REG = /\.(doc|docx|dot|docm|dotm|dotx|ppt|pptx|ppsx|pps|pptm|potm|ppam|potx|ppsm|xls|xlsx|xlsb|xlsm)$/
        , IMAGE_REG = /\.(gif|png|jpeg|jpg)$/
        , PDF_REG = /\.(pdf)$/
        , editable = function(file) {
        return EDITABLE_FILE_REG.test(file.name)
    }
        , getFileType = function(file) {
        if (file && file.name) {
            var file_name = angular.isString(file) ? file : file.name.toLowerCase();
            if (IMAGE_REG.test(file_name))
                return "image";
            if (EDITABLE_FILE_REG.test(file_name))
                return "text";
            if (PDF_REG.test(file_name))
                return "pdf"
        }
        return "binary"
    }
        , editorType = function(file) {
        return /\.(md|markdown)$/.test(file.name) ? "md" : "txt"
    }
        , isPreviewable = function(file) {
        if (file && file.name) {
            var file_name = angular.isString(file) ? file : file.name.toLowerCase();
            return OFFICE_FILE_REG.test(file_name)
        }
        return !1
    }
        , eventMaker = function(event) {
        var un_arr = [];
        return {
            "do": function(data, timeout) {
                timeout ? $timeout(function() {
                    $rootScope.$broadcast(event, data)
                }, timeout) : $rootScope.$broadcast(event, data)
            },
            on: function(callback, timeout) {
                var un = $rootScope.$on(event, function(event, data) {
                    timeout ? $timeout(function() {
                        callback && callback(event, data)
                    }, timeout) : callback && callback(event, data)
                });
                un_arr.push(un)
            },
            remove: function() {
                angular.forEach(un_arr, function(un) {
                    un()
                }),
                    un_arr = []
            }
        }
    }
        , AttachmentEventMaker = function(event, view) {
        var event_key = "";
        return event_key = view ? event + "." + view : event,
            eventMaker(event_key)
    }
        , open_modal_key = "coding.preview.file.modal.open"
        , OpenPreviewModal = AttachmentEventMaker(open_modal_key)
        , close_modal_key = "coding.file.preview.modal.close"
        , ClosePreviewModal = AttachmentEventMaker(close_modal_key)
        , file_create_success_key = "coding.edit.file.create.success"
        , ModalFileCreateSuccess = AttachmentEventMaker(file_create_success_key, "modal")
        , DetailFileCreateSuccess = AttachmentEventMaker(file_create_success_key, "detail")
        , file_save_success_key = "coding.edit.file.save.success"
        , ModalFileSaveSuccess = AttachmentEventMaker(file_save_success_key, "modal")
        , DetailFileSaveSuccess = AttachmentEventMaker(file_save_success_key, "detail")
        , file_preview_error_key = "coding.preview.file.load.error"
        , ModalFileLoadFail = AttachmentEventMaker(file_preview_error_key, "modal")
        , DetailFileLoadFail = AttachmentEventMaker(file_preview_error_key, "detail")
        , file_edit_load_success_key = "coding.edit.file.load.success"
        , ModalFileEditLoadSuccess = AttachmentEventMaker(file_edit_load_success_key, "modal")
        , DetailFileEditLoadSuccess = AttachmentEventMaker(file_edit_load_success_key, "detail")
        , file_preview_load_success_key = "coding.preview.file.load.success"
        , ModalFilePreviewLoadSuccess = AttachmentEventMaker(file_preview_load_success_key, "modal")
        , DetailFilePreviewLoadSuccess = AttachmentEventMaker(file_preview_load_success_key, "detail")
        , file_delete_key = "coding.file.delete"
        , FileDeleteSuccess = AttachmentEventMaker(file_delete_key)
        , file_list_reload_key = "coding.file.list.reload"
        , FileListReloadSuccess = AttachmentEventMaker(file_list_reload_key)
        , file_preview_reload_key = "coding.preview.file.reload"
        , FilePreviewReloadSuccess = AttachmentEventMaker(file_preview_reload_key)
        , file_histories_reload_key = "coding.preview.file.histories.reload"
        , FileHistoriesReloadSuccess = AttachmentEventMaker(file_histories_reload_key)
        , file_preview_history_select_key = "coding.preview.file.history.select"
        , FilePreviewHistorySelect = AttachmentEventMaker(file_preview_history_select_key)
        , file_comment_key = "coding.preview.file.modal.comment"
        , FileCommentSuccess = AttachmentEventMaker(file_comment_key)
        , mode_switch_key = "coding.file.preview.modal.switch"
        , ModeSwitch = AttachmentEventMaker(mode_switch_key)
        , file_modified_key = "coding.edit.file.content.modified"
        , FileModifiedSuccess = AttachmentEventMaker(file_modified_key)
        , file_preiview_clear = "coding.preview.file.clear"
        , FilePreviewClear = AttachmentEventMaker(file_preiview_clear)
        , FileRenameSuccess = AttachmentEventMaker("coding.file.rename");
    return {
        doOpenPreviewModal: OpenPreviewModal["do"],
        doClosePreviewModal: ClosePreviewModal["do"],
        doModalFileCreateSuccess: ModalFileCreateSuccess["do"],
        doDetailFileCreateSuccess: DetailFileCreateSuccess["do"],
        doModalFileSaveSuccess: ModalFileSaveSuccess["do"],
        doDetailFileSaveSuccess: DetailFileSaveSuccess["do"],
        doModalFileLoadFail: ModalFileLoadFail["do"],
        doDetailFileLoadFail: DetailFileLoadFail["do"],
        doModalFileEditLoadSuccess: ModalFileEditLoadSuccess["do"],
        doDetailFileEditLoadSuccess: DetailFileEditLoadSuccess["do"],
        doModalFilePreviewLoadSuccess: ModalFilePreviewLoadSuccess["do"],
        doDetailFilePreviewLoadSuccess: DetailFilePreviewLoadSuccess["do"],
        doFileDeleteSuccess: FileDeleteSuccess["do"],
        doFileListReloadSuccess: FileListReloadSuccess["do"],
        doFilePreviewReloadSuccess: FilePreviewReloadSuccess["do"],
        doFileHistoriesReloadSuccess: FileHistoriesReloadSuccess["do"],
        doFilePreviewHistorySelect: FilePreviewHistorySelect["do"],
        doFileCommentSuccess: FileCommentSuccess["do"],
        doModeSwitch: ModeSwitch["do"],
        doFileModifiedSuccess: FileModifiedSuccess["do"],
        doFilePreviewClear: FilePreviewClear["do"],
        doFileRenameSuccess: FileRenameSuccess["do"],
        onOpenPreviewModal: OpenPreviewModal.on,
        onClosePreviewModal: ClosePreviewModal.on,
        onModalFileCreateSuccess: ModalFileCreateSuccess.on,
        onDetailFileCreateSuccess: DetailFileCreateSuccess.on,
        onModalFileSaveSuccess: ModalFileSaveSuccess.on,
        onDetailFileSaveSuccess: DetailFileSaveSuccess.on,
        onModalFileLoadFail: ModalFileLoadFail.on,
        onDetailFileLoadFail: DetailFileLoadFail.on,
        onModalFileEditLoadSuccess: ModalFileEditLoadSuccess.on,
        onDetailFileEditLoadSuccess: DetailFileEditLoadSuccess.on,
        onModalFilePreviewLoadSuccess: ModalFilePreviewLoadSuccess.on,
        onDetailFilePreviewLoadSuccess: DetailFilePreviewLoadSuccess.on,
        onFileDeleteSuccess: FileDeleteSuccess.on,
        onFileListReloadSuccess: FileListReloadSuccess.on,
        onFilePreviewReloadSuccess: FilePreviewReloadSuccess.on,
        onFileHistoriesReloadSuccess: FileHistoriesReloadSuccess.on,
        onFilePreviewHistorySelect: FilePreviewHistorySelect.on,
        onFileCommentSuccess: FileCommentSuccess.on,
        onModeSwitch: ModeSwitch.on,
        onFileModifiedSuccess: FileModifiedSuccess.on,
        onFilePreviewClear: FilePreviewClear.on,
        onFileRenameSuccess: FileRenameSuccess.on,
        removeOpenPreviewModal: OpenPreviewModal.remove,
        removeClosePreviewModal: ClosePreviewModal.remove,
        removeModalFileCreateSuccess: ModalFileCreateSuccess.remove,
        removeDetailFileCreateSuccess: DetailFileCreateSuccess.remove,
        removeModalFileSaveSuccess: ModalFileSaveSuccess.remove,
        removeDetailFileSaveSuccess: DetailFileSaveSuccess.remove,
        removeModalFileLoadFail: ModalFileLoadFail.remove,
        removeDetailFileLoadFail: DetailFileLoadFail.remove,
        removeModalFileEditLoadSuccess: ModalFileEditLoadSuccess.remove,
        removeDetailFileEditLoadSuccess: DetailFileEditLoadSuccess.remove,
        removeModalFilePreviewLoadSuccess: ModalFilePreviewLoadSuccess.remove,
        removeDetailFilePreviewLoadSuccess: DetailFilePreviewLoadSuccess.remove,
        removeFileDeleteSuccess: FileDeleteSuccess.remove,
        removeFileListReloadSuccess: FileListReloadSuccess.remove,
        removeFilePreviewReloadSuccess: FilePreviewReloadSuccess.remove,
        removeFileHistoriesReloadSuccess: FileHistoriesReloadSuccess.remove,
        removeFilePreviewHistorySelect: FilePreviewHistorySelect.remove,
        removeFileCommentSuccess: FileCommentSuccess.remove,
        removeModeSwitch: ModeSwitch.remove,
        removeFileModifiedSuccess: FileModifiedSuccess.remove,
        removeFilePreviewClear: FilePreviewClear.remove,
        getFileType: getFileType,
        editorType: editorType,
        editable: editable,
        isPreviewable: isPreviewable
    }
}
]),
angular.module("directives").directive("cgProjectFileCommentActivity", [function() {
    return {
        scope: {
            activity: "=cgProjectFileCommentActivity",
            project_id: "=cgProjectFileCommentProjectId",
            file_id: "=cgProjectFileCommentFileId",
            view: "=cgProjectFileCommentView",
            onRemove: "="
        },
        link: function(scope, element, attrs) {},
        templateUrl: "common/directives/attachment/comments/tpl/activity.html",
        controller: "ProjectFileCommentActivityController",
        replace: !0
    }
}
]).controller("ProjectFileCommentActivityController", ["$scope", "$rootScope", "$filter", "$location", "Common", "LightMdEditorService", "Attachment", "AttachmentOperatingService", "Setting", function($scope, $rootScope, $filter, $location, Common, LightMdEditorService, Attachment, AttachmentOperatingService, Setting) {
    $scope.activity.projectFileComment && ($scope.activity.projectFileComment.content = $filter("restyleMarkDownImage")($scope.activity.projectFileComment.content, 800, 800)),
        $scope.canRemove = function(owner, user) {
            return owner.global_key === user.global_key
        }
        ,
        $scope.doRemove = function() {
            var project_id = $scope.project_id
                , file_id = $scope.file_id;
            if (confirm("确认删除该评论？")) {
                var comment = $scope.activity.projectFileComment
                    , dcPromise = Attachment.deleteComment({
                    id: project_id,
                    file_id: file_id,
                    comment_id: comment.id
                });
                dcPromise.then(function() {
                    $scope.onRemove()
                })
            }
        }
        ,
        $scope.resolveType = function() {
            return "ProjectFile" === $scope.activity.target_type ? "action" : "comment"
        }
        ,
        $scope.getView = function() {
            return $scope.view ? "." + $scope.view : ".detail"
        }
        ,
        $scope.atPerson = function(comment) {
            var name = comment.owner.name;
            return "modal" == $scope.view ? void $rootScope.$broadcast("coding.preview.file.modal.comment", name) : void LightMdEditorService.atPerson(name, "project-file-detail-modal-editor")
        }
        ,
        $scope.activityClass = function() {
            var is_action = "ProjectFile" === $scope.activity.target_type;
            return {
                comment: !is_action,
                action: is_action
            }
        }
    ;
    var closeModal = function() {
            AttachmentOperatingService.doClosePreviewModal()
        }
        ;
    $scope.toSpace = function(user) {
        closeModal(),
            $location.path(user)
    }
        ,
        $scope.actionMsg = function() {
            var activity = $scope.activity
                , actions = {
                create: function() {
                    return "创建了文件"
                },
                update: function() {
                    return "更新了文件"
                },
                upload_file: function() {
                    return "上传了新版本"
                },
                delete_history: function() {
                    return "删除了版本"
                },
                "default": function() {
                    return activity.action_msg + "文件"
                }
            }
                , action = $scope.activity.action;
            return Common.smartSwitch(actions, action, activity)
        }
        ,
        $scope.downloadHistory = function(history_id) {
            var url = Setting.api_host + "/api/project/" + $scope.project_id + "/files/histories/" + history_id + "/download"
                , promise = Attachment.fileStatus({
                id: $scope.project_id,
                history_id: history_id
            });
            promise.then(function() {
                location.href = url
            })
        }
        ,
        $scope.actionIconClass = function() {
            var activity = $scope.activity
                , actions = {
                create: "add",
                update_file: "edit",
                upload_file: "cloud upload",
                "delete": "remove",
                finish: "checkmark",
                reassign: "user",
                restore: "circle blank",
                update_priority: "exclamation",
                update_deadline: "calendar",
                update_description: "rotate180 align right",
                delete_history: "remove",
                move_file: "folder"
            }
                , action = $scope.activity.action;
            return Common.smartSwitch(actions, action, activity)
        }
}
]),
angular.module("directives").directive("cgFileActivities", [function() {
    return {
        scope: {
            project: "=cgFileActivitiesProject",
            file_id: "=cgFileActivitiesFileId",
            view: "@cgFileActivitiesView",
            user: "=cgFileActivitiesUser",
            file: "=cgFileActivitiesFile"
        },
        templateUrl: function(element, attrs) {
            var view = attrs.cgFileActivitiesView ? "." + attrs.cgFileActivitiesView : ".detail";
            return "common/directives/attachment/fileActivities/tpl/activities" + view + ".html"
        },
        controller: "FileActivitiesController",
        restrict: "EA",
        replace: !0,
        link: function(scope, element, attr) {}
    }
}
]).controller("FileActivitiesController", ["$scope", "$rootScope", "Activity", "Attachment", "Common", "TextService", "BubbleCommentFormService", "AttachmentOperatingService", function($scope, $rootScope, Activity, Attachment, Common, TextService, BubbleCommentFormService, AttachmentOperatingService) {
    $scope.loading_activity = !1,
        $scope.eventIcon = function(activitiy) {
            return "add"
        }
        ,
        $scope.activities = [],
        $scope.$watch("file_id", function(file_id) {
            if (angular.isDefined(file_id) && angular.isDefined($scope.project)) {
                var project_id = $scope.project.id;
                loadActivities(project_id, file_id)
            }
        });
    var loadActivities = function(project_id, file_id, last_id) {
            var aPromise = Activity.project_file({
                project_id: project_id,
                file_id: file_id,
                last_id: last_id || 9999999
            });
            aPromise.then(function(result) {
                $scope.activities = Common.removeNullItem(result.data || [], "id"),
                "modal" === $scope.view && angular.forEach($scope.activities, function(activity) {
                    activity.projectFileComment && (activity.projectFileComment.content = TextService.text(activity.projectFileComment.content))
                })
            })
        }
        , onFileUpdate = function(event, file) {
            file && file.file_id === $scope.file_id && loadActivities($scope.project.id, $scope.file_id)
        }
        ;
    AttachmentOperatingService.onModalFileSaveSuccess(onFileUpdate),
        AttachmentOperatingService.onDetailFileSaveSuccess(onFileUpdate),
        AttachmentOperatingService.onFileHistoriesReloadSuccess(onFileUpdate),
        $scope.onRemove = function() {
            loadActivities($scope.project.id, $scope.file_id),
            $scope.file && $scope.file.activity_count && $scope.file.activity_count--
        }
        ,
        $scope.onComment = function(content) {
            var project_id = $scope.project.id
                , file_id = $scope.file_id
                , cPromise = Attachment.comment({
                id: project_id,
                file_id: file_id
            }, {
                content: content
            });
            return cPromise.then(function() {
                $scope.file && $scope.file.activity_count && $scope.file.activity_count++,
                    loadActivities($scope.project.id, $scope.file_id),
                "modal" == $scope.view && ($scope.content = "")
            }),
                cPromise
        }
        ,
        AttachmentOperatingService.onFileCommentSuccess(function(event, name) {
            var content = $scope.content;
            content = BubbleCommentFormService.atPerson(null , content, name),
                $scope.content = content,
                focus()
        });
    var focus = function() {
            $("#attachment-preview-modal-comment-textarea").focus()
        }
        ;
    $scope.$on("$destroy", function() {
        AttachmentOperatingService.removeFileCommentSuccess()
    })
}
]),
angular.module("directives").directive("cgFileEditor", [function() {
    return {
        scope: {
            project_id: "=cgFileEditorProjectId",
            file_id: "=cgFileEditorFileId",
            view: "@cgFileEditorView",
            editor_type: "=cgFileEditorType",
            mode: "=cgFileEditorMode",
            action: "=cgFileEditorAction"
        },
        templateUrl: "common/directives/attachment/tpl/editor.html",
        controller: "FileEditorController",
        restrict: "EA",
        link: function(scope, element, attr) {}
    }
}
]).controller("FileEditorController", ["$scope", "$rootScope", "Attachment", "Flash", "$routeParams", "AttachmentOperatingService", "$timeout", "$localStorage", "Common", function($scope, $rootScope, Attachment, Flash, $routeParams, AttachmentOperatingService, $timeout, $localStorage, Common) {
    $scope.current_file = {};
    var project_id = ($scope.file_id,
        $scope.project_id)
        , view = $scope.view
        , folder_id = $scope.folder_id = $routeParams.region || "default"
        , action = $scope.action || "edit"
        , creating = "create" === action
        , editing = "edit" === action
        , draft_id = 0
        , creating_draft_id = 0;
    $scope.fetch_draft_at = 0;
    var defaultToId = function(id) {
            return "default" === id ? 0 : id
        }
        ;
    $scope.$watch("file_id", function(file_id) {
        if (!isNaN(file_id) && editing) {
            var draft = $localStorage[getStorageId(project_id, file_id)];
            draft ? ($scope.current_file = angular.copy(draft),
                $scope.current_file.copy = angular.copy($scope.current_file)) : loadFile(project_id, file_id)
        }
    }),
        $scope.saveFile = function(file) {
            return file.readName ? file.content ? ($scope.file_saving = !0,
                void Attachment.create({
                    id: project_id,
                    dir: defaultToId(folder_id)
                }, {
                    name: file.readName + "." + $scope.editor_type,
                    content: file.content
                }, function() {
                    "modal" === view ? AttachmentOperatingService.doModalFileCreateSuccess(file) : AttachmentOperatingService.doDetailFileCreateSuccess(file),
                        deleteDraft(getStorageId(project_id))
                })["catch"](function() {
                    $scope.file_saving = !1
                })) : void Flash.fail().send("文档内容不能为空！") : void Flash.fail().send("文档名不能为空！")
        }
        ,
        $scope.suffix = function(name) {
            return name ? name.substring(name.lastIndexOf(".") + 1) : "???"
        }
        ,
        $scope.updateFile = function(file, event) {
            if (!$scope.file_saving) {
                if (!$localStorage[getStorageId(project_id, file.file_id)] && $scope.current_file.readName === $scope.current_file.copy.readName && $scope.current_file.content === $scope.current_file.copy.content)
                    return void $scope.doSwitch(event, "preview");
                var id = file.file_id;
                $scope.file_saving = !0;
                var aPromise = Attachment.edit({
                    id: project_id,
                    file: id
                }, {
                    name: file.readName + "." + file.fileType,
                    content: file.content
                }, function() {
                    "modal" == view ? AttachmentOperatingService.doModalFileSaveSuccess(file) : AttachmentOperatingService.doDetailFileSaveSuccess(file),
                        deleteDraft(getStorageId(project_id, $scope.current_file.file_id)),
                        $scope.current_file.copy.readName = $scope.current_file.readName,
                        $scope.current_file.copy.content = $scope.current_file.content,
                        $scope.current_file.copy.name = $scope.current_file.name
                });
                aPromise["finally"](function() {
                    $scope.file_saving = !1
                })
            }
        }
    ;
    var doSwitch = $scope.doSwitch = function(event, mode) {
            AttachmentOperatingService.doModeSwitch(mode),
                event.stopPropagation()
        }
        ;
    $scope.cancel = function() {
        (!showMsg() || confirm("本地草稿内容将会清空，确认离开？")) && deleteDraft(creating ? getStorageId(project_id) : getStorageId(project_id, $scope.current_file.file_id)),
            history.back()
    }
        ,
        $scope.cancelEditing = function(event, mode) {
            (!showMsg() || confirm("本地草稿内容将会清空，确认离开？")) && (deleteDraft(creating ? getStorageId(project_id) : getStorageId(project_id, $scope.current_file.file_id)),
                doSwitch(event, mode))
        }
    ;
    var loadFile = function(project_id, file_id, callback) {
            $scope.file_loading = !0,
                $scope.current_file = {};
            var promise = Attachment.view({
                id: project_id,
                file: file_id
            }, function(result) {
                $scope.file_loading = !1,
                    $scope.current_file = result.data.file,
                    $scope.current_file.content = result.data.content,
                    $scope.current_file.readName = $scope.current_file.name.substring(0, $scope.current_file.name.lastIndexOf(".")),
                    $scope.current_file.type = $scope.suffix($scope.current_file.name),
                    $scope.current_file.copy = angular.copy($scope.current_file),
                    $scope.office_preview = !1,
                $scope.preview_able && toggleOfficePreview($scope.current_file),
                callback && callback(file_id),
                    "modal" == view ? AttachmentOperatingService.doModalFileEditLoadSuccess($scope.current_file) : AttachmentOperatingService.doDetailFileEditLoadSuccess($scope.current_file)
            });
            return promise["catch"](function(error, result) {
                "modal" == view ? AttachmentOperatingService.doModalFileLoadFail(result) : AttachmentOperatingService.doDetailFileLoadFail(result)
            }),
                promise
        }
        , showMsg = function() {
            return creating && $localStorage[creating_draft_id] || editing && $localStorage[draft_id]
        }
        , autoSaveTips = function() {
            var msg = "当前修改已保存至本地草稿，请放心继续操作！"
                , prompt = function() {
                    return showMsg() ? msg : void 0
                }
                ;
            $(window).on("beforeunload", prompt),
                $scope.$on("$locationChangeStart", function(event, newUrl, oldUrl) {
                    var reg = /^([^#]*).*$/;
                    (-1 === newUrl.indexOf("#") && -1 === oldUrl.indexOf("#") || newUrl.replace(reg, "$1") !== oldUrl.replace(reg, "$1")) && showMsg() && (confirm("你的内容已经保存到本地，确认离开？") || event.preventDefault())
                }),
                $scope.$on("$routeChangeStart", function() {
                    $(window).off("beforeunload", prompt)
                })
        }
        ;
    autoSaveTips();
    var getStorageId = function(project_id, file_id) {
        return file_id ? "project-" + project_id + "-file-" + file_id : "project-" + project_id + "-file-" + $scope.editor_type
    }
        , deleteDraft = function(id) {
        saveDraft.cancel(),
            delete $localStorage[id]
    }
        , fileChanged = function(one, another) {
        return !another || one.name !== another.name || one.content !== another.content || one.readName !== another.readName
    }
        , draftHandler = angular.noop
        , saveDraft = _.debounce(function(id, file) {
        Common.safeApply.call($scope, function() {
            $scope.draft_saving_time = (new Date).getTime(),
                $localStorage[id] = {
                    draft_saving_time: $scope.draft_saving_time,
                    content: file.content,
                    name: file.name,
                    fileType: file.fileType,
                    readName: file.readName,
                    file_id: file.file_id
                }
        }),
            $timeout(function() {
                $scope.draft_saving_time = 0
            }, 3e3)
    }, 3e3);
    if (creating) {
        $timeout(function() {
            $("#attachment-create").find('input[name="title"]').focus()
        }, 100),
            creating_draft_id = getStorageId(project_id);
        var draft = $localStorage[creating_draft_id];
        draft && ($scope.current_file = angular.copy(draft),
            $scope.current_file.copy = angular.copy($scope.current_file),
            $scope.fetch_draft_at = draft.draft_saving_time,
            $scope.current_file.init = !0,
            $timeout(function() {
                $scope.fetch_draft_at = !1,
                    $scope.current_file.init = !1
            }, 3001)),
            draftHandler = function(file) {
                file && !file.init && (file.content || file.name) && saveDraft(creating_draft_id, file)
            }
    } else
        $timeout(function() {
            $("#attachment-create").find("textarea:first").focus()
        }, 100),
            draftHandler = function(file) {
                if (file.file_id) {
                    draft_id = getStorageId(project_id, file.file_id);
                    var draft = $localStorage[draft_id];
                    draft ? fileChanged(file, file.copy) || 0 !== $scope.fetch_draft_at ? fileChanged(file, file.copy) && saveDraft(draft_id, file) : (Common.safeApply.call($scope, function() {
                        file.content = draft.content,
                            file.name = draft.name,
                            file.readName = draft.readName,
                            $scope.fetch_draft_at = draft.draft_saving_time
                    }),
                        $timeout(function() {
                            $scope.fetch_draft_at = !1
                        }, 3e3)) : fileChanged(file, file.copy) && saveDraft(draft_id, file)
                }
            }
        ;
    var un = $scope.$watch("current_file.content", function() {
        angular.isDefined($scope.current_file) && ($scope.current_file.copy && fileChanged($scope.current_file, $scope.current_file.copy) && $rootScope.$broadcast("coding.edit.file.content.modified"),
            draftHandler($scope.current_file))
    });
    $scope.$on("$destroy", function() {
        un()
    })
}
]),
angular.module("directives").directive("cgFileHistories", [function() {
    return {
        scope: {
            project: "=cgFileHistoriesProject",
            file: "=cgFileHistoriesFile",
            view: "@cgFileHistoriesView"
        },
        templateUrl: function(element, attrs) {
            var view = attrs.cgFileHistoriesView ? "." + attrs.cgFileHistoriesView : ".detail";
            return "common/directives/attachment/fileHistories/tpl/histories" + view + ".html"
        },
        controller: "FileHistoriesController",
        restrict: "EA",
        replace: !0,
        link: function(scope, element, attr) {}
    }
}
]).controller("FileHistoriesController", ["$scope", "$rootScope", "$timeout", "Attachment", "AttachmentOperatingService", "Common", "Setting", "Flash", function($scope, $rootScope, $timeout, Attachment, AttachmentOperatingService, Common, Setting, Flash) {
    $scope.histories = [],
        $scope.loading_histories = !1,
        $scope.uploading = !1,
        $scope.editing = !1,
        $scope.deleting_history = void 0,
        $scope.USER = $rootScope.USER,
        $scope.upload = function(callback) {
            return $scope.uploading ? void 0 : "modal" == $scope.view ? void (callback && callback($("#file-modal-history-upload-zone"))) : void (callback && callback($("#file-history-upload-zone")))
        }
    ;
    var initUpload = function(project_id, file_id) {
        var upload_url = [Setting.api_host, "/api/project/", project_id, "/file/history/upload"].join("");
        $scope.projectFileHistoryZoneUploadSetting = {
            xhrFields: {
                withCredentials: !0
            },
            url: upload_url,
            formData: {
                file_id: file_id
            },
            pasteZone: null ,
            maxFileSize: 5e6,
            singleFileUploads: !1,
            add: function(e, data) {
                for (var i = 0; i < data.files.length; i++) {
                    var file = data.files[i];
                    if (file.size > 104857600)
                        return void Flash.fail().timeout(2e3).send("文件:" + file.name + " 大小超过100M!");
                    var current_file = $scope.file
                        , file_name_tokens = file.name.split(".")
                        , file_name_tokens1 = current_file.name.split(".")
                        , type = file_name_tokens1[file_name_tokens1.length - 1];
                    if (!(file_name_tokens.length > 1))
                        return void Flash.fail().timeout(2e3).send("上传文件类型有误！");
                    if (type !== file_name_tokens[file_name_tokens.length - 1])
                        return void Flash.fail().timeout(2e3).send("上传文件类型有误！")
                }
                Common.safeApply.call($scope, function() {
                    data.submit(),
                        $scope.uploading = !0
                })
            },
            done: function(e, data) {
                return "1309" == data.result.code ? (Flash.fail().send("上传文件类型错误"),
                    void Common.safeApply.call($scope, function() {
                        $scope.uploading = !1
                    })) : void Common.safeApply.call($scope, function() {
                    $scope.uploading = !1,
                        reloadHistories(!0)
                })
            },
            fail: function() {
                Common.safeApply.call($scope, function() {
                    $scope.uploading = !1,
                        Flash.fail().send("上传失败!")
                })
            },
            progress: function(e, data) {
                var progress = {
                    total: data.total,
                    loaded: data.loaded
                };
                Common.safeApply.call($scope, function() {
                    $scope.upload_progress = progress
                })
            }
        }
    }
        , focusAndSelectAll = function(selector) {
        var editor = $(selector).focus();
        editor[0].setSelectionRange(0, editor[0].value.length)
    }
        , removeFileWatcher = $scope.$watch("file", function(file) {
        if (angular.isDefined(file)) {
            var project_id = $scope.project.id
                , file_id = file.file_id;
            angular.isDefined(file_id) && loadHistories(project_id, file_id),
                initUpload(project_id, file_id)
        }
    });
    AttachmentOperatingService.onFileHistoriesReloadSuccess(function(event, data) {
        loadHistories(data.project_id, data.file_id)
    });
    var isCurrent = $scope.isCurrentHistory = function(history) {
            return $scope.file ? $scope.file.history_id ? $scope.file.history_id === history.history_id : $scope.file.storage_key === history.storage_key : !1
        }
        ;
    $scope.cancelDelete = function(history, event) {
        $scope.deleting_history = void 0,
            history.pre_delete = !1,
        event && event.stopPropagation && event.stopPropagation()
    }
        ,
        $scope.preDelete = function(history, event) {
            $scope.deleting_history = history,
                history.pre_delete = !0,
            event && event.stopPropagation && event.stopPropagation()
        }
        ,
        $scope.setRemarkEditable = function($event, history) {
            return history ? (Common.safeApply.call($scope, function() {
                history.editing = !0,
                    $scope.editing = !0
            }),
                $timeout(function() {
                    focusAndSelectAll("#file-history-remark-editor-" + history.history_id)
                }, 30),
                $event.preventDefault(),
                $event.stopPropagation(),
                !1) : void 0
        }
        ,
        $scope.updateRemark = function(history) {
            history.editing = !1;
            var project_id = $scope.project.id
                , file_id = $scope.file.file_id;
            if (history.remark !== history.copy.remark) {
                var aPromise = Attachment.updateRemark({
                    id: project_id,
                    file_id: file_id,
                    history_id: history.history_id
                }, {
                    remark: history.remark
                }, function() {
                    history.copy = angular.copy(history)
                });
                aPromise["catch"](function() {
                    history.remark = history.copy.remark
                }),
                    aPromise["finally"](function() {
                        history.editing = !1,
                            $scope.editing = !1
                    })
            }
        }
        ,
        $scope.deleteHistory = function(history) {
            if (!history.deleting) {
                history.deleting = !0;
                var aPromise = Attachment.deleteHistory({
                    id: $scope.project.id,
                    history_id: history.history_id
                });
                aPromise.then(function() {
                    $scope.file.history_count--,
                        $scope.file.activity_count++,
                        $scope.deleting_history = void 0,
                        Flash.success().send("删除成功"),
                        $scope.histories = Common.removeOfId($scope.histories, history.history_id, "history_id")
                }),
                    aPromise["catch"](function() {
                        history.deleting = !1
                    })
            }
        }
        ,
        $scope.downloadHistory = function(history) {
            location.href = Setting.api_host + "/api/project/" + $scope.project.id + "/files/histories/" + history.history_id + "/download"
        }
    ;
    var reloadHistories = function(reload_file) {
            var project_id = $scope.project.id
                , file_id = $scope.file.file_id;
            project_id && file_id && (loadHistories(project_id, file_id),
            reload_file && AttachmentOperatingService.doFilePreviewReloadSuccess(file_id))
        }
        , loadHistories = function(project_id, file_id) {
            $scope.loading_histories = !0;
            var aPromise = Attachment.histories({
                id: project_id,
                file_id: file_id
            });
            aPromise.then(function(result) {
                var result_arr = result.data || [];
                angular.forEach(result_arr, function(history) {
                    history.copy = angular.copy(history)
                }),
                    $scope.histories = result_arr
            }),
                aPromise["finally"](function() {
                    $scope.loading_histories = !1
                })
        }
        ;
    $scope.onRemove = function() {
        loadHistories($scope.project.id, $scope.file_id)
    }
        ,
        $scope.selectHistory = function(history) {
            if (!isCurrent(history)) {
                var data = {
                    history_id: history.history_id,
                    view: $scope.view
                };
                AttachmentOperatingService.doFilePreviewHistorySelect(data)
            }
        }
        ,
        $scope.$on("$destroy", function() {
            removeFileWatcher(),
                AttachmentOperatingService.removeFilePreviewHistorySelect(),
                AttachmentOperatingService.removeFileHistoriesReloadSuccess()
        }),
        $scope.$on("attachmentPreviewModalClosed", function(e) {
            $scope.deleting_history = void 0
        })
}
]),
angular.module("directives").directive("cgFilePreviewer", [function() {
    return {
        scope: {
            project_id: "=cgFilePreviewerProjectId",
            file_id: "=cgFilePreviewerFileId",
            view: "@cgFilePreviewerView"
        },
        templateUrl: "common/directives/attachment/tpl/previewer.html",
        controller: "FilePreviewerController",
        restrict: "EA",
        replace: !0,
        link: function(scope, element, attr) {}
    }
}
]).controller("FilePreviewerController", ["$scope", "$rootScope", "$timeout", "Attachment", "Markdown", "Setting", "AttachmentOperatingService", function($scope, $rootScope, $timeout, Attachment, Markdown, Setting, AttachmentOperatingService) {
    $scope.current_file = {},
        $scope.file_loading = !0;
    var view = ($scope.file_id,
        $scope.view);
    $scope.pdf_preview = !1,
        $scope.pdf_preview_loading = !1,
        $scope.pdf_preview_loaded = !1,
        $scope.pdf_preview_page = 1,
        $scope.pdf_resize = "small",
        $scope.pdf_fullscreen_height = 0,
        $scope.office_preview = !0,
        $scope.preview_able = !1,
        $scope.office_preview_loading = !1,
        $scope.markdown_preview = !1,
        $scope.image_previewing = !1,
        $scope.screenfull_enabled = screenfull.enabled,
    screenfull.enabled && document.addEventListener(screenfull.raw.fullscreenchange, function() {
        $scope.pdf_resize = screenfull.isFullscreen ? "full" : "small",
            screenfull.isFullscreen ? $scope.pdf_fullscreen_height = "100%" : $scope.pdf_fullscreen_height = 0
    }),
        $scope.getFileType = function(file) {
            return AttachmentOperatingService.getFileType(file)
        }
        ,
        $scope.suffix = function(name) {
            return name ? name.substring(name.lastIndexOf(".") + 1) : "???"
        }
    ;
    var pdf_caches = {};
    $scope.loadPdf = function(page, event) {
        var file_id = $scope.file_id;
        if (!$scope.pdf_preview_loading) {
            $scope.pdf_preview_page = page || 1;
            var region = pdf_caches[file_id];
            region || (region = pdf_caches[file_id] = []);
            var cur = region[page];
            if (cur)
                return void ($scope.pdf_preview = cur);
            $scope.pdf_preview_loading = !0,
                Attachment.pdf({
                    id: $scope.project_id,
                    file: file_id,
                    page: page || 1
                }, function(result) {
                    $scope.pdf_preview_loading = !1,
                        $scope.pdf_preview = result.data,
                        $scope.pdf_preview_loaded = !0,
                        region[page] = angular.copy($scope.pdf_preview)
                })["catch"](function() {
                    $scope.pdf_preview_loading = !1
                }),
            event && event.preventDefault && event.preventDefault(),
            event && event.stopPropagation && event.stopPropagation()
        }
    }
        ,
        $scope.togglePdfResize = function() {
            $scope.pdf_resize = "full" === $scope.pdf_resize ? "small" : "full";
            var target = $("#pdf-preview")[0];
            "full" == $scope.pdf_resize ? ($scope.pdf_fullscreen_height = "100%",
                screenfull.request(target)) : ($scope.pdf_fullscreen_height = 0,
            screenfull.enabled && screenfull.toggle(target))
        }
    ;
    var isPreviewable = $scope.isPreviewable = function(file) {
            return AttachmentOperatingService.isPreviewable(file)
        }
        , toggleOfficePreview = $scope.toggleOfficePreview = function(file) {
            if (!$scope.office_preview_loading) {
                if ($scope.office_preview)
                    return $("#office_preview").attr("src", ""),
                        void ($scope.office_preview = !1);
                if ($scope.office_preview_loading = !0,
                        isPreviewable(file)) {
                    var aPromise = Attachment.download_url({
                        id: $scope.project_id,
                        file_id: $scope.file_id
                    });
                    aPromise.then(function(result) {
                        var preview_url = "https://view.officeapps.live.com/op/view.aspx?src=" + encodeURIComponent(result.data.download_url);
                        $("#office_preview").attr("src", preview_url),
                            $scope.office_preview = !0
                    }),
                        aPromise["finally"](function() {
                            $scope.office_preview_loading = !1
                        })
                }
            }
        }
        , loadMarkdownPreview = function(content) {
            $scope.markdown_preview = "",
                Markdown.preview({
                    toc: !0
                }, {
                    content: content
                }).then(function(result) {
                    $scope.markdown_preview = result.data || ""
                })
        }
        , loadFile = function(project_id, file_id, callback) {
            $scope.file_loading = !0,
                $scope.current_file = {};
            var promise = Attachment.view({
                id: project_id,
                file: file_id
            }, function(result) {
                $scope.file_loading = !1,
                    $scope.current_file = result.data.file,
                    $scope.current_file.content = result.data.content,
                    $scope.current_file.readName = $scope.current_file.name.substring(0, $scope.current_file.name.lastIndexOf(".")),
                    $scope.current_file.type = $scope.suffix($scope.current_file.name),
                    $scope.current_file.activity_count = result.data.activity_count,
                    $scope.current_file.history_count = result.data.history_count,
                    $scope.current_file.share = result.data.share,
                    $scope.current_file.copy = angular.copy($scope.current_file),
                    $scope.preview_able = isPreviewable($scope.current_file),
                    $scope.office_preview = !1,
                $scope.preview_able && toggleOfficePreview($scope.current_file),
                callback && callback(file_id),
                    "modal" == view ? AttachmentOperatingService.doModalFilePreviewLoadSuccess($scope.current_file) : AttachmentOperatingService.doDetailFilePreviewLoadSuccess($scope.current_file)
            });
            return promise["catch"](function(error, result) {
                "modal" == view ? AttachmentOperatingService.doModalFileLoadFail(result) : AttachmentOperatingService.doDetailFileLoadFail(result)
            }),
                promise
        }
        , loadPreviewFile = function(project_id, file_id) {
            $scope.image_previewing = !0,
                loadFile(project_id, file_id, function() {
                    var cur = $scope.current_file
                        , ft = $scope.getFileType(cur);
                    "pdf" === ft ? $scope.loadPdf() : "md" === cur.fileType && ($scope.makdown_preview = "",
                        loadMarkdownPreview(cur.content)),
                    "image" === ft && loadImageInfo($scope.current_file),
                        $scope.image_previewing = !1
                })
        }
        , loadImageInfo = function(file) {
            file.image_info_url && $.get(file.image_info_url, function(result) {
                file.image_width = result.width,
                    file.image_height = result.height
            })
        }
        , loadHistory = function(project_id, history_id, callback) {
            $scope.file_loading = !0;
            var promise = Attachment.view_history({
                id: project_id,
                history_id: history_id
            });
            promise.then(function(result) {
                $scope.file_loading = !1,
                    $scope.current_file.storage_key = result.data.file.storage_key,
                    $scope.current_file.history_id = result.data.file.history_id,
                    $scope.current_file.owner_preview = result.data.file.owner_preview,
                    $scope.current_file.content = result.data.content,
                    $scope.current_file.name = result.data.file.name,
                    $scope.current_file.type = $scope.suffix($scope.current_file.name),
                    $scope.preview_able = isPreviewable($scope.current_file),
                    $scope.office_preview = !1,
                $scope.preview_able && toggleOfficePreview($scope.current_file),
                callback && callback()
            })
        }
        , loadPreviewHistory = function(project_id, history_id) {
            loadHistory(project_id, history_id, function() {
                var cur = $scope.current_file
                    , ft = $scope.getFileType(cur);
                "pdf" === ft ? $scope.loadPdf() : "md" === cur.fileType && ($scope.makdown_preview = "",
                    loadMarkdownPreview(cur.content))
            })
        }
        ;
    $scope.downloadFile = function() {
        location.href = Setting.api_host + "/api/project/" + $scope.project_id + "/files/" + $scope.file_id + "/download"
    }
        ,
        $scope.onPdfNavChange = function(event) {
            $timeout(function() {
                $("#pdf-preview .button." + event).trigger("click")
            })
        }
        ,
        $scope.$watch("file_id", function(file_id) {
            angular.isDefined($scope.project_id) && angular.isDefined(file_id) && loadPreviewFile($scope.project_id, file_id)
        }),
        AttachmentOperatingService.onFilePreviewReloadSuccess(function(event, file_id) {
            file_id && loadPreviewFile($scope.project_id, file_id)
        }),
        AttachmentOperatingService.onFilePreviewHistorySelect(function(event, data) {
            !data.view || data.view && $scope.view !== data.view || loadPreviewHistory($scope.project_id, data.history_id)
        }),
        $scope.$on("$destroy", function() {
            AttachmentOperatingService.removeFilePreviewHistorySelect(),
                AttachmentOperatingService.removeFilePreviewReloadSuccess()
        })
}
]),
angular.module("directives").directive("cgFileToolbar", function() {
    return {
        scope: {
            file: "=cgFileToolbarFile",
            project: "=cgFileToolbarProject",
            folder_id: "=cgFileToolbarFolderId"
        },
        link: function(scope, element, attr) {},
        templateUrl: "common/directives/attachment/tpl/toolbar.html",
        controller: "FileToolbarController",
        restrict: "EA",
        replace: !0
    }
}).controller("FileToolbarController", ["$scope", "$rootScope", "$location", "$timeout", "$compile", "Setting", "AttachmentOperatingService", function($scope, $rootScope, $location, $timeout, $compile, Setting, AttachmentOperatingService) {
    var closeModal = function() {
            AttachmentOperatingService.doClosePreviewModal()
        }
        , resetPopup = function() {
            $timeout(function() {
                var $image_info = $("#file-info-modal-tpl .file_info_word.file-image-info");
                $scope.file.image_width && $scope.file.image_height ? ($image_info.css("display", "table-row"),
                    $image_info.find(".file-info-right").text($scope.file.image_width + " * " + $scope.file.image_height)) : $image_info.css("display", "none"),
                    $(".project-file-tool-bar .preview-modal.info.icon").data("html", $("#file-info-modal-tpl").html())
            }, 300)
        }
        ;
    $scope.USER = $rootScope.USER,
        $scope.downloadFile = function(file, project_id) {
            "edit" != $scope.mode && (location.href = Setting.api_host + "/api/project/" + project_id + "/files/" + file.file_id + "/download")
        }
        ,
        $scope.toDetail = function(project, file_id, folder_id) {
            if ("edit" != $scope.mode) {
                var url = [project.project_path, "/attachment/", folder_id ? folder_id : "default", "/preview", file_id ? "/" + file_id : ""].join("");
                $location.path(url),
                    closeModal()
            }
        }
        ,
        $scope["delete"] = function() {
            AttachmentOperatingService.doFileDeleteSuccess($scope.file)
        }
        ,
        $scope.$watch("file", function(file) {
            angular.isDefined(file) && ($scope.file_modified = !1,
                $scope.share = file.share,
                resetPopup())
        }),
        $scope.doSwitch = function(event, mode) {
            $scope.file_modified || (AttachmentOperatingService.doModeSwitch(mode),
                event.stopPropagation())
        }
        ,
        AttachmentOperatingService.onModeSwitch(function(event, mode) {
            $scope.mode = mode
        }),
        AttachmentOperatingService.onFileModifiedSuccess(function() {
            $scope.file_modified = !0
        }),
        $scope.$on("$destroy", function() {
            AttachmentOperatingService.removeModeSwitch(),
                AttachmentOperatingService.removeFileModifiedSuccess()
        })
}
]),
angular.module("app").config(["$routeProvider", "$locationProvider", "UserResolver", "ProjectResolver", function($routeProvider, $locationProvider, UserResolver, ProjectResolver) {
    $routeProvider.when("/test/attachment", {
        templateUrl: "common/directives/attachment/tpl/example.html",
        controller: function() {}
    })
}
]),
angular.module("directives").directive("cgAutoFocus", ["$timeout", "$parse", function($timeout, $parse) {
    return {
        scope: {
            focus: "=cgAutoFocus",
            select_text: "=selectText"
        },
        link: function(scope, element) {
            var focus = scope.focus;
            angular.isDefined(focus) ? (scope.$watch("focus", function(focus) {
                angular.isDefined(focus) && focus === !0 && $timeout(function() {
                    var el = element[0];
                    el.focus(),
                    scope.select_text && el.setSelection && el.setSelection(0, el.value.length)
                }, 200)
            }, !0),
                element.on("blur", function() {
                    angular.isDefined(focus) && $timeout(function() {
                        $parse(focus).assign(scope, !1)
                    }, 200)
                })) : $timeout(function() {
                element[0].focus()
            }, 200)
        }
    }
}
]),
angular.module("directives").directive("cgBubble", ["$filter", function($filter) {
    return {
        scope: {
            tweet: "=cgBubble",
            onRemove: "=",
            hideAvatar: "="
        },
        link: function(scope) {
            scope.tweet_content = $filter("restyleMarkDownImage")(scope.tweet.content),
                scope.tweet_content = $filter("restyleEmoji")(scope.tweet_content)
        },
        templateUrl: "common/directives/bubble/tpl/bubble.html",
        controller: "BubbleController",
        transclude: !0,
        replace: !0
    }
}
]).controller("BubbleController", ["$scope", "Tweet", "Payment", "BubbleService", "$rootScope", "Common", "Flash", "$location", "$sce", "$window", function($scope, Tweet, Payment, BubbleService, $rootScope, Common, Flash, $location, $sce, $window) {
    var removeTweetWatcher = $scope.$watch("tweet", function(tweet) {
        if (tweet && tweet.owner) {
            if ($scope.tweet.owner.avatar = Common.thumbnail(tweet.owner.avatar, 84),
                tweet && tweet.location) {
                var locations = tweet.location.split("·");
                if (1 === locations.length)
                    $scope.tweet.location = locations[0];
                else {
                    var new_location = "";
                    angular.forEach(locations, function(location) {
                        new_location += location + " · "
                    }),
                        new_location = new_location.substring(0, new_location.length - 3),
                        $scope.tweet.location = new_location
                }
            }
            BubbleService.thumbnailLikeUsers(tweet.like_users),
                removeTweetWatcher()
        }
    })
        , USER = $rootScope.USER;
    $scope.liking = !1,
        $scope.liked = !1,
        $scope.like_show_limit = 10,
        $scope.like_opt_done = !1,
        $scope.user = $scope.user || {},
        this.toggleLike = $scope.toggleLike = function(tweet) {
            if (!$scope.liking) {
                $scope.liking = !0,
                    $scope.like_opt_done = !1;
                var onSuccess = {
                    like: function() {
                        tweet.liked = !0,
                            tweet.likes++,
                        Common.findOfId(tweet.reward_users, USER.global_key, "global_key") || tweet.like_users.push(BubbleService.buildLikeUser(USER)),
                            $scope.like_opt_done = !0
                    },
                    un_like: function() {
                        tweet.liked = !1,
                            tweet.likes--,
                            tweet.like_users = Common.removeOfId(tweet.like_users, USER.global_key, "global_key"),
                            $scope.like_opt_done = !1
                    }
                }
                    , onFail = {
                    like: onSuccess.un_like,
                    un_like: onSuccess.like
                }
                    , likeHandler = tweet.liked ? "un_like" : "like"
                    , lPromise = Tweet[likeHandler]({
                    id: tweet.id
                }, {});
                onSuccess[likeHandler](),
                    lPromise["catch"](onFail[likeHandler]),
                    lPromise["finally"](function() {
                        $scope.liking = !1
                    })
            }
        }
        ,
        $scope.rewardTip = function(tweet) {
            return tweet.rewarded ? "您已打赏过了" : "打赏给该用户"
        }
        ,
        $scope.showTip = function(tweet) {
            tweet.owner_id !== USER.id && (tweet.showTweetTip = !0)
        }
        ,
        $scope.hideTip = function(tweet) {
            tweet.showTweetTip = !1
        }
        ,
        this.reward = $scope.reward = function(tweet, $event) {
            $event && $event.preventDefault();
            var password = $scope.user.password || "";
            if ($scope.need_password) {
                if (password.length > 64 || password.length < 6)
                    return void Flash.fail().send("密码长度为6~64位哦");
                var encodedPassword = SHA1(password)
                    , rewardPromise = Tweet.reward({
                    tweet_id: tweet.id
                }, {
                    encodedPassword: encodedPassword
                })
            } else
                var rewardPromise = Tweet.reward({
                    tweet_id: tweet.id
                }, {});
            return rewardPromise.then(function(result) {
                _.isEmpty(result.data) ? (Flash.hide(),
                    Flash.success().send("打赏成功！"),
                _.isEmpty(tweet.reward_users) && (tweet.reward_users = []),
                    tweet.reward_users.push(BubbleService.buildLikeUser(USER)),
                    tweet.like_users = Common.removeOfId(tweet.like_users, USER.global_key, "global_key"),
                    $("#tweet-reward-modal").modal("hide"),
                    tweet.rewards = (tweet.rewards || 0) + 1,
                    tweet.rewarded = !0) : $scope.errorMessages = _.map(result.data, function(val) {
                    return $sce.trustAsHtml(val)
                })
            }),
                !1
        }
        ,
        this.prepareReward = $scope.prepareReward = function(tweet) {
            if (tweet.owner_id === USER.id)
                return void Flash.warn().send("不可以打赏自己哟！");
            if (tweet.rewarded)
                return void Flash.warn().send("已经打赏过了哦");
            if ($scope.user.password = "",
                    _.include(["/pp", "/pp/", "/pp/hot", "/pp/friends", "/pp/time", "/u/" + tweet.owner.global_key + "/bubble"], $location.$$path))
                return void $window.open("/u/" + tweet.owner.global_key + "/pp/" + tweet.id + "?tweet=true");
            $scope.errorMessages = [];
            var paymentPromise, validatePromise = Tweet.prepareReward({
                tweet_id: tweet.id
            });
            validatePromise.then(function(result) {
                $scope.need_password = result.data.need_password,
                    paymentPromise = Payment.exchange_balance(),
                    paymentPromise.then(function(result) {
                        $scope.user.points_left = result.data.point_left,
                            $("#tweet-reward-modal").modal("show")
                    }),
                _.isEmpty(result.data.error_msg) || ($scope.errorMessages = _.map(result.data.error_msg, function(val) {
                    return $sce.trustAsHtml(val)
                })),
                    paymentPromise["catch"](function() {})
            })
        }
        ,
        $scope.canRemove = function() {
            return USER && USER.id === $scope.tweet.owner_id && !!$scope.onRemove
        }
        ,
        $scope.doRemove = function() {
            if (confirm("确认删除该泡泡？")) {
                var dtPromise = Tweet["delete"]({
                    tweet_id: $scope.tweet.id
                });
                dtPromise.then(function() {
                    Common.safeApply.call($scope, function() {
                        $scope.onRemove($scope.tweet)
                    })
                })
            }
        }
        ,
        $scope.showMoreLikesAndRewards = function(tweet) {
            return tweet.likes + tweet.rewards > $scope.like_show_limit
        }
        ,
        $scope.showAllLikesAndRewards = function(tweet) {
            $scope.like_show_limit = tweet.likes + tweet.rewards,
                $scope.loading_likes = !0;
            var lPromise = Tweet.allLikesAndRewards({
                id: tweet.id,
                pageSize: 5e3
            });
            lPromise.then(function(result) {
                tweet.like_users = result.data && result.data.likeUsers || tweet.like_users,
                    tweet.reward_users = result.data && result.data.rewardUsers || tweet.reward_users
            }),
                lPromise["finally"](function() {
                    $scope.loading_likes = !1
                })
        }
        ,
        this.addComment = function() {
            $scope.tweet.comments++
        }
        ,
        this.removeComment = function() {
            $scope.tweet.comments--
        }
        ,
    $location.search().tweet && this.prepareReward($scope.tweet)
}
]).service("BubbleService", ["Common", function(Common) {
    var buildLikeUser = function(user) {
            return {
                avatar: Common.thumbnail(user.avatar, 36),
                path: user.path,
                name: user.name,
                global_key: user.global_key
            }
        }
        , thumbnailLikeUsers = function(users, size) {
            angular.forEach(users, function(user) {
                user.avatar = Common.thumbnail(user.avatar, size || 36)
            })
        }
        , thumbnailCommentUser = function(comments, size) {
            return !angular.isArray(comments) && comments ? void (comments.owner.avatar = Common.thumbnail(comments.owner.avatar, size || 60)) : void angular.forEach(comments, function(comment) {
                comment.owner.avatar = Common.thumbnail(comment.owner.avatar, size || 60)
            })
        }
        ;
    return {
        buildLikeUser: buildLikeUser,
        thumbnailLikeUsers: thumbnailLikeUsers,
        thumbnailCommentUser: thumbnailCommentUser
    }
}
]),
angular.module("directives").directive("cgBubbleComment", [function() {
    return {
        require: "?^cgBubble",
        scope: {
            tweet: "=cgBubbleComment"
        },
        link: function(scope, element, attrs, BCtrls) {
            var BCtrl = _.find(BCtrls, function(s) {
                return s
            });
            scope.decreaseCount = function() {
                BCtrl.removeComment()
            }
                ,
                scope.increaseCount = function() {
                    BCtrl.addComment()
                }
        },
        templateUrl: "common/directives/bubble/tpl/bubble_comment.html",
        controller: "BubbleCommentController",
        replace: !0
    }
}
]).controller("BubbleCommentController", ["$scope", "Tweet", "BubbleCommentFormService", "BubbleService", function($scope, Tweet, bcfService, bService) {
    $scope.comments = $scope.tweet.comment_list = $scope.tweet.comment_list || [],
        bService.thumbnailCommentUser($scope.comments),
        $scope.tweet_id = $scope.tweet.id,
        $scope.loading_all = !1,
        $scope.loaded = !1,
        $scope.canRemove = function(comment, user) {
            return user && comment.owner_id === user.id
        }
        ,
        $scope.doRemove = function(comment) {
            if (confirm("确认删除该评论？")) {
                comment.removing = !0;
                var dcPromise = Tweet.delete_comment({
                    id: comment.tweet_id,
                    comment: comment.id
                });
                dcPromise.then(function() {
                    var index = $scope.comments.indexOf(comment);
                    $scope.comments.splice(index, 1),
                        $scope.decreaseCount()
                }),
                    dcPromise["finally"](function() {
                        comment.removing = !1
                    })
            }
        }
        ,
        $scope.insertCommentName = function(comment) {
            bcfService.insertComment(comment)
        }
        ,
        $scope.canShowMore = function() {
            return $scope.comments.length < $scope.tweet.comments
        }
        ,
        $scope.showAllComments = function() {
            if (!$scope.loaded) {
                var cPromise = Tweet.comments({
                    id: $scope.tweet.id,
                    page: 1,
                    pageSize: 500
                });
                $scope.loading_all = !0,
                    cPromise.then(function(result) {
                        result && result.data && ($scope.comments = result.data.list,
                            $scope.tweet.comments = result.data.totalRow,
                            $scope.loaded = !0)
                    }),
                    cPromise["finally"](function() {
                        $scope.loading_all = !1
                    })
            }
        }
        ,
        bcfService.onComment($scope.tweet_id, function(event, comment) {
            $scope.comments.splice(0, 0, comment),
                $scope.increaseCount()
        })
}
]),
angular.module("directives").directive("cgBubbleCommentForm", ["$rootScope", function($rootScope) {
    return {
        require: ["?^cgBubble", "?^cgBubble"],
        scope: {
            tweet: "=cgBubbleCommentForm"
        },
        link: function(scope, element, attrs, BCtrls) {
            var BCtrl = _.find(BCtrls, function(s) {
                return s
            })
                , input = element.find("input,textarea");
            scope.focusInput = function(selection) {
                input.focus()
            }
                ,
                scope.selection = function() {
                    return {
                        start: input[0].selectionStart,
                        end: input[0].selectionEnd
                    }
                }
                ,
                scope.toggleLike = function(content) {
                    (scope.tweet.liked && content.match(/(\:\-1\:)|(\:thumbsdown\:)/g) || !scope.tweet.liked && content.match(/(\:\+1\:)|(\:thumbsup\:)/g)) && BCtrl.toggleLike(scope.tweet)
                }
        },
        templateUrl: $rootScope.isExpActive("tweet_comment_emoji") ? "common/directives/bubble/tpl/bubble_comment_form.html" : "common/directives/bubble/tpl/bubble_comment_form2.html",
        controller: "BubbleCommentFormController",
        replace: !0
    }
}
]).controller("BubbleCommentFormController", ["$scope", "$localStorage", "BubbleCommentFormService", "Tweet", "$rootScope", "BubbleService", function($scope, $localStorage, bcfService, Tweet, $rootScope, BubbleService) {
    $scope.content = "",
        $scope.sending = !1;
    var cache_id = null
        , removeTweetWatcher = $scope.$watch("tweet", function(tweet) {
        angular.isDefined(tweet) && (cache_id = "message_" + tweet.id,
            $scope.content = $localStorage[cache_id],
        removeTweetWatcher && removeTweetWatcher())
    });
    $scope.doComment = function() {
        if (!$scope.sending) {
            $scope.sending = !0;
            var cPromise = Tweet.comment({
                id: $scope.tweet.id
            }, {
                content: $scope.content
            });
            cPromise.then(function(result) {
                var comment = result.data;
                comment.owner = $rootScope.USER,
                    BubbleService.thumbnailCommentUser(comment),
                    bcfService.doComment($scope.tweet.id, comment),
                    $scope.toggleLike($scope.content),
                    $scope.content = "",
                    delete $localStorage[cache_id]
            }),
                cPromise["finally"](function() {
                    $scope.sending = !1
                })
        }
    }
        ,
        bcfService.onCommentNameInsert($scope.tweet.id, function(event, name) {
            var selection = $scope.selection();
            $scope.content = bcfService.atPerson(selection, $scope.content, name),
                $scope.focusInput(selection)
        })
}
]).service("BubbleCommentFormService", ["$rootScope", function($rootScope) {
    var onCommentNameInsert = function(tweet_id, callback) {
            $rootScope.$on("bubble.comment." + tweet_id + ".insert.name", callback)
        }
        , insertCommentName = function(comment) {
            $rootScope.$broadcast("bubble.comment." + comment.tweet_id + ".insert.name", comment.owner.name)
        }
        , doComment = function(tweet_id, comment) {
            $rootScope.$broadcast("bubble.comment." + tweet_id + ".insert", comment)
        }
        , onComment = function(tweet_id, callback) {
            $rootScope.$on("bubble.comment." + tweet_id + ".insert", callback);
        }
        , atPerson = function(selection, content, name) {
            if (!content || 0 === content.length)
                return "@" + name + " ";
            var reg = new RegExp("@" + name + "\\s","g")
                , matches = content.match(reg);
            return matches && 0 !== matches.length || (content += ", @" + name + " "),
                content
        }
        ;
    return {
        onCommentNameInsert: onCommentNameInsert,
        insertComment: insertCommentName,
        doComment: doComment,
        onComment: onComment,
        atPerson: atPerson
    }
}
]),
angular.module("directives").directive("cgCascadingAddress", [function() {
    return {
        restrict: "E",
        scope: {
            province: "=province",
            city: "=city",
            model: "=ngModel"
        },
        replace: !0,
        templateUrl: "common/directives/casacadingAddress/tpl/city.html",
        link: function(scope, elment, attrs) {
            scope.change = !1,
                scope.set = {
                    province: function(p) {
                        scope.province = p,
                            scope.city = ""
                    },
                    city: function(c) {
                        scope.city = c
                    }
                },
                scope.clear = function() {
                    "" !== scope.province && (scope.change = !0),
                        scope.province = "",
                        scope.city = ""
                }
                ,
                scope.open = function(action) {
                    "show" === action ? scope.show = !0 : scope.show = !1
                }
                ,
                scope.$watch("province", function(newValue) {
                    if (newValue) {
                        var result = scope.provinces.filter(function(v) {
                            return v.p === newValue
                        });
                        scope.cities = result[0].c,
                            scope.change = !0
                    } else
                        scope.cities = []
                }),
                scope.$watch(function() {
                    var address = scope.province + " " + scope.city;
                    scope.change && (scope.model = address.replace(/undefined *|   /g, ""))
                }),
                scope.provinces = [{
                    p: "北京",
                    c: [{
                        n: "东城区"
                    }, {
                        n: "西城区"
                    }, {
                        n: "崇文区"
                    }, {
                        n: "宣武区"
                    }, {
                        n: "朝阳区"
                    }, {
                        n: "丰台区"
                    }, {
                        n: "石景山区"
                    }, {
                        n: "海淀区"
                    }, {
                        n: "门头沟区"
                    }, {
                        n: "房山区"
                    }, {
                        n: "通州区"
                    }, {
                        n: "顺义区"
                    }, {
                        n: "昌平区"
                    }, {
                        n: "大兴区"
                    }, {
                        n: "平谷区"
                    }, {
                        n: "怀柔区"
                    }, {
                        n: "密云县"
                    }, {
                        n: "延庆县"
                    }]
                }, {
                    p: "天津",
                    c: [{
                        n: "和平区"
                    }, {
                        n: "河东区"
                    }, {
                        n: "河西区"
                    }, {
                        n: "南开区"
                    }, {
                        n: "河北区"
                    }, {
                        n: "红挢区"
                    }, {
                        n: "滨海新区"
                    }, {
                        n: "东丽区"
                    }, {
                        n: "西青区"
                    }, {
                        n: "津南区"
                    }, {
                        n: "北辰区"
                    }, {
                        n: "宁河区"
                    }, {
                        n: "武清区"
                    }, {
                        n: "静海县"
                    }, {
                        n: "宝坻区"
                    }, {
                        n: "蓟县"
                    }]
                }, {
                    p: "河北",
                    c: [{
                        n: "石家庄",
                        a: [{
                            s: "长安区"
                        }, {
                            s: "桥东区"
                        }, {
                            s: "桥西区"
                        }, {
                            s: "新华区"
                        }, {
                            s: "井陉矿区"
                        }, {
                            s: "裕华区"
                        }, {
                            s: "井陉县"
                        }, {
                            s: "正定县"
                        }, {
                            s: "栾城县"
                        }, {
                            s: "行唐县"
                        }, {
                            s: "灵寿县"
                        }, {
                            s: "高邑县"
                        }, {
                            s: "深泽县"
                        }, {
                            s: "赞皇县"
                        }, {
                            s: "无极县"
                        }, {
                            s: "平山县"
                        }, {
                            s: "元氏县"
                        }, {
                            s: "赵县"
                        }, {
                            s: "辛集市"
                        }, {
                            s: "藁城市"
                        }, {
                            s: "晋州市"
                        }, {
                            s: "新乐市"
                        }, {
                            s: "鹿泉市"
                        }]
                    }, {
                        n: "唐山",
                        a: [{
                            s: "路南区"
                        }, {
                            s: "路北区"
                        }, {
                            s: "古冶区"
                        }, {
                            s: "开平区"
                        }, {
                            s: "丰南区"
                        }, {
                            s: "丰润区"
                        }, {
                            s: "滦县"
                        }, {
                            s: "滦南县"
                        }, {
                            s: "乐亭县"
                        }, {
                            s: "迁西县"
                        }, {
                            s: "玉田县"
                        }, {
                            s: "唐海县"
                        }, {
                            s: "遵化市"
                        }, {
                            s: "迁安市"
                        }]
                    }, {
                        n: "秦皇岛",
                        a: [{
                            s: "海港区"
                        }, {
                            s: "山海关区"
                        }, {
                            s: "北戴河区"
                        }, {
                            s: "青龙满族自治县"
                        }, {
                            s: "昌黎县"
                        }, {
                            s: "抚宁县"
                        }, {
                            s: "卢龙县"
                        }]
                    }, {
                        n: "邯郸",
                        a: [{
                            s: "邯山区"
                        }, {
                            s: "丛台区"
                        }, {
                            s: "复兴区"
                        }, {
                            s: "峰峰矿区"
                        }, {
                            s: "邯郸县"
                        }, {
                            s: "临漳县"
                        }, {
                            s: "成安县"
                        }, {
                            s: "大名县"
                        }, {
                            s: "涉县"
                        }, {
                            s: "磁县"
                        }, {
                            s: "肥乡县"
                        }, {
                            s: "永年县"
                        }, {
                            s: "邱县"
                        }, {
                            s: "鸡泽县"
                        }, {
                            s: "广平县"
                        }, {
                            s: "馆陶县"
                        }, {
                            s: "魏县"
                        }, {
                            s: "曲周县"
                        }, {
                            s: "武安市"
                        }]
                    }, {
                        n: "邢台",
                        a: [{
                            s: "桥东区"
                        }, {
                            s: "桥西区"
                        }, {
                            s: "邢台县"
                        }, {
                            s: "临城县"
                        }, {
                            s: "内丘县"
                        }, {
                            s: "柏乡县"
                        }, {
                            s: "隆尧县"
                        }, {
                            s: "任县"
                        }, {
                            s: "南和县"
                        }, {
                            s: "宁晋县"
                        }, {
                            s: "巨鹿县"
                        }, {
                            s: "新河县"
                        }, {
                            s: "广宗县"
                        }, {
                            s: "平乡县"
                        }, {
                            s: "威县"
                        }, {
                            s: "清河县"
                        }, {
                            s: "临西县"
                        }, {
                            s: "南宫市"
                        }, {
                            s: "沙河市"
                        }]
                    }, {
                        n: "保定",
                        a: [{
                            s: "新市区"
                        }, {
                            s: "北市区"
                        }, {
                            s: "南市区"
                        }, {
                            s: "满城县"
                        }, {
                            s: "清苑县"
                        }, {
                            s: "涞水县"
                        }, {
                            s: "阜平县"
                        }, {
                            s: "徐水县"
                        }, {
                            s: "定兴县"
                        }, {
                            s: "唐县"
                        }, {
                            s: "高阳县"
                        }, {
                            s: "容城县"
                        }, {
                            s: "涞源县"
                        }, {
                            s: "望都县"
                        }, {
                            s: "安新县"
                        }, {
                            s: "易县"
                        }, {
                            s: "曲阳县"
                        }, {
                            s: "蠡县"
                        }, {
                            s: "顺平县"
                        }, {
                            s: "博野县"
                        }, {
                            s: "雄县"
                        }, {
                            s: "涿州市"
                        }, {
                            s: "定州市"
                        }, {
                            s: "安国市"
                        }, {
                            s: "高碑店市"
                        }]
                    }, {
                        n: "张家口",
                        a: [{
                            s: "桥东区"
                        }, {
                            s: "桥西区"
                        }, {
                            s: "宣化区"
                        }, {
                            s: "下花园区"
                        }, {
                            s: "宣化县"
                        }, {
                            s: "张北县"
                        }, {
                            s: "康保县"
                        }, {
                            s: "沽源县"
                        }, {
                            s: "尚义县"
                        }, {
                            s: "蔚县"
                        }, {
                            s: "阳原县"
                        }, {
                            s: "怀安县"
                        }, {
                            s: "万全县"
                        }, {
                            s: "怀来县"
                        }, {
                            s: "涿鹿县"
                        }, {
                            s: "赤城县"
                        }, {
                            s: "崇礼县"
                        }]
                    }, {
                        n: "承德",
                        a: [{
                            s: "双桥区"
                        }, {
                            s: "双滦区"
                        }, {
                            s: "鹰手营子矿区"
                        }, {
                            s: "承德县"
                        }, {
                            s: "兴隆县"
                        }, {
                            s: "平泉县"
                        }, {
                            s: "滦平县"
                        }, {
                            s: "隆化县"
                        }, {
                            s: "丰宁满族自治县"
                        }, {
                            s: "宽城满族自治县"
                        }, {
                            s: "围场满族蒙古族自治县"
                        }]
                    }, {
                        n: "沧州",
                        a: [{
                            s: "新华区"
                        }, {
                            s: "运河区"
                        }, {
                            s: "沧县"
                        }, {
                            s: "青县"
                        }, {
                            s: "东光县"
                        }, {
                            s: "海兴县"
                        }, {
                            s: "盐山县"
                        }, {
                            s: "肃宁县"
                        }, {
                            s: "南皮县"
                        }, {
                            s: "吴桥县"
                        }, {
                            s: "献县"
                        }, {
                            s: "孟村回族自治县"
                        }, {
                            s: "泊头市"
                        }, {
                            s: "任丘市"
                        }, {
                            s: "黄骅市"
                        }, {
                            s: "河间市"
                        }]
                    }, {
                        n: "廊坊",
                        a: [{
                            s: "安次区"
                        }, {
                            s: "广阳区"
                        }, {
                            s: "固安县"
                        }, {
                            s: "永清县"
                        }, {
                            s: "香河县"
                        }, {
                            s: "大城县"
                        }, {
                            s: "文安县"
                        }, {
                            s: "大厂回族自治县"
                        }, {
                            s: "霸州市"
                        }, {
                            s: "三河市"
                        }]
                    }, {
                        n: "衡水",
                        a: [{
                            s: "桃城区"
                        }, {
                            s: "枣强县"
                        }, {
                            s: "武邑县"
                        }, {
                            s: "武强县"
                        }, {
                            s: "饶阳县"
                        }, {
                            s: "安平县"
                        }, {
                            s: "故城县"
                        }, {
                            s: "景县"
                        }, {
                            s: "阜城县"
                        }, {
                            s: "冀州市"
                        }, {
                            s: "深州市"
                        }]
                    }]
                }, {
                    p: "山西",
                    c: [{
                        n: "太原",
                        a: [{
                            s: "小店区"
                        }, {
                            s: "迎泽区"
                        }, {
                            s: "杏花岭区"
                        }, {
                            s: "尖草坪区"
                        }, {
                            s: "万柏林区"
                        }, {
                            s: "晋源区"
                        }, {
                            s: "清徐县"
                        }, {
                            s: "阳曲县"
                        }, {
                            s: "娄烦县"
                        }, {
                            s: "古交市"
                        }]
                    }, {
                        n: "大同",
                        a: [{
                            s: "城区"
                        }, {
                            s: "矿区"
                        }, {
                            s: "南郊区"
                        }, {
                            s: "新荣区"
                        }, {
                            s: "阳高县"
                        }, {
                            s: "天镇县"
                        }, {
                            s: "广灵县"
                        }, {
                            s: "灵丘县"
                        }, {
                            s: "浑源县"
                        }, {
                            s: "左云县"
                        }, {
                            s: "大同县"
                        }]
                    }, {
                        n: "阳泉",
                        a: [{
                            s: "城区"
                        }, {
                            s: "矿区"
                        }, {
                            s: "郊区"
                        }, {
                            s: "平定县"
                        }, {
                            s: "盂县"
                        }]
                    }, {
                        n: "长治",
                        a: [{
                            s: "城区"
                        }, {
                            s: "郊区"
                        }, {
                            s: "长治县"
                        }, {
                            s: "襄垣县"
                        }, {
                            s: "屯留县"
                        }, {
                            s: "平顺县"
                        }, {
                            s: "黎城县"
                        }, {
                            s: "壶关县"
                        }, {
                            s: "长子县"
                        }, {
                            s: "武乡县"
                        }, {
                            s: "沁县"
                        }, {
                            s: "沁源县"
                        }, {
                            s: "潞城市"
                        }]
                    }, {
                        n: "晋城",
                        a: [{
                            s: "城区"
                        }, {
                            s: "沁水县"
                        }, {
                            s: "阳城县"
                        }, {
                            s: "陵川县"
                        }, {
                            s: "泽州县"
                        }, {
                            s: "高平市"
                        }]
                    }, {
                        n: "朔州",
                        a: [{
                            s: "朔城区"
                        }, {
                            s: "平鲁区"
                        }, {
                            s: "山阴县"
                        }, {
                            s: "应县"
                        }, {
                            s: "右玉县"
                        }, {
                            s: "怀仁县"
                        }]
                    }, {
                        n: "晋中",
                        a: [{
                            s: "榆次区"
                        }, {
                            s: "榆社县"
                        }, {
                            s: "左权县"
                        }, {
                            s: "和顺县"
                        }, {
                            s: "昔阳县"
                        }, {
                            s: "寿阳县"
                        }, {
                            s: "太谷县"
                        }, {
                            s: "祁县"
                        }, {
                            s: "平遥县"
                        }, {
                            s: "灵石县"
                        }, {
                            s: "介休市"
                        }]
                    }, {
                        n: "运城",
                        a: [{
                            s: "盐湖区"
                        }, {
                            s: "临猗县"
                        }, {
                            s: "万荣县"
                        }, {
                            s: "闻喜县"
                        }, {
                            s: "稷山县"
                        }, {
                            s: "新绛县"
                        }, {
                            s: "绛县"
                        }, {
                            s: "垣曲县"
                        }, {
                            s: "夏县"
                        }, {
                            s: "平陆县"
                        }, {
                            s: "芮城县"
                        }, {
                            s: "永济市"
                        }, {
                            s: "河津市"
                        }]
                    }, {
                        n: "忻州",
                        a: [{
                            s: "忻府区"
                        }, {
                            s: "定襄县"
                        }, {
                            s: "五台县"
                        }, {
                            s: "代县"
                        }, {
                            s: "繁峙县"
                        }, {
                            s: "宁武县"
                        }, {
                            s: "静乐县"
                        }, {
                            s: "神池县"
                        }, {
                            s: "五寨县"
                        }, {
                            s: "岢岚县"
                        }, {
                            s: "河曲县"
                        }, {
                            s: "保德县"
                        }, {
                            s: "偏关县"
                        }, {
                            s: "原平市"
                        }]
                    }, {
                        n: "临汾",
                        a: [{
                            s: "尧都区"
                        }, {
                            s: "曲沃县"
                        }, {
                            s: "翼城县"
                        }, {
                            s: "襄汾县"
                        }, {
                            s: "洪洞县"
                        }, {
                            s: "古县"
                        }, {
                            s: "安泽县"
                        }, {
                            s: "浮山县"
                        }, {
                            s: "吉县"
                        }, {
                            s: "乡宁县"
                        }, {
                            s: "大宁县"
                        }, {
                            s: "隰县"
                        }, {
                            s: "永和县"
                        }, {
                            s: "蒲县"
                        }, {
                            s: "汾西县"
                        }, {
                            s: "侯马市"
                        }, {
                            s: "霍州市"
                        }]
                    }, {
                        n: "吕梁",
                        a: [{
                            s: "离石区"
                        }, {
                            s: "文水县"
                        }, {
                            s: "交城县"
                        }, {
                            s: "兴县"
                        }, {
                            s: "临县"
                        }, {
                            s: "柳林县"
                        }, {
                            s: "石楼县"
                        }, {
                            s: "岚县"
                        }, {
                            s: "方山县"
                        }, {
                            s: "中阳县"
                        }, {
                            s: "交口县"
                        }, {
                            s: "孝义市"
                        }, {
                            s: "汾阳市"
                        }]
                    }]
                }, {
                    p: "内蒙古",
                    c: [{
                        n: "呼和浩特",
                        a: [{
                            s: "新城区"
                        }, {
                            s: "回民区"
                        }, {
                            s: "玉泉区"
                        }, {
                            s: "玉泉区"
                        }, {
                            s: "赛罕区"
                        }, {
                            s: "土默特左旗"
                        }, {
                            s: "托克托县"
                        }, {
                            s: "和林格尔县"
                        }, {
                            s: "清水河县"
                        }, {
                            s: "武川县"
                        }]
                    }, {
                        n: "包头",
                        a: [{
                            s: "东河区"
                        }, {
                            s: "昆都仑区"
                        }, {
                            s: "青山区"
                        }, {
                            s: "石拐区"
                        }, {
                            s: "白云矿区"
                        }, {
                            s: "九原区"
                        }, {
                            s: "土默特右旗"
                        }, {
                            s: "固阳县"
                        }, {
                            s: "达尔罕茂明安联合旗"
                        }]
                    }, {
                        n: "乌海",
                        a: [{
                            s: "海勃湾区"
                        }, {
                            s: "海南区"
                        }, {
                            s: "乌达区"
                        }]
                    }, {
                        n: "赤峰",
                        a: [{
                            s: "红山区"
                        }, {
                            s: "元宝山区"
                        }, {
                            s: "松山区"
                        }, {
                            s: "阿鲁科尔沁旗"
                        }, {
                            s: "巴林左旗"
                        }, {
                            s: "巴林右旗"
                        }, {
                            s: "林西县"
                        }, {
                            s: "克什克腾旗"
                        }, {
                            s: "翁牛特旗"
                        }, {
                            s: "喀喇沁旗"
                        }, {
                            s: "宁城县"
                        }, {
                            s: "敖汉旗"
                        }]
                    }, {
                        n: "通辽",
                        a: [{
                            s: "科尔沁区"
                        }, {
                            s: "科尔沁左翼中旗"
                        }, {
                            s: "科尔沁左翼后旗"
                        }, {
                            s: "开鲁县"
                        }, {
                            s: "库伦旗"
                        }, {
                            s: "奈曼旗"
                        }, {
                            s: "扎鲁特旗"
                        }, {
                            s: "霍林郭勒市"
                        }]
                    }, {
                        n: "鄂尔多斯",
                        a: [{
                            s: "东胜区"
                        }, {
                            s: "达拉特旗"
                        }, {
                            s: "准格尔旗"
                        }, {
                            s: "鄂托克前旗"
                        }, {
                            s: "鄂托克旗"
                        }, {
                            s: "杭锦旗"
                        }, {
                            s: "乌审旗"
                        }, {
                            s: "伊金霍洛旗"
                        }]
                    }, {
                        n: "呼伦贝尔",
                        a: [{
                            s: "海拉尔区"
                        }, {
                            s: "阿荣旗"
                        }, {
                            s: "莫力达瓦达斡尔族自治旗"
                        }, {
                            s: "鄂伦春自治旗"
                        }, {
                            s: "鄂温克族自治旗"
                        }, {
                            s: "陈巴尔虎旗"
                        }, {
                            s: "新巴尔虎左旗"
                        }, {
                            s: "新巴尔虎右旗"
                        }, {
                            s: "满洲里市"
                        }, {
                            s: "牙克石市"
                        }, {
                            s: "扎兰屯市"
                        }, {
                            s: "额尔古纳市"
                        }, {
                            s: "根河市"
                        }]
                    }, {
                        n: "巴彦淖尔",
                        a: [{
                            s: "临河区"
                        }, {
                            s: "五原县"
                        }, {
                            s: "磴口县"
                        }, {
                            s: "乌拉特前旗"
                        }, {
                            s: "乌拉特中旗"
                        }, {
                            s: "乌拉特后旗"
                        }, {
                            s: "杭锦后旗"
                        }]
                    }, {
                        n: "乌兰察布",
                        a: [{
                            s: "集宁区"
                        }, {
                            s: "卓资县"
                        }, {
                            s: "化德县"
                        }, {
                            s: "商都县"
                        }, {
                            s: "兴和县"
                        }, {
                            s: "凉城县"
                        }, {
                            s: "察哈尔右翼前旗"
                        }, {
                            s: "察哈尔右翼中旗"
                        }, {
                            s: "察哈尔右翼后旗"
                        }, {
                            s: "四子王旗"
                        }, {
                            s: "丰镇市"
                        }]
                    }, {
                        n: "兴安",
                        a: [{
                            s: "乌兰浩特市"
                        }, {
                            s: "阿尔山市"
                        }, {
                            s: "科尔沁右翼前旗"
                        }, {
                            s: "科尔沁右翼中旗"
                        }, {
                            s: "扎赉特旗"
                        }, {
                            s: "突泉县"
                        }]
                    }, {
                        n: "锡林郭勒",
                        a: [{
                            s: "二连浩特市"
                        }, {
                            s: "锡林浩特市"
                        }, {
                            s: "阿巴嘎旗"
                        }, {
                            s: "苏尼特左旗"
                        }, {
                            s: "苏尼特右旗"
                        }, {
                            s: "东乌珠穆沁旗"
                        }, {
                            s: "西乌珠穆沁旗"
                        }, {
                            s: "太仆寺旗"
                        }, {
                            s: "镶黄旗"
                        }, {
                            s: "正镶白旗"
                        }, {
                            s: "正蓝旗"
                        }, {
                            s: "多伦县"
                        }]
                    }, {
                        n: "阿拉善",
                        a: [{
                            s: "阿拉善左旗"
                        }, {
                            s: "阿拉善右旗"
                        }, {
                            s: "额济纳旗"
                        }]
                    }]
                }, {
                    p: "辽宁",
                    c: [{
                        n: "沈阳",
                        a: [{
                            s: "和平区"
                        }, {
                            s: "沈河区"
                        }, {
                            s: "大东区"
                        }, {
                            s: "皇姑区"
                        }, {
                            s: "铁西区"
                        }, {
                            s: "苏家屯区"
                        }, {
                            s: "东陵区"
                        }, {
                            s: "新城子区"
                        }, {
                            s: "于洪区"
                        }, {
                            s: "辽中县"
                        }, {
                            s: "康平县"
                        }, {
                            s: "法库县"
                        }, {
                            s: "新民市"
                        }]
                    }, {
                        n: "大连",
                        a: [{
                            s: "中山区"
                        }, {
                            s: "西岗区"
                        }, {
                            s: "沙河口区"
                        }, {
                            s: "甘井子区"
                        }, {
                            s: "旅顺口区"
                        }, {
                            s: "金州区"
                        }, {
                            s: "长海县"
                        }, {
                            s: "瓦房店市"
                        }, {
                            s: "普兰店市"
                        }, {
                            s: "庄河市"
                        }]
                    }, {
                        n: "鞍山",
                        a: [{
                            s: "铁东区"
                        }, {
                            s: "铁西区"
                        }, {
                            s: "立山区"
                        }, {
                            s: "千山区"
                        }, {
                            s: "台安县"
                        }, {
                            s: "210323"
                        }, {
                            s: "海城市"
                        }]
                    }, {
                        n: "抚顺",
                        a: [{
                            s: "新抚区"
                        }, {
                            s: "东洲区"
                        }, {
                            s: "望花区"
                        }, {
                            s: "顺城区"
                        }, {
                            s: "抚顺县"
                        }, {
                            s: "新宾满族自治县"
                        }, {
                            s: "清原满族自治县"
                        }]
                    }, {
                        n: "本溪",
                        a: [{
                            s: "平山区"
                        }, {
                            s: "溪湖区"
                        }, {
                            s: "明山区"
                        }, {
                            s: "南芬区"
                        }, {
                            s: "本溪满族自治县"
                        }, {
                            s: "桓仁满族自治县"
                        }]
                    }, {
                        n: "丹东",
                        a: [{
                            s: "元宝区"
                        }, {
                            s: "振兴区"
                        }, {
                            s: "振安区"
                        }, {
                            s: "宽甸满族自治县"
                        }, {
                            s: "东港市"
                        }, {
                            s: "凤城市"
                        }]
                    }, {
                        n: "锦州",
                        a: [{
                            s: "古塔区"
                        }, {
                            s: "凌河区"
                        }, {
                            s: "太和区"
                        }, {
                            s: "黑山县"
                        }, {
                            s: "义县"
                        }, {
                            s: "凌海市"
                        }, {
                            s: "北镇市"
                        }]
                    }, {
                        n: "营口",
                        a: [{
                            s: "站前区"
                        }, {
                            s: "西市区"
                        }, {
                            s: "鲅鱼圈区"
                        }, {
                            s: "老边区"
                        }, {
                            s: "盖州市"
                        }, {
                            s: "大石桥市"
                        }]
                    }, {
                        n: "阜新",
                        a: [{
                            s: "海州区"
                        }, {
                            s: "新邱区"
                        }, {
                            s: "太平区"
                        }, {
                            s: "清河门区"
                        }, {
                            s: "细河区"
                        }, {
                            s: "阜新蒙古族自治县"
                        }, {
                            s: "彰武县"
                        }]
                    }, {
                        n: "辽阳",
                        a: [{
                            s: "白塔区"
                        }, {
                            s: "文圣区"
                        }, {
                            s: "宏伟区"
                        }, {
                            s: "弓长岭区"
                        }, {
                            s: "太子河区"
                        }, {
                            s: "辽阳县"
                        }, {
                            s: "灯塔市"
                        }]
                    }, {
                        n: "盘锦",
                        a: [{
                            s: "双台子区"
                        }, {
                            s: "兴隆台区"
                        }, {
                            s: "大洼县"
                        }, {
                            s: "盘山县"
                        }]
                    }, {
                        n: "铁岭",
                        a: [{
                            s: "银州区"
                        }, {
                            s: "清河区"
                        }, {
                            s: "铁岭县"
                        }, {
                            s: "西丰县"
                        }, {
                            s: "昌图县"
                        }, {
                            s: "调兵山市"
                        }, {
                            s: "开原市"
                        }]
                    }, {
                        n: "朝阳",
                        a: [{
                            s: "双塔区"
                        }, {
                            s: "龙城区"
                        }, {
                            s: "朝阳县"
                        }, {
                            s: "建平县"
                        }, {
                            s: "喀喇沁左翼蒙古族自治县"
                        }, {
                            s: "北票市"
                        }, {
                            s: "凌源市"
                        }]
                    }, {
                        n: "葫芦岛",
                        a: [{
                            s: "连山区"
                        }, {
                            s: "龙港区"
                        }, {
                            s: "南票区"
                        }, {
                            s: "绥中县"
                        }, {
                            s: "建昌县"
                        }, {
                            s: "兴城市"
                        }]
                    }]
                }, {
                    p: "吉林",
                    c: [{
                        n: "长春",
                        a: [{
                            s: "南关区"
                        }, {
                            s: "宽城区"
                        }, {
                            s: "朝阳区"
                        }, {
                            s: "二道区"
                        }, {
                            s: "绿园区"
                        }, {
                            s: "双阳区"
                        }, {
                            s: "农安县"
                        }, {
                            s: "九台市"
                        }, {
                            s: "榆树市"
                        }, {
                            s: "德惠市"
                        }]
                    }, {
                        n: "吉林",
                        a: [{
                            s: "昌邑区"
                        }, {
                            s: "龙潭区"
                        }, {
                            s: "船营区"
                        }, {
                            s: "丰满区"
                        }, {
                            s: "永吉县"
                        }, {
                            s: "蛟河市"
                        }, {
                            s: "桦甸市"
                        }, {
                            s: "舒兰市"
                        }, {
                            s: "磐石市"
                        }]
                    }, {
                        n: "四平",
                        a: [{
                            s: "铁西区"
                        }, {
                            s: "铁东区"
                        }, {
                            s: "梨树县"
                        }, {
                            s: "伊通满族自治县"
                        }, {
                            s: "公主岭市"
                        }, {
                            s: "双辽市"
                        }]
                    }, {
                        n: "辽源",
                        a: [{
                            s: "龙山区"
                        }, {
                            s: "西安区"
                        }, {
                            s: "东丰县"
                        }, {
                            s: "东辽县"
                        }]
                    }, {
                        n: "通化",
                        a: [{
                            s: "东昌区"
                        }, {
                            s: "二道江区"
                        }, {
                            s: "通化县"
                        }, {
                            s: "辉南县"
                        }, {
                            s: "柳河县"
                        }, {
                            s: "梅河口市"
                        }, {
                            s: "集安市"
                        }]
                    }, {
                        n: "白山",
                        a: [{
                            s: "八道江区"
                        }, {
                            s: "江源区"
                        }, {
                            s: "抚松县"
                        }, {
                            s: "靖宇县"
                        }, {
                            s: "长白朝鲜族自治县"
                        }, {
                            s: "临江市"
                        }]
                    }, {
                        n: "松原",
                        a: [{
                            s: "宁江区"
                        }, {
                            s: "前郭尔罗斯蒙古族自治县"
                        }, {
                            s: "长岭县"
                        }, {
                            s: "乾安县"
                        }, {
                            s: "扶余县"
                        }]
                    }, {
                        n: "白城",
                        a: [{
                            s: "洮北区"
                        }, {
                            s: "镇赉县"
                        }, {
                            s: "通榆县"
                        }, {
                            s: "洮南市"
                        }, {
                            s: "大安市"
                        }]
                    }, {
                        n: "延边",
                        a: [{
                            s: "延吉市"
                        }, {
                            s: "图们市"
                        }, {
                            s: "敦化市"
                        }, {
                            s: "珲春市"
                        }, {
                            s: "龙井市"
                        }, {
                            s: "和龙市"
                        }, {
                            s: "汪清县"
                        }, {
                            s: "安图县"
                        }]
                    }]
                }, {
                    p: "黑龙江",
                    c: [{
                        n: "哈尔滨",
                        a: [{
                            s: "道里区"
                        }, {
                            s: "南岗区"
                        }, {
                            s: "道外区"
                        }, {
                            s: "平房区"
                        }, {
                            s: "松北区"
                        }, {
                            s: "香坊区"
                        }, {
                            s: "呼兰区"
                        }, {
                            s: "阿城区"
                        }, {
                            s: "依兰县"
                        }, {
                            s: "方正县"
                        }, {
                            s: "宾县"
                        }, {
                            s: "巴彦县"
                        }, {
                            s: "木兰县"
                        }, {
                            s: "通河县"
                        }, {
                            s: "延寿县"
                        }, {
                            s: "双城市"
                        }, {
                            s: "尚志市"
                        }, {
                            s: "五常市"
                        }]
                    }, {
                        n: "齐齐哈尔",
                        a: [{
                            s: "龙沙区"
                        }, {
                            s: "建华区"
                        }, {
                            s: "铁锋区"
                        }, {
                            s: "昂昂溪区"
                        }, {
                            s: "富拉尔基区"
                        }, {
                            s: "碾子山区"
                        }, {
                            s: "梅里斯达斡尔族区"
                        }, {
                            s: "龙江县"
                        }, {
                            s: "依安县"
                        }, {
                            s: "泰来县"
                        }, {
                            s: "甘南县"
                        }, {
                            s: "富裕县"
                        }, {
                            s: "克山县"
                        }, {
                            s: "克东县"
                        }, {
                            s: "拜泉县"
                        }, {
                            s: "讷河市"
                        }]
                    }, {
                        n: "鸡西",
                        a: [{
                            s: "鸡冠区"
                        }, {
                            s: "恒山区"
                        }, {
                            s: "滴道区"
                        }, {
                            s: "梨树区"
                        }, {
                            s: "城子河区"
                        }, {
                            s: "麻山区"
                        }, {
                            s: "鸡东县"
                        }, {
                            s: "虎林市"
                        }, {
                            s: "密山市"
                        }]
                    }, {
                        n: "鹤岗",
                        a: [{
                            s: "向阳区"
                        }, {
                            s: "工农区"
                        }, {
                            s: "南山区"
                        }, {
                            s: "兴安区"
                        }, {
                            s: "东山区"
                        }, {
                            s: "兴山区"
                        }, {
                            s: "萝北县"
                        }, {
                            s: "绥滨县"
                        }]
                    }, {
                        n: "双鸭山",
                        a: [{
                            s: "尖山区"
                        }, {
                            s: "岭东区"
                        }, {
                            s: "四方台区"
                        }, {
                            s: "宝山区"
                        }, {
                            s: "集贤县"
                        }, {
                            s: "友谊县"
                        }, {
                            s: "宝清县"
                        }, {
                            s: "饶河县"
                        }]
                    }, {
                        n: "大庆",
                        a: [{
                            s: "萨尔图区"
                        }, {
                            s: "龙凤区"
                        }, {
                            s: "让胡路区"
                        }, {
                            s: "红岗区"
                        }, {
                            s: "大同区"
                        }, {
                            s: "肇州县"
                        }, {
                            s: "肇源县"
                        }, {
                            s: "林甸县"
                        }, {
                            s: "杜尔伯特蒙古族自治县"
                        }]
                    }, {
                        n: "伊春",
                        a: [{
                            s: "伊春区"
                        }, {
                            s: "南岔区"
                        }, {
                            s: "友好区"
                        }, {
                            s: "西林区"
                        }, {
                            s: "翠峦区"
                        }, {
                            s: "新青区"
                        }, {
                            s: "美溪区"
                        }, {
                            s: "金山屯区"
                        }, {
                            s: "五营区"
                        }, {
                            s: "乌马河区"
                        }, {
                            s: "汤旺河区"
                        }, {
                            s: "带岭区"
                        }, {
                            s: "乌伊岭区"
                        }, {
                            s: "红星区"
                        }, {
                            s: "上甘岭区"
                        }, {
                            s: "嘉荫县"
                        }, {
                            s: "铁力市"
                        }]
                    }, {
                        n: "佳木斯",
                        a: [{
                            s: "向阳区"
                        }, {
                            s: "前进区"
                        }, {
                            s: "东风区"
                        }, {
                            s: "郊区"
                        }, {
                            s: "桦南县"
                        }, {
                            s: "桦川县"
                        }, {
                            s: "汤原县"
                        }, {
                            s: "抚远县"
                        }, {
                            s: "同江市"
                        }, {
                            s: "富锦市"
                        }]
                    }, {
                        n: "七台河",
                        a: [{
                            s: "新兴区"
                        }, {
                            s: "桃山区"
                        }, {
                            s: "茄子河区"
                        }, {
                            s: "勃利县"
                        }]
                    }, {
                        n: "牡丹江",
                        a: [{
                            s: "东安区"
                        }, {
                            s: "阳明区"
                        }, {
                            s: "爱民区"
                        }, {
                            s: "西安区"
                        }, {
                            s: "东宁县"
                        }, {
                            s: "林口县"
                        }, {
                            s: "绥芬河市"
                        }, {
                            s: "海林市"
                        }, {
                            s: "宁安市"
                        }, {
                            s: "穆棱市"
                        }]
                    }, {
                        n: "黑河",
                        a: [{
                            s: "爱辉区"
                        }, {
                            s: "嫩江县"
                        }, {
                            s: "逊克县"
                        }, {
                            s: "孙吴县"
                        }, {
                            s: "北安市"
                        }, {
                            s: "五大连池市"
                        }]
                    }, {
                        n: "绥化",
                        a: [{
                            s: "北林区"
                        }, {
                            s: "望奎县"
                        }, {
                            s: "兰西县"
                        }, {
                            s: "青冈县"
                        }, {
                            s: "庆安县"
                        }, {
                            s: "明水县"
                        }, {
                            s: "绥棱县"
                        }, {
                            s: "安达市"
                        }, {
                            s: "肇东市"
                        }, {
                            s: "海伦市"
                        }]
                    }, {
                        n: "大兴安岭",
                        a: [{
                            s: "加格达奇区"
                        }, {
                            s: "松岭区"
                        }, {
                            s: "新林区"
                        }, {
                            s: "呼中区"
                        }, {
                            s: "呼玛县"
                        }, {
                            s: "塔河县"
                        }, {
                            s: "漠河县"
                        }]
                    }]
                }, {
                    p: "上海",
                    c: [{
                        n: "黄浦区"
                    }, {
                        n: "卢湾区"
                    }, {
                        n: "徐汇区"
                    }, {
                        n: "长宁区"
                    }, {
                        n: "静安区"
                    }, {
                        n: "普陀区"
                    }, {
                        n: "闸北区"
                    }, {
                        n: "虹口区"
                    }, {
                        n: "杨浦区"
                    }, {
                        n: "闵行区"
                    }, {
                        n: "宝山区"
                    }, {
                        n: "嘉定区"
                    }, {
                        n: "浦东新区"
                    }, {
                        n: "金山区"
                    }, {
                        n: "松江区"
                    }, {
                        n: "奉贤区"
                    }, {
                        n: "青浦区"
                    }, {
                        n: "崇明县"
                    }]
                }, {
                    p: "江苏",
                    c: [{
                        n: "南京",
                        a: [{
                            s: "玄武区"
                        }, {
                            s: "白下区"
                        }, {
                            s: "秦淮区"
                        }, {
                            s: "建邺区"
                        }, {
                            s: "鼓楼区"
                        }, {
                            s: "下关区"
                        }, {
                            s: "浦口区"
                        }, {
                            s: "栖霞区"
                        }, {
                            s: "雨花台区"
                        }, {
                            s: "江宁区"
                        }, {
                            s: "六合区"
                        }, {
                            s: "溧水县"
                        }, {
                            s: "高淳县"
                        }]
                    }, {
                        n: "无锡",
                        a: [{
                            s: "崇安区"
                        }, {
                            s: "南长区"
                        }, {
                            s: "北塘区"
                        }, {
                            s: "锡山区"
                        }, {
                            s: "惠山区"
                        }, {
                            s: "滨湖区"
                        }, {
                            s: "江阴市"
                        }, {
                            s: "宜兴市"
                        }]
                    }, {
                        n: "徐州",
                        a: [{
                            s: "鼓楼区"
                        }, {
                            s: "云龙区"
                        }, {
                            s: "九里区"
                        }, {
                            s: "贾汪区"
                        }, {
                            s: "泉山区"
                        }, {
                            s: "丰县"
                        }, {
                            s: "沛县"
                        }, {
                            s: "铜山县"
                        }, {
                            s: "睢宁县"
                        }, {
                            s: "新沂市"
                        }, {
                            s: "邳州市"
                        }]
                    }, {
                        n: "常州",
                        a: [{
                            s: "天宁区"
                        }, {
                            s: "钟楼区"
                        }, {
                            s: "戚墅堰区"
                        }, {
                            s: "新北区"
                        }, {
                            s: "武进区"
                        }, {
                            s: "溧阳市"
                        }, {
                            s: "金坛市"
                        }]
                    }, {
                        n: "苏州",
                        a: [{
                            s: "沧浪区"
                        }, {
                            s: "平江区"
                        }, {
                            s: "金阊区"
                        }, {
                            s: "虎丘区"
                        }, {
                            s: "吴中区"
                        }, {
                            s: "相城区"
                        }, {
                            s: "常熟市"
                        }, {
                            s: "张家港市"
                        }, {
                            s: "昆山市"
                        }, {
                            s: "吴江市"
                        }, {
                            s: "太仓市"
                        }]
                    }, {
                        n: "南通",
                        a: [{
                            s: "崇川区"
                        }, {
                            s: "港闸区"
                        }, {
                            s: "海安县"
                        }, {
                            s: "如东县"
                        }, {
                            s: "启东市"
                        }, {
                            s: "如皋市"
                        }, {
                            s: "通州市"
                        }, {
                            s: "海门市"
                        }]
                    }, {
                        n: "连云港",
                        a: [{
                            s: "连云区"
                        }, {
                            s: "新浦区"
                        }, {
                            s: "海州区"
                        }, {
                            s: "赣榆县"
                        }, {
                            s: "东海县"
                        }, {
                            s: "灌云县"
                        }, {
                            s: "灌南县"
                        }]
                    }, {
                        n: "淮安",
                        a: [{
                            s: "清河区"
                        }, {
                            s: "楚州区"
                        }, {
                            s: "淮阴区"
                        }, {
                            s: "清浦区"
                        }, {
                            s: "涟水县"
                        }, {
                            s: "洪泽县"
                        }, {
                            s: "盱眙县"
                        }, {
                            s: "金湖县"
                        }]
                    }, {
                        n: "盐城",
                        a: [{
                            s: "亭湖区"
                        }, {
                            s: "盐都区"
                        }, {
                            s: "响水县"
                        }, {
                            s: "滨海县"
                        }, {
                            s: "阜宁县"
                        }, {
                            s: "射阳县"
                        }, {
                            s: "建湖县"
                        }, {
                            s: "东台市"
                        }, {
                            s: "大丰市"
                        }]
                    }, {
                        n: "扬州",
                        a: [{
                            s: "广陵区"
                        }, {
                            s: "邗江区"
                        }, {
                            s: "维扬区"
                        }, {
                            s: "宝应县"
                        }, {
                            s: "仪征市"
                        }, {
                            s: "高邮市"
                        }, {
                            s: "江都市"
                        }]
                    }, {
                        n: "镇江",
                        a: [{
                            s: "京口区"
                        }, {
                            s: "润州区"
                        }, {
                            s: "丹徒区"
                        }, {
                            s: "丹阳市"
                        }, {
                            s: "扬中市"
                        }, {
                            s: "句容市"
                        }]
                    }, {
                        n: "泰州",
                        a: [{
                            s: "海陵区"
                        }, {
                            s: "高港区"
                        }, {
                            s: "兴化市"
                        }, {
                            s: "靖江市"
                        }, {
                            s: "泰兴市"
                        }, {
                            s: "姜堰市"
                        }]
                    }, {
                        n: "宿迁",
                        a: [{
                            s: "宿城区"
                        }, {
                            s: "宿豫区"
                        }, {
                            s: "沭阳县"
                        }, {
                            s: "泗阳县"
                        }, {
                            s: "泗洪县"
                        }]
                    }]
                }, {
                    p: "浙江",
                    c: [{
                        n: "杭州",
                        a: [{
                            s: "上城区"
                        }, {
                            s: "下城区"
                        }, {
                            s: "江干区"
                        }, {
                            s: "拱墅区"
                        }, {
                            s: "西湖区"
                        }, {
                            s: "滨江区"
                        }, {
                            s: "萧山区"
                        }, {
                            s: "余杭区"
                        }, {
                            s: "桐庐县"
                        }, {
                            s: "淳安县"
                        }, {
                            s: "建德市"
                        }, {
                            s: "富阳市"
                        }, {
                            s: "临安市"
                        }]
                    }, {
                        n: "宁波",
                        a: [{
                            s: "海曙区"
                        }, {
                            s: "江东区"
                        }, {
                            s: "江北区"
                        }, {
                            s: "北仑区"
                        }, {
                            s: "镇海区"
                        }, {
                            s: "鄞州区"
                        }, {
                            s: "象山县"
                        }, {
                            s: "宁海县"
                        }, {
                            s: "余姚市"
                        }, {
                            s: "慈溪市"
                        }, {
                            s: "奉化市"
                        }]
                    }, {
                        n: "温州",
                        a: [{
                            s: "鹿城区"
                        }, {
                            s: "龙湾区"
                        }, {
                            s: "瓯海区"
                        }, {
                            s: "洞头县"
                        }, {
                            s: "永嘉县"
                        }, {
                            s: "平阳县"
                        }, {
                            s: "苍南县"
                        }, {
                            s: "文成县"
                        }, {
                            s: "泰顺县"
                        }, {
                            s: "瑞安市"
                        }, {
                            s: "乐清市"
                        }]
                    }, {
                        n: "嘉兴",
                        a: [{
                            s: "南湖区"
                        }, {
                            s: "秀洲区"
                        }, {
                            s: "嘉善县"
                        }, {
                            s: "海盐县"
                        }, {
                            s: "海宁市"
                        }, {
                            s: "平湖市"
                        }, {
                            s: "桐乡市"
                        }]
                    }, {
                        n: "湖州",
                        a: [{
                            s: "吴兴区"
                        }, {
                            s: "南浔区"
                        }, {
                            s: "德清县"
                        }, {
                            s: "长兴县"
                        }, {
                            s: "安吉县"
                        }]
                    }, {
                        n: "绍兴",
                        a: [{
                            s: "越城区"
                        }, {
                            s: "绍兴县"
                        }, {
                            s: "新昌县"
                        }, {
                            s: "诸暨市"
                        }, {
                            s: "上虞市"
                        }, {
                            s: "嵊州市"
                        }]
                    }, {
                        n: "金华",
                        a: [{
                            s: "婺城区"
                        }, {
                            s: "金东区"
                        }, {
                            s: "武义县"
                        }, {
                            s: "浦江县"
                        }, {
                            s: "磐安县"
                        }, {
                            s: "兰溪市"
                        }, {
                            s: "义乌市"
                        }, {
                            s: "东阳市"
                        }, {
                            s: "永康市"
                        }]
                    }, {
                        n: "衢州",
                        a: [{
                            s: "柯城区"
                        }, {
                            s: "衢江区"
                        }, {
                            s: "常山县"
                        }, {
                            s: "开化县"
                        }, {
                            s: "龙游县"
                        }, {
                            s: "江山市"
                        }]
                    }, {
                        n: "舟山",
                        a: [{
                            s: "定海区"
                        }, {
                            s: "普陀区"
                        }, {
                            s: "岱山县"
                        }, {
                            s: "嵊泗县"
                        }]
                    }, {
                        n: "台州",
                        a: [{
                            s: "椒江区"
                        }, {
                            s: "黄岩区"
                        }, {
                            s: "路桥区"
                        }, {
                            s: "玉环县"
                        }, {
                            s: "三门县"
                        }, {
                            s: "天台县"
                        }, {
                            s: "仙居县"
                        }, {
                            s: "温岭市"
                        }, {
                            s: "临海市"
                        }]
                    }, {
                        n: "丽水",
                        a: [{
                            s: "莲都区"
                        }, {
                            s: "青田县"
                        }, {
                            s: "缙云县"
                        }, {
                            s: "遂昌县"
                        }, {
                            s: "松阳县"
                        }, {
                            s: "云和县"
                        }, {
                            s: "庆元县"
                        }, {
                            s: "景宁畲族自治县"
                        }, {
                            s: "龙泉市"
                        }]
                    }]
                }, {
                    p: "安徽",
                    c: [{
                        n: "合肥",
                        a: [{
                            s: "瑶海区"
                        }, {
                            s: "庐阳区"
                        }, {
                            s: "蜀山区"
                        }, {
                            s: "包河区"
                        }, {
                            s: "长丰县"
                        }, {
                            s: "肥东县"
                        }, {
                            s: "肥西县"
                        }]
                    }, {
                        n: "芜湖",
                        a: [{
                            s: "镜湖区"
                        }, {
                            s: "弋江区"
                        }, {
                            s: "鸠江区"
                        }, {
                            s: "三山区"
                        }, {
                            s: "芜湖县"
                        }, {
                            s: "繁昌县"
                        }, {
                            s: "南陵县"
                        }]
                    }, {
                        n: "蚌埠",
                        a: [{
                            s: "龙子湖区"
                        }, {
                            s: "蚌山区"
                        }, {
                            s: "禹会区"
                        }, {
                            s: "淮上区"
                        }, {
                            s: "怀远县"
                        }, {
                            s: "五河县"
                        }, {
                            s: "固镇县"
                        }]
                    }, {
                        n: "淮南",
                        a: [{
                            s: "大通区"
                        }, {
                            s: "田家庵区"
                        }, {
                            s: "谢家集区"
                        }, {
                            s: "八公山区"
                        }, {
                            s: "潘集区"
                        }, {
                            s: "凤台县"
                        }]
                    }, {
                        n: "马鞍山",
                        a: [{
                            s: "金家庄区"
                        }, {
                            s: "花山区"
                        }, {
                            s: "雨山区"
                        }, {
                            s: "当涂县"
                        }]
                    }, {
                        n: "淮北",
                        a: [{
                            s: "杜集区"
                        }, {
                            s: "相山区"
                        }, {
                            s: "烈山区"
                        }, {
                            s: "濉溪县"
                        }]
                    }, {
                        n: "铜陵",
                        a: [{
                            s: "铜官山区"
                        }, {
                            s: "狮子山区"
                        }, {
                            s: "郊区"
                        }, {
                            s: "铜陵县"
                        }]
                    }, {
                        n: "安庆",
                        a: [{
                            s: "迎江区"
                        }, {
                            s: "大观区"
                        }, {
                            s: "宜秀区"
                        }, {
                            s: "怀宁县"
                        }, {
                            s: "枞阳县"
                        }, {
                            s: "潜山县"
                        }, {
                            s: "太湖县"
                        }, {
                            s: "宿松县"
                        }, {
                            s: "望江县"
                        }, {
                            s: "岳西县"
                        }, {
                            s: "桐城市"
                        }]
                    }, {
                        n: "黄山",
                        a: [{
                            s: "屯溪区"
                        }, {
                            s: "黄山区"
                        }, {
                            s: "徽州区"
                        }, {
                            s: "歙县"
                        }, {
                            s: "休宁县"
                        }, {
                            s: "黟县"
                        }, {
                            s: "祁门县"
                        }]
                    }, {
                        n: "滁州",
                        a: [{
                            s: "琅琊区"
                        }, {
                            s: "南谯区"
                        }, {
                            s: "来安县"
                        }, {
                            s: "全椒县"
                        }, {
                            s: "定远县"
                        }, {
                            s: "凤阳县"
                        }, {
                            s: "天长市"
                        }, {
                            s: "明光市"
                        }]
                    }, {
                        n: "阜阳",
                        a: [{
                            s: "颍州区"
                        }, {
                            s: "颍东区"
                        }, {
                            s: "颍泉区"
                        }, {
                            s: "临泉县"
                        }, {
                            s: "太和县"
                        }, {
                            s: "阜南县"
                        }, {
                            s: "颍上县"
                        }, {
                            s: "界首市"
                        }]
                    }, {
                        n: "宿州",
                        a: [{
                            s: "埇桥区"
                        }, {
                            s: "砀山县"
                        }, {
                            s: "萧县"
                        }, {
                            s: "灵璧县"
                        }, {
                            s: "泗县"
                        }]
                    }, {
                        n: "巢湖",
                        a: [{
                            s: "居巢区"
                        }, {
                            s: "庐江县"
                        }, {
                            s: "无为县"
                        }, {
                            s: "含山县"
                        }, {
                            s: "和县"
                        }]
                    }, {
                        n: "六安",
                        a: [{
                            s: "金安区"
                        }, {
                            s: "裕安区"
                        }, {
                            s: "寿县"
                        }, {
                            s: "霍邱县"
                        }, {
                            s: "舒城县"
                        }, {
                            s: "金寨县"
                        }, {
                            s: "霍山县"
                        }]
                    }, {
                        n: "亳州",
                        a: [{
                            s: "谯城区"
                        }, {
                            s: "涡阳县"
                        }, {
                            s: "蒙城县"
                        }, {
                            s: "利辛县"
                        }]
                    }, {
                        n: "池州",
                        a: [{
                            s: "贵池区"
                        }, {
                            s: "东至县"
                        }, {
                            s: "石台县"
                        }, {
                            s: "青阳县"
                        }]
                    }, {
                        n: "宣城",
                        a: [{
                            s: "宣州区"
                        }, {
                            s: "郎溪县"
                        }, {
                            s: "广德县"
                        }, {
                            s: "泾县"
                        }, {
                            s: "绩溪县"
                        }, {
                            s: "旌德县"
                        }, {
                            s: "宁国市"
                        }]
                    }]
                }, {
                    p: "福建",
                    c: [{
                        n: "福州",
                        a: [{
                            s: "鼓楼区"
                        }, {
                            s: "台江区"
                        }, {
                            s: "仓山区"
                        }, {
                            s: "马尾区"
                        }, {
                            s: "晋安区"
                        }, {
                            s: "闽侯县"
                        }, {
                            s: "连江县"
                        }, {
                            s: "罗源县"
                        }, {
                            s: "闽清县"
                        }, {
                            s: "永泰县"
                        }, {
                            s: "平潭县"
                        }, {
                            s: "福清市"
                        }, {
                            s: "长乐市"
                        }]
                    }, {
                        n: "厦门",
                        a: [{
                            s: "思明区"
                        }, {
                            s: "海沧区"
                        }, {
                            s: "湖里区"
                        }, {
                            s: "集美区"
                        }, {
                            s: "同安区"
                        }, {
                            s: "翔安区"
                        }]
                    }, {
                        n: "莆田",
                        a: [{
                            s: "城厢区"
                        }, {
                            s: "涵江区"
                        }, {
                            s: "荔城区"
                        }, {
                            s: "秀屿区"
                        }, {
                            s: "仙游县"
                        }]
                    }, {
                        n: "三明",
                        a: [{
                            s: "梅列区"
                        }, {
                            s: "三元区"
                        }, {
                            s: "明溪县"
                        }, {
                            s: "清流县"
                        }, {
                            s: "宁化县"
                        }, {
                            s: "大田县"
                        }, {
                            s: "尤溪县"
                        }, {
                            s: "沙县"
                        }, {
                            s: "将乐县"
                        }, {
                            s: "泰宁县"
                        }, {
                            s: "建宁县"
                        }, {
                            s: "永安市"
                        }]
                    }, {
                        n: "泉州",
                        a: [{
                            s: "鲤城区"
                        }, {
                            s: "丰泽区"
                        }, {
                            s: "洛江区"
                        }, {
                            s: "泉港区"
                        }, {
                            s: "惠安县"
                        }, {
                            s: "安溪县"
                        }, {
                            s: "永春县"
                        }, {
                            s: "德化县"
                        }, {
                            s: "金门县"
                        }, {
                            s: "石狮市"
                        }, {
                            s: "晋江市"
                        }, {
                            s: "南安市"
                        }]
                    }, {
                        n: "漳州",
                        a: [{
                            s: "芗城区"
                        }, {
                            s: "龙文区"
                        }, {
                            s: "云霄县"
                        }, {
                            s: "漳浦县"
                        }, {
                            s: "诏安县"
                        }, {
                            s: "长泰县"
                        }, {
                            s: "东山县"
                        }, {
                            s: "南靖县"
                        }, {
                            s: "平和县"
                        }, {
                            s: "华安县"
                        }, {
                            s: "龙海市"
                        }]
                    }, {
                        n: "南平",
                        a: [{
                            s: "延平区"
                        }, {
                            s: "顺昌县"
                        }, {
                            s: "浦城县"
                        }, {
                            s: "光泽县"
                        }, {
                            s: "松溪县"
                        }, {
                            s: "政和县"
                        }, {
                            s: "邵武市"
                        }, {
                            s: "武夷山市"
                        }, {
                            s: "建瓯市"
                        }, {
                            s: "建阳市"
                        }]
                    }, {
                        n: "龙岩",
                        a: [{
                            s: "新罗区"
                        }, {
                            s: "长汀县"
                        }, {
                            s: "永定县"
                        }, {
                            s: "上杭县"
                        }, {
                            s: "武平县"
                        }, {
                            s: "连城县"
                        }, {
                            s: "漳平市"
                        }]
                    }, {
                        n: "宁德",
                        a: [{
                            s: "蕉城区"
                        }, {
                            s: "霞浦县"
                        }, {
                            s: "古田县"
                        }, {
                            s: "屏南县"
                        }, {
                            s: "寿宁县"
                        }, {
                            s: "周宁县"
                        }, {
                            s: "柘荣县"
                        }, {
                            s: "福安市"
                        }, {
                            s: "福鼎市"
                        }]
                    }]
                }, {
                    p: "江西",
                    c: [{
                        n: "南昌",
                        a: [{
                            s: "东湖区"
                        }, {
                            s: "西湖区"
                        }, {
                            s: "青云谱区"
                        }, {
                            s: "湾里区"
                        }, {
                            s: "青山湖区"
                        }, {
                            s: "南昌县"
                        }, {
                            s: "新建县"
                        }, {
                            s: "安义县"
                        }, {
                            s: "进贤县"
                        }]
                    }, {
                        n: "景德镇",
                        a: [{
                            s: "昌江区"
                        }, {
                            s: "珠山区"
                        }, {
                            s: "浮梁县"
                        }, {
                            s: "乐平市"
                        }]
                    }, {
                        n: "萍乡",
                        a: [{
                            s: "安源区"
                        }, {
                            s: "湘东区"
                        }, {
                            s: "莲花县"
                        }, {
                            s: "上栗县"
                        }, {
                            s: "芦溪县"
                        }]
                    }, {
                        n: "九江",
                        a: [{
                            s: "庐山区"
                        }, {
                            s: "浔阳区"
                        }, {
                            s: "九江县"
                        }, {
                            s: "武宁县"
                        }, {
                            s: "修水县"
                        }, {
                            s: "永修县"
                        }, {
                            s: "德安县"
                        }, {
                            s: "星子县"
                        }, {
                            s: "都昌县"
                        }, {
                            s: "湖口县"
                        }, {
                            s: "彭泽县"
                        }, {
                            s: "瑞昌市"
                        }]
                    }, {
                        n: "新余",
                        a: [{
                            s: "渝水区"
                        }, {
                            s: "分宜县"
                        }]
                    }, {
                        n: "鹰潭",
                        a: [{
                            s: "月湖区"
                        }, {
                            s: "余江县"
                        }, {
                            s: "贵溪市"
                        }]
                    }, {
                        n: "赣州",
                        a: [{
                            s: "章贡区"
                        }, {
                            s: "赣县"
                        }, {
                            s: "信丰县"
                        }, {
                            s: "大余县"
                        }, {
                            s: "上犹县"
                        }, {
                            s: "崇义县"
                        }, {
                            s: "安远县"
                        }, {
                            s: "龙南县"
                        }, {
                            s: "定南县"
                        }, {
                            s: "全南县"
                        }, {
                            s: "宁都县"
                        }, {
                            s: "于都县"
                        }, {
                            s: "兴国县"
                        }, {
                            s: "会昌县"
                        }, {
                            s: "寻乌县"
                        }, {
                            s: "石城县"
                        }, {
                            s: "瑞金市"
                        }, {
                            s: "南康市"
                        }]
                    }, {
                        n: "吉安",
                        a: [{
                            s: "吉州区"
                        }, {
                            s: "青原区"
                        }, {
                            s: "吉安县"
                        }, {
                            s: "吉水县"
                        }, {
                            s: "峡江县"
                        }, {
                            s: "新干县"
                        }, {
                            s: "永丰县"
                        }, {
                            s: "泰和县"
                        }, {
                            s: "遂川县"
                        }, {
                            s: "万安县"
                        }, {
                            s: "安福县"
                        }, {
                            s: "永新县"
                        }, {
                            s: "井冈山市"
                        }]
                    }, {
                        n: "宜春",
                        a: [{
                            s: "袁州区"
                        }, {
                            s: "奉新县"
                        }, {
                            s: "万载县"
                        }, {
                            s: "上高县"
                        }, {
                            s: "宜丰县"
                        }, {
                            s: "靖安县"
                        }, {
                            s: "铜鼓县"
                        }, {
                            s: "丰城市"
                        }, {
                            s: "樟树市"
                        }, {
                            s: "高安市"
                        }]
                    }, {
                        n: "抚州",
                        a: [{
                            s: "临川区"
                        }, {
                            s: "南城县"
                        }, {
                            s: "黎川县"
                        }, {
                            s: "南丰县"
                        }, {
                            s: "崇仁县"
                        }, {
                            s: "乐安县"
                        }, {
                            s: "宜黄县"
                        }, {
                            s: "金溪县"
                        }, {
                            s: "资溪县"
                        }, {
                            s: "东乡县"
                        }, {
                            s: "广昌县"
                        }]
                    }, {
                        n: "上饶",
                        a: [{
                            s: "信州区"
                        }, {
                            s: "上饶县"
                        }, {
                            s: "广丰县"
                        }, {
                            s: "玉山县"
                        }, {
                            s: "铅山县"
                        }, {
                            s: "横峰县"
                        }, {
                            s: "弋阳县"
                        }, {
                            s: "余干县"
                        }, {
                            s: "鄱阳县"
                        }, {
                            s: "万年县"
                        }, {
                            s: "婺源县"
                        }, {
                            s: "德兴市"
                        }]
                    }]
                }, {
                    p: "山东",
                    c: [{
                        n: "济南",
                        a: [{
                            s: "历下区"
                        }, {
                            s: "市中区"
                        }, {
                            s: "槐荫区"
                        }, {
                            s: "天桥区"
                        }, {
                            s: "历城区"
                        }, {
                            s: "长清区"
                        }, {
                            s: "平阴县"
                        }, {
                            s: "济阳县"
                        }, {
                            s: "商河县"
                        }, {
                            s: "章丘市"
                        }]
                    }, {
                        n: "青岛",
                        a: [{
                            s: "市南区"
                        }, {
                            s: "市北区"
                        }, {
                            s: "四方区"
                        }, {
                            s: "黄岛区"
                        }, {
                            s: "崂山区"
                        }, {
                            s: "李沧区"
                        }, {
                            s: "城阳区"
                        }, {
                            s: "胶州市"
                        }, {
                            s: "即墨市"
                        }, {
                            s: "平度市"
                        }, {
                            s: "胶南市"
                        }, {
                            s: "莱西市"
                        }]
                    }, {
                        n: "淄博",
                        a: [{
                            s: "淄川区"
                        }, {
                            s: "张店区"
                        }, {
                            s: "博山区"
                        }, {
                            s: "临淄区"
                        }, {
                            s: "周村区"
                        }, {
                            s: "桓台县"
                        }, {
                            s: "高青县"
                        }, {
                            s: "沂源县"
                        }]
                    }, {
                        n: "枣庄",
                        a: [{
                            s: "市中区"
                        }, {
                            s: "薛城区"
                        }, {
                            s: "峄城区"
                        }, {
                            s: "台儿庄区"
                        }, {
                            s: "山亭区"
                        }, {
                            s: "滕州市"
                        }]
                    }, {
                        n: "东营",
                        a: [{
                            s: "东营区"
                        }, {
                            s: "河口区"
                        }, {
                            s: "垦利县"
                        }, {
                            s: "利津县"
                        }, {
                            s: "广饶县"
                        }]
                    }, {
                        n: "烟台",
                        a: [{
                            s: "芝罘区"
                        }, {
                            s: "福山区"
                        }, {
                            s: "牟平区"
                        }, {
                            s: "莱山区"
                        }, {
                            s: "长岛县"
                        }, {
                            s: "龙口市"
                        }, {
                            s: "莱阳市"
                        }, {
                            s: "莱州市"
                        }, {
                            s: "蓬莱市"
                        }, {
                            s: "招远市"
                        }, {
                            s: "栖霞市"
                        }, {
                            s: "海阳市"
                        }]
                    }, {
                        n: "潍坊",
                        a: [{
                            s: "潍城区"
                        }, {
                            s: "寒亭区"
                        }, {
                            s: "坊子区"
                        }, {
                            s: "奎文区"
                        }, {
                            s: "临朐县"
                        }, {
                            s: "昌乐县"
                        }, {
                            s: "青州市"
                        }, {
                            s: "诸城市"
                        }, {
                            s: "寿光市"
                        }, {
                            s: "安丘市"
                        }, {
                            s: "高密市"
                        }, {
                            s: "昌邑市"
                        }]
                    }, {
                        n: "济宁",
                        a: [{
                            s: "市中区"
                        }, {
                            s: "任城区"
                        }, {
                            s: "微山县"
                        }, {
                            s: "鱼台县"
                        }, {
                            s: "金乡县"
                        }, {
                            s: "嘉祥县"
                        }, {
                            s: "汶上县"
                        }, {
                            s: "泗水县"
                        }, {
                            s: "梁山县"
                        }, {
                            s: "曲阜市"
                        }, {
                            s: "兖州市"
                        }, {
                            s: "邹城市"
                        }]
                    }, {
                        n: "泰安",
                        a: [{
                            s: "泰山区"
                        }, {
                            s: "岱岳区"
                        }, {
                            s: "宁阳县"
                        }, {
                            s: "东平县"
                        }, {
                            s: "新泰市"
                        }, {
                            s: "肥城市"
                        }]
                    }, {
                        n: "威海",
                        a: [{
                            s: "环翠区"
                        }, {
                            s: "文登市"
                        }, {
                            s: "荣成市"
                        }, {
                            s: "乳山市"
                        }]
                    }, {
                        n: "日照",
                        a: [{
                            s: "东港区"
                        }, {
                            s: "岚山区"
                        }, {
                            s: "五莲县"
                        }, {
                            s: "莒县"
                        }]
                    }, {
                        n: "莱芜",
                        a: [{
                            s: "莱城区"
                        }, {
                            s: "钢城区"
                        }]
                    }, {
                        n: "临沂",
                        a: [{
                            s: "兰山区"
                        }, {
                            s: "罗庄区"
                        }, {
                            s: "河东区"
                        }, {
                            s: "沂南县"
                        }, {
                            s: "郯城县"
                        }, {
                            s: "沂水县"
                        }, {
                            s: "苍山县"
                        }, {
                            s: "费县"
                        }, {
                            s: "平邑县"
                        }, {
                            s: "莒南县"
                        }, {
                            s: "蒙阴县"
                        }, {
                            s: "临沭县"
                        }]
                    }, {
                        n: "德州",
                        a: [{
                            s: "德城区"
                        }, {
                            s: "陵县"
                        }, {
                            s: "宁津县"
                        }, {
                            s: "庆云县"
                        }, {
                            s: "临邑县"
                        }, {
                            s: "齐河县"
                        }, {
                            s: "平原县"
                        }, {
                            s: "夏津县"
                        }, {
                            s: "武城县"
                        }, {
                            s: "乐陵市"
                        }, {
                            s: "禹城市"
                        }]
                    }, {
                        n: "聊城",
                        a: [{
                            s: "东昌府区"
                        }, {
                            s: "阳谷县"
                        }, {
                            s: "莘县"
                        }, {
                            s: "茌平县"
                        }, {
                            s: "东阿县"
                        }, {
                            s: "冠县"
                        }, {
                            s: "高唐县"
                        }, {
                            s: "临清市"
                        }]
                    }, {
                        n: "滨州",
                        a: [{
                            s: "滨城区"
                        }, {
                            s: "惠民县"
                        }, {
                            s: "阳信县"
                        }, {
                            s: "无棣县"
                        }, {
                            s: "沾化县"
                        }, {
                            s: "博兴县"
                        }, {
                            s: "邹平县"
                        }]
                    }, {
                        n: "菏泽",
                        a: [{
                            s: "牡丹区"
                        }, {
                            s: "曹县"
                        }, {
                            s: "单县"
                        }, {
                            s: "成武县"
                        }, {
                            s: "巨野县"
                        }, {
                            s: "郓城县"
                        }, {
                            s: "鄄城县"
                        }, {
                            s: "定陶县"
                        }, {
                            s: "东明县"
                        }]
                    }]
                }, {
                    p: "河南",
                    c: [{
                        n: "郑州",
                        a: [{
                            s: "中原区"
                        }, {
                            s: "二七区"
                        }, {
                            s: "管城回族区"
                        }, {
                            s: "金水区"
                        }, {
                            s: "上街区"
                        }, {
                            s: "惠济区"
                        }, {
                            s: "中牟县"
                        }, {
                            s: "巩义市"
                        }, {
                            s: "荥阳市"
                        }, {
                            s: "新密市"
                        }, {
                            s: "新郑市"
                        }, {
                            s: "登封市"
                        }]
                    }, {
                        n: "开封",
                        a: [{
                            s: "龙亭区"
                        }, {
                            s: "顺河回族区"
                        }, {
                            s: "鼓楼区"
                        }, {
                            s: "禹王台区"
                        }, {
                            s: "金明区"
                        }, {
                            s: "杞县"
                        }, {
                            s: "通许县"
                        }, {
                            s: "尉氏县"
                        }, {
                            s: "开封县"
                        }, {
                            s: "兰考县"
                        }]
                    }, {
                        n: "洛阳",
                        a: [{
                            s: "老城区"
                        }, {
                            s: "西工区"
                        }, {
                            s: "廛河回族区"
                        }, {
                            s: "涧西区"
                        }, {
                            s: "吉利区"
                        }, {
                            s: "洛龙区"
                        }, {
                            s: "孟津县"
                        }, {
                            s: "新安县"
                        }, {
                            s: "栾川县"
                        }, {
                            s: "嵩县"
                        }, {
                            s: "汝阳县"
                        }, {
                            s: "宜阳县"
                        }, {
                            s: "洛宁县"
                        }, {
                            s: "伊川县"
                        }, {
                            s: "偃师市"
                        }]
                    }, {
                        n: "平顶山",
                        a: [{
                            s: "新华区"
                        }, {
                            s: "卫东区"
                        }, {
                            s: "石龙区"
                        }, {
                            s: "湛河区"
                        }, {
                            s: "宝丰县"
                        }, {
                            s: "叶县"
                        }, {
                            s: "鲁山县"
                        }, {
                            s: "郏县"
                        }, {
                            s: "舞钢市"
                        }, {
                            s: "汝州市"
                        }]
                    }, {
                        n: "安阳",
                        a: [{
                            s: "文峰区"
                        }, {
                            s: "北关区"
                        }, {
                            s: "殷都区"
                        }, {
                            s: "龙安区"
                        }, {
                            s: "安阳县"
                        }, {
                            s: "汤阴县"
                        }, {
                            s: "滑县"
                        }, {
                            s: "内黄县"
                        }, {
                            s: "林州市"
                        }]
                    }, {
                        n: "鹤壁",
                        a: [{
                            s: "鹤山区"
                        }, {
                            s: "山城区"
                        }, {
                            s: "淇滨区"
                        }, {
                            s: "浚县"
                        }, {
                            s: "淇县"
                        }]
                    }, {
                        n: "新乡",
                        a: [{
                            s: "红旗区"
                        }, {
                            s: "卫滨区"
                        }, {
                            s: "凤泉区"
                        }, {
                            s: "牧野区"
                        }, {
                            s: "新乡县"
                        }, {
                            s: "获嘉县"
                        }, {
                            s: "原阳县"
                        }, {
                            s: "延津县"
                        }, {
                            s: "封丘县"
                        }, {
                            s: "长垣县"
                        }, {
                            s: "卫辉市"
                        }, {
                            s: "辉县市"
                        }]
                    }, {
                        n: "焦作",
                        a: [{
                            s: "解放区"
                        }, {
                            s: "中站区"
                        }, {
                            s: "马村区"
                        }, {
                            s: "山阳区"
                        }, {
                            s: "修武县"
                        }, {
                            s: "博爱县"
                        }, {
                            s: "武陟县"
                        }, {
                            s: "温县"
                        }, {
                            s: "沁阳市"
                        }, {
                            s: "孟州市"
                        }]
                    }, {
                        n: "濮阳",
                        a: [{
                            s: "华龙区"
                        }, {
                            s: "清丰县"
                        }, {
                            s: "南乐县"
                        }, {
                            s: "范县"
                        }, {
                            s: "台前县"
                        }, {
                            s: "濮阳县"
                        }]
                    }, {
                        n: "许昌",
                        a: [{
                            s: "魏都区"
                        }, {
                            s: "许昌县"
                        }, {
                            s: "鄢陵县"
                        }, {
                            s: "襄城县"
                        }, {
                            s: "禹州市"
                        }, {
                            s: "长葛市"
                        }]
                    }, {
                        n: "漯河",
                        a: [{
                            s: "源汇区"
                        }, {
                            s: "郾城区"
                        }, {
                            s: "召陵区"
                        }, {
                            s: "舞阳县"
                        }, {
                            s: "临颍县"
                        }]
                    }, {
                        n: "三门峡",
                        a: [{
                            s: "湖滨区"
                        }, {
                            s: "渑池县"
                        }, {
                            s: "陕县"
                        }, {
                            s: "卢氏县"
                        }, {
                            s: "义马市"
                        }, {
                            s: "灵宝市"
                        }]
                    }, {
                        n: "南阳",
                        a: [{
                            s: "宛城区"
                        }, {
                            s: "卧龙区"
                        }, {
                            s: "南召县"
                        }, {
                            s: "方城县"
                        }, {
                            s: "西峡县"
                        }, {
                            s: "镇平县"
                        }, {
                            s: "内乡县"
                        }, {
                            s: "淅川县"
                        }, {
                            s: "社旗县"
                        }, {
                            s: "唐河县"
                        }, {
                            s: "新野县"
                        }, {
                            s: "桐柏县"
                        }, {
                            s: "邓州市"
                        }]
                    }, {
                        n: "商丘",
                        a: [{
                            s: "梁园区"
                        }, {
                            s: "睢阳区"
                        }, {
                            s: "民权县"
                        }, {
                            s: "睢县"
                        }, {
                            s: "宁陵县"
                        }, {
                            s: "柘城县"
                        }, {
                            s: "虞城县"
                        }, {
                            s: "夏邑县"
                        }, {
                            s: "永城市"
                        }]
                    }, {
                        n: "信阳",
                        a: [{
                            s: "浉河区"
                        }, {
                            s: "平桥区"
                        }, {
                            s: "罗山县"
                        }, {
                            s: "光山县"
                        }, {
                            s: "新县"
                        }, {
                            s: "商城县"
                        }, {
                            s: "固始县"
                        }, {
                            s: "潢川县"
                        }, {
                            s: "淮滨县"
                        }, {
                            s: "息县"
                        }]
                    }, {
                        n: "周口",
                        a: [{
                            s: "川汇区"
                        }, {
                            s: "扶沟县"
                        }, {
                            s: "西华县"
                        }, {
                            s: "商水县"
                        }, {
                            s: "沈丘县"
                        }, {
                            s: "郸城县"
                        }, {
                            s: "淮阳县"
                        }, {
                            s: "太康县"
                        }, {
                            s: "鹿邑县"
                        }, {
                            s: "项城市"
                        }]
                    }, {
                        n: "驻马店",
                        a: [{
                            s: "驿城区"
                        }, {
                            s: "西平县"
                        }, {
                            s: "上蔡县"
                        }, {
                            s: "平舆县"
                        }, {
                            s: "正阳县"
                        }, {
                            s: "确山县"
                        }, {
                            s: "泌阳县"
                        }, {
                            s: "汝南县"
                        }, {
                            s: "遂平县"
                        }, {
                            s: "新蔡县"
                        }]
                    }, {
                        n: "济源",
                        a: [{
                            s: "济源"
                        }]
                    }]
                }, {
                    p: "湖北",
                    c: [{
                        n: "武汉",
                        a: [{
                            s: "江岸区"
                        }, {
                            s: "江汉区"
                        }, {
                            s: "硚口区"
                        }, {
                            s: "汉阳区"
                        }, {
                            s: "武昌区"
                        }, {
                            s: "青山区"
                        }, {
                            s: "洪山区"
                        }, {
                            s: "东西湖区"
                        }, {
                            s: "汉南区"
                        }, {
                            s: "蔡甸区"
                        }, {
                            s: "江夏区"
                        }, {
                            s: "黄陂区"
                        }, {
                            s: "新洲区"
                        }]
                    }, {
                        n: "黄石",
                        a: [{
                            s: "黄石港区"
                        }, {
                            s: "西塞山区"
                        }, {
                            s: "下陆区"
                        }, {
                            s: "铁山区"
                        }, {
                            s: "阳新县"
                        }, {
                            s: "大冶市"
                        }]
                    }, {
                        n: "十堰",
                        a: [{
                            s: "茅箭区"
                        }, {
                            s: "张湾区"
                        }, {
                            s: "郧县"
                        }, {
                            s: "郧西县"
                        }, {
                            s: "竹山县"
                        }, {
                            s: "竹溪县"
                        }, {
                            s: "房县"
                        }, {
                            s: "丹江口市"
                        }]
                    }, {
                        n: "宜昌",
                        a: [{
                            s: "西陵区"
                        }, {
                            s: "伍家岗区"
                        }, {
                            s: "点军区"
                        }, {
                            s: "猇亭区"
                        }, {
                            s: "夷陵区"
                        }, {
                            s: "远安县"
                        }, {
                            s: "兴山县"
                        }, {
                            s: "秭归县"
                        }, {
                            s: "长阳土家族自治县"
                        }, {
                            s: "五峰土家族自治县"
                        }, {
                            s: "宜都市"
                        }, {
                            s: "当阳市"
                        }, {
                            s: "枝江市"
                        }]
                    }, {
                        n: "襄樊",
                        a: [{
                            s: "襄城区"
                        }, {
                            s: "樊城区"
                        }, {
                            s: "襄阳区"
                        }, {
                            s: "南漳县"
                        }, {
                            s: "谷城县"
                        }, {
                            s: "保康县"
                        }, {
                            s: "老河口市"
                        }, {
                            s: "枣阳市"
                        }, {
                            s: "宜城市"
                        }]
                    }, {
                        n: "鄂州",
                        a: [{
                            s: "梁子湖区"
                        }, {
                            s: "华容区"
                        }, {
                            s: "鄂城区"
                        }]
                    }, {
                        n: "荆门",
                        a: [{
                            s: "东宝区"
                        }, {
                            s: "掇刀区"
                        }, {
                            s: "京山县"
                        }, {
                            s: "沙洋县"
                        }, {
                            s: "钟祥市"
                        }]
                    }, {
                        n: "孝感",
                        a: [{
                            s: "孝南区"
                        }, {
                            s: "孝昌县"
                        }, {
                            s: "大悟县"
                        }, {
                            s: "云梦县"
                        }, {
                            s: "应城市"
                        }, {
                            s: "安陆市"
                        }, {
                            s: "汉川市"
                        }]
                    }, {
                        n: "荆州",
                        a: [{
                            s: "沙市区"
                        }, {
                            s: "荆州区"
                        }, {
                            s: "公安县"
                        }, {
                            s: "监利县"
                        }, {
                            s: "江陵县"
                        }, {
                            s: "石首市"
                        }, {
                            s: "洪湖市"
                        }, {
                            s: "松滋市"
                        }]
                    }, {
                        n: "黄冈",
                        a: [{
                            s: "黄州区"
                        }, {
                            s: "团风县"
                        }, {
                            s: "红安县"
                        }, {
                            s: "罗田县"
                        }, {
                            s: "英山县"
                        }, {
                            s: "浠水县"
                        }, {
                            s: "蕲春县"
                        }, {
                            s: "黄梅县"
                        }, {
                            s: "麻城市"
                        }, {
                            s: "武穴市"
                        }]
                    }, {
                        n: "咸宁",
                        a: [{
                            s: "咸安区"
                        }, {
                            s: "嘉鱼县"
                        }, {
                            s: "通城县"
                        }, {
                            s: "崇阳县"
                        }, {
                            s: "通山县"
                        }, {
                            s: "赤壁市"
                        }]
                    }, {
                        n: "随州",
                        a: [{
                            s: "曾都区"
                        }, {
                            s: "随县"
                        }, {
                            s: "广水市"
                        }]
                    }, {
                        n: "恩施",
                        a: [{
                            s: "恩施市"
                        }, {
                            s: "利川市"
                        }, {
                            s: "建始县"
                        }, {
                            s: "巴东县"
                        }, {
                            s: "宣恩县"
                        }, {
                            s: "咸丰县"
                        }, {
                            s: "来凤县"
                        }, {
                            s: "鹤峰县"
                        }]
                    }, {
                        n: "仙桃",
                        a: [{
                            s: "仙桃"
                        }]
                    }, {
                        n: "潜江",
                        a: [{
                            s: "潜江"
                        }]
                    }, {
                        n: "天门",
                        a: [{
                            s: "天门"
                        }]
                    }, {
                        n: "神农架",
                        a: [{
                            s: "神农架"
                        }]
                    }]
                }, {
                    p: "湖南",
                    c: [{
                        n: "长沙",
                        a: [{
                            s: "芙蓉区"
                        }, {
                            s: "天心区"
                        }, {
                            s: "岳麓区"
                        }, {
                            s: "开福区"
                        }, {
                            s: "雨花区"
                        }, {
                            s: "长沙县"
                        }, {
                            s: "望城县"
                        }, {
                            s: "宁乡县"
                        }, {
                            s: "浏阳市"
                        }]
                    }, {
                        n: "株洲",
                        a: [{
                            s: "荷塘区"
                        }, {
                            s: "芦淞区"
                        }, {
                            s: "石峰区"
                        }, {
                            s: "天元区"
                        }, {
                            s: "株洲县"
                        }, {
                            s: "攸县"
                        }, {
                            s: "茶陵县"
                        }, {
                            s: "炎陵县"
                        }, {
                            s: "醴陵市"
                        }]
                    }, {
                        n: "湘潭",
                        a: [{
                            s: "雨湖区"
                        }, {
                            s: "岳塘区"
                        }, {
                            s: "湘潭县"
                        }, {
                            s: "湘乡市"
                        }, {
                            s: "韶山市"
                        }]
                    }, {
                        n: "衡阳",
                        a: [{
                            s: "珠晖区"
                        }, {
                            s: "雁峰区"
                        }, {
                            s: "石鼓区"
                        }, {
                            s: "蒸湘区"
                        }, {
                            s: "南岳区"
                        }, {
                            s: "衡阳县"
                        }, {
                            s: "衡南县"
                        }, {
                            s: "衡山县"
                        }, {
                            s: "衡东县"
                        }, {
                            s: "祁东县"
                        }, {
                            s: "耒阳市"
                        }, {
                            s: "常宁市"
                        }]
                    }, {
                        n: "邵阳",
                        a: [{
                            s: "双清区"
                        }, {
                            s: "大祥区"
                        }, {
                            s: "北塔区"
                        }, {
                            s: "邵东县"
                        }, {
                            s: "新邵县"
                        }, {
                            s: "邵阳县"
                        }, {
                            s: "隆回县"
                        }, {
                            s: "洞口县"
                        }, {
                            s: "绥宁县"
                        }, {
                            s: "新宁县"
                        }, {
                            s: "城步苗族自治县"
                        }, {
                            s: "武冈市"
                        }]
                    }, {
                        n: "岳阳",
                        a: [{
                            s: "岳阳楼区"
                        }, {
                            s: "云溪区"
                        }, {
                            s: "君山区"
                        }, {
                            s: "岳阳县"
                        }, {
                            s: "华容县"
                        }, {
                            s: "湘阴县"
                        }, {
                            s: "平江县"
                        }, {
                            s: "汨罗市"
                        }, {
                            s: "临湘市"
                        }]
                    }, {
                        n: "常德",
                        a: [{
                            s: "武陵区"
                        }, {
                            s: "鼎城区"
                        }, {
                            s: "安乡县"
                        }, {
                            s: "汉寿县"
                        }, {
                            s: "澧县"
                        }, {
                            s: "临澧县"
                        }, {
                            s: "桃源县"
                        }, {
                            s: "石门县"
                        }, {
                            s: "津市市"
                        }]
                    }, {
                        n: "张家界",
                        a: [{
                            s: "永定区"
                        }, {
                            s: "武陵源区"
                        }, {
                            s: "慈利县"
                        }, {
                            s: "桑植县"
                        }]
                    }, {
                        n: "益阳",
                        a: [{
                            s: "资阳区"
                        }, {
                            s: "赫山区"
                        }, {
                            s: "南县"
                        }, {
                            s: "桃江县"
                        }, {
                            s: "安化县"
                        }, {
                            s: "沅江市"
                        }]
                    }, {
                        n: "郴州",
                        a: [{
                            s: "北湖区"
                        }, {
                            s: "苏仙区"
                        }, {
                            s: "桂阳县"
                        }, {
                            s: "宜章县"
                        }, {
                            s: "永兴县"
                        }, {
                            s: "嘉禾县"
                        }, {
                            s: "临武县"
                        }, {
                            s: "汝城县"
                        }, {
                            s: "桂东县"
                        }, {
                            s: "安仁县"
                        }, {
                            s: "资兴市"
                        }]
                    }, {
                        n: "永州",
                        a: [{
                            s: "零陵区"
                        }, {
                            s: "冷水滩区"
                        }, {
                            s: "祁阳县"
                        }, {
                            s: "东安县"
                        }, {
                            s: "双牌县"
                        }, {
                            s: "道县"
                        }, {
                            s: "江永县"
                        }, {
                            s: "宁远县"
                        }, {
                            s: "蓝山县"
                        }, {
                            s: "新田县"
                        }, {
                            s: "江华瑶族自治县"
                        }]
                    }, {
                        n: "怀化",
                        a: [{
                            s: "鹤城区"
                        }, {
                            s: "中方县"
                        }, {
                            s: "沅陵县"
                        }, {
                            s: "辰溪县"
                        }, {
                            s: "溆浦县"
                        }, {
                            s: "会同县"
                        }, {
                            s: "麻阳苗族自治县"
                        }, {
                            s: "新晃侗族自治县"
                        }, {
                            s: "芷江侗族自治县"
                        }, {
                            s: "靖州苗族侗族自治县"
                        }, {
                            s: "通道侗族自治县"
                        }, {
                            s: "洪江市"
                        }]
                    }, {
                        n: "娄底",
                        a: [{
                            s: "娄星区"
                        }, {
                            s: "双峰县"
                        }, {
                            s: "新化县"
                        }, {
                            s: "冷水江市"
                        }, {
                            s: "涟源市"
                        }]
                    }, {
                        n: "湘西",
                        a: [{
                            s: "吉首市"
                        }, {
                            s: "泸溪县"
                        }, {
                            s: "凤凰县"
                        }, {
                            s: "花垣县"
                        }, {
                            s: "保靖县"
                        }, {
                            s: "古丈县"
                        }, {
                            s: "永顺县"
                        }, {
                            s: "龙山县"
                        }]
                    }]
                }, {
                    p: "广东",
                    c: [{
                        n: "广州",
                        a: [{
                            s: "荔湾区"
                        }, {
                            s: "越秀区"
                        }, {
                            s: "海珠区"
                        }, {
                            s: "天河区"
                        }, {
                            s: "白云区"
                        }, {
                            s: "黄埔区"
                        }, {
                            s: "番禺区"
                        }, {
                            s: "花都区"
                        }, {
                            s: "南沙区"
                        }, {
                            s: "萝岗区"
                        }, {
                            s: "增城市"
                        }, {
                            s: "从化市"
                        }]
                    }, {
                        n: "韶关",
                        a: [{
                            s: "武江区"
                        }, {
                            s: "浈江区"
                        }, {
                            s: "曲江区"
                        }, {
                            s: "始兴县"
                        }, {
                            s: "仁化县"
                        }, {
                            s: "翁源县"
                        }, {
                            s: "乳源瑶族自治县"
                        }, {
                            s: "新丰县"
                        }, {
                            s: "乐昌市"
                        }, {
                            s: "南雄市"
                        }]
                    }, {
                        n: "深圳",
                        a: [{
                            s: "罗湖区"
                        }, {
                            s: "福田区"
                        }, {
                            s: "南山区"
                        }, {
                            s: "宝安区"
                        }, {
                            s: "龙岗区"
                        }, {
                            s: "盐田区"
                        }]
                    }, {
                        n: "珠海",
                        a: [{
                            s: "香洲区"
                        }, {
                            s: "斗门区"
                        }, {
                            s: "金湾区"
                        }]
                    }, {
                        n: "汕头",
                        a: [{
                            s: "龙湖区"
                        }, {
                            s: "金平区"
                        }, {
                            s: "濠江区"
                        }, {
                            s: "潮阳区"
                        }, {
                            s: "潮南区"
                        }, {
                            s: "澄海区"
                        }, {
                            s: "南澳县"
                        }]
                    }, {
                        n: "佛山",
                        a: [{
                            s: "禅城区"
                        }, {
                            s: "南海区"
                        }, {
                            s: "顺德区"
                        }, {
                            s: "三水区"
                        }, {
                            s: "高明区"
                        }]
                    }, {
                        n: "江门",
                        a: [{
                            s: "蓬江区"
                        }, {
                            s: "江海区"
                        }, {
                            s: "新会区"
                        }, {
                            s: "台山市"
                        }, {
                            s: "开平市"
                        }, {
                            s: "鹤山市"
                        }, {
                            s: "恩平市"
                        }]
                    }, {
                        n: "湛江",
                        a: [{
                            s: "赤坎区"
                        }, {
                            s: "霞山区"
                        }, {
                            s: "坡头区"
                        }, {
                            s: "麻章区"
                        }, {
                            s: "遂溪县"
                        }, {
                            s: "徐闻县"
                        }, {
                            s: "廉江市"
                        }, {
                            s: "雷州市"
                        }, {
                            s: "吴川市"
                        }]
                    }, {
                        n: "茂名",
                        a: [{
                            s: "茂南区"
                        }, {
                            s: "茂港区"
                        }, {
                            s: "电白县"
                        }, {
                            s: "高州市"
                        }, {
                            s: "化州市"
                        }, {
                            s: "信宜市"
                        }]
                    }, {
                        n: "肇庆",
                        a: [{
                            s: "端州区"
                        }, {
                            s: "鼎湖区"
                        }, {
                            s: "广宁县"
                        }, {
                            s: "怀集县"
                        }, {
                            s: "封开县"
                        }, {
                            s: "德庆县"
                        }, {
                            s: "高要市"
                        }, {
                            s: "四会市"
                        }]
                    }, {
                        n: "惠州",
                        a: [{
                            s: "惠城区"
                        }, {
                            s: "惠阳区"
                        }, {
                            s: "博罗县"
                        }, {
                            s: "惠东县"
                        }, {
                            s: "龙门县"
                        }]
                    }, {
                        n: "梅州",
                        a: [{
                            s: "梅江区"
                        }, {
                            s: "梅县"
                        }, {
                            s: "大埔县"
                        }, {
                            s: "丰顺县"
                        }, {
                            s: "五华县"
                        }, {
                            s: "平远县"
                        }, {
                            s: "蕉岭县"
                        }, {
                            s: "兴宁市"
                        }]
                    }, {
                        n: "汕尾",
                        a: [{
                            s: "城区"
                        }, {
                            s: "海丰县"
                        }, {
                            s: "陆河县"
                        }, {
                            s: "陆丰市"
                        }]
                    }, {
                        n: "河源",
                        a: [{
                            s: "源城区"
                        }, {
                            s: "紫金县"
                        }, {
                            s: "龙川县"
                        }, {
                            s: "连平县"
                        }, {
                            s: "和平县"
                        }, {
                            s: "东源县"
                        }]
                    }, {
                        n: "阳江",
                        a: [{
                            s: "江城区"
                        }, {
                            s: "阳西县"
                        }, {
                            s: "阳东县"
                        }, {
                            s: "阳春市"
                        }]
                    }, {
                        n: "清远",
                        a: [{
                            s: "清城区"
                        }, {
                            s: "佛冈县"
                        }, {
                            s: "阳山县"
                        }, {
                            s: "连山壮族瑶族自治县"
                        }, {
                            s: "连南瑶族自治县"
                        }, {
                            s: "清新县"
                        }, {
                            s: "英德市"
                        }, {
                            s: "连州市"
                        }]
                    }, {
                        n: "东莞",
                        a: [{
                            s: "东莞市"
                        }]
                    }, {
                        n: "中山",
                        a: [{
                            s: "中山市"
                        }]
                    }, {
                        n: "潮州",
                        a: [{
                            s: "湘桥区"
                        }, {
                            s: "潮安县"
                        }, {
                            s: "饶平县"
                        }]
                    }, {
                        n: "揭阳",
                        a: [{
                            s: "榕城区"
                        }, {
                            s: "揭东县"
                        }, {
                            s: "揭西县"
                        }, {
                            s: "惠来县"
                        }, {
                            s: "普宁市"
                        }]
                    }, {
                        n: "云浮",
                        a: [{
                            s: "云城区"
                        }, {
                            s: "新兴县"
                        }, {
                            s: "郁南县"
                        }, {
                            s: "云安县"
                        }, {
                            s: "罗定市"
                        }]
                    }]
                }, {
                    p: "广西",
                    c: [{
                        n: "南宁",
                        a: [{
                            s: "兴宁区"
                        }, {
                            s: "青秀区"
                        }, {
                            s: "江南区"
                        }, {
                            s: "西乡塘区"
                        }, {
                            s: "良庆区"
                        }, {
                            s: "邕宁区"
                        }, {
                            s: "武鸣县"
                        }, {
                            s: "隆安县"
                        }, {
                            s: "马山县"
                        }, {
                            s: "上林县"
                        }, {
                            s: "宾阳县"
                        }, {
                            s: "横县"
                        }]
                    }, {
                        n: "柳州",
                        a: [{
                            s: "城中区"
                        }, {
                            s: "鱼峰区"
                        }, {
                            s: "柳南区"
                        }, {
                            s: "柳北区"
                        }, {
                            s: "柳江县"
                        }, {
                            s: "柳城县"
                        }, {
                            s: "鹿寨县"
                        }, {
                            s: "融安县"
                        }, {
                            s: "融水苗族自治县"
                        }, {
                            s: "三江侗族自治县"
                        }]
                    }, {
                        n: "桂林",
                        a: [{
                            s: "秀峰区"
                        }, {
                            s: "叠彩区"
                        }, {
                            s: "象山区"
                        }, {
                            s: "七星区"
                        }, {
                            s: "雁山区"
                        }, {
                            s: "阳朔县"
                        }, {
                            s: "临桂县"
                        }, {
                            s: "灵川县"
                        }, {
                            s: "全州县"
                        }, {
                            s: "兴安县"
                        }, {
                            s: "永福县"
                        }, {
                            s: "灌阳县"
                        }, {
                            s: "龙胜各族自治县"
                        }, {
                            s: "资源县"
                        }, {
                            s: "平乐县"
                        }, {
                            s: "荔蒲县"
                        }, {
                            s: "恭城瑶族自治县"
                        }]
                    }, {
                        n: "梧州",
                        a: [{
                            s: "万秀区"
                        }, {
                            s: "蝶山区"
                        }, {
                            s: "长洲区"
                        }, {
                            s: "苍梧县"
                        }, {
                            s: "藤县"
                        }, {
                            s: "蒙山县"
                        }, {
                            s: "岑溪市"
                        }]
                    }, {
                        n: "北海",
                        a: [{
                            s: "海城区"
                        }, {
                            s: "银海区"
                        }, {
                            s: "铁山港区"
                        }, {
                            s: "合浦县"
                        }]
                    }, {
                        n: "防城港",
                        a: [{
                            s: "港口区"
                        }, {
                            s: "防城区"
                        }, {
                            s: "上思县"
                        }, {
                            s: "东兴市"
                        }]
                    }, {
                        n: "钦州",
                        a: [{
                            s: "钦南区"
                        }, {
                            s: "钦北区"
                        }, {
                            s: "灵山县"
                        }, {
                            s: "浦北县"
                        }]
                    }, {
                        n: "贵港",
                        a: [{
                            s: "港北区"
                        }, {
                            s: "港南区"
                        }, {
                            s: "覃塘区"
                        }, {
                            s: "平南县"
                        }, {
                            s: "桂平市"
                        }]
                    }, {
                        n: "玉林",
                        a: [{
                            s: "玉州区"
                        }, {
                            s: "容县"
                        }, {
                            s: "陆川县"
                        }, {
                            s: "博白县"
                        }, {
                            s: "兴业县"
                        }, {
                            s: "北流市"
                        }]
                    }, {
                        n: "百色",
                        a: [{
                            s: "右江区"
                        }, {
                            s: "田阳县"
                        }, {
                            s: "田东县"
                        }, {
                            s: "平果县"
                        }, {
                            s: "德保县"
                        }, {
                            s: "靖西县"
                        }, {
                            s: "那坡县"
                        }, {
                            s: "凌云县"
                        }, {
                            s: "乐业县"
                        }, {
                            s: "田林县"
                        }, {
                            s: "西林县"
                        }, {
                            s: "隆林各族自治县"
                        }]
                    }, {
                        n: "贺州",
                        a: [{
                            s: "八步区"
                        }, {
                            s: "昭平县"
                        }, {
                            s: "钟山县"
                        }, {
                            s: "富川瑶族自治县"
                        }]
                    }, {
                        n: "河池",
                        a: [{
                            s: "金城江区"
                        }, {
                            s: "南丹县"
                        }, {
                            s: "天峨县"
                        }, {
                            s: "凤山县"
                        }, {
                            s: "东兰县"
                        }, {
                            s: "罗城仫佬族自治县"
                        }, {
                            s: "环江毛南族自治县"
                        }, {
                            s: "巴马瑶族自治县"
                        }, {
                            s: "都安瑶族自治县"
                        }, {
                            s: "大化瑶族自治县"
                        }, {
                            s: "宜州市"
                        }]
                    }, {
                        n: "来宾",
                        a: [{
                            s: "兴宾区"
                        }, {
                            s: "忻城县"
                        }, {
                            s: "象州县"
                        }, {
                            s: "武宣县"
                        }, {
                            s: "金秀瑶族自治县"
                        }, {
                            s: "合山市"
                        }]
                    }, {
                        n: "崇左",
                        a: [{
                            s: "江洲区"
                        }, {
                            s: "扶绥县"
                        }, {
                            s: "宁明县"
                        }, {
                            s: "龙州县"
                        }, {
                            s: "大新县"
                        }, {
                            s: "天等县"
                        }, {
                            s: "凭祥市"
                        }]
                    }]
                }, {
                    p: "海南",
                    c: [{
                        n: "海口",
                        a: [{
                            s: "秀英区"
                        }, {
                            s: "龙华区"
                        }, {
                            s: "琼山区"
                        }, {
                            s: "美兰区"
                        }]
                    }, {
                        n: "三亚",
                        a: [{
                            s: "三亚市"
                        }]
                    }, {
                        n: "五指山",
                        a: [{
                            s: "五指山"
                        }]
                    }, {
                        n: "琼海",
                        a: [{
                            s: "琼海"
                        }]
                    }, {
                        n: "儋州",
                        a: [{
                            s: "儋州"
                        }]
                    }, {
                        n: "文昌",
                        a: [{
                            s: "文昌"
                        }]
                    }, {
                        n: "万宁",
                        a: [{
                            s: "万宁"
                        }]
                    }, {
                        n: "东方",
                        a: [{
                            s: "东方"
                        }]
                    }]
                }, {
                    p: "重庆",
                    c: [{
                        n: "万州区"
                    }, {
                        n: "涪陵区"
                    }, {
                        n: "渝中区"
                    }, {
                        n: "大渡口区"
                    }, {
                        n: "江北区"
                    }, {
                        n: "沙坪坝区"
                    }, {
                        n: "九龙坡区"
                    }, {
                        n: "南岸区"
                    }, {
                        n: "北碚区"
                    }, {
                        n: "万盛区"
                    }, {
                        n: "双挢区"
                    }, {
                        n: "渝北区"
                    }, {
                        n: "巴南区"
                    }, {
                        n: "长寿区"
                    }, {
                        n: "綦江县"
                    }, {
                        n: "潼南县"
                    }, {
                        n: "铜梁县"
                    }, {
                        n: "大足县"
                    }, {
                        n: "荣昌县"
                    }, {
                        n: "壁山县"
                    }, {
                        n: "梁平县"
                    }, {
                        n: "城口县"
                    }, {
                        n: "丰都县"
                    }, {
                        n: "垫江县"
                    }, {
                        n: "武隆县"
                    }, {
                        n: "忠县"
                    }, {
                        n: "开县"
                    }, {
                        n: "云阳县"
                    }, {
                        n: "奉节县"
                    }, {
                        n: "巫山县"
                    }, {
                        n: "巫溪县"
                    }, {
                        n: "黔江区"
                    }, {
                        n: "石柱土家族自治县"
                    }, {
                        n: "秀山土家族苗族自治县"
                    }, {
                        n: "酉阳土家族苗族自治县"
                    }, {
                        n: "彭水苗族土家族自治县"
                    }, {
                        n: "江津区"
                    }, {
                        n: "合川区"
                    }, {
                        n: "永川区"
                    }, {
                        n: "南川区"
                    }]
                }, {
                    p: "四川",
                    c: [{
                        n: "成都",
                        a: [{
                            s: "锦江区"
                        }, {
                            s: "青羊区"
                        }, {
                            s: "金牛区"
                        }, {
                            s: "武侯区"
                        }, {
                            s: "成华区"
                        }, {
                            s: "龙泉驿区"
                        }, {
                            s: "青白江区"
                        }, {
                            s: "新都区"
                        }, {
                            s: "温江区"
                        }, {
                            s: "金堂县"
                        }, {
                            s: "双流县"
                        }, {
                            s: "郫县"
                        }, {
                            s: "大邑县"
                        }, {
                            s: "蒲江县"
                        }, {
                            s: "新津县"
                        }, {
                            s: "都江堰市"
                        }, {
                            s: "彭州市"
                        }, {
                            s: "邛崃市"
                        }, {
                            s: "崇州市"
                        }]
                    }, {
                        n: "自贡",
                        a: [{
                            s: "自流井区"
                        }, {
                            s: "贡井区"
                        }, {
                            s: "大安区"
                        }, {
                            s: "沿滩区"
                        }, {
                            s: "荣县"
                        }, {
                            s: "富顺县"
                        }]
                    }, {
                        n: "攀枝花",
                        a: [{
                            s: "东区"
                        }, {
                            s: "西区"
                        }, {
                            s: "仁和区"
                        }, {
                            s: "米易县"
                        }, {
                            s: "盐边县"
                        }]
                    }, {
                        n: "泸州",
                        a: [{
                            s: "江阳区"
                        }, {
                            s: "纳溪区"
                        }, {
                            s: "龙马潭区"
                        }, {
                            s: "泸县"
                        }, {
                            s: "合江县"
                        }, {
                            s: "叙永县"
                        }, {
                            s: "古蔺县"
                        }]
                    }, {
                        n: "德阳",
                        a: [{
                            s: "旌阳区"
                        }, {
                            s: "中江县"
                        }, {
                            s: "罗江县"
                        }, {
                            s: "广汉市"
                        }, {
                            s: "什邡市"
                        }, {
                            s: "绵竹市"
                        }]
                    }, {
                        n: "绵阳",
                        a: [{
                            s: "涪城区"
                        }, {
                            s: "游仙区"
                        }, {
                            s: "三台县"
                        }, {
                            s: "盐亭县"
                        }, {
                            s: "安县"
                        }, {
                            s: "梓潼县"
                        }, {
                            s: "北川羌族自治县"
                        }, {
                            s: "平武县"
                        }, {
                            s: "江油市"
                        }]
                    }, {
                        n: "广元",
                        a: [{
                            s: "利州区"
                        }, {
                            s: "元坝区"
                        }, {
                            s: "朝天区"
                        }, {
                            s: "旺苍县"
                        }, {
                            s: "青川县"
                        }, {
                            s: "剑阁县"
                        }, {
                            s: "苍溪县"
                        }]
                    }, {
                        n: "遂宁",
                        a: [{
                            s: "船山区"
                        }, {
                            s: ">安居区"
                        }, {
                            s: ">蓬溪县"
                        }, {
                            s: ">射洪县"
                        }, {
                            s: ">大英县"
                        }]
                    }, {
                        n: "内江",
                        a: [{
                            s: "市中区"
                        }, {
                            s: "东兴区"
                        }, {
                            s: "威远县"
                        }, {
                            s: "资中县"
                        }, {
                            s: "隆昌县"
                        }]
                    }, {
                        n: "乐山",
                        a: [{
                            s: "市中区"
                        }, {
                            s: "沙湾区"
                        }, {
                            s: "五通桥区"
                        }, {
                            s: "金口河区"
                        }, {
                            s: "犍为县"
                        }, {
                            s: "井研县"
                        }, {
                            s: "夹江县"
                        }, {
                            s: "沐川县"
                        }, {
                            s: "峨边彝族自治县"
                        }, {
                            s: "马边彝族自治县"
                        }, {
                            s: "峨眉山市"
                        }]
                    }, {
                        n: "南充",
                        a: [{
                            s: "顺庆区"
                        }, {
                            s: "高坪区"
                        }, {
                            s: "嘉陵区"
                        }, {
                            s: "南部县"
                        }, {
                            s: "营山县"
                        }, {
                            s: "蓬安县"
                        }, {
                            s: "仪陇县"
                        }, {
                            s: "西充县"
                        }, {
                            s: "阆中市"
                        }]
                    }, {
                        n: "眉山",
                        a: [{
                            s: "东坡区"
                        }, {
                            s: "仁寿县"
                        }, {
                            s: "彭山县"
                        }, {
                            s: "洪雅县"
                        }, {
                            s: "丹棱县"
                        }, {
                            s: "青神县"
                        }]
                    }, {
                        n: "宜宾",
                        a: [{
                            s: "翠屏区"
                        }, {
                            s: "宜宾县"
                        }, {
                            s: "南溪县"
                        }, {
                            s: "江安县"
                        }, {
                            s: "长宁县"
                        }, {
                            s: "高县"
                        }, {
                            s: "珙县"
                        }, {
                            s: "筠连县"
                        }, {
                            s: "兴文县"
                        }, {
                            s: "屏山县"
                        }]
                    }, {
                        n: "广安",
                        a: [{
                            s: "广安区"
                        }, {
                            s: "岳池县"
                        }, {
                            s: "武胜县"
                        }, {
                            s: "邻水县"
                        }, {
                            s: "华蓥市"
                        }]
                    }, {
                        n: "达川",
                        a: [{
                            s: "通川区"
                        }, {
                            s: "达县"
                        }, {
                            s: "宣汉县"
                        }, {
                            s: "开江县"
                        }, {
                            s: "大竹县"
                        }, {
                            s: "渠县"
                        }, {
                            s: "万源市"
                        }]
                    }, {
                        n: "雅安",
                        a: [{
                            s: "雨城区"
                        }, {
                            s: "名山县"
                        }, {
                            s: "荥经县"
                        }, {
                            s: "汉源县"
                        }, {
                            s: "石棉县"
                        }, {
                            s: "天全县"
                        }, {
                            s: "芦山县"
                        }, {
                            s: "宝兴县"
                        }]
                    }, {
                        n: "巴中",
                        a: [{
                            s: "巴州区"
                        }, {
                            s: "通江县"
                        }, {
                            s: "南江县"
                        }, {
                            s: "平昌县"
                        }]
                    }, {
                        n: "资阳",
                        a: [{
                            s: "雁江区"
                        }, {
                            s: "安岳县"
                        }, {
                            s: "乐至县"
                        }, {
                            s: "简阳市"
                        }]
                    }, {
                        n: "阿坝",
                        a: [{
                            s: "汶川县"
                        }, {
                            s: "理县"
                        }, {
                            s: "茂县"
                        }, {
                            s: "松潘县"
                        }, {
                            s: "九寨沟县"
                        }, {
                            s: "金川县"
                        }, {
                            s: "小金县"
                        }, {
                            s: "黑水县"
                        }, {
                            s: "马尔康县"
                        }, {
                            s: "壤塘县"
                        }, {
                            s: "阿坝县"
                        }, {
                            s: "若尔盖县"
                        }, {
                            s: "红原县"
                        }]
                    }, {
                        n: "甘孜",
                        a: [{
                            s: "康定县"
                        }, {
                            s: "泸定县"
                        }, {
                            s: "丹巴县"
                        }, {
                            s: "九龙县"
                        }, {
                            s: "雅江县"
                        }, {
                            s: "道孚县"
                        }, {
                            s: "炉霍县"
                        }, {
                            s: "甘孜县"
                        }, {
                            s: "新龙县"
                        }, {
                            s: "德格县"
                        }, {
                            s: "白玉县"
                        }, {
                            s: "石渠县"
                        }, {
                            s: "色达县"
                        }, {
                            s: "理塘县"
                        }, {
                            s: "巴塘县"
                        }, {
                            s: "乡城县"
                        }, {
                            s: "稻城县"
                        }, {
                            s: "得荣县"
                        }]
                    }, {
                        n: "凉山",
                        a: [{
                            s: "西昌市"
                        }, {
                            s: "木里藏族自治县"
                        }, {
                            s: "盐源县"
                        }, {
                            s: "德昌县"
                        }, {
                            s: "会理县"
                        }, {
                            s: "会东县"
                        }, {
                            s: "宁南县"
                        }, {
                            s: "普格县"
                        }, {
                            s: "布拖县"
                        }, {
                            s: "金阳县"
                        }, {
                            s: "昭觉县"
                        }, {
                            s: "喜德县"
                        }, {
                            s: "冕宁县"
                        }, {
                            s: "越西县"
                        }, {
                            s: "甘洛县"
                        }, {
                            s: "美姑县"
                        }, {
                            s: "雷波县"
                        }]
                    }]
                }, {
                    p: "贵州",
                    c: [{
                        n: "贵阳",
                        a: [{
                            s: "南明区"
                        }, {
                            s: "云岩区"
                        }, {
                            s: "花溪区"
                        }, {
                            s: "乌当区"
                        }, {
                            s: "白云区"
                        }, {
                            s: "小河区"
                        }, {
                            s: "开阳县"
                        }, {
                            s: "息烽县"
                        }, {
                            s: "修文县"
                        }, {
                            s: "清镇市"
                        }]
                    }, {
                        n: "六盘水",
                        a: [{
                            s: "钟山区"
                        }, {
                            s: "六枝特区"
                        }, {
                            s: "水城县"
                        }, {
                            s: "盘县"
                        }]
                    }, {
                        n: "遵义",
                        a: [{
                            s: "红花岗区"
                        }, {
                            s: "汇川区"
                        }, {
                            s: "遵义县"
                        }, {
                            s: "桐梓县"
                        }, {
                            s: "绥阳县"
                        }, {
                            s: "正安县"
                        }, {
                            s: "道真仡佬族苗族自治县"
                        }, {
                            s: "务川仡佬族苗族自治县"
                        }, {
                            s: "凤冈县"
                        }, {
                            s: "湄潭县"
                        }, {
                            s: "余庆县"
                        }, {
                            s: "习水县"
                        }, {
                            s: "赤水市"
                        }, {
                            s: "仁怀市"
                        }]
                    }, {
                        n: "安顺",
                        a: [{
                            s: "西秀区"
                        }, {
                            s: "平坝县"
                        }, {
                            s: "普定县"
                        }, {
                            s: "镇宁布依族苗族自治县"
                        }, {
                            s: "关岭布依族苗族自治县"
                        }, {
                            s: "紫云苗族布依族自治县"
                        }]
                    }, {
                        n: "铜仁",
                        a: [{
                            s: "铜仁市"
                        }, {
                            s: "江口县"
                        }, {
                            s: "玉屏侗族自治县"
                        }, {
                            s: "石阡县"
                        }, {
                            s: "思南县"
                        }, {
                            s: "印江土家族苗族自治县"
                        }, {
                            s: "德江县"
                        }, {
                            s: "沿河土家族自治县"
                        }, {
                            s: "松桃苗族自治县"
                        }, {
                            s: "万山特区"
                        }]
                    }, {
                        n: "黔西南",
                        a: [{
                            s: "兴义市"
                        }, {
                            s: "兴仁县"
                        }, {
                            s: "普安县"
                        }, {
                            s: "晴隆县"
                        }, {
                            s: "贞丰县"
                        }, {
                            s: "望谟县"
                        }, {
                            s: "册亨县"
                        }, {
                            s: "安龙县"
                        }]
                    }, {
                        n: "毕节",
                        a: [{
                            s: "毕节市"
                        }, {
                            s: "大方县"
                        }, {
                            s: "黔西县"
                        }, {
                            s: "金沙县"
                        }, {
                            s: "织金县"
                        }, {
                            s: "纳雍县"
                        }, {
                            s: "威宁彝族回族苗族自治县"
                        }, {
                            s: "赫章县"
                        }]
                    }, {
                        n: "黔东南",
                        a: [{
                            s: "凯里市"
                        }, {
                            s: "黄平县"
                        }, {
                            s: "施秉县"
                        }, {
                            s: "三穗县"
                        }, {
                            s: "镇远县"
                        }, {
                            s: "岑巩县"
                        }, {
                            s: "天柱县"
                        }, {
                            s: "锦屏县"
                        }, {
                            s: "剑河县"
                        }, {
                            s: "台江县"
                        }, {
                            s: "黎平县"
                        }, {
                            s: "榕江县"
                        }, {
                            s: "从江县"
                        }, {
                            s: "雷山县"
                        }, {
                            s: "麻江县"
                        }, {
                            s: "丹寨县"
                        }]
                    }, {
                        n: "黔南",
                        a: [{
                            s: "都匀市"
                        }, {
                            s: "福泉市"
                        }, {
                            s: "荔波县"
                        }, {
                            s: "贵定县"
                        }, {
                            s: "瓮安县"
                        }, {
                            s: "独山县"
                        }, {
                            s: "平塘县"
                        }, {
                            s: "罗甸县"
                        }, {
                            s: "长顺县"
                        }, {
                            s: "龙里县"
                        }, {
                            s: "惠水县"
                        }, {
                            s: "三都水族自治县"
                        }]
                    }]
                }, {
                    p: "云南",
                    c: [{
                        n: "昆明",
                        a: [{
                            s: "五华区"
                        }, {
                            s: "盘龙区"
                        }, {
                            s: "官渡区"
                        }, {
                            s: "西山区"
                        }, {
                            s: "东川区"
                        }, {
                            s: "呈贡县"
                        }, {
                            s: "晋宁县"
                        }, {
                            s: "富民县"
                        }, {
                            s: "宜良县"
                        }, {
                            s: "石林彝族自治县"
                        }, {
                            s: "嵩明县"
                        }, {
                            s: "禄劝彝族苗族自治县"
                        }, {
                            s: "寻甸回族彝族自治县"
                        }, {
                            s: "安宁市"
                        }]
                    }, {
                        n: "曲靖",
                        a: [{
                            s: "麒麟区"
                        }, {
                            s: "马龙县"
                        }, {
                            s: "陆良县"
                        }, {
                            s: "师宗县"
                        }, {
                            s: "罗平县"
                        }, {
                            s: "富源县"
                        }, {
                            s: "会泽县"
                        }, {
                            s: "沾益县"
                        }, {
                            s: "宣威市"
                        }]
                    }, {
                        n: "玉溪",
                        a: [{
                            s: "红塔区"
                        }, {
                            s: "江川县"
                        }, {
                            s: "澄江县"
                        }, {
                            s: "通海县"
                        }, {
                            s: "华宁县"
                        }, {
                            s: "易门县"
                        }, {
                            s: "峨山彝族自治县"
                        }, {
                            s: "新平彝族傣族自治县"
                        }, {
                            s: "元江哈尼族彝族傣族自治县"
                        }]
                    }, {
                        n: "保山",
                        a: [{
                            s: "隆阳区"
                        }, {
                            s: "施甸县"
                        }, {
                            s: "腾冲县"
                        }, {
                            s: "龙陵县"
                        }, {
                            s: "昌宁县"
                        }]
                    }, {
                        n: "昭通",
                        a: [{
                            s: "昭阳区"
                        }, {
                            s: "鲁甸县"
                        }, {
                            s: "巧家县"
                        }, {
                            s: "盐津县"
                        }, {
                            s: "大关县"
                        }, {
                            s: "永善县"
                        }, {
                            s: "绥江县"
                        }, {
                            s: "镇雄县"
                        }, {
                            s: "彝良县"
                        }, {
                            s: "威信县"
                        }, {
                            s: "水富县"
                        }]
                    }, {
                        n: "丽江",
                        a: [{
                            s: "古城区"
                        }, {
                            s: "玉龙纳西族自治县"
                        }, {
                            s: "永胜县"
                        }, {
                            s: "华坪县"
                        }, {
                            s: "宁蒗彝族自治县"
                        }]
                    }, {
                        n: "普洱",
                        a: [{
                            s: "思茅区"
                        }, {
                            s: "宁洱镇"
                        }, {
                            s: "墨江哈尼族自治县"
                        }, {
                            s: "景东彝族自治县"
                        }, {
                            s: "景谷傣族彝族自治县"
                        }, {
                            s: "镇沅彝族哈尼族拉祜族自治县"
                        }, {
                            s: "江城哈尼族彝族自治县"
                        }, {
                            s: "孟连傣族拉祜族佤族自治县"
                        }, {
                            s: "澜沧拉祜族自治县"
                        }, {
                            s: "西盟佤族自治县"
                        }]
                    }, {
                        n: "临沧",
                        a: [{
                            s: "临翔区"
                        }, {
                            s: "凤庆县"
                        }, {
                            s: "云县"
                        }, {
                            s: "永德县"
                        }, {
                            s: "镇康县"
                        }, {
                            s: "双江拉祜族佤族布朗族傣族自治县"
                        }, {
                            s: "耿马傣族佤族自治县"
                        }, {
                            s: "沧源佤族自治县"
                        }]
                    }, {
                        n: "楚雄",
                        a: [{
                            s: "楚雄市"
                        }, {
                            s: "双柏县"
                        }, {
                            s: "牟定县"
                        }, {
                            s: "南华县"
                        }, {
                            s: "姚安县"
                        }, {
                            s: "大姚县"
                        }, {
                            s: "永仁县"
                        }, {
                            s: "元谋县"
                        }, {
                            s: "武定县"
                        }, {
                            s: "禄丰县"
                        }]
                    }, {
                        n: "红河",
                        a: [{
                            s: "个旧市"
                        }, {
                            s: "开远市"
                        }, {
                            s: "蒙自县"
                        }, {
                            s: "屏边苗族自治县"
                        }, {
                            s: "建水县"
                        }, {
                            s: "石屏县"
                        }, {
                            s: "弥勒县"
                        }, {
                            s: "泸西县"
                        }, {
                            s: "元阳县"
                        }, {
                            s: "红河县"
                        }, {
                            s: "金平苗族瑶族傣族自治县"
                        }, {
                            s: "绿春县"
                        }, {
                            s: "河口瑶族自治县"
                        }]
                    }, {
                        n: "文山",
                        a: [{
                            s: "文山县"
                        }, {
                            s: "砚山县"
                        }, {
                            s: "西畴县"
                        }, {
                            s: "麻栗坡县"
                        }, {
                            s: "马关县"
                        }, {
                            s: "丘北县"
                        }, {
                            s: "广南县"
                        }, {
                            s: "富宁县"
                        }]
                    }, {
                        n: "西双版纳",
                        a: [{
                            s: "景洪市"
                        }, {
                            s: "勐海县"
                        }, {
                            s: "勐腊县"
                        }]
                    }, {
                        n: "大理",
                        a: [{
                            s: "大理市"
                        }, {
                            s: "漾濞彝族自治县"
                        }, {
                            s: "祥云县"
                        }, {
                            s: "宾川县"
                        }, {
                            s: "弥渡县"
                        }, {
                            s: "南涧彝族自治县"
                        }, {
                            s: "巍山彝族回族自治县"
                        }, {
                            s: "永平县"
                        }, {
                            s: "云龙县"
                        }, {
                            s: "洱源县"
                        }, {
                            s: "剑川县"
                        }, {
                            s: "鹤庆县"
                        }]
                    }, {
                        n: "德宏",
                        a: [{
                            s: "瑞丽市"
                        }, {
                            s: "潞西市"
                        }, {
                            s: "梁河县"
                        }, {
                            s: "盈江县"
                        }, {
                            s: "陇川县"
                        }]
                    }, {
                        n: "怒江傈",
                        a: [{
                            s: "泸水县"
                        }, {
                            s: "福贡县"
                        }, {
                            s: "贡山独龙族怒族自治县"
                        }, {
                            s: "兰坪白族普米族自治县"
                        }]
                    }, {
                        n: "迪庆",
                        a: [{
                            s: "香格里拉县"
                        }, {
                            s: "德钦县"
                        }, {
                            s: "维西傈僳族自治县"
                        }]
                    }]
                }, {
                    p: "西藏",
                    c: [{
                        n: "拉萨",
                        a: [{
                            s: "城关区"
                        }, {
                            s: "林周县"
                        }, {
                            s: "当雄县"
                        }, {
                            s: "尼木县"
                        }, {
                            s: "曲水县"
                        }, {
                            s: "堆龙德庆县"
                        }, {
                            s: "达孜县"
                        }, {
                            s: "墨竹工卡县"
                        }]
                    }, {
                        n: "昌都",
                        a: [{
                            s: "昌都县"
                        }, {
                            s: "江达县"
                        }, {
                            s: "贡觉县"
                        }, {
                            s: "类乌齐县"
                        }, {
                            s: "丁青县"
                        }, {
                            s: "察雅县"
                        }, {
                            s: "八宿县"
                        }, {
                            s: "左贡县"
                        }, {
                            s: "芒康县"
                        }, {
                            s: "洛隆县"
                        }, {
                            s: "边坝县"
                        }]
                    }, {
                        n: "山南",
                        a: [{
                            s: "乃东县"
                        }, {
                            s: "扎囊县"
                        }, {
                            s: "贡嘎县"
                        }, {
                            s: "桑日县"
                        }, {
                            s: "琼结县"
                        }, {
                            s: "曲松县"
                        }, {
                            s: "措美县"
                        }, {
                            s: "洛扎县"
                        }, {
                            s: "加查县"
                        }, {
                            s: "隆子县"
                        }, {
                            s: "错那县"
                        }, {
                            s: "浪卡子县"
                        }]
                    }, {
                        n: "日喀则",
                        a: [{
                            s: "日喀则市"
                        }, {
                            s: "南木林县"
                        }, {
                            s: "江孜县"
                        }, {
                            s: "定日县"
                        }, {
                            s: "萨迦县"
                        }, {
                            s: "拉孜县"
                        }, {
                            s: "昂仁县"
                        }, {
                            s: "谢通门县"
                        }, {
                            s: "白朗县"
                        }, {
                            s: "仁布县"
                        }, {
                            s: "康马县"
                        }, {
                            s: "定结县"
                        }, {
                            s: "仲巴县"
                        }, {
                            s: "亚东县"
                        }, {
                            s: "吉隆县"
                        }, {
                            s: "聂拉木县"
                        }, {
                            s: "萨嘎县"
                        }, {
                            s: "岗巴县"
                        }]
                    }, {
                        n: "那曲",
                        a: [{
                            s: "那曲县"
                        }, {
                            s: "嘉黎县"
                        }, {
                            s: "比如县"
                        }, {
                            s: "聂荣县"
                        }, {
                            s: "安多县"
                        }, {
                            s: "申扎县"
                        }, {
                            s: "索县"
                        }, {
                            s: "班戈县"
                        }, {
                            s: "巴青县"
                        }, {
                            s: "尼玛县"
                        }]
                    }, {
                        n: "阿里",
                        a: [{
                            s: "普兰县"
                        }, {
                            s: "札达县"
                        }, {
                            s: "噶尔县"
                        }, {
                            s: "日土县"
                        }, {
                            s: "革吉县"
                        }, {
                            s: "改则县"
                        }, {
                            s: "措勤县"
                        }]
                    }, {
                        n: "林芝",
                        a: [{
                            s: "林芝县"
                        }, {
                            s: "工布江达县"
                        }, {
                            s: "米林县"
                        }, {
                            s: "墨脱县"
                        }, {
                            s: "波密县"
                        }, {
                            s: "察隅县"
                        }, {
                            s: "朗县"
                        }]
                    }]
                }, {
                    p: "陕西",
                    c: [{
                        n: "西安",
                        a: [{
                            s: "新城区"
                        }, {
                            s: "碑林区"
                        }, {
                            s: "莲湖区"
                        }, {
                            s: "灞桥区"
                        }, {
                            s: "未央区"
                        }, {
                            s: "雁塔区"
                        }, {
                            s: "阎良区"
                        }, {
                            s: "临潼区"
                        }, {
                            s: "长安区"
                        }, {
                            s: "蓝田县"
                        }, {
                            s: "周至县"
                        }, {
                            s: "户县"
                        }, {
                            s: "高陵县"
                        }]
                    }, {
                        n: "铜川",
                        a: [{
                            s: "王益区"
                        }, {
                            s: "印台区"
                        }, {
                            s: "耀州区"
                        }, {
                            s: "宜君县"
                        }]
                    }, {
                        n: "宝鸡",
                        a: [{
                            s: "渭滨区"
                        }, {
                            s: "金台区"
                        }, {
                            s: "陈仓区"
                        }, {
                            s: "凤翔县"
                        }, {
                            s: "岐山县"
                        }, {
                            s: "扶风县"
                        }, {
                            s: "眉县"
                        }, {
                            s: "陇县"
                        }, {
                            s: "千阳县"
                        }, {
                            s: "麟游县"
                        }, {
                            s: "凤县"
                        }, {
                            s: "太白县"
                        }]
                    }, {
                        n: "咸阳",
                        a: [{
                            s: "秦都区"
                        }, {
                            s: "杨凌区"
                        }, {
                            s: "渭城区"
                        }, {
                            s: "三原县"
                        }, {
                            s: "泾阳县"
                        }, {
                            s: "乾县"
                        }, {
                            s: "礼泉县"
                        }, {
                            s: "永寿县"
                        }, {
                            s: "彬县"
                        }, {
                            s: "长武县"
                        }, {
                            s: "旬邑县"
                        }, {
                            s: "淳化县"
                        }, {
                            s: "武功县"
                        }, {
                            s: "兴平市"
                        }]
                    }, {
                        n: "渭南",
                        a: [{
                            s: "临渭区"
                        }, {
                            s: "华县"
                        }, {
                            s: "潼关县"
                        }, {
                            s: "大荔县"
                        }, {
                            s: "合阳县"
                        }, {
                            s: "澄城县"
                        }, {
                            s: "蒲城县"
                        }, {
                            s: "白水县"
                        }, {
                            s: "富平县"
                        }, {
                            s: "韩城市"
                        }, {
                            s: "华阴市"
                        }]
                    }, {
                        n: "延安",
                        a: [{
                            s: "宝塔区"
                        }, {
                            s: "延长县"
                        }, {
                            s: "延川县"
                        }, {
                            s: "子长县"
                        }, {
                            s: "安塞县"
                        }, {
                            s: "志丹县"
                        }, {
                            s: "吴起县"
                        }, {
                            s: "甘泉县"
                        }, {
                            s: "富县"
                        }, {
                            s: "洛川县"
                        }, {
                            s: "宜川县"
                        }, {
                            s: "黄龙县"
                        }, {
                            s: "黄陵县"
                        }]
                    }, {
                        n: "汉中",
                        a: [{
                            s: "汉台区"
                        }, {
                            s: "南郑县"
                        }, {
                            s: "城固县"
                        }, {
                            s: "洋县"
                        }, {
                            s: "西乡县"
                        }, {
                            s: "勉县"
                        }, {
                            s: "宁强县"
                        }, {
                            s: "略阳县"
                        }, {
                            s: "镇巴县"
                        }, {
                            s: "留坝县"
                        }, {
                            s: "佛坪县"
                        }]
                    }, {
                        n: "榆林",
                        a: [{
                            s: "榆阳区"
                        }, {
                            s: "神木县"
                        }, {
                            s: "府谷县"
                        }, {
                            s: "横山县"
                        }, {
                            s: "靖边县"
                        }, {
                            s: "定边县"
                        }, {
                            s: "绥德县"
                        }, {
                            s: "米脂县"
                        }, {
                            s: "佳县"
                        }, {
                            s: "吴堡县"
                        }, {
                            s: "清涧县"
                        }, {
                            s: "子洲县"
                        }]
                    }, {
                        n: "安康",
                        a: [{
                            s: "汉滨区"
                        }, {
                            s: "汉阴县"
                        }, {
                            s: "石泉县"
                        }, {
                            s: "宁陕县"
                        }, {
                            s: "紫阳县"
                        }, {
                            s: "岚皋县"
                        }, {
                            s: "平利县"
                        }, {
                            s: "镇坪县"
                        }, {
                            s: "旬阳县"
                        }, {
                            s: "白河县"
                        }]
                    }, {
                        n: "商洛",
                        a: [{
                            s: "商州区"
                        }, {
                            s: "洛南县"
                        }, {
                            s: "丹凤县"
                        }, {
                            s: "商南县"
                        }, {
                            s: "山阳县"
                        }, {
                            s: "镇安县"
                        }, {
                            s: "柞水县"
                        }]
                    }]
                }, {
                    p: "甘肃",
                    c: [{
                        n: "兰州",
                        a: [{
                            s: "区(县)"
                        }, {
                            s: "城关区"
                        }, {
                            s: "七里河区"
                        }, {
                            s: "西固区"
                        }, {
                            s: "安宁区"
                        }, {
                            s: "红古区"
                        }, {
                            s: "永登县"
                        }, {
                            s: "皋兰县"
                        }, {
                            s: "榆中县"
                        }]
                    }, {
                        n: "嘉峪关",
                        a: [{
                            s: "嘉峪关市"
                        }]
                    }, {
                        n: "金昌",
                        a: [{
                            s: "金川区"
                        }, {
                            s: "永昌县"
                        }]
                    }, {
                        n: "白银",
                        a: [{
                            s: "白银区"
                        }, {
                            s: "平川区"
                        }, {
                            s: "靖远县"
                        }, {
                            s: "会宁县"
                        }, {
                            s: "景泰县"
                        }]
                    }, {
                        n: "天水",
                        a: [{
                            s: "秦城区"
                        }, {
                            s: "麦积区"
                        }, {
                            s: "清水县"
                        }, {
                            s: "秦安县"
                        }, {
                            s: "甘谷县"
                        }, {
                            s: "武山县"
                        }, {
                            s: "张家川回族自治县"
                        }]
                    }, {
                        n: "武威",
                        a: [{
                            s: "凉州区"
                        }, {
                            s: "民勤县"
                        }, {
                            s: "古浪县"
                        }, {
                            s: "天祝藏族自治县"
                        }]
                    }, {
                        n: "张掖",
                        a: [{
                            s: "甘州区"
                        }, {
                            s: "肃南裕固族自治县"
                        }, {
                            s: "民乐县"
                        }, {
                            s: "临泽县"
                        }, {
                            s: "高台县"
                        }, {
                            s: "山丹县"
                        }]
                    }, {
                        n: "平凉",
                        a: [{
                            s: "崆峒区"
                        }, {
                            s: "泾川县"
                        }, {
                            s: "灵台县"
                        }, {
                            s: "崇信县"
                        }, {
                            s: "华亭县"
                        }, {
                            s: "庄浪县"
                        }, {
                            s: "静宁县"
                        }]
                    }, {
                        n: "酒泉",
                        a: [{
                            s: "肃州区"
                        }, {
                            s: "金塔县"
                        }, {
                            s: "瓜州县"
                        }, {
                            s: "肃北蒙古族自治县"
                        }, {
                            s: "阿克塞哈萨克族自治县"
                        }, {
                            s: "玉门市"
                        }, {
                            s: "敦煌市"
                        }]
                    }, {
                        n: "庆阳",
                        a: [{
                            s: "西峰区"
                        }, {
                            s: "庆城县"
                        }, {
                            s: "环县"
                        }, {
                            s: "华池县"
                        }, {
                            s: "合水县"
                        }, {
                            s: "正宁县"
                        }, {
                            s: "宁县"
                        }, {
                            s: "镇原县"
                        }]
                    }, {
                        n: "定西",
                        a: [{
                            s: "安定区"
                        }, {
                            s: "通渭县"
                        }, {
                            s: "陇西县"
                        }, {
                            s: "渭源县"
                        }, {
                            s: "临洮县"
                        }, {
                            s: "漳县"
                        }, {
                            s: "岷县"
                        }]
                    }, {
                        n: "陇南",
                        a: [{
                            s: "武都区"
                        }, {
                            s: "成县"
                        }, {
                            s: "文县"
                        }, {
                            s: "宕昌县"
                        }, {
                            s: "康县"
                        }, {
                            s: "西和县"
                        }, {
                            s: "礼县"
                        }, {
                            s: "徽县"
                        }, {
                            s: "两当县"
                        }]
                    }, {
                        n: "临夏",
                        a: [{
                            s: "临夏市"
                        }, {
                            s: "临夏县"
                        }, {
                            s: "康乐县"
                        }, {
                            s: "永靖县"
                        }, {
                            s: "广河县"
                        }, {
                            s: "和政县"
                        }, {
                            s: "东乡族自治县"
                        }, {
                            s: "积石山保安族东乡族撒拉族自治县"
                        }]
                    }, {
                        n: "甘南",
                        a: [{
                            s: "合作市"
                        }, {
                            s: "临潭县"
                        }, {
                            s: "卓尼县"
                        }, {
                            s: "舟曲县"
                        }, {
                            s: "迭部县"
                        }, {
                            s: "玛曲县"
                        }, {
                            s: "碌曲县"
                        }, {
                            s: "夏河县"
                        }]
                    }]
                }, {
                    p: "青海",
                    c: [{
                        n: "西宁",
                        a: [{
                            s: "城东区"
                        }, {
                            s: "城中区"
                        }, {
                            s: "城西区"
                        }, {
                            s: "城北区"
                        }, {
                            s: "大通回族土族自治县"
                        }, {
                            s: "湟中县"
                        }, {
                            s: "湟源县"
                        }]
                    }, {
                        n: "海东",
                        a: [{
                            s: "平安县"
                        }, {
                            s: "民和回族土族自治县"
                        }, {
                            s: "乐都县"
                        }, {
                            s: "互助土族自治县"
                        }, {
                            s: "化隆回族自治县"
                        }, {
                            s: "循化撒拉族自治县"
                        }]
                    }, {
                        n: "海北",
                        a: [{
                            s: "门源回族自治县"
                        }, {
                            s: "祁连县"
                        }, {
                            s: "海晏县"
                        }, {
                            s: "刚察县"
                        }]
                    }, {
                        n: "黄南",
                        a: [{
                            s: "同仁县"
                        }, {
                            s: "尖扎县"
                        }, {
                            s: "泽库县"
                        }, {
                            s: "河南蒙古族自治县"
                        }]
                    }, {
                        n: "海南",
                        a: [{
                            s: "共和县"
                        }, {
                            s: "同德县"
                        }, {
                            s: "贵德县"
                        }, {
                            s: "兴海县"
                        }, {
                            s: "贵南县"
                        }]
                    }, {
                        n: "果洛",
                        a: [{
                            s: "玛沁县"
                        }, {
                            s: "班玛县"
                        }, {
                            s: "甘德县"
                        }, {
                            s: "达日县"
                        }, {
                            s: "久治县"
                        }, {
                            s: "玛多县"
                        }]
                    }, {
                        n: "玉树",
                        a: [{
                            s: "玉树县"
                        }, {
                            s: "杂多县"
                        }, {
                            s: "称多县"
                        }, {
                            s: "治多县"
                        }, {
                            s: "囊谦县"
                        }, {
                            s: "曲麻莱县"
                        }]
                    }, {
                        n: "梅西",
                        a: [{
                            s: "格尔木市"
                        }, {
                            s: "德令哈市"
                        }, {
                            s: "乌兰县"
                        }, {
                            s: "都兰县"
                        }, {
                            s: "天峻县"
                        }]
                    }]
                }, {
                    p: "宁夏",
                    c: [{
                        n: "银川",
                        a: [{
                            s: "兴庆区"
                        }, {
                            s: "西夏区"
                        }, {
                            s: "金凤区"
                        }, {
                            s: "永宁县"
                        }, {
                            s: "贺兰县"
                        }, {
                            s: "灵武市"
                        }]
                    }, {
                        n: "石嘴山",
                        a: [{
                            s: "大武口区"
                        }, {
                            s: "惠农区"
                        }, {
                            s: "平罗县"
                        }]
                    }, {
                        n: "吴忠",
                        a: [{
                            s: "利通区"
                        }, {
                            s: "红寺堡区"
                        }, {
                            s: "盐池县"
                        }, {
                            s: "同心县"
                        }, {
                            s: "青铜峡市"
                        }]
                    }, {
                        n: "固原",
                        a: [{
                            s: "原州区"
                        }, {
                            s: "西吉县"
                        }, {
                            s: "隆德县"
                        }, {
                            s: "泾源县"
                        }, {
                            s: "彭阳县"
                        }]
                    }, {
                        n: "中卫",
                        a: [{
                            s: "沙坡头区"
                        }, {
                            s: "中宁县"
                        }, {
                            s: "海原县"
                        }]
                    }]
                }, {
                    p: "新疆",
                    c: [{
                        n: "乌鲁木齐",
                        a: [{
                            s: "天山区"
                        }, {
                            s: "沙依巴克区"
                        }, {
                            s: "新市区"
                        }, {
                            s: "水磨沟区"
                        }, {
                            s: "头屯河区"
                        }, {
                            s: "达坂城区"
                        }, {
                            s: "米东区"
                        }, {
                            s: "乌鲁木齐县"
                        }]
                    }, {
                        n: "克拉玛依",
                        a: [{
                            s: "独山子区"
                        }, {
                            s: "克拉玛依区"
                        }, {
                            s: "白碱滩区"
                        }, {
                            s: "乌尔禾区"
                        }]
                    }, {
                        n: "吐鲁番",
                        a: [{
                            s: "吐鲁番市"
                        }, {
                            s: "鄯善县"
                        }, {
                            s: "托克逊县"
                        }]
                    }, {
                        n: "哈密",
                        a: [{
                            s: "哈密市"
                        }, {
                            s: "巴里坤哈萨克自治县"
                        }, {
                            s: "伊吾县"
                        }]
                    }, {
                        n: "昌吉",
                        a: [{
                            s: "昌吉市"
                        }, {
                            s: "阜康市"
                        }, {
                            s: "呼图壁县"
                        }, {
                            s: "玛纳斯县"
                        }, {
                            s: "奇台县"
                        }, {
                            s: "吉木萨尔县"
                        }, {
                            s: "木垒哈萨克自治县"
                        }]
                    }, {
                        n: "博尔塔拉",
                        a: [{
                            s: "博乐市"
                        }, {
                            s: "精河县"
                        }, {
                            s: "温泉县"
                        }]
                    }, {
                        n: "巴音郭楞",
                        a: [{
                            s: "库尔勒市"
                        }, {
                            s: "轮台县"
                        }, {
                            s: "尉犁县"
                        }, {
                            s: "若羌县"
                        }, {
                            s: "且末县"
                        }, {
                            s: "焉耆回族自治县"
                        }, {
                            s: "和静县"
                        }, {
                            s: "和硕县"
                        }, {
                            s: "博湖县"
                        }]
                    }, {
                        n: "阿克苏",
                        a: [{
                            s: "阿克苏市"
                        }, {
                            s: "温宿县"
                        }, {
                            s: "库车县"
                        }, {
                            s: "沙雅县"
                        }, {
                            s: "新和县"
                        }, {
                            s: "拜城县"
                        }, {
                            s: "乌什县"
                        }, {
                            s: "阿瓦提县"
                        }, {
                            s: "柯坪县"
                        }]
                    }, {
                        n: "克孜勒苏",
                        a: [{
                            s: "阿图什市"
                        }, {
                            s: "阿克陶县"
                        }, {
                            s: "阿合奇县"
                        }, {
                            s: "乌恰县"
                        }]
                    }, {
                        n: "喀什",
                        a: [{
                            s: "喀什市"
                        }, {
                            s: "疏附县"
                        }, {
                            s: "疏勒县"
                        }, {
                            s: "英吉沙县"
                        }, {
                            s: "泽普县"
                        }, {
                            s: "莎车县"
                        }, {
                            s: "叶城县"
                        }, {
                            s: "麦盖提县"
                        }, {
                            s: "岳普湖县"
                        }, {
                            s: "伽师县"
                        }, {
                            s: "巴楚县"
                        }, {
                            s: "塔什库尔干县塔吉克自治"
                        }]
                    }, {
                        n: "和田",
                        a: [{
                            s: "和田市"
                        }, {
                            s: "和田县"
                        }, {
                            s: "墨玉县"
                        }, {
                            s: "皮山县"
                        }, {
                            s: "洛浦县"
                        }, {
                            s: "策勒县"
                        }, {
                            s: "于田县"
                        }, {
                            s: "民丰县"
                        }]
                    }, {
                        n: "伊犁",
                        a: [{
                            s: "伊宁市"
                        }, {
                            s: "奎屯市"
                        }, {
                            s: "伊宁县"
                        }, {
                            s: "察布查尔锡伯自治县"
                        }, {
                            s: "霍城县"
                        }, {
                            s: "巩留县"
                        }, {
                            s: "新源县"
                        }, {
                            s: "昭苏县"
                        }, {
                            s: "特克斯县"
                        }, {
                            s: "尼勒克县"
                        }]
                    }, {
                        n: "塔城",
                        a: [{
                            s: "塔城市"
                        }, {
                            s: "乌苏市"
                        }, {
                            s: "额敏县"
                        }, {
                            s: "沙湾县"
                        }, {
                            s: "托里县"
                        }, {
                            s: "裕民县"
                        }, {
                            s: "和布克赛尔蒙古自治县"
                        }]
                    }, {
                        n: "阿勒泰",
                        a: [{
                            s: "阿勒泰市"
                        }, {
                            s: "布尔津县"
                        }, {
                            s: "富蕴县"
                        }, {
                            s: "福海县"
                        }, {
                            s: "哈巴河县"
                        }, {
                            s: "青河县"
                        }, {
                            s: "吉木乃县"
                        }]
                    }, {
                        n: "石河子",
                        a: [{
                            s: "石河子"
                        }]
                    }, {
                        n: "阿拉尔",
                        a: [{
                            s: "阿拉尔"
                        }]
                    }, {
                        n: "图木舒克",
                        a: [{
                            s: "图木舒克"
                        }]
                    }, {
                        n: "五家渠",
                        a: [{
                            s: "五家渠"
                        }]
                    }]
                }, {
                    p: "香港",
                    c: [{
                        n: "中西区"
                    }, {
                        n: "东区"
                    }, {
                        n: "九龙城区"
                    }, {
                        n: "观塘区"
                    }, {
                        n: "南区"
                    }, {
                        n: "深水区"
                    }, {
                        n: "湾仔区"
                    }, {
                        n: "黄大仙区"
                    }, {
                        n: "油尖旺区"
                    }, {
                        n: "离岛区"
                    }, {
                        n: "葵青区"
                    }, {
                        n: "北区"
                    }, {
                        n: "西贡区"
                    }, {
                        n: "沙田区"
                    }, {
                        n: "屯门区"
                    }, {
                        n: "大埔区"
                    }, {
                        n: "荃湾区"
                    }, {
                        n: "元朗区"
                    }]
                }, {
                    p: "澳门",
                    c: [{
                        n: "花地玛堂区"
                    }, {
                        n: "圣安多尼堂区"
                    }, {
                        n: "大堂区"
                    }, {
                        n: "望德堂区"
                    }, {
                        n: "风顺堂区"
                    }, {
                        n: "嘉模堂区"
                    }, {
                        n: "圣方济各堂区"
                    }]
                }, {
                    p: "台湾",
                    c: [{
                        n: "台北市"
                    }, {
                        n: "高雄市"
                    }, {
                        n: "基隆市"
                    }, {
                        n: "台中市"
                    }, {
                        n: "台南市"
                    }, {
                        n: "新竹市"
                    }, {
                        n: "嘉义市"
                    }, {
                        n: "台北县"
                    }, {
                        n: "宜兰县"
                    }, {
                        n: "新竹县"
                    }, {
                        n: "桃园县"
                    }, {
                        n: "苗栗县"
                    }, {
                        n: "台中县"
                    }, {
                        n: "彰化县"
                    }, {
                        n: "南投县"
                    }, {
                        n: "嘉义县"
                    }, {
                        n: "云林县"
                    }, {
                        n: "台南县"
                    }, {
                        n: "高雄县"
                    }, {
                        n: "屏东县"
                    }, {
                        n: "台东县"
                    }, {
                        n: "花莲县"
                    }, {
                        n: "澎湖县"
                    }]
                }, {
                    p: "海外",
                    c: [{
                        n: "美国"
                    }, {
                        n: "澳大利亚"
                    }, {
                        n: "日本"
                    }, {
                        n: "加拿大"
                    }, {
                        n: "英国"
                    }, {
                        n: "印度"
                    }, {
                        n: "韩国"
                    }, {
                        n: "法国"
                    }, {
                        n: "巴西"
                    }]
                }]
        }
    }
}
]),
angular.module("directives").directive("cgFriendlyTime", ["$timeout", function($timeout) {
    function update(element, time, format, timer) {
        var now = moment()
            , duration = now - time
            , str = ""
            , timeout = 0;
        format ? str = time.format(format) : time.isAfter(now) ? str = time.format(ALL_FORMAT) : 1e3 > duration ? (str = JUST_NOW,
            timeout = 1e3) : 6e4 > duration ? (str = moment.duration(duration).seconds() + SEC_FORMAT,
            timeout = 1e4 - duration % 1e4) : 36e5 > duration ? (str = moment.duration(duration).minutes() + MIN_FORMAT,
            timeout = 6e4 - duration % 6e4) : str = time.isAfter(now.startOf("day")) ? time.format(TODAY_FORMAT) : time.isAfter(now.startOf("year")) ? time.format(YEAR_FORMAT) : time.format(ALL_FORMAT),
            element.text(str),
        timeout > 0 && (timer = $timeout(function() {
            update(element, time, format, timer)
        }, timeout))
    }
    function reset(element, time, format, timer) {
        time && (timer > 0 && $timeout.cancel(timer),
            time = moment(time),
            element.attr({
                title: time.format(TITLE_FORMAT)
            }),
            update(element, time, format, timer))
    }
    var JUST_NOW = "刚刚"
        , SEC_FORMAT = "秒前"
        , MIN_FORMAT = "分钟前"
        , TODAY_FORMAT = "今天 HH:mm"
        , YEAR_FORMAT = "MM-DD HH:mm"
        , ALL_FORMAT = "YYYY-MM-DD HH:mm"
        , TITLE_FORMAT = "YYYY-MM-DD HH:mm:ss";
    return {
        restrict: "A",
        scope: {
            time: "=cgFriendlyTime"
        },
        link: function(scope, element, attrs) {
            var timer, format = attrs.cgFriendlyTimeFormat;
            scope.$watch("time", function(newVal, oldVal) {
                reset(element, newVal, format, timer)
            }),
                reset(element, scope.time, format, timer),
                scope.$on("$destroy", function() {
                    $timeout.cancel(timer)
                })
        }
    }
}
]),
angular.module("directives").directive("cgFriendlyDate", ["$filter", function($filter) {
    var format = function(time, format) {
            return $filter("date")(time, format)
        }
        , weekday = {
            0: "周日",
            1: "周一",
            2: "周二",
            3: "周三",
            4: "周四",
            5: "周五",
            6: "周六"
        }
        , link = function(scope, element, attrs) {
            var time = scope.$eval(attrs.cgFriendlyDate || attrs.ngModel)
                , time2 = new Date(time)
                , result = format(time, "MM月dd日")
                , wd = weekday[time2.getDay()]
                , now = (new Date).getTime();
            result = format(result, "MM:dd") == format(now, "MM月dd日") ? "今天（" + result + " " + wd + "）" : result + " " + wd,
                attrs.cgFriendlyDate ? element.text(result) : element.replaceWith(result)
        }
        ;
    return {
        restrict: "AE",
        link: link
    }
}
]),
angular.module("app").directive("cgMemberSelector", function() {
    function matcher(term, text, opt) {
        text = text.trim();
        var pinyin = $(opt).data("pinyin")
            , result = 0 === text.toUpperCase().indexOf(term.toUpperCase());
        if (angular.isUndefined(pinyin))
            return result;
        var pinyins = pinyin.split("|");
        return 3 !== pinyins.length ? result : pinyins[1].indexOf(term) >= 0 || pinyins[2].indexOf(term) >= 0 || result
    }
    var controller = ["$scope", "$element", "Project", "Common", "$rootScope", function($scope, $element, Project, Common, $rootScope) {
        function init(list) {
            $scope.unselected = Common.m2u(list);
            var self = _.find($scope.unselected, function(m) {
                return m.global_key === $scope.USER.global_key
            });
            _.remove($scope.unselected, self),
                $scope.unselected.unshift(self)
        }
        $scope.USER = $rootScope.USER,
            $scope.$watch("project", function(project) {
                if (project && !$scope.members) {
                    var promise = Project.members({
                        id: project.id
                    });
                    promise.then(function(result) {
                        init(result.data && result.data.list || [])
                    })
                }
            }),
            $scope.$watch("members", function(members) {
                members && init(members || [])
            }),
            $scope.value = "0",
            $scope.checkMode = $element.hasClass("check-mode"),
            $scope.checkToggleMode = $element.hasClass("check-toggle-mode"),
            $scope.update_scrollbar = Common.uuid(),
            $scope.options = {
                placeholder: "请选择",
                width: $scope.width || "250",
                formatSelection: function() {
                    return "请选择"
                },
                formatResult: function(item) {
                    return $(item.element).attr("data-template") || item.text
                },
                matcher: matcher,
                dropdownCssClass: $scope.checkMode ? "check-mode" : void 0
            },
            $scope.show = function(member) {
                return $scope.checkMode ? !0 : $scope.hasSelf || member.global_key !== $scope.USER.global_key ? !_.find($scope.selected, function(m) {
                    return m.global_key === member.global_key
                }) : !1
            }
            ,
            $scope.select = function() {
                function callback(result) {
                    if (!result || result.data) {
                        var found = Common.findOfId($scope.selected, member.id);
                        found || $scope.selected.push(member),
                            $scope.value = "0"
                    }
                }
                if ("0" !== $scope.value) {
                    var member = _.find($scope.unselected, function(m) {
                        return m.global_key === $scope.value
                    });
                    if ($scope.update_scrollbar = Common.uuid(),
                            $scope.checkMode) {
                        var found = _.find($scope.selected, function(m) {
                            return m.global_key === member.global_key
                        });
                        if (found)
                            return void ($scope.checkToggleMode && $scope.cancel(member))
                    }
                    var p = $scope.onselect({
                        member: member
                    });
                    return angular.isObject(p) && angular.isFunction(p.then) ? p.then(callback) : callback(),
                        member
                }
            }
            ,
            $scope.cancel = function(member) {
                function callback(result) {
                    if (!result || result.data) {
                        var found = _.find($scope.selected, function(m) {
                            return m.global_key === member.global_key
                        });
                        _.remove($scope.selected, found),
                            $scope.value = "0"
                    }
                }
                function errorHandler(error) {
                    $scope.value = "0"
                }
                var p = $scope.oncancel({
                    member: member
                });
                return angular.isObject(p) && angular.isFunction(p.then) ? (p.then(callback),
                    p["catch"](errorHandler)) : callback(),
                    member
            }
            ,
            $scope.checkModeClass = function(member) {
                if (!$scope.checkMode)
                    return "";
                var found = _.find($scope.selected, function(m) {
                    return m.global_key === member.global_key
                });
                return found ? "cg-ms-chosen" : "cg-ms-notchosen"
            }
        ;
        var $opener = $($scope.opener);
        if ($opener.length) {
            $opener.css({
                cursor: "pointer"
            });
            var clickEvent = "click." + Common.uuid();
            $opener.on(clickEvent, function() {
                var target = $(event.target);
                target.is("span") || target.is("i") && !target.hasClass("add") || target.is("li") || $element.find("select").select2("open")
            }),
                $scope.$on("$destroy", function() {
                    $opener.off(clickEvent)
                })
        }
    }
    ];
    return {
        scope: {
            width: "=cgMsWidth",
            onselect: "&cgMsOnselect",
            oncancel: "&cgMsOncancel",
            selected: "=cgMsSelected",
            hasSelf: "=cgMsHasSelf",
            opener: "=cgMsOpener",
            project: "=cgMsProject",
            members: "=cgMsMembers"
        },
        controller: controller,
        templateUrl: function(element, attrs) {
            return "common/directives/cgMemberSelector/tpl/" + (attrs.mode ? attrs.mode : "cgMemberSelector") + ".html"
        }
    }
}),
angular.module("directives").directive("cgShare", ["Share", "$rootScope", "Common", "$timeout", function(Share, $rootScope, Common, $timeout) {
    var ATTACHMENT_TYPE = 0
        , PUBLIC = 0;
    return {
        scope: {
            share: "=cgShare",
            file: "=file"
        },
        link: function(scope, el, attrs) {
            el.css({
                position: "relative"
            });
            var $popup = el.find(".share-popup");
            el.click(function(e) {
                return e && $popup.is(":visible") && void 0 !== $(e.target).attr("cg-share") ? void $popup.hide() : ($popup.show(),
                    void $popup.css({
                        top: el.outerHeight() + 10,
                        left: (el.outerWidth() - $popup.outerWidth()) / 2
                    }))
            });
            var ns = "." + Common.uuid();
            $(document).on("click" + ns, function(e) {
                e && 0 === $(e.target).closest("[cg-share]").length && $popup.hide()
            }),
                scope.$on("$destroy", function() {
                    $(document).off("click" + ns)
                });
            var updateOnly = !1
                , $checkbox = el.find(".ui.checkbox");
            $checkbox.checkbox({
                onEnable: function() {
                    updateOnly || scope.create(),
                        updateOnly = !1
                },
                onDisable: function() {
                    updateOnly || scope["delete"](),
                        updateOnly = !1
                }
            }),
                scope.getCopy = function() {
                    return el.find(".share-popup-input").val()
                }
            ;
            var p;
            scope.doCopy = function() {
                scope.copied = !0,
                    $timeout.cancel(p),
                    p = $timeout(function() {
                        scope.copied = !1
                    }, 2e3)
            }
                ,
                scope.loading = !0,
                scope.$watch("share", function(newVal, oldVal) {
                    scope.share = newVal,
                        scope.loading = !1,
                        updateOnly = !0,
                        $checkbox.checkbox(newVal ? "enable" : "disable")
                }),
                scope.$watch("file", function(newVal, oldVal) {
                    scope.file = newVal
                }),
                scope.create = function() {
                    scope.loading = !0;
                    var p = Share.create({
                        resourceId: scope.file.file_id,
                        resourceType: ATTACHMENT_TYPE,
                        projectId: $rootScope.PROJECT.id,
                        accessType: PUBLIC
                    });
                    p.then(function(result) {
                        0 === result.code && (scope.share = result.data)
                    }),
                        p["catch"](function() {
                            scope.share = !1,
                                updateOnly = !0,
                                $checkbox.checkbox("disable")
                        }),
                        p["finally"](function() {
                            scope.loading = !1
                        })
                }
                ,
                scope["delete"] = function() {
                    scope.loading = !0;
                    var p = Share["delete"]({
                        hash: scope.share.hash
                    });
                    p.then(function(result) {
                        0 === result.code && (scope.share = !1)
                    }),
                        p["catch"](function() {
                            updateOnly = !0,
                                $checkbox.checkbox("enable")
                        }),
                        p["finally"](function() {
                            scope.loading = !1
                        })
                }
        },
        restrict: "A",
        templateUrl: "common/directives/cgShare/tpl/popup.html"
    }
}
]),
angular.module("directives").directive("cgTab", ["$parse", function($parse) {
    var TABKEY = 9;
    return {
        compile: function($element, attr) {
            var fn = $parse(attr.cgTab);
            return function(scope, element, attr) {
                element.on("keydown", function(event) {
                    event.keyCode == TABKEY && scope.$apply(function() {
                        fn(scope, {
                            $event: event
                        })
                    })
                })
            }
        }
    }
}
]);
var ngClipboard = angular.module("ngClipboard", []);
ngClipboard.provider("ngClip", function() {
    var self = this;
    return this.path = "/static/30dd7530dc5d671bd8aa3ac984b15d68.swf",
    {
        setPath: function(newPath) {
            self.path = newPath
        },
        $get: function() {
            return {
                path: self.path
            }
        }
    }
}),
    ngClipboard.run(["ngClip", function(ngClip) {
        ZeroClipboard.config({
            moviePath: ngClip.path,
            trustedDomains: ["*"],
            allowScriptAccess: "always",
            forceHandCursor: !0
        })
    }
    ]),
    ngClipboard.service("flashClip", function() {
        return function(scope, element, text, clipClick) {
            var clip = new ZeroClipboard(element);
            clip.on("load", function(client) {
                var onDataRequested = function(client) {
                        client.setText(text),
                        angular.isDefined(clipClick) && scope.$apply(clipClick, {
                            e: element
                        })
                    }
                    ;
                client.on("dataRequested", onDataRequested),
                    scope.$on("$destroy", function() {
                        client.off("dataRequested", onDataRequested),
                            client.unclip(element)
                    })
            })
        }
    }),
    ngClipboard.service("html5Clip", function() {
        return function(scope, element, option, clipClick, clipError) {
            var init = function() {
                    var clipboard = new Clipboard(element[0],option);
                    clipboard.on("success", function(e) {
                        scope.$apply(clipClick, {
                            e: e
                        })
                    }),
                        clipboard.on("error", function(e) {
                            scope.$apply(clipError, {
                                e: e
                            })
                        })
                }
                ;
            init()
        }
    }),
    ngClipboard.directive("clipCopy", ["flashClip", "html5Clip", "$parse", function(flashClip, html5Clip, $parse) {
        return {
            restrict: "AE",
            link: function(scope, element, attrs) {
                scope.$watch(function() {
                    return scope.$eval(attrs.clipCopy)
                }, function() {
                    var clipCopy = scope.$eval(attrs.clipCopy)
                        , clipClick = $parse(attrs.clipClick)
                        , clipError = $parse(attrs.clipError)
                        , option = {};
                    option.text = function(trigger) {
                        return clipCopy && angular.isString(clipCopy) ? clipCopy : clipCopy && angular.isFunction(clipCopy) ? scope.$apply(clipCopy, {
                            trigger: trigger
                        }) : angular.element(trigger).html()
                    }
                    ;
                    var ua = window.navigator.userAgent.toLowerCase()
                        , isSafari = -1 !== ua.indexOf("safari/") && -1 === ua.indexOf("chrom");
                    !document.execCommand || isSafari ? flashClip(scope, element, clipCopy, clipClick) : html5Clip(scope, element, option, clipClick, clipError)
                })
            }
        }
    }
    ]),
    ngClipboard.directive("clipCopyTarget", ["flashClip", "html5Clip", "$parse", function(flashClip, html5Clip, $parse) {
        return {
            restrict: "AE",
            link: function(scope, element, attrs) {
                scope.$watch(function() {
                    return scope.$eval(attrs.clipCopyTarget)
                }, function() {
                    var clipCopyTarget = attrs.clipCopyTarget
                        , clipClick = $parse(attrs.clipClick)
                        , clipError = $parse(attrs.clipError)
                        , option = {};
                    clipCopyTarget && (option.target = function(trigger) {
                            return clipCopyTarget ? angular.element(clipCopyTarget)[0] : trigger
                        }
                    );
                    var text = angular.element(clipCopyTarget).html()
                        , ua = window.navigator.userAgent.toLowerCase()
                        , isSafari = -1 !== ua.indexOf("safari/") && -1 === ua.indexOf("chrom");
                    !document.execCommand || isSafari ? flashClip(scope, element, text, clipClick) : html5Clip(scope, element, option, clipClick, clipError)
                })
            }
        }
    }
    ]),
    ngClipboard.directive("clipCopyCode", ["flashClip", "html5Clip", "$timeout", "$parse", function(flashClip, html5Clip, $timeout, $parse) {
        return {
            restrict: "AE",
            link: function(scope, element, attrs) {
                var clipCopyCode = attrs.clipCopyCode
                    , clipClick = $parse(attrs.clipClick)
                    , clipError = $parse(attrs.clipError)
                    , ua = window.navigator.userAgent.toLowerCase()
                    , isSafari = -1 !== ua.indexOf("safari/") && -1 === ua.indexOf("chrom")
                    , cp = angular.element("<span class='copy-action'><i class='icon copy' style='margin-right: 0;'></i></span>");
                cp.css({
                    position: "absolute",
                    background: "#b2b1ae",
                    color: "#FFF",
                    "text-align": "center",
                    cursor: "pointer",
                    height: "30px",
                    width: "30px",
                    "line-height": "30px",
                    top: "0",
                    right: "0",
                    display: "none",
                    "z-index": "999"
                }),
                    scope.$watch(function() {
                        return element.find(clipCopyCode).length
                    }, function() {
                        var codes = element.find(clipCopyCode);
                        codes.length <= 0 || codes.each(function(idx, e) {
                            var el = angular.element(e)
                                , div = angular.element("<div class='md-code'></div>")
                                , ccp = cp.clone();
                            div.css({
                                position: "relative",
                                "min-height": "30px"
                            }),
                                el.wrap(div),
                                el.parent().append(ccp);
                            var text = el.text()
                                , option = {};
                            option.text = function(trigger) {
                                return text
                            }
                                ,
                                el.parent().hover(function() {
                                    el.next(".copy-action").show()
                                }, function() {
                                    el.next(".copy-action").hide()
                                }),
                            clipClick && !clipClick() && (clipClick = function(trigger) {
                                    var ca = el.next(".copy-action")
                                        , i = ca.find("i.icon.copy");
                                    i.removeClass("copy").addClass("checkmark"),
                                        $timeout(function() {
                                            i.removeClass("checkmark").addClass("copy")
                                        }, 1e3)
                                }
                            ),
                                !document.execCommand || isSafari ? flashClip(scope, ccp, text, clipClick) : html5Clip(scope, ccp, option, clipClick, clipError)
                        })
                    })
            }
        }
    }
    ]);
var appDirective = angular.module("directives");
appDirective.directive("cgCtrlEnter", ["$parse", function($parse) {
    var ENTERKEY = 13;
    return {
        compile: function($element, attr) {
            var fn = $parse(attr.cgCtrlEnter);
            return function(scope, element, attr) {
                element.on("keydown", function(event) {
                    event.keyCode === ENTERKEY && (event.ctrlKey || event.metaKey) && scope.$apply(function() {
                        fn(scope, {
                            $event: event
                        })
                    })
                })
            }
        }
    }
}
]),
    appDirective.directive("cgEnter", ["$parse", function($parse) {
        var ENTERKEY = 13;
        return {
            compile: function($element, attr) {
                var fn = $parse(attr.cgEnter);
                return function(scope, element, attr) {
                    element.on("keydown", function(event) {
                        event.keyCode == ENTERKEY && scope.$apply(function() {
                            fn(scope, {
                                $event: event
                            })
                        })
                    })
                }
            }
        }
    }
    ]),
    appDirective.directive("cgNotClick", ["$parse", "Common", function($parse, Common) {
        return {
            compile: function($element, attr) {
                var fn = $parse(attr.cgNotClick);
                return function(scope, element, attr) {
                    var do_invoke = !0;
                    scope.$watch(attr.notClickWhen, function(b) {
                        do_invoke = !!b
                    });
                    var not_clazz = attr.notClickClass
                        , onClick = function(event) {
                            var target = $(event.srcElement || event.target);
                            (!not_clazz && !target.is(element) || not_clazz && !target.is(not_clazz)) && do_invoke && Common.safeApply.call(scope, function() {
                                fn(scope, {
                                    $event: event
                                })
                            })
                        }
                        ;
                    $(document).on("click", onClick),
                        scope.$on("$destroy", function() {
                            $(document).off("click", onClick)
                        })
                }
            }
        }
    }
    ]),
    appDirective.directive("cgBlur", [function() {
        var link = function(scope, element, attrs) {
                element.on("blur", function(e) {
                    scope.$eval(attrs.cgBlur),
                        scope.$digest()
                }),
                    element.on("$destroy", function() {
                        element.off("blur", "**")
                    })
            }
            ;
        return {
            link: link
        }
    }
    ]),
    appDirective.directive("cgBlurRollback", [function() {
        var link = function(scope, element, attrs) {
                var model = scope.$eval(attrs.ngModel)
                    , id = model.id || (new Date).getTime();
                scope["model_copy_" + id] = angular.copy(model),
                    element.on("blur", function(e) {
                        scope.$eval(attrs.cgBlurRollback);
                        var recoverModel = attrs.ngModel + "=model_copy_" + id + ";";
                        scope.$eval(recoverModel),
                            scope.$digest()
                    }),
                    element.on("$destroy", function() {
                        element.off("blur", "**")
                    })
            }
            ;
        return {
            link: link
        }
    }
    ]),
    appDirective.directive("cgTabCircle", ["Common", function(Common) {
        var link = function(scope, element, attrs) {
                var callbacks = scope.$eval(attrs.cgTabCircle);
                if (angular.isArray(callbacks) && element.is("textarea, input")) {
                    var len = callbacks.length
                        , start = 1;
                    scope.$watch(attrs.cgTabCircle, function(callbacks) {
                        angular.isDefined(callbacks) && (len = callbacks.length)
                    }),
                        $(element).on("keydown", function(e) {
                            if (9 === e.keyCode && len >= 2) {
                                var index = start++ % len;
                                return Common.safeApply.call(scope, callbacks[index]),
                                    $(element).focus(),
                                    e.preventDefault(),
                                    !1
                            }
                        })
                }
            }
            ;
        return {
            link: link
        }
    }
    ]),
    appDirective.directive("cgUpDownCircle", ["Common", "$parse", function(Common, $parse) {
        var link = function(scope, element, attrs) {
                var onIndexChange = $parse(attrs.onIndexChange)
                    , onIndexEnter = $parse(attrs.onIndexEnter)
                    , disable = attrs.disableUpDown
                    , count = 0
                    , start = 0
                    , index = 0;
                scope.$watch(attrs.cgUpDownCircle, function(c) {
                    count = c || 0,
                        start = 0
                }),
                    scope.$watch(attrs.resetStartIndex, function(i) {
                        index = 0
                    }),
                    $(element).on("keydown", function(e) {
                        var up = 38 === e.keyCode
                            , down = 40 === e.keyCode
                            , enter = 13 === e.keyCode;
                        if (up || down) {
                            if (scope[disable] || !count)
                                return;
                            return index = start + (up ? -1 : 1) % count,
                                start += up ? -1 : 1,
                                index = (index % count + count) % count,
                                scope.$apply(function() {
                                    onIndexChange(scope, {
                                        $index: index
                                    })
                                }),
                                $(element).focus(),
                                e.preventDefault(),
                                !1
                        }
                        enter && scope.$apply(function() {
                            onIndexEnter(scope, {
                                $index: index
                            })
                        })
                    })
            }
            ;
        return {
            link: link
        }
    }
    ]),
    appDirective.directive("cgScrollToElement", function() {
        var postLink = function(scope, element, attrs) {
                attrs.$observe("cgScrollToElement", function(id) {
                    if (angular.isDefined(id) && ("" + id).length > 0) {
                        var target = angular.element("#" + id);
                        1 === target.length && element.scrollToElement(target)
                    }
                })
            }
            ;
        return {
            link: postLink
        }
    }),
    appDirective.directive("cgCmdCtr", function() {
        var isMac = -1 != navigator.appVersion.indexOf("Mac");
        return {
            link: function(scope, element) {
                element.addClass("cmd-ctr").html(isMac ? "⌘" : "Ctrl")
            }
        }
    }),
    appDirective.directive("decimals", ["$filter", function($filter) {
        return {
            restrict: "A",
            require: "?ngModel",
            link: function(scope, element, attr, ngModel) {
                scope.decimalPoint = attr.decimalPoint,
                    scope.decimals = attr.decimals;
                var decimalCount = parseInt(scope.decimals) || 2
                    , decimalPoint = scope.decimalPoint || ".";
                ngModel.$render = function() {
                    "" != ngModel.$modelValue && null  != ngModel.$modelValue && ngModel.$modelValue >= 0 && ("number" == typeof decimalCount ? element.val(ngModel.$modelValue.toFixed(decimalCount).toString()) : element.val(ngModel.$modelValue.toString()))
                }
                    ,
                    ngModel.$parsers.unshift(function(newValue) {
                        if ("number" == typeof decimalCount) {
                            var floatValue = parseFloat(newValue.replace(",", "."));
                            return 0 === decimalCount ? parseInt(floatValue) : parseFloat(floatValue.toFixed(decimalCount))
                        }
                        return parseFloat(newValue.replace(",", "."))
                    }),
                    element.on("change", function(e) {
                        var floatValue = parseFloat(element.val().replace(",", "."));
                        if (!isNaN(floatValue) && "number" == typeof decimalCount)
                            if (0 === decimalCount)
                                element.val(parseInt(floatValue));
                            else {
                                var strValue = floatValue.toFixed(decimalCount);
                                element.val(strValue.replace(".", decimalPoint))
                            }
                    })
            }
        }
    }
    ]),
    angular.module("directives").directive("contextMenu", ["$rootScope", function($rootScope) {
        return {
            scope: {
                module: "=",
                currentApp: "=",
                needConfirmEmail: "&"
            },
            restrict: "E",
            replace: !0,
            templateUrl: "common/directives/contextMenu/contextMenu.html",
            link: function(scope, element, attrs) {
                var change = function() {
                        scope.isUser = "user" == scope.currentApp,
                            scope.PROJECT = $rootScope.PROJECT,
                            scope.USER = $rootScope.USER,
                            scope.isProject = "project" == scope.currentApp,
                            scope.confirmEmmail = scope.needConfirmEmail() && scope.needConfirmEmail()(),
                            scope.showCode = $rootScope.isShowCode()
                    }
                    ;
                scope.$watch("module", function() {
                    change()
                }),
                    scope.$watch("currentApp", function() {
                        change()
                    }),
                    scope.$watch("needConfirmEmail", function() {
                        change()
                    })
            }
        }
    }
    ]);
var appDirective = angular.module("directives");
appDirective.directive("cgDisableScroll", [function() {
    var link = function(scope, element, attrs) {
            function preventDefault(e) {
                e = e || window.event,
                e.preventDefault && e.preventDefault(),
                    e.returnValue = !1
            }
            function keydown(e) {
                keys.indexOf(+e.keyCode) > 0 && !$(e.target).is("textarea, input") && preventDefault(e)
            }
            function wheel(e) {
                var scrollTgt = 0;
                e = window.event || event,
                    scrollTgt = event.detail ? -40 * event.detail : event.wheelDeltaY,
                scrollTgt && (preventDefault(e),
                    $(element).scrollTop($(element).scrollTop() - scrollTgt))
            }
            function disable_scroll() {
                window.addEventListener && window.addEventListener("DOMMouseScroll", wheel, !1),
                    window.onmousewheel = document.onmousewheel = wheel,
                    document.onkeydown = keydown
            }
            function enable_scroll() {
                window.removeEventListener && window.removeEventListener("DOMMouseScroll", wheel, !1),
                    window.onmousewheel = document.onmousewheel = document.onkeydown = null
            }
            var keys = [37, 38, 39, 40];
            element.mouseover(function() {
                disable_scroll()
            }),
                element.mouseout(function() {
                    enable_scroll()
                })
        }
        ;
    return {
        link: link
    }
}
]),
    angular.module("directives").directive("cgAtEmoji", ["Emoji", function(emojis) {
        var conf = function(has_no_monkey) {
                return {
                    at: ":",
                    data: has_no_monkey ? emojis.normal : emojis.normal.concat(emojis.monkey),
                    tpl: "<li data-value=':${code}:'>${code} <img src='/static/${image}'  height='20' width='20' /></li>",
                    insert_tpl: ":${code}:",
                    start_with_space: !1,
                    search_key: "code"
                }
            }
            ;
        return {
            link: function(scope, element, attrs) {
                var has_no_monkey = scope.$eval(attrs.hasNoMonkey);
                element.atwho(conf(has_no_monkey)),
                    scope.$on("$destroy", function() {
                        var app = $(element).data("atwho");
                        app && (app.close(),
                            $(element).data("atwho", null ))
                    })
            }
        }
    }
    ]),
    angular.module("directives").directive("cgEmotion2", ["Common", "EmojiMap", function(Common, EmojiMap) {
        return {
            restrict: "AE",
            scope: {
                editor: "=editor",
                content: "=content",
                onChange: "="
            },
            templateUrl: "common/directives/emoji/emoji_dropdown2.html",
            link: function(scope, element, attrs) {
                scope.tabs_bottom = attrs.tabsBottom,
                    scope.emojis = EmojiMap.emoji,
                    scope.coding_emotions = EmojiMap.coding,
                    scope.festival_emojis = EmojiMap.festival,
                    scope.position = function(index) {
                        return {
                            "background-position": 24 * -index + "px 0px"
                        }
                    }
                    ,
                    scope.position_monkey = function(index) {
                        return {
                            "background-position": 50 * -index + "px 0px"
                        }
                    }
                    ,
                    scope.position_festival = function(index) {
                        return {
                            "background-position": 55 * -index + "px 0px"
                        }
                    }
                ;
                var dropdown = element.find(".ui.emotion.dropdown")
                    , messageModalMT = "-100px"
                    , bubbleModalMT = "-100px";
                dropdown.dropdown({
                    onShow: function() {
                        var smm = angular.element("#send-message-modal");
                        messageModalMT = smm.css("margin-top");
                        var sbm = angular.element("#send-bobble-modal");
                        bubbleModalMT = sbm.css("margin-top")
                    },
                    onHide: function() {
                        angular.element("#send-message-modal").css({
                            "margin-top": messageModalMT
                        }),
                            angular.element("#send-bobble-modal").css({
                                "margin-top": bubbleModalMT
                            })
                    }
                }),
                    scope.tab = 0,
                    scope.matrix = function(index, w, h) {
                        return {
                            x: function() {
                                return index % w
                            },
                            y: function() {
                                return Math.floor(index / h)
                            }
                        }
                    }
                    ,
                    scope.preview = function($event) {
                        var target = angular.element($event.target)
                            , preview = target.parent().next(".emotion-preview")
                            , img = preview.find("img")
                            , word = preview.find(".emotion-word")
                            , src = target.attr("code-image")
                            , index = target.attr("index")
                            , code = target.attr("code")
                            , w = target.attr("w")
                            , h = target.attr("h")
                            , p = scope.matrix(index, w, h)
                            , x = p.x()
                            , y = p.y();
                        img.attr("src", src),
                            word.text(code),
                            preview.removeClass("right-bottom"),
                            preview.removeClass("left-bottom"),
                            preview.removeClass("right-top"),
                            preview.removeClass("left-top"),
                            w / 2 > x && h / 2 > y ? preview.addClass("right-bottom") : x >= w / 2 && h / 2 > y ? preview.addClass("left-bottom") : w / 2 > x && y >= h / 2 ? preview.addClass("right-top") : x >= w / 2 && y >= h / 2 && preview.addClass("left-top"),
                            preview.show()
                    }
                    ,
                    scope.insertEmoji = function($event) {
                        var thiz = angular.element($event.target)
                            , editor = angular.element(scope.editor)
                            , code = thiz.attr("code");
                        editor[0].insertContent(" :" + code + ": ", function(t) {
                            Common.safeApply.call(scope, function() {
                                scope.content = t.value,
                                scope.onChange && scope.onChange(scope.content)
                            }),
                                dropdown.dropdown("remove visible")
                        })
                    }
                    ,
                    scope.hidePreview = function($event) {
                        var target = angular.element($event.currentTarget)
                            , preview = target.find(".emotion-preview");
                        preview.hide()
                    }
            }
        }
    }
    ]).directive("cgEmotion", ["Common", "EmojiMap", function(Common, EmojiMap) {
        return {
            restrict: "AE",
            scope: {},
            templateUrl: "common/directives/emoji/emoji_dropdown.html",
            link: function(scope, element, attrs) {
                if (element[0] != $("cg-emotion")[0])
                    throw "there should be one cgEmotion directive instance only.";
                scope.emojis = EmojiMap.emoji,
                    scope.coding_emotions = EmojiMap.coding,
                    scope.festival_emojis = EmojiMap.festival,
                    scope.position = function(index) {
                        return {
                            "background-position": 24 * -index + "px 0px"
                        }
                    }
                    ,
                    scope.position_monkey = function(index) {
                        return {
                            "background-position": 50 * -index + "px 0px"
                        }
                    }
                    ,
                    scope.position_festival = function(index) {
                        return {
                            "background-position": 55 * -index + "px 0px"
                        }
                    }
                ;
                var dropdown = element.find(".ui.emotion.dropdown")
                    , messageModalMT = "-100px"
                    , bubbleModalMT = "-100px";
                dropdown.dropdown({
                    onShow: function() {
                        var smm = angular.element("#send-message-modal");
                        messageModalMT = smm.css("margin-top");
                        var sbm = angular.element("#send-bobble-modal");
                        bubbleModalMT = sbm.css("margin-top")
                    },
                    onHide: function() {
                        angular.element("#send-message-modal").css({
                            "margin-top": messageModalMT
                        }),
                            angular.element("#send-bobble-modal").css({
                                "margin-top": bubbleModalMT
                            })
                    }
                }),
                    scope.tab = 0,
                    scope.matrix = function(index, w, h) {
                        return {
                            x: function() {
                                return index % w
                            },
                            y: function() {
                                return Math.floor(index / h)
                            }
                        }
                    }
                    ,
                    scope.preview = function($event) {
                        var target = angular.element($event.target)
                            , preview = target.parent().next(".emotion-preview")
                            , img = preview.find("img")
                            , word = preview.find(".emotion-word")
                            , src = target.attr("code-image")
                            , index = target.attr("index")
                            , code = target.attr("code")
                            , w = target.attr("w")
                            , h = target.attr("h")
                            , p = scope.matrix(index, w, h)
                            , x = p.x()
                            , y = p.y();
                        img.attr("src", src),
                            word.text(code),
                            preview.removeClass("right-bottom"),
                            preview.removeClass("left-bottom"),
                            preview.removeClass("right-top"),
                            preview.removeClass("left-top"),
                            w / 2 > x && h / 2 > y ? preview.addClass("right-bottom") : x >= w / 2 && h / 2 > y ? preview.addClass("left-bottom") : w / 2 > x && y >= h / 2 ? preview.addClass("right-top") : x >= w / 2 && y >= h / 2 && preview.addClass("left-top"),
                            preview.show()
                    }
                    ,
                    scope.insertEmoji = function($event, inputbox) {
                        var editor, thiz = angular.element($event.target);
                        editor = inputbox ? angular.element(inputbox) : angular.element(scope.editor);
                        var code = thiz.attr("code");
                        editor[0].insertContent(" :" + code + ": ", function(t) {
                            Common.safeApply.call(scope, function() {
                                scope.content = t.value,
                                scope.onChange && scope.onChange(scope.content)
                            }),
                                dropdown.dropdown("remove visible")
                        })
                    }
                    ,
                    scope.hidePreview = function($event) {
                        var target = angular.element($event.currentTarget)
                            , preview = target.find(".emotion-preview");
                        preview.hide()
                    }
                    ,
                    scope.setEditor = function(editor) {
                        scope.editor = editor
                    }
                    ,
                    scope.setLayout = function(config) {
                        _.isObject(config) && Common.safeApply.call(scope, function() {
                            angular.extend(scope, config)
                        })
                    }
                    ,
                    scope.setBasicEmoji = function(val) {
                        scope.basicEmoji = val || !1
                    }
            }
        }
    }
    ]).directive("cgEmotionBtn", ["$compile", "$timeout", "Common", function($compile, $timeout, Common) {
        return {
            restrict: "AE",
            scope: {
                content: "=",
                onChange: "=",
                basicEmoji: "="
            },
            link: function(scope, element, attrs) {
                var editor = attrs.editor
                    , tabsBottom = attrs.tabsBottom || !1;
                if (_.isEmpty(editor)) {
                    var inputArea = element.siblings("input[ng-model],textarea[ng-model]")[0];
                    if (!inputArea)
                        throw "cgEmotionBtn must have input or textarea siblings, or specify with a valid attribute named editor.";
                    var tmpId = $(inputArea).attr("id") || Common.uuid();
                    $(inputArea).attr("id", tmpId),
                        editor = "#" + tmpId
                }
                if (_.isEmpty($(editor)))
                    throw "[cg-emotion-btn]: attr: editor value ['" + editor + "'] doesn't exist as a selector";
                _.isEmpty($("cg-emotion")) && (scope.emoji = $('<cg-emotion tabs-bottom="false"></cg-emotion>'),
                    $compile(scope.emoji)(scope),
                    scope.emoji.appendTo("body")),
                    $(element).click(function(event) {
                        if (event.target == element[0]) {
                            scope.emoji = $("cg-emotion"),
                            scope.dropdownItem || (scope.dropdownItem = scope.emoji.find(".dropdown.ui.emotion"));
                            var emojiScope = scope.emoji.data("$isolateScope");
                            if (emojiScope)
                                return Common.safeApply.call(emojiScope, function() {
                                    emojiScope.setEditor(editor),
                                        emojiScope.setLayout({
                                            tabs_bottom: tabsBottom
                                        }),
                                        emojiScope.setBasicEmoji(scope.basicEmoji),
                                    scope.basicEmoji && (emojiScope.tab = 0)
                                }),
                                    emojiScope.onChange = function(content) {
                                        scope.onChange && scope.onChange(content);
                                        var editorScope = $(editor).scope();
                                        Common.safeApply.call(editorScope, function() {
                                            editorScope[$(editor).attr("ng-model")] = content
                                        })
                                    }
                                    ,
                                    _.isEmpty(element.has(scope.emoji)) ? (element.css({
                                        opacity: 1,
                                        zIndex: 3
                                    }),
                                        scope.emoji.parent(".icon.smile").css({
                                            opacity: ""
                                        }),
                                        scope.emoji.appendTo(element),
                                        scope.dropdownItem.dropdown("show"),
                                        !1) : (scope.dropdownItem.dropdown("is visible") ? element.parent(".icon.smile").css({
                                        opacity: ""
                                    }) : element.parent(".icon.smile").css({
                                        opacity: 1,
                                        zIndex: 3
                                    }),
                                        void scope.dropdownItem.dropdown("toggle"))
                        }
                    })
            }
        }
    }
    ]),
    angular.module("directives").directive("cgEsc", ["$parse", "Common", function($parse, Common) {
        return {
            link: function(scope, element, attrs) {
                var fn = $parse(attrs.cgEsc)
                    , when = scope.$eval(attrs.when);
                when = "undefined" == typeof when ? !0 : !1;
                var callback = function(e) {
                        var code = e.keyCode;
                        27 == code && when && Common.safeApply.call(scope, function() {
                            fn(scope, {
                                $event: "esc"
                            })
                        })
                    }
                    ;
                $(document).on("keydown", callback),
                    scope.$on("$destroy", function() {
                        $(document).off("keydown", callback)
                    })
            }
        }
    }
    ]),
    angular.module("directives").directive("cgEscBlur", [function() {
        return {
            link: function(scope, element, attrs) {
                element.on("keyup", function(event) {
                    var esc = 27;
                    event.keyCode === esc && element.blur()
                })
            }
        }
    }
    ]),
    angular.module("directives").directive("cgExperiment", function() {
        return {
            scope: {
                exps: "=cgExperiment",
                onSwitchToggle: "=onSwitchToggle",
                onClose: "=onClose"
            },
            link: function(scope, element) {
                scope.onExpClose = function() {
                    angular.isFunction(scope.onClose) && (scope.onClose(),
                        element.remove())
                }
            },
            templateUrl: "common/directives/exp/tpl/exp.html"
        }
    }).directive("cgExperimentOn", ["experiment", function(experiment) {
        return {
            priority: 599,
            link: {
                pre: function(scope, element, attrs) {
                    var featureName = attrs.cgExperimentOn;
                    experiment.isActive(featureName) || element.remove()
                }
            }
        }
    }
    ]).directive("cgExperimentOff", ["experiment", function(experiment) {
        return {
            priority: 599,
            link: {
                pre: function(scope, element, attrs) {
                    var featureName = attrs.cgExperimentOff;
                    experiment.isActive(featureName) && element.remove()
                }
            }
        }
    }
    ]),
    angular.module("directives").provider("experiment", ["$routeProvider", function($routeProvider) {
        this.route = function(featureName, oldRouteConfig, newRouteConfig) {
            return isActive(featureName) ? newRouteConfig : oldRouteConfig
        }
            ,
            this.routes = function(featureName, oldRouteConfigArray, newRouteConfigArray) {
                var rs = isActive(featureName) ? newRouteConfigArray : oldRouteConfigArray;
                rs.map(function(r) {
                    $routeProvider.when(r.uri, r.config)
                });
                var key = prefixName(featureName)
                    , cookie = $.cookie(key);
                angular.isUndefined(cookie) && deactivate(key)
            }
        ;
        var isActive = function(featureName) {
                var key = prefixName(featureName)
                    , cookie = $.cookie(key);
                return angular.isUndefined(cookie) && deactivate(key),
                "true" === cookie
            }
            , prefixName = function(featureName) {
                return "exp-" + featureName
            }
            , setCookies = function(key, value, expires) {
                var date = new Date;
                date.setTime(date.getTime() + 31536e6),
                    $.cookie(key, value, {
                        path: "/",
                        expires: expires || date
                    })
            }
            , setActive = function(featureName, expires, value) {
                setCookies(featureName, value, expires)
            }
            , deactivate = function(featureName, expires) {
                setActive(featureName, expires, !1)
            }
            , allExps = function() {
                var cookies = $.cookie()
                    , exps = [];
                return angular.forEach(cookies, function(value, key) {
                    var matches = (key || "").match(/^exp\-(.*)/);
                    matches && 2 === matches.length && exps.push({
                        name: matches[1],
                        value: "true" == value
                    })
                }),
                    exps
            }
            ;
        this.$get = ["$compile", "$rootScope", "$document", "$location", function($compile, $rootScope, $document, $location) {
            var search = location.search;
            if (/exp=true/.test(search)) {
                var exps = allExps()
                    , $scope = $rootScope.$new(!0);
                $scope.exps = exps,
                    $scope.onSwitchToggle = function(exp) {
                        var name = prefixName(exp.name);
                        setCookies(name, exp.value)
                    }
                    ,
                    $scope.onClose = function() {
                        $location.search("exp", void 0),
                            location.reload()
                    }
                    ,
                    $document.find(".experiment-switchers").remove();
                var dom = angular.element('<div class="experiment-switchers" cg-experiment="exps" on-close="onClose" on-switch-toggle="onSwitchToggle"></div>');
                $document.find("body").append(dom),
                    $compile(dom)($scope)
            }
            return {
                isActive: isActive
            }
        }
        ]
    }
    ]),
    angular.module("directives").directive("cgFancyOverflow", ["$compile", function($compile) {
        var max_height = 600;
        return {
            link: function(scope, element, attrs) {
                max_height = +attrs.maxHeight || max_height,
                    scope.$on("highlight-ready", function(event, id) {
                        var ready_id = element.data("ready_id");
                        if (ready_id === id) {
                            element.css("max-height", "100000px");
                            var height = element.height();
                            if (height > max_height) {
                                element.css("max-height", max_height + "px"),
                                    scope.showMore = !1,
                                    scope.ready_id = id;
                                var html = '<div class="fancy-overflow-modal" title="点击查看完整内容" ng-hide="showMore" ng-click="showMoreContent();"></div>';
                                element.append($compile(html)(scope)),
                                    scope.$on("fancy_overflow_show_more_" + id, function() {
                                        element.css("max-height", "100000px")
                                    })
                            }
                        }
                    }),
                    element.addClass("fancy-overflow").css("max-height", max_height + "px")
            },
            priority: 201,
            controller: "FancyOverflowController"
        }
    }
    ]).controller("FancyOverflowController", ["$scope", "$rootScope", function($scope, $rootScope) {
        $scope.showMoreContent = function() {
            $scope.showMore = !0,
                $rootScope.$broadcast("fancy_overflow_show_more_" + $scope.ready_id)
        }
    }
    ]),
    angular.module("directives").directive("cgFeedEditor", ["Common", "Setting", "Flash", "$filter", "$timeout", "FeedEditorService", "Errors", function(Common, Setting, Flash, $filter, $timeout, FeedEditorService, Errors) {
        var postLink = function(scope, element, attrs) {
                var textarea = element.find("textarea")
                    , $toolbar = element.find(".toolbar");
                scope.$textarea = textarea,
                    scope.feedContext = attrs.feedContext,
                    scope.tabs_bottom = attrs.emojiTabsBottom,
                    scope.words_limit = attrs.wordsLimit,
                    scope.preview_mode = attrs.previewMode;
                var MAX_UPLOAD_FILE_SIZE = 52428800
                    , gif_error_flag = !1
                    , MAX_UPLOAD_GIF_SIZE = 5242880
                    , GIR_REGEX = /(\.|\/)gif$/i
                    , gifCheck = function(event, data) {
                        var file = data.files[0]
                            , isGif = GIR_REGEX.test(file.type) || GIR_REGEX.test(file.name);
                        return isGif && file.size > MAX_UPLOAD_GIF_SIZE ? (Flash.fail().send("Gif 图片上传不能超过 5M"),
                            gif_error_flag = !0,
                            !1) : void 0
                    }
                    ;
                if (scope.insert_image_setting = {
                        xhrFields: {
                            withCredentials: !0
                        },
                        url: Setting.api_host + "/api/tweet/insert_image",
                        pasteZone: textarea,
                        dropZone: textarea,
                        disableImageResize: !1,
                        loadImageMaxFileSize: MAX_UPLOAD_FILE_SIZE,
                        process: Common.scaleImageFilter,
                        processstart: function() {
                            gif_error_flag = !1,
                                scope.imageUploadProgress.pending()
                        },
                        send: gifCheck,
                        done: function(e, data) {
                            if (0 === data.result.code) {
                                var url = data.result.data;
                                scope.imageUploadProgress.done(url)
                            } else
                                Errors.handle(data.result),
                                    scope.imageUploadProgress.error()
                        },
                        fail: function() {
                            scope.imageUploadProgress.error(),
                            gif_error_flag || Flash.fail().send("上传失败!")
                        },
                        paste: Common.addFilenameWhenPaste
                    },
                        scope.doInsertImage = function() {
                            element.find(".insert_img").click()
                        }
                        ,
                        scope.onInsertEmoji = function(content) {
                            scope.$content = content,
                                scope.insertEmoji(content)
                        }
                        ,
                        scope.doPreview = function(html) {
                            var preview = element.find(".preview");
                            html = $filter("restyleEmoji")(html),
                                preview.find(".content").html(html),
                                preview.find("pre code").each(function(i, e) {
                                    hljs.highlightBlock(e)
                                })
                        }
                        ,
                        attrs.$observe("cgFeedEditor", function(content) {
                            scope.$content = content
                        }),
                        scope.InsertTopic = function(topic) {
                            scope.insertTopic(topic.name)
                        }
                        ,
                        "resource_link" === attrs.markdownMode ? FeedEditorService.previewPromise.setMode("resource_link") : FeedEditorService.previewPromise.setMode("ordinary"),
                        attrs.textareaElastic) {
                    textarea.on("focus", function(e) {
                        textarea.val() || (textarea.css({
                            height: "32px"
                        }),
                            $toolbar.show())
                    });
                    var clickName = "click." + Common.uuid();
                    $(document).on(clickName, function(e) {
                        $(e.target).closest('[textarea-elastic="true"]').length || textarea.val() || (textarea.css({
                            height: "16px"
                        }),
                            $toolbar.hide())
                    }),
                        scope.$on("$destroy", function() {
                            $(document).off(clickName)
                        }),
                        textarea.css({
                            height: "16px"
                        }),
                        $timeout(function() {
                            textarea.css({
                                height: "16px"
                            })
                        }, 10)
                }
            }
            ;
        return {
            link: postLink,
            controller: "cgFeedEditorCtrl",
            transclude: !0,
            templateUrl: function(element, attrs) {
                var model_html = attrs.feedEditorMode ? attrs.feedEditorMode : "feed_editor";
                return "common/directives/feedEditor/tpl/" + model_html + ".html"
            }
        }
    }
    ]).controller("cgFeedEditorCtrl", ["$scope", "FeedEditorService", "Markdown", "Common", "$rootScope", function($scope, FeedEditorService, Markdown, Common, $rootScope) {
        var textarea_api = {
            submit: angular.noop,
            insertImage: angular.noop,
            insertCode: angular.noop,
            insertEmoji: angular.noop,
            insertTopic: angular.noop
        };
        $scope.$content = "",
            $scope.preview_content = void 0,
            $scope.sending = !1,
            $scope.show_preview = !1,
            $scope.togglePreview = function() {
                if ($scope.preview_content = void 0,
                        $scope.show_preview = !$scope.show_preview,
                        $scope.show_preview) {
                    var promise;
                    if ("resource_link" === FeedEditorService.previewPromise.getMode()) {
                        var params = Common.projectParams($rootScope.PROJECT);
                        params.toc = !1,
                            promise = Markdown.project_preview(params, {
                                content: $scope.$content
                            })
                    } else
                        promise = Markdown.preview({
                            content: $scope.$content
                        });
                    promise.then(function(result) {
                        $scope.preview_content = result.data,
                            $scope.doPreview($scope.preview_content)
                    })
                }
            }
            ,
            $scope.img_uploading = !1,
            $scope.insertImage = function() {
                this.doInsertImage()
            }
            ,
            $scope.imageUploadProgress = FeedEditorService.makeProgress(function() {
                Common.safeApply.call($scope, function() {
                    $scope.img_uploading = !0
                })
            }, function(img_url) {
                Common.safeApply.call($scope, function() {
                    textarea_api.insertImage(img_url),
                        $scope.img_uploading = !1
                })
            }, function() {
                Common.safeApply.call($scope, function() {
                    $scope.img_uploading = !1
                })
            }),
            $scope.insertCode = function() {
                textarea_api.insertCode()
            }
            ,
            $scope.insertTopic = function(content) {
                textarea_api.insertTopic(content)
            }
            ,
            $scope.insertEmoji = function(content) {
                textarea_api.insertEmoji(content)
            }
        ;
        var progress = FeedEditorService.makeProgress(function() {
            $scope.sending = !0
        }, function() {
            $scope.sending = !1,
                $scope.$content = "",
                textarea_api.empty(),
            $scope.show_preview && ($scope.show_preview = !1)
        }, function() {
            $scope.sending = !1
        });
        $scope.submit = function() {
            $scope.$content.length > 0 && textarea_api.submit($scope.$content, progress)
        }
            ,
            $scope.$on("feed.editor.do.submit", function() {
                $scope.submit()
            }),
            this.onChange = function(content) {
                $scope.$content = content
            }
            ,
            this.onSubmit = function() {
                $scope.submit()
            }
            ,
            this.registerTextareaApi = function(api) {
                textarea_api = api
            }
    }
    ]).service("FeedEditorService", ["Markdown", function(Markdown) {
        var makeProgress = function(pending, done, error) {
            return {
                pending: function() {
                    pending && pending.apply(null , arguments)
                },
                error: function() {
                    error && error.apply(null , arguments)
                },
                done: function() {
                    done && done.apply(null , arguments)
                }
            }
        }
            , mode = "ordinary"
            , previewPromise = {
            setMode: function(m) {
                mode = m
            },
            getMode: function() {
                return mode
            }
        };
        return {
            makeProgress: makeProgress,
            previewPromise: previewPromise
        }
    }
    ]),
    angular.module("directives").directive("cgFeedEditorTextarea", ["$parse", "Common", function($parse, Common) {
        var ENTER_KEY = 13
            , postLink = function(scope, element, attrs, ctrls) {
                var textarea = element
                    , ngModel = ctrls[0]
                    , cgFeedEditor = ctrls[1]
                    , modelGetter = $parse(attrs.ngModel)
                    , modelSetter = modelGetter.assign;
                textarea.on("keydown", function(event) {
                    return 9 == event.keyCode ? (textarea[0].insertContent("    ", function(t) {
                        scope.content = t.value
                    }),
                    event.preventDefault && event.preventDefault(),
                        !1) : void 0
                }),
                    scope.insertImage = function(url) {
                        var textItem = textarea[0]
                            , inHtml = "";
                        textItem.value.length > 0 && (inHtml += "\n"),
                            inHtml += " ![图片](" + url + ") \n",
                            textItem.insertContent(inHtml, function(t) {
                                Common.safeApply.call(scope, function() {
                                    scope.content = t.value,
                                        modelSetter(scope, scope.content)
                                })
                            })
                    }
                    ,
                    scope.insertCode = function() {
                        var textItem = textarea[0]
                            , value = textarea.val()
                            , inv = ""
                            , position = textItem.getCaretPosition();
                        value.length > 0 && (/[\n]$/.test(value) || (inv += "\n",
                            position += 1),
                            position += 1,
                            inv += "\n"),
                            inv += "```\n\n```\n",
                            textItem.insertContent(inv, function(t) {
                                position += 4,
                                0 >= position && (position = 0),
                                    t.setCaretPosition(position),
                                    t.oninput(),
                                    Common.safeApply.call(scope, function() {
                                        scope.content = t.value,
                                            modelSetter(scope, scope.content)
                                    })
                            })
                    }
                    ,
                    scope.insertTopic = function(topic) {
                        var textItem = textarea[0]
                            , inv = ""
                            , position = textItem.getCaretPosition();
                        inv += "#" + topic + "# ",
                            textItem.insertContent(inv, function(t) {
                                position += 3 + topic.length,
                                0 >= position && (position = 0),
                                    t.setCaretPosition(position),
                                    t.oninput(),
                                    Common.safeApply.call(scope, function() {
                                        scope.content = t.value,
                                            modelSetter(scope, scope.content)
                                    })
                            })
                    }
                ;
                var onSubmitFn = attrs.cgFeedEditorTextarea ? $parse(attrs.cgFeedEditorTextarea) : !1
                    , onKeyDown = function(event) {
                        event.keyCode === ENTER_KEY && (event.ctrlKey || event.metaKey) && Common.safeApply.call(scope, function() {
                            angular.isFunction(onSubmitFn) ? onSubmitFn(scope) : cgFeedEditor.onSubmit()
                        })
                    }
                    ;
                element.on("keydown", onKeyDown);
                var emptyContent = function() {
                        Common.safeApply.call(scope, function() {
                            modelSetter(scope, ""),
                                textarea.val("")
                        })
                    }
                    , onInsertEmoji = function(content) {
                        Common.safeApply.call(scope, function() {
                            modelSetter(scope, content)
                        })
                    }
                    ;
                cgFeedEditor.registerTextareaApi({
                    submit: function(content, progress) {
                        scope.$emit("feed.editor.submit", content, progress)
                    },
                    insertImage: scope.insertImage,
                    insertCode: scope.insertCode,
                    insertEmoji: onInsertEmoji,
                    insertTopic: scope.insertTopic,
                    empty: emptyContent
                }),
                    ngModel.$viewChangeListeners.push(function() {
                        var content = ngModel.$viewValue;
                        cgFeedEditor.onChange(content)
                    }),
                    scope.$on("$destroy", function() {
                        element.off("keydown", onKeyDown)
                    })
            }
            ;
        return {
            link: postLink,
            require: ["ngModel", "^cgFeedEditor"],
            controller: "cgFeedEditorTextareaCtrl"
        }
    }
    ]).controller("cgFeedEditorTextareaCtrl", ["$scope", function($scope) {}
    ]),
    appDirective.directive("cgFileIcon", [function() {
        var link = function(scope, element, attrs) {
                var s = attrs.cgFileIconSrc
                    , t = attrs.cgFileIcon
                    , src = scope.$eval(s)
                    , type = scope.$eval(t);
                element.removeAttr("cg-file-icon"),
                    element.removeAttr("cg-file-icon-src"),
                    angular.isDefined(src) ? element.html("<img src='" + src + "' class='file-icon img'>") : (angular.isDefined(s) && scope.$watch(s, function(src) {
                        src && element.html("<img src='" + src + "' class='file-icon img'>")
                    }),
                        angular.isDefined(type) ? element.html("<div class='file-icon " + type + " ellipsis'>" + type + "</div>") : angular.isDefined(t) && scope.$watch(t, function(type) {
                            type && element.html("<div class='file-icon " + type + " ellipsis'>" + type + "</div>")
                        }))
            }
            ;
        return {
            link: link,
            replace: !0
        }
    }
    ]),
    angular.module("directives").directive("cgFileUpload", [function() {
        return {
            scope: {
                options: "=cgFileUpload"
            },
            link: function(scope, element) {
                var el = $(element);
                scope.$watch("options", function(options) {
                    if (options) {
                        var initialed = el.data("blueimp-fileupload");
                        initialed ? el.fileupload("option", options) : el.fileupload(options)
                    }
                })
            }
        }
    }
    ]),
    angular.module("directives").directive("cgFlash", ["$timeout", "$rootScope", "Common", function($timeout, $rootScope, Common) {
        var link = function(scope, element, attrs) {
                var limit = 4;
                scope.messages = [],
                    scope.limit = limit;
                var itvs = {};
                scope.removeMessage = function(message) {
                    scope.messages = Common.removeOfId(scope.messages, message.id);
                    var itv = itvs[message.id];
                    itv && $timeout.cancel(itv)
                }
                ;
                var uniqueMessage = function(message) {
                        angular.forEach(scope.messages, function(msg) {
                            msg.content === message.content && scope.removeMessage(msg)
                        })
                    }
                    ;
                $rootScope.$on("flash.message.add", function(e, message) {
                    var now = (new Date).getTime() + "_" + Math.floor(1e4 * Math.random());
                    message.id = now;
                    var itv = $timeout(function() {
                        delete itvs[message.id],
                            scope.removeMessage(message),
                        message.deferred && message.deferred.resolve(message)
                    }, message.time);
                    itvs[now] = itv,
                        Common.safeApply.call(scope, function() {
                            uniqueMessage(message),
                                scope.messages.push(message)
                        })
                }),
                    scope.removeAll = function() {
                        scope.messages = [],
                            scope.limit = limit,
                            removeItvs()
                    }
                    ,
                    $rootScope.$on("flash.message.remove-all", scope.removeAll);
                var removeItvs = function() {
                        if (!$.isEmptyObject(itvs))
                            for (var i in itvs)
                                $timeout.cancel(itvs[i])
                    }
                    ;
                element.on("mouseover", removeItvs),
                    scope.showMore = function() {
                        var len = scope.messages.length;
                        scope.limit = Math.max(len, limit)
                    }
                    ,
                    scope.onMessageClick = function(event) {
                        $(event.target).is("a") && scope.removeAll()
                    }
            }
            ;
        return {
            transclude: !0,
            templateUrl: "common/directives/flash/tpl/flash.html",
            link: link
        }
    }
    ]),
    angular.module("services").factory("Flash", ["$q", "$rootScope", function($q, $rootScope) {
        var handler = function() {
                var status = ""
                    , msg = ""
                    , time = 3e3
                    , send = function(content, t) {
                        time = t || time;
                        var deferred = $q.defer();
                        if (angular.isObject(content))
                            return void angular.forEach(content, function(value, key) {
                                var message = {
                                    status: status,
                                    content: value,
                                    time: time
                                };
                                doSend(message)
                            });
                        msg = content + "" || msg;
                        var message = {
                            status: status,
                            content: msg,
                            time: time,
                            deferred: deferred
                        };
                        return doSend(message),
                            deferred.promise
                    }
                    , doSend = function(message) {
                        $rootScope.$broadcast("flash.message.add", angular.copy(message))
                    }
                    , timeout = function(t) {
                        return time = t,
                            this
                    }
                    , status = function(st) {
                        return status = st,
                            this
                    }
                    , fail = function() {
                        return status = "fail",
                            this
                    }
                    , error = function() {
                        return fail()
                    }
                    , warn = function() {
                        return status = "warn",
                            this
                    }
                    , success = function() {
                        return status = "success",
                            this
                    }
                    , hide = function() {
                        $rootScope.$emit("flash.message.remove-all")
                    }
                    ;
                return this.send = send,
                    this.timeout = timeout,
                    this.fail = fail,
                    this.warn = warn,
                    this.success = success,
                    this.hide = hide,
                    this.error = error,
                    this
            }
            ;
        return new handler
    }
    ]),
    angular.module("directives").directive("formAutofillFix", ["$timeout", function($timeout) {
        return function(scope, element, attrs) {
            element.prop("method", "post"),
            attrs.ngSubmit && $timeout(function() {
                element.unbind("submit").bind("submit", function(event) {
                    event.preventDefault(),
                        element.find("input, textarea, select").trigger("input").trigger("change").trigger("keydown"),
                        scope.$apply(attrs.ngSubmit)
                })
            })
        }
    }
    ]),
    angular.module("directives").directive("cgFullscreen", ["$window", "Common", function($window, Common) {
        return {
            scope: {
                isFullscreen: "=cgFullscreen"
            },
            priority: 1e3,
            link: function(scope, element, attrs) {
                element.addClass("cg-fullscreen");
                var onWindowResize = function() {
                        var height = $window.innerHeight;
                        element.is(".cg-fullscreen") && (element.css({
                            height: height
                        }),
                            $("html").css({
                                overflow: "hidden"
                            }))
                    }
                    , removeFullscreenWatch = scope.$watch("isFullscreen", function(isFullscreen) {
                        angular.isDefined(isFullscreen) && (isFullscreen ? (element.addClass("cg-fullscreen"),
                            onWindowResize()) : (element.removeClass("cg-fullscreen"),
                            $("html").css({
                                overflow: "auto"
                            })))
                    })
                    , onKeyup = function(event) {
                        27 == event.keyCode && Common.safeApply.call(scope, function() {
                            scope.isFullscreen = !1
                        })
                    }
                    ;
                $($window).on("resize", onWindowResize).on("keyup", onKeyup),
                    scope.$on("$destroy", function() {
                        removeFullscreenWatch(),
                            removeFullscreenWatch = void 0,
                            element.removeClass("cg-fullscreen"),
                            element.css({
                                height: "auto"
                            }),
                            $($window).off("resize", onWindowResize).off("keyup", onKeyup),
                            $("html").css({
                                overflow: "auto"
                            })
                    })
            }
        }
    }
    ]),
    angular.module("directives").directive("cgGallery", ["$window", "Common", function($window, Common) {
        return {
            scope: {
                content: "=cgGallery"
            },
            link: function(scope, element) {
                var id = "gallery_" + Common.uuid();
                scope.gallery_id = id;
                var resetPoisition = function() {
                        var gallery = $("#" + scope.gallery_id)
                            , origin = element.find(".gallery-origin")
                            , image = element.find(".gallery-image")
                            , height = image.height();
                        gallery.find(".gallery-wrapper .gallery-content .icon.loading").css("display", "none"),
                            height > $(window).height() ? (element.find(".gallery .gallery-wrapper .gallery-content .gallery-image").css("bottom", "auto"),
                                gallery.find(".gallery-wrapper").css("height", height),
                                image.css("top", 0),
                                origin.css("top", height + 20)) : (element.find(".gallery .gallery-wrapper .gallery-content .gallery-image").css("bottom", "0"),
                                gallery.find(".gallery-wrapper").css("height", $(window).height()),
                                image.css("top", ($(window).height() - height) / 2),
                                origin.css("top", ($(window).height() + height) / 2 + 10)),
                            origin.show()
                    }
                    ;
                element.css("display", "none"),
                    element.attr("id", id),
                    scope.$watch("content", function(content) {
                        if (angular.isDefined(content)) {
                            var bubble_item = element.parent()
                                , bubble_image_link = bubble_item.find(".content.markdown a.bubble-markdown-image-link");
                            if (bubble_image_link.length > 0) {
                                var links = [];
                                bubble_image_link.each(function(index) {
                                    var link = $(this).attr("href");
                                    links.push(link),
                                        $(this).on("click", function(event) {
                                            event.ctrlKey || event.metaKey || (element.css("display", "block"),
                                                scope.gallery_index = index,
                                                resetPoisition(),
                                                scope.$emit("gallery.open"),
                                                event.preventDefault())
                                        })
                                }),
                                    scope.$emit("gallery.links.refresh", links)
                            }
                        }
                    });
                var img = element.find(".gallery .gallery-wrapper .gallery-content .gallery-image");
                img.on("load", function() {
                    resetPoisition()
                }),
                    img.on("error", function() {
                        $(this).attr("src", "/static/00675e5d336cf413a91edec4a3525894.png")
                    }),
                    $(window).on("scroll resize", resetPoisition),
                    scope.$on("$destroy", function() {
                        $(window).off("scroll resize", resetPoisition)
                    })
            },
            templateUrl: "common/directives/gallery/tpl/gallery.html",
            controller: "GalleryController"
        }
    }
    ]).controller("GalleryController", ["$scope", "Common", function($scope, Common) {
        $scope.links = [],
            $scope.current_image_url = void 0,
            $scope.gallery_index = void 0,
            $scope.$on("gallery.links.refresh", function(event, links) {
                $scope.links = links,
                    event.preventDefault()
            }),
            $scope.$watch("gallery_index", function(index) {
                $scope.links.length > 0 && ($scope.current_image_url = $scope.links[index])
            }),
            $scope.$on("gallery.open", function(event) {
                Common.safeApply.call($scope, function() {
                    $scope.current_image_url = $scope.links[$scope.gallery_index],
                        $("body").css("overflow-y", "hidden")
                }),
                    event.preventDefault()
            }),
            $scope.closeGallery = function($event) {
                if (!angular.element($event.target).is("a.origin-url")) {
                    var gallery = $("#" + $scope.gallery_id)
                        , height = gallery.find(".gallery .gallery-wrapper .gallery-content .gallery-image").height();
                    height || $("#" + $scope.gallery_id).find(".gallery-wrapper .gallery-content .icon.loading").css("display", "inline-block"),
                        gallery.css("display", "none"),
                        $("body").css("overflow-y", ""),
                        $scope.current_image_url = void 0,
                        $scope.gallery_index = void 0,
                        gallery.find(".gallery-origin").hide()
                }
            }
            ,
            $scope.next = function($event) {
                return $scope.current_image_url = "",
                    $scope.gallery_index++,
                $scope.gallery_index >= $scope.links.length && ($scope.gallery_index = $scope.links.length - 1),
                    $event.stopPropagation(),
                    !1
            }
            ,
            $scope.prev = function($event) {
                return $scope.current_image_url = "",
                    $scope.gallery_index--,
                $scope.gallery_index < 0 && ($scope.gallery_index = 0),
                    $event.stopPropagation(),
                    !1
            }
            ,
            $scope.onImageNavChange = function(event) {
                setTimeout(function() {
                    $("#" + $scope.gallery_id + " .gallery .gallery-wrapper .gallery-content a." + event).trigger("click")
                })
            }
            ,
            $scope.onImageCancel = function() {
                setTimeout(function() {
                    $("#" + $scope.gallery_id + " .gallery .close-wrapper").trigger("click")
                })
            }
    }
    ]);
var appDirective = angular.module("directives");
appDirective.directive("cgDiffOptions", function() {
    var controller = ["$scope", "$rootScope", function($scope, $rootScope) {
        var getCookie = $rootScope.getCookie
            , setCookie = $rootScope.setCookie;
        $scope.colorOn = _.isUndefined(getCookie("colorOn")) ? !0 : getCookie("colorOn"),
            $scope.diffShowTab = _.isUndefined(getCookie("diffShowTab")) ? !0 : getCookie("diffShowTab"),
            $scope.diffWrap = _.isUndefined(getCookie("diffWrap")) ? !1 : getCookie("diffWrap"),
            $scope.inlineDiffOn = _.isUndefined(getCookie("inlineDiffOn")) ? !0 : getCookie("inlineDiffOn"),
            $scope.setOption = function(key, val) {
                $rootScope.isExpActive("codecolor_inlinediff") && setCookie(key, val, new Date((new Date).getTime() + 36e5))
            }
    }
    ];
    return {
        controller: controller
    }
});
var help = angular.module("directives");
help.directive("cgHelpPopup", function() {
    return {
        link: function(scope, element, attrs) {
            var on = scope.$eval(attrs.cgHelpPopup) || "click";
            element.popup({
                className: {
                    popup: "coding help-popup ui popup"
                },
                on: on,
                position: "bottom right",
                transition: "slide down",
                closable: !0,
                maxSearchDepth: 100
            })
        }
    }
}),
    angular.module("directives").directive("cgHighlight", ["hljsService", "$sce", "$rootScope", "$timeout", "AllImageLoaded", "$compile", function(hljs, $sce, $rootScope, $timeout, AllImageLoaded, $compile) {
        var broadcastReady = function(element) {
            var ready_id = (new Date).getTime() + "_" + Math.floor(1e5 * Math.random());
            element.data("ready_id", ready_id),
                $timeout(function() {
                    $rootScope.$broadcast("highlight-ready", ready_id)
                }, 100)
        }
            , _firstLoaded = !0;
        return {
            priority: 200,
            link: function($scope, element, attrs) {
                var ctn = attrs.cgHighlight
                    , enableSce = $scope.$eval(attrs.enableSce)
                    , needScroll = void 0 !== attrs.cgPageScroll;
                ctn || (ctn = element.html());
                try {
                    var doHighlight = function(value) {
                        element.html(value).find("pre code").each(function(i, e) {
                            hljs.highlightBlock(e)
                        }),
                            $compile(element.children())($scope)
                    }
                        , doPreHighlight = function(value) {
                        var code = hljs.highlightAuto(value);
                        element.html(code && code.value || "")
                    }
                        , content = $scope.$eval(ctn);
                    if (content) {
                        if (element.is("pre"))
                            return void doPreHighlight(content);
                        var watchContent = ctn;
                        enableSce && (watchContent = $sce.parseAsHtml(ctn));
                        var removeParseHtmlWatcher = $scope.$watch(watchContent, function(value) {
                            doHighlight(value),
                                AllImageLoaded.init(element, function() {
                                    broadcastReady(element)
                                }),
                                removeParseHtmlWatcher(),
                                removeParseHtmlWatcher = void 0,
                            needScroll && _firstLoaded && ($rootScope.$broadcast("markdown.load.success"),
                                _firstLoaded = !1)
                        })
                    } else {
                        var watchContent = ctn;
                        enableSce && (watchContent = $sce.parseAsHtml(ctn));
                        var removeCtnWatcher = $scope.$watch(watchContent, function(content) {
                            if (content) {
                                if (element.is("pre"))
                                    return void doPreHighlight(content);
                                var removeParseHtmlWatcher = $scope.$watch(watchContent, function(value) {
                                    doHighlight(value),
                                        AllImageLoaded.init(element, function() {
                                            broadcastReady(element)
                                        }),
                                        removeParseHtmlWatcher(),
                                        removeParseHtmlWatcher = void 0,
                                    needScroll && _firstLoaded && ($rootScope.$broadcast("markdown.load.success"),
                                        _firstLoaded = !1)
                                });
                                removeCtnWatcher(),
                                    removeCtnWatcher = void 0
                            }
                        })
                    }
                } catch (e) {
                    var pre = $("<pre>")
                        , code = $("<code>");
                    code.text(ctn),
                        pre.wrapInner(code),
                        element.html(pre).find("pre code").each(function(i, e) {
                            hljs.highlightBlock(e)
                        }),
                        $compile(element.children())($scope)
                }
                $scope.$on("$destroy", function() {})
            }
        }
    }
    ]),
    angular.module("directives").directive("cgHoverCard", [function() {
        return {
            scope: {
                user: "=cgHoverCard",
                left: "=cardLeftOffset",
                bottom: "=cardBottomOffset"
            },
            link: function(scope, element) {
                scope.left && $(element).find(".menu").css("left", scope.left),
                scope.bottom && $(element).find(".menu").css("bottom", scope.bottom);
                var onScroll = function() {
                        $(element).offset().top - $(document).scrollTop() < 240 ? (element.find(".user-hover-card.ui.dropdown").removeClass("up"),
                        scope.bottom && element.find(".menu").css("bottom", "auto")) : element.find(".user-hover-card.ui.dropdown").hasClass("up") || (element.find(".user-hover-card.ui.dropdown").addClass("up"),
                        scope.bottom && element.find(".menu").css("bottom", scope.bottom))
                    }
                    ;
                $(window).on("scroll resize", onScroll),
                    element.on("click", function(event) {
                        var menu1 = $(event.target).parents(".menu")
                            , menu2 = $(element).find(".menu");
                        return menu1.is(menu2) && $(event.target).not("a") ? (event.stopPropagation(),
                            !1) : void 0
                    }),
                    scope.$on("$destroy", function() {
                        $(window).off("scroll resize", onScroll)
                    })
            },
            transclude: !0,
            templateUrl: "common/directives/hoverCard/tpl/hover_card.html",
            controller: "HoverCardController"
        }
    }
    ]).controller("HoverCardController", ["$scope", "$rootScope", "User", "Flash", "Errors", "$location", function($scope, $rootScope, User, Flash, Errors, $location) {
        $scope.USER = $rootScope.USER,
            $scope.showSendMsgDialog = $rootScope.showSendMsgDialog,
            $scope.dropdown_settings = {
                on: "hover",
                delay: {
                    show: 500,
                    hide: 300
                },
                onShow: function() {
                    $scope.card || getUserCard($scope.user.global_key)
                }
            },
            $scope.loading = !1,
            $scope.following = !1,
            $scope.unfollowing = !1,
            $scope.card = void 0;
        var getUserCard = function(global_key) {
                if (!$scope.loading) {
                    $scope.loading = !0;
                    var uPromise = User.byKey({
                        key: global_key
                    }, function(result) {
                        $scope.card = result.data
                    });
                    uPromise["finally"](function() {
                        $scope.loading = !1
                    })
                }
            }
            ;
        $scope.follow = function(user) {
            if (!$scope.following) {
                $scope.following = !0;
                var uPromise = User.follow({
                    users: user.global_key
                }, function(result) {
                    0 == result.code ? (user.followed = !0,
                        user.fans_count++,
                        $scope.USER.follows_count++,
                        Flash.success().send("关注成功")) : Errors.handle(result)
                });
                uPromise["finally"](function() {
                    $scope.following = !1
                })
            }
        }
            ,
            $scope.unfollow = function(user) {
                if (!$scope.unfollowing) {
                    $scope.unfollowing = !0;
                    var uPromise = User.unfollow({
                        users: user.global_key
                    }, function(result) {
                        0 === result.code ? ($scope.USER.follows_count -= 1,
                            user.followed = !1) : Errors.handle(result)
                    });
                    uPromise["finally"](function() {
                        $scope.unfollowing = !1
                    })
                }
            }
            ,
            $scope.toFriends = function(user) {
                $location.path("/u/" + user.global_key + "/friends")
            }
            ,
            $scope.toFans = function(user) {
                $location.path("/u/" + user.global_key + "/followers")
            }
            ,
            $scope.toBubble = function(user) {
                $location.path("/u/" + user.global_key + "/bubble")
            }
            ,
            $scope.toSpace = function(user) {
                $location.path("/u/" + user.global_key)
            }
    }
    ]),
    appDirective.directive("cgImageCrop", ["$parse", function($parse) {
        var showCoords = function(c, img) {
                img.top = c.y,
                    img.left = c.x,
                    img.size = c.w
            }
            , link = function(scope, element, attr) {
                var img = scope.$eval(attr.ngModel)
                    , image_element = element[0]
                    , fn = $parse(attr.cgImageCrop)
                    , boxWidth = attr.cgBoxWidth ? attr.cgBoxWidth : 0
                    , boxHeight = attr.cgBoxHeight ? attr.cgBoxHeight : 0
                    , jcrop_api = void 0;
                scope.$watch(attr.cgImageCropSrc, function(src) {
                    src && (img = scope.$eval(attr.ngModel),
                        image_element.onload = function() {
                            element.Jcrop({
                                setSelect: [10, 10, 128, 128],
                                minSize: [128, 128],
                                aspectRatio: 1,
                                addClass: "jcrop-centered",
                                boxWidth: boxWidth,
                                boxHeight: boxHeight,
                                onChange: function(c) {
                                    showCoords(c, img),
                                        fn(scope, {
                                            $img: img
                                        })
                                },
                                onSelect: function(c) {
                                    showCoords(c, img),
                                        fn(scope, {
                                            $img: img
                                        })
                                }
                            }, function() {
                                jcrop_api = this
                            }),
                                jcrop_api.setImage(src),
                                jcrop_api.setSelect([10, 10, 128, 128])
                        }
                        ,
                        element.attr("src", src))
                })
            }
            ;
        return {
            link: link,
            priority: 100
        }
    }
    ]),
    angular.module("directives").directive("cgImageLoading", ["$parse", "Common", function($scope, Common) {
        return {
            replace: !0,
            scope: {
                url: "=cgImageLoading",
                messages: "=message"
            },
            link: function($scope, element, attrs) {
                var messages = {
                    empty: "别眼巴巴看着，输点啥呗...",
                    loading: "正在尝试预览图片...",
                    fail: "你在逗我么，这 URL 根本就不是图片嘛..."
                };
                $scope.messages = $scope.messages || messages,
                    $scope.$watch("url", function(url) {
                        if (!angular.isUndefined(url)) {
                            if (0 === url.length)
                                return void ($scope.img_url = -1);
                            $scope.img_url = "";
                            var img = new Image;
                            img.onload = function() {
                                Common.safeApply.call($scope, function() {
                                    $scope.img_url = url;
                                    var onSuccess = $scope.messages.onSuccess;
                                    angular.isFunction(onSuccess) && onSuccess(url)
                                })
                            }
                                ,
                                img.onerror = function() {
                                    Common.safeApply.call($scope, function() {
                                        $scope.img_url = !1;
                                        var onFail = $scope.messages.onFail;
                                        angular.isFunction(onFail) && onFail()
                                    })
                                }
                                ,
                                img.src = url
                        }
                    })
            },
            templateUrl: "common/directives/imageLoading/tpl/img.html"
        }
    }
    ]),
    angular.module("directives").directive("cgCascadeMenu", ["CascadeMenuService", function(CascadeMenuService) {
        return {
            scope: {},
            link: function($scope, element, attrs, ctrl) {
                if (ctrl) {
                    var menu_id = $scope.menu_id = ctrl.menu_id;
                    CascadeMenuService.onPush(menu_id, function(data) {
                        $scope.index += 1,
                            $scope.left = data.left,
                            $scope.center = data.center,
                            $scope.right = data.right,
                            $scope.left_stacks.push(data.left),
                            $scope.center_stacks.push(data.center),
                            $scope.right_stacks.push(data.right),
                            $scope.contexts.push(angular.copy(data.context))
                    });
                    var onPop = function() {
                            $scope.index <= -1 || ($scope.index -= 1,
                                $scope.left_stacks.pop(),
                                $scope.center_stacks.pop(),
                                $scope.right_stacks.pop(),
                                $scope.contexts.pop(),
                                $scope.left = $scope.left_stacks[$scope.index],
                                $scope.center = $scope.center_stacks[$scope.index],
                                $scope.right = $scope.right_stacks[$scope.index])
                        }
                        ;
                    CascadeMenuService.onGoPrev(menu_id, onPop),
                        CascadeMenuService.onPop(menu_id, onPop),
                        CascadeMenuService.onClear(menu_id, function() {
                            $scope.init()
                        }),
                        CascadeMenuService.onUpdate(menu_id, function(event, data) {
                            $.extend($scope[data.key], data.value)
                        }),
                        $scope.actionAgent = function($event, target) {
                            target.action && target.action(target, $scope.contexts[$scope.index]),
                                $event.stopPropagation()
                        }
                }
            },
            templateUrl: "common/directives/imagePicker/tpl/menu.html",
            controller: "CascadeMenuController",
            require: "?^cgProjectImagePicker"
        }
    }
    ]).controller("CascadeMenuController", ["$scope", function($scope) {
        $scope.init = function() {
            $scope.index = -1,
                $scope.left_stacks = [],
                $scope.center_stacks = [],
                $scope.right_stacks = [],
                $scope.contexts = [],
                $scope.left = null ,
                $scope.center = null ,
                $scope.right = null
        }
            ,
            $scope.init()
    }
    ]).service("CascadeMenuService", ["$rootScope", "$timeout", function($rootScope, $timeout) {
        var event_prefix = "cascade.menu."
            , push = function(id, left, center, right, context) {
            $rootScope.$broadcast(event_prefix + "push." + id, {
                left: left,
                center: center,
                right: right,
                context: context
            })
        }
            , onPush = function(id, callback) {
            $rootScope.$on(event_prefix + "push." + id, function(event, data) {
                callback && callback(data)
            })
        }
            , eventMaker = function(event) {
            return {
                "do": function(id, data, timeout) {
                    timeout ? $timeout(function() {
                        $rootScope.$broadcast(event_prefix + event + "." + id, data)
                    }, timeout) : $rootScope.$broadcast(event_prefix + event + "." + id, data)
                },
                on: function(id, callback, timeout) {
                    $rootScope.$on(event_prefix + event + "." + id, function(event, data) {
                        timeout ? $timeout(function() {
                            callback && callback(event, data)
                        }, timeout) : callback && callback(event, data)
                    })
                }
            }
        }
            , prev = eventMaker("go.prev")
            , clear = eventMaker("clear")
            , update = eventMaker("update")
            , pop = eventMaker("pop");
        return {
            push: push,
            onPush: onPush,
            goPrev: prev["do"],
            onGoPrev: prev.on,
            pop: pop["do"],
            onPop: pop.on,
            clear: clear["do"],
            onClear: clear.on,
            update: update["do"],
            onUpdate: update.on
        }
    }
    ]),
    angular.module("directives").directive("cgFileFolders", ["CascadeMenuService", function(CascadeMenuService) {
        return {
            scope: {
                start_init: "=startInit",
                project_id: "=projectId",
                onFolderChange: "=",
                onFileSelectToggle: "="
            },
            link: function(scope, element, attrs, ctrl) {
                ctrl && (scope.menu_id = ctrl.menu_id,
                    CascadeMenuService.onClear(scope.menu_id, function() {
                        scope.init()
                    }),
                    CascadeMenuService.onGoPrev(scope.menu_id, function() {
                        scope.images = scope.selected_images = []
                    }),
                    ctrl.onImageUploadTo = scope.onImageUploadTo)
            },
            templateUrl: "common/directives/imagePicker/tpl/file-folders.html",
            controller: "fileFoldersController",
            replace: !0,
            require: "^?cgProjectImagePicker"
        }
    }
    ]).controller("fileFoldersController", ["$scope", "Attachment", "Common", "CascadeMenuService", "ImagePickerService", function($scope, Attachment, Common, CascadeMenuService, ImagePickerService) {
        $scope.init = function() {
            $scope.folders = null ,
                $scope.folders_count = null ,
                $scope.default_folder_count = null ,
                $scope.last_folders = [],
                $scope.current_folders = [],
                $scope.last_folder_id = 0,
                $scope.selected_images = [],
                $scope.images = [],
                $scope.in_folder = 0,
                $scope.loading = !1
        }
        ;
        var default_folder_name = "默认文件夹"
            , public_project_id = "public"
            , findFolderById = function(folders, folder_id, callback) {
                if (0 === folder_id && callback)
                    return void callback(folder_id);
                for (var i = 0; i < folders.length; i++) {
                    var folder = folders[i];
                    if (folder.file_id === folder_id)
                        return void (callback && callback(folder));
                    var sub_folders = folder.sub_folders;
                    sub_folders && findFolderById(sub_folders, folder_id, callback)
                }
            }
            , loadFolderCounts = function(project_id) {
                var promise = Attachment.all_count({
                    id: project_id
                });
                return promise.then(function(result) {
                    $scope.folders_count = result.data,
                        angular.forEach($scope.folders, function(folder) {
                            var count = Common.findOfId($scope.folders_count, folder.file_id, "folder");
                            folder.count = angular.copy(count.count),
                                angular.forEach(folder.sub_folders, function(sub_folder) {
                                    var sub_count = Common.findOfId($scope.folders_count, sub_folder.file_id, "folder");
                                    sub_folder.count = angular.copy(sub_count.count),
                                        folder.count += sub_folder.count
                                })
                        });
                    var default_count = Common.findOfId($scope.folders_count, 0, "folder");
                    $scope.default_folder_count = default_count.count
                }),
                    promise
            }
            , loadFolders = function(project_id) {
                $scope.loading = !0;
                var promise = Attachment.all_folders({
                    id: project_id,
                    page: 1,
                    pageSize: 9999
                });
                promise.then(function(result) {
                    $scope.folders = result.data.list || [],
                        $scope.current_folders = $scope.folders,
                    $scope.folders.length > 0 && loadFolderCounts(project_id)
                }),
                    promise["finally"](function() {
                        $scope.loding = !1
                    })
            }
            , loadImages = function(project_id, folder_id, page) {
                $scope.loading = !0,
                    $scope.images = [],
                    $scope.last_folder_id = folder_id;
                var promise = Attachment.images({
                    id: project_id,
                    dir: folder_id || 0,
                    width: 90,
                    height: 90,
                    page: page || 1,
                    pageSize: 1e3
                });
                return promise.then(function(result) {
                    $scope.images = result.data.list || []
                }),
                    promise["finally"](function() {
                        $scope.loading = !1
                    }),
                    promise
            }
            , updateFolderTitleWithImageCount = function(promise, name) {
                var doUpdate = function() {
                        var length = $scope.images.length;
                        length > 0 && CascadeMenuService.update($scope.menu_id, {
                            key: "center",
                            value: {
                                icon: "open folder",
                                text: name + " (" + length + ")"
                            }
                        })
                    }
                    ;
                promise ? promise.then(doUpdate) : doUpdate()
            }
            , updateFolderRightButtonWithSelectedImageCount = function(timeout) {
                var length = $scope.selected_images.length;
                length > 0 ? CascadeMenuService.update($scope.menu_id, {
                    key: "right",
                    value: {
                        icon: "ok sign",
                        text: "选择 (" + length + ")"
                    }
                }, timeout) : CascadeMenuService.update($scope.menu_id, {
                    key: "right",
                    value: {
                        icon: "ok sign",
                        text: "选择"
                    }
                }, timeout)
            }
            ;
        $scope.openFolder = function($event, folder) {
            $scope.selected_images = [];
            var loadImagePromise = loadImages($scope.project_id, folder.file_id);
            updateFolderTitleWithImageCount(loadImagePromise, folder.name),
            $scope.onFolderChange && $scope.onFolderChange(folder.file_id),
                $scope.last_folders = $scope.current_folders,
                $scope.current_folders = folder.sub_folders,
                $scope.in_folder++,
                CascadeMenuService.push($scope.menu_id, {
                    icon: "angle left",
                    text: "返回",
                    action: function(target, last_folders) {
                        if (CascadeMenuService.goPrev($scope.menu_id, {
                                folder_id: folder.file_id,
                                in_folder: --$scope.in_folder
                            }),
                                $scope.current_folders = last_folders,
                            $scope.current_folders && $scope.current_folders.length > 0) {
                            var folder_id = $scope.current_folders[0].parent_id;
                            loadImages($scope.project_id, folder_id)
                        }
                    }
                }, {
                    icon: "open folder",
                    text: folder.name
                }, {
                    icon: "ok sign",
                    text: "选择",
                    action: function() {
                        ImagePickerService.selectDone($scope.menu_id, folder.file_id)
                    }
                }, $scope.last_folders || []),
                $event.stopPropagation()
        }
            ,
            $scope.openDefaultFolder = function($event) {
                $scope.selected_images = [];
                var loadImagePromise = loadImages($scope.project_id, 0);
                updateFolderTitleWithImageCount(loadImagePromise, default_folder_name),
                $scope.onFolderChange && $scope.onFolderChange(0),
                    $scope.last_folders = $scope.current_folders,
                    $scope.current_folders = [],
                    $scope.in_folder++,
                    CascadeMenuService.push($scope.menu_id, {
                        icon: "angle left",
                        text: "返回",
                        action: function(target, context) {
                            CascadeMenuService.goPrev($scope.menu_id, {
                                folder_id: 0,
                                in_folder: --$scope.in_folder
                            }),
                                $scope.current_folders = context.folders
                        }
                    }, {
                        icon: "open folder",
                        text: default_folder_name
                    }, {
                        icon: "ok sign",
                        text: "选择",
                        action: function() {
                            ImagePickerService.selectDone($scope.menu_id, 0)
                        }
                    }, {
                        folders: $scope.last_folders || []
                    }),
                    $event.stopPropagation()
            }
            ,
            $scope.toggleImageSelect = function(image) {
                if (image.selected = !image.selected,
                        image.selected) {
                    var exists = Common.findOfId($scope.selected_images, image.file_id, "file_id");
                    exists || $scope.selected_images.push(image)
                } else {
                    var exists = Common.findOfId($scope.selected_images, image.file_id, "file_id");
                    exists && ($scope.selected_images = Common.removeOfId($scope.selected_images, image.file_id, "file_id"))
                }
                updateFolderRightButtonWithSelectedImageCount();
                var one_image = $scope.images[0];
                if (one_image) {
                    var folder = one_image.parent_id;
                    null  === $scope.project_id && (folder = public_project_id),
                    $scope.onFileSelectToggle && $scope.onFileSelectToggle(folder, $scope.selected_images)
                }
            }
            ,
            $scope.onImageUploadTo = function(folder_id, files) {
                findFolderById($scope.folders, folder_id, function(folder) {
                    var loadImagePromise = loadImages($scope.project_id, folder_id);
                    loadImagePromise.then(function() {
                        angular.forEach($scope.images, function(image) {
                            var selected_found = Common.findOfId($scope.selected_images, image.file_id, "file_id");
                            selected_found && (image.selected = !0);
                            var found = Common.findOfId(files, image.file_id, "file_id");
                            found && (image.selected || ($scope.selected_images.push(image),
                                image.selected = !0))
                        }),
                        $scope.onFileSelectToggle && $scope.onFileSelectToggle(folder_id, $scope.selected_images),
                            updateFolderTitleWithImageCount(null , 0 === folder_id ? default_folder_name : folder.name),
                            updateFolderRightButtonWithSelectedImageCount()
                    })
                })
            }
            ,
            $scope.onImageUpload = function(files) {
                0 === $scope.images.length ? $scope.images = files : angular.forEach(files, function(file) {
                    var found = Common.findOfId($scope.images, file.file_id, "file_id");
                    found || $scope.images.push(file)
                }),
                    0 === $scope.selected_images.length ? $scope.selected_images = angular.copy(files) : angular.forEach(files, function(file) {
                        var found = Common.findOfId($scope.selected_images, file.file_id, "file_id");
                        found || $scope.selected_images.push(file)
                    }),
                    angular.forEach($scope.selected_images, function(file) {
                        var found = Common.findOfId($scope.images, file.file_id, "file_id");
                        found && !found.selected && (found.selected = !0)
                    }),
                $scope.onFileSelectToggle && $scope.onFileSelectToggle(public_project_id, $scope.selected_images),
                    updateFolderRightButtonWithSelectedImageCount()
            }
            ,
            $scope.$watch("start_init", function(start_init) {
                if (!angular.isUndefined(start_init)) {
                    $scope.init();
                    var project_id = $scope.project_id;
                    project_id && loadFolders(project_id)
                }
            })
    }
    ]),
    angular.module("directives").directive("cgProjectImagePicker", ["Common", function(Common) {
        return {
            scope: {
                project_id: "=projectId",
                imageSelectDone: "=",
                mode: "=dropdownMode"
            },
            link: function(scope, element) {
                var dropdown = element.find(".image-picker-dropdown");
                scope.start_init = void 0,
                    scope.$watch("project_id", function(project_id) {
                        if (angular.isDefined(project_id)) {
                            var transition = "down";
                            "md-editor up" === scope.mode && (transition = "up"),
                                dropdown.dropdown("setting", {
                                    transition: "slide " + transition,
                                    onShow: function() {
                                        Common.safeApply.call(scope, function() {
                                            scope.start_init = (new Date).getTime(),
                                                scope.init()
                                        })
                                    },
                                    onHide: function() {
                                        Common.safeApply.call(scope, function() {
                                            scope.stop()
                                        })
                                    }
                                })
                        }
                    }),
                    scope.closeDropdown = function() {
                        dropdown.dropdown("hide")
                    }
            },
            controller: "ImagePickerController",
            templateUrl: "common/directives/imagePicker/tpl/image-picker.html",
            transclude: !0
        }
    }
    ]).controller("ImagePickerController", ["$scope", "Project", "CascadeMenuService", "Common", "ImagePickerService", function($scope, Project, CascadeMenuService, Common, ImagePickerService) {
        $scope.project = void 0,
            $scope.selected_images = void 0,
            $scope.folder_id = 0,
            $scope.in_folder = 0;
        var imagePickerCtrl = this
            , menu_id = this.menu_id = Common.uuid()
            , loadProject = function(project_id) {
                var promise = Project.query({
                    project_id: project_id
                });
                return promise.then(function(result) {
                    $scope.project = result.data
                }),
                    promise
            }
            ;
        $scope.onFolderChange = function(folder_id) {
            $scope.folder_id = folder_id,
                $scope.in_folder = 99,
                $scope.update_prefect_scroll_bar = (new Date).getTime()
        }
            ,
            $scope.onFileSelectToggle = function(folder, images) {
                angular.isDefined(folder) && $scope.selected_images && ($scope.selected_images[folder] = images)
            }
            ,
            $scope.onImageImport = function(url) {
                $scope.imageSelectDone && $scope.imageSelectDone([url]),
                    $scope.closeDropdown()
            }
            ,
            $scope.onImageUpload = function(files) {
                angular.isFunction(imagePickerCtrl.onImageUploadTo) && imagePickerCtrl.onImageUploadTo($scope.folder_id, files)
            }
            ,
            $scope.init = function() {
                var project_id = $scope.project_id;
                $scope.selected_images = {},
                    project_id ? loadProject(project_id).then(function(result) {
                        var project = result.data;
                        CascadeMenuService.push(menu_id, {}, {
                            icon: "coding project",
                            text: project.owner_user_name + "/" + project.name
                        }, {})
                    }) : null  === project_id && CascadeMenuService.push(menu_id, {}, {
                        icon: "photo",
                        text: "上传图片"
                    }, {
                        icon: "ok sign",
                        text: "选择",
                        action: function() {
                            $scope.imageSelectDone && $scope.imageSelectDone(filterImageUrl("public")),
                                $scope.closeDropdown(),
                                $scope.update_prefect_scroll_bar = (new Date).getTime()
                        }
                    }),
                    CascadeMenuService.onGoPrev(menu_id, function(event, data) {
                        $scope.in_folder = data.in_folder || 0,
                            $scope.update_prefect_scroll_bar = (new Date).getTime()
                    }, 200),
                    $scope.update_prefect_scroll_bar = (new Date).getTime()
            }
            ,
            $scope.stop = function() {
                CascadeMenuService.clear(menu_id),
                    $scope.project = void 0,
                    $scope.selected_images = void 0,
                    $scope.in_folder = 0,
                    $scope.folder_id = 0
            }
        ;
        var filterImageUrl = function(folder_id) {
                var images = [];
                return $.each($scope.selected_images, function(i, imgs) {
                    (-1 == folder_id || i == folder_id) && (images = images.concat(imgs.map(function(img) {
                        return img.owner_preview
                    })))
                }),
                    images
            }
            ;
        ImagePickerService.onSelectDone(menu_id, function(event, folder_id) {
            $scope.imageSelectDone && $scope.imageSelectDone(filterImageUrl(folder_id)),
                $scope.closeDropdown()
        })
    }
    ]).service("ImagePickerService", ["$rootScope", function($rootScope) {
        var EVENT_NAME = "image.picker.";
        return {
            selectDone: function(id, data) {
                $rootScope.$broadcast(EVENT_NAME + "select.done." + id, data)
            },
            onSelectDone: function(id, callback) {
                $rootScope.$on(EVENT_NAME + "select.done." + id, callback)
            }
        }
    }
    ]),
    angular.module("directives").directive("cgImagePickerUpload", ["ImagePickerUploadService", function(ImagePickerUploadService) {
        return {
            scope: {
                onImageUpload: "=cgImagePickerUpload",
                project_id: "=projectId",
                folder_id: "=folderId",
                size: "@"
            },
            link: function(scope, element, attrs, ctrl) {
                ctrl && (scope.menu_id = ctrl.menu_id);
                var updateUploadSetting = function() {
                        var dropzone = element.find(".image-upload-dropzone");
                        scope.uploading || (scope.upload_setting = ImagePickerUploadService.setting(scope.project_id, scope.folder_id, scope.callbacks, dropzone))
                    }
                    ;
                scope.$watch("project_id", updateUploadSetting),
                    scope.$watch("folder_id", updateUploadSetting),
                    scope.upload = function(callback) {
                        scope.uploading || callback && callback(element.find(".image-upload-input"))
                    }
            },
            controller: "ImagePickerUploadController",
            templateUrl: "common/directives/imagePicker/tpl/upload-image.html",
            require: "^?cgProjectImagePicker"
        }
    }
    ]).controller("ImagePickerUploadController", ["$scope", "Common", "Flash", "Errors", function($scope, Common, Flash, Errors) {
        $scope.upload_image_url = "",
            $scope.uploading = !1,
            $scope.uploading_counts = 0,
            $scope.uploading_files = [],
            $scope.uploaded_files = [],
            $scope.upload_progress = {
                total: 0,
                loaded: 0
            };
        var checkFileSize = function(files) {
                for (var size = $scope.project_id ? 1 : 50, i = 0; i < files.length; i++) {
                    var file = files[i];
                    if (file.size > 1024 * size * 1024)
                        return Flash.fail().send("上传图片大小超过 " + size + "M!"),
                            !1
                }
                return !0
            }
            , allProgress = function() {
                var loaded = 0
                    , total = 0;
                return angular.forEach($scope.uploading_files, function(file) {
                    var prg = file.progress;
                    prg && (loaded += prg.loaded,
                        total += prg.total)
                }),
                {
                    total: total,
                    loaded: loaded
                }
            }
            , qiniuImageView = function(url, width, height) {
                return [url, "?imageView2/1/w/", width, "/h/", height].join("")
            }
            ;
        $scope.callbacks = {
            add: function(e, data) {
                var files = data.files || [];
                files && files.length > 0 && checkFileSize(files) && (Common.safeApply.call($scope, function() {
                    $scope.uploading_counts += files.length,
                        $scope.uploading_files = $scope.uploading_files.concat(files),
                        $scope.uploading = !0
                }),
                    data.submit())
            },
            done: function(e, data) {
                Common.safeApply.call($scope, function() {
                    if (0 == data.result.code) {
                        var file = data.result.data;
                        null  === $scope.project_id && (file = {
                            file_id: Common.uuid(),
                            name: data.originalFiles[0].name,
                            preview: qiniuImageView(file, 90, 90),
                            owner_preview: file
                        }),
                            $scope.uploaded_files.push(file)
                    } else
                        Errors.handle(data.result);
                    $scope.uploading_counts--,
                        $scope.uploading = 0 != $scope.uploading_counts,
                    $scope.uploading || ($scope.upload_progress = {
                        total: 0,
                        loaded: 0
                    },
                    angular.isFunction($scope.onImageUpload) && ($scope.onImageUpload($scope.uploaded_files.map(function(file) {
                        return {
                            file_id: file.file_id,
                            owner_preview: file.owner_preview,
                            preview: file.preview,
                            name: file.name
                        }
                    })),
                        $scope.uploaded_files = [])),
                        $scope.uploading_files = Common.removeOfId($scope.uploading_files, data.files[0].name, "name")
                })
            },
            fail: function() {
                Common.safeApply.call($scope, function() {
                    $scope.uploading_counts = 0,
                        $scope.uploading = !1,
                        Flash.fail().send("上传失败!")
                })
            },
            progress: function(e, data) {
                var progress = {
                    total: data.total,
                    loaded: data.loaded
                };
                Common.safeApply.call($scope, function() {
                    var file = Common.findOfId($scope.uploading_files, data.files[0].name, "name");
                    file.progress = progress,
                        $scope.uploading = !0,
                        $scope.upload_progress = allProgress()
                })
            }
        }
    }
    ]).service("ImagePickerUploadService", ["Setting", function(Setting) {
        var defaultToId = function(id) {
                return "default" === id ? 0 : id
            }
            , setting = function(project_id, folder_id, callbacks, dropzone) {
                var upload_url = ""
                    , formData = {};
                return project_id ? (upload_url = [Setting.api_host, "/api/project/", project_id, "/file/upload"].join(""),
                    formData = {
                        dir: defaultToId(folder_id)
                    }) : null  === project_id && (upload_url = [Setting.api_host, "/api/tweet/insert_image"].join("")),
                {
                    xhrFields: {
                        withCredentials: !0
                    },
                    url: upload_url,
                    dropZone: dropzone,
                    pasteZone: dropzone,
                    formData: formData,
                    maxFileSize: 5e6,
                    add: callbacks.add,
                    done: callbacks.done,
                    fail: callbacks.fail,
                    progress: callbacks.progress
                }
            }
            ;
        return {
            setting: setting
        }
    }
    ]),
    angular.module("directives").directive("cgUrlImageImport", ["Common", "CascadeMenuService", function(Common, CascadeMenuService) {
        return {
            scope: {
                onImageImport: "=cgUrlImageImport"
            },
            link: function(scope, element, attrs, ctrl) {
                ctrl && (scope.menu_id = ctrl.menu_id),
                    scope.$watch("url", _.debounce(function(url) {
                        if (url) {
                            Common.safeApply.call(scope, function() {
                                scope.loaded = !1,
                                    scope.loading = !0
                            });
                            var img = new Image;
                            img.onload = function() {
                                Common.safeApply.call(scope, function() {
                                    scope.loading = !1,
                                        scope.loaded = !0,
                                        scope.is_valid_image = !0,
                                        scope.updateMenu(scope.menu_id)
                                }),
                                    element.find(".image").html(img)
                            }
                                ,
                                img.onerror = function() {
                                    Common.safeApply.call(scope, function() {
                                        scope.loading = !1,
                                            scope.loaded = !0,
                                            scope.is_valid_image = !1,
                                            scope.updateMenu(scope.menu_id)
                                    })
                                }
                                ,
                                img.src = url
                        } else
                            "" === url && Common.safeApply.call(scope, function() {
                                scope.doExit(scope.menu_id)
                            })
                    }, 200))
            },
            controller: "UrlImageImportController",
            templateUrl: "common/directives/imagePicker/tpl/url-image.html",
            require: "^?cgProjectImagePicker"
        }
    }
    ]).controller("UrlImageImportController", ["$scope", "CascadeMenuService", function($scope, CascadeMenuService) {
        $scope.url = void 0,
            $scope.is_valid_image = !0,
            $scope.loading = !1,
            $scope.loaded = !1,
            $scope.initialed = !1,
            $scope.doExit = function(menu_id) {
                $scope.url = void 0,
                    CascadeMenuService.pop(menu_id),
                    $scope.is_valid_image = !0,
                    $scope.loading = !1,
                    $scope.loaded = !1,
                    $scope.initialed = !1
            }
            ,
            $scope.updateMenu = function(menu_id) {
                $scope.initialed ? CascadeMenuService.pop(menu_id) : $scope.initialed = !0,
                    CascadeMenuService.push(menu_id, {
                        icon: "remove sign",
                        text: "移除",
                        action: function() {
                            $scope.doExit(menu_id)
                        }
                    }, {
                        icon: "photo",
                        text: "插入图片链接"
                    }, {
                        icon: $scope.is_valid_image ? "ok sign" : "red ok sign",
                        text: "确定",
                        action: function() {
                            $scope.doImport()
                        }
                    })
            }
            ,
            $scope.doImport = function() {
                angular.isFunction($scope.onImageImport) && $scope.onImageImport($scope.url),
                    $scope.doExit($scope.menu_id)
            }
    }
    ]),
    angular.module("directives").directive("cgInsertImage", ["$parse", "$rootScope", "Attachment", "Pager", "Setting", "Errors", "Flash", "Common", "$q", function($parse, $rootScope, Attachment, PagerTool, Setting, Errors, Flash, Common, $q) {
        return {
            replace: !0,
            link: function($scope, element, attrs) {
                var fn = $parse(attrs.cgInsertImage)
                    , PROJECT = null
                    , insert_image_pager_id = (new Date).getTime()
                    , upload_url = ""
                    , files_uploading_count = 0
                    , Pager = PagerTool.instance(insert_image_pager_id, $scope, 2);
                Pager.disabledUrlChange = !0;
                var messages = {
                    loading: "正在尝试预览图片中...等不及了？那就直接点确定插入吧！",
                    fail: "预览图片失败...",
                    onSuccess: function(file) {
                        $rootScope.$broadcast("on.insert.image.by.url", file)
                    }
                }
                    , default_messages = void 0
                    , projectReadyDeferred = $q.defer()
                    , projectReadyPromise = projectReadyDeferred.promise
                    , onProjectDependencyReady = function(project) {
                    if (project) {
                        PROJECT = $scope.PROJECT = project;
                        var base = [Setting.api_host, "/api/project/", PROJECT.id];
                        PROJECT.is_public ? base.push("/upload_public_image") : base.push("/file/upload"),
                            upload_url = base.join(""),
                            projectReadyDeferred.resolve(PROJECT)
                    }
                }
                    , current_project = attrs.projectDependency;
                current_project ? $scope.$watch(current_project, onProjectDependencyReady) : $rootScope.$watch("PROJECT", onProjectDependencyReady),
                    $scope.insert_image_pager_id = insert_image_pager_id,
                    $scope.import_type = "folder",
                    $scope.folder_id = 0,
                    $scope.folders = [],
                    $scope.folders_count = 0,
                    $scope.default_folder_count = 0,
                    $scope.folder_loading = !1,
                    $scope.image_url = "",
                    $scope.upload_image_url = "",
                    $scope.files_loading = !1,
                    $scope.files = [],
                    $scope.uploading = !1,
                    $scope.uploading_files = [],
                    $scope.upload_progress = {
                        total: 0,
                        loaded: 0
                    },
                    $scope.upload_image_messages = messages,
                    $scope.default_messages = default_messages,
                    $scope.images_selected = [],
                    $scope.$watch("image_url", function(file) {
                        file && $rootScope.$broadcast("on.insert.image.by.url", file)
                    });
                var allProgress = function() {
                        var loaded = 0
                            , total = 0;
                        return angular.forEach($scope.uploading_files, function(file) {
                            var prg = file.progress;
                            prg && (loaded += prg.loaded,
                                total += prg.total)
                        }),
                        {
                            total: total,
                            loaded: loaded
                        }
                    }
                    , loadFolderCount = function() {
                        var promise = Attachment.images_count({
                            id: PROJECT.id
                        });
                        return promise.then(function(result) {
                            $scope.folders_count = result.data,
                                angular.forEach($scope.folders, function(folder) {
                                    var count = Common.findOfId($scope.folders_count, folder.file_id, "folder");
                                    folder.count = angular.copy(count.count);
                                    var sub_folders = folder.sub_folders;
                                    sub_folders.length > 0 && angular.forEach(sub_folders, function(folder) {
                                        var count = Common.findOfId($scope.folders_count, folder.file_id, "folder");
                                        folder.count = angular.copy(count.count)
                                    })
                                });
                            var default_count = Common.findOfId($scope.folders_count, 0, "folder");
                            $scope.default_folder_count = default_count.count
                        }),
                            promise
                    }
                    , loadFolders = function() {
                        $scope.folder_loading = !0;
                        var folderPromise = Attachment.all_folders({
                            id: PROJECT.id,
                            page: 1,
                            pageSize: 20
                        });
                        return folderPromise.then(function(result) {
                            $scope.folder_loading = !1,
                                $scope.folders = result.data.list || [],
                                loadFolderCount()
                        })
                    }
                    , loadFiles = function(dir, page) {
                        return $scope.files_loading = !0,
                            Attachment.images({
                                id: PROJECT.id,
                                dir: dir || 0,
                                width: 160,
                                height: 160,
                                page: page || 1,
                                pageSize: 12
                            }, function(result) {
                                $scope.files_loading = !1,
                                    $scope.files = result.data.list || [],
                                    setFileSelected($scope.files),
                                    $rootScope.$broadcast("on.insert.image.by.url", $scope.files),
                                    Pager.optionsReady(result.data)
                            })["catch"](function(error, result) {
                                result && 900 == result.code && loadFiles(0)
                            })
                    }
                    , setFileSelected = function(files) {
                        angular.forEach(files, function(file) {
                            var found = Common.findOfId($scope.images_selected, file.file_id, "file_id");
                            found && (file.selected = !0)
                        })
                    }
                    ;
                $scope.openFolder = function(folder) {
                    $scope.folder_id = folder.file_id || 0,
                        loadFiles($scope.folder_id),
                        $scope.import_type = "folder"
                }
                    ,
                    $scope.safeApply = function(fn) {
                        Common.safeApply.call(this, fn)
                    }
                ;
                var unSelectedBut = function(file) {
                        angular.forEach($scope.files, function(f) {
                            file.file_id !== f.file_id ? f.selected = !1 : f.selected = !0
                        })
                    }
                    ;
                $scope.addSelectedImage = function(file) {
                    file.selected = !file.selected,
                        file.selected ? (unSelectedBut(file),
                            $scope.images_selected = [file]) : $scope.images_selected = [file],
                        $scope.safeApply(function() {
                            fn($scope, {
                                $images: $scope.images_selected
                            })
                        })
                }
                    ,
                    $scope.$on("on.project.image.inserted", function() {
                        $scope.images_selected = [],
                            $scope.upload_image_url = "",
                            $scope.image_url = "",
                            $scope.import_type = "folder",
                            $scope.folder_id = 0
                    }),
                    $scope.upload = function() {
                        $scope.uploading || $("#import-image-input").trigger("click")
                    }
                    ,
                    $scope.changeImportType = function(type) {
                        "url" === type && ($scope.folder_id = -1,
                            setTimeout(function() {
                                $("#image_url_input").focus()
                            }, 30)),
                            $scope.import_type = type
                    }
                    ,
                    $scope.inputImageUrl = function() {
                        $scope.image_url.length > 0 && $scope.safeApply(function() {
                            fn($scope, {
                                $images: $scope.image_url
                            })
                        })
                    }
                    ,
                    $scope.$watch("image_url", function(url) {
                        url.length > 0 && $scope.safeApply(function() {
                            fn($scope, {
                                $images: url
                            })
                        })
                    }),
                    $scope.importImageUploadSetting = {
                        xhrFields: {
                            withCredentials: !0
                        },
                        url: upload_url,
                        dropZone: $("#import-image-dropzone"),
                        formData: {
                            dir: $scope.folder_id
                        },
                        maxFileSize: 5e6,
                        acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
                        add: function(e, data) {
                            for (var reg = /(\.|\/)(gif|jpe?g|png)$/i, i = 0; i < data.files.length; i++) {
                                var file = data.files[i]
                                    , name = file.name || "";
                                if (file.name.length > 0 && !reg.test(name.toLocaleLowerCase()))
                                    return void Flash.fail().send("上传图片格式不正确!");
                                if (file.size > 1048576)
                                    return void Flash.fail().send("上传图片大小超过1M!")
                            }
                            data.url = upload_url,
                                Common.safeApply.call($scope, function() {
                                    files_uploading_count += data.files.length,
                                        $scope.uploading_files = $scope.uploading_files.concat(data.files),
                                        data.submit(),
                                        $scope.uploading = !0
                                })
                        },
                        done: function(e, data) {
                            files_uploading_count--,
                                Common.safeApply.call($scope, function() {
                                    if ($scope.uploading = 0 != files_uploading_count,
                                        $scope.uploading || (loadFolderCount(),
                                            $scope.upload_progress = {
                                                total: 0,
                                                loaded: 0
                                            }),
                                        0 == data.result.code) {
                                        var file = data.result.data;
                                        if (angular.isString(file))
                                            $scope.upload_image_url = file,
                                                $scope.safeApply(function() {
                                                    fn($scope, {
                                                        $images: file
                                                    }),
                                                        $rootScope.$broadcast("on.insert.image.by.url", file)
                                                });
                                        else {
                                            var rsv_promise = Attachment.resolve("files", file);
                                            rsv_promise.then(function(file) {
                                                $scope.files.unshift(file),
                                                    $scope.addSelectedImage($scope.files[0])
                                            })
                                        }
                                    } else
                                        Errors.handle(data.result);
                                    $scope.uploading_files = Common.removeOfId($scope.uploading_files, data.files[0].name, "name")
                                })
                        },
                        fail: function() {
                            Common.safeApply.call($scope, function() {
                                files_uploading_count = 0,
                                    $scope.uploading = !1,
                                    Flash.fail().send("上传失败!")
                            })
                        },
                        progress: function(e, data) {
                            var progress = {
                                total: data.total,
                                loaded: data.loaded
                            };
                            Common.safeApply.call($scope, function() {
                                var file = Common.findOfId($scope.uploading_files, data.files[0].name, "name");
                                file.progress = progress,
                                    $scope.uploading = !0,
                                    $scope.upload_progress = allProgress()
                            })
                        }
                    },
                    $scope.$on("on.project.image.loading", function() {
                        projectReadyPromise.then(function() {
                            loadFolders(),
                                loadFiles(0)
                        })
                    }),
                    Pager.onChange(function(page) {
                        loadFiles($scope.folder_id, page)
                    })
            },
            templateUrl: "common/directives/importProjectImage/tpl/import_image.html"
        }
    }
    ]),
    angular.module("directives").directive("cgAutoRefreshHref", ["$route", function($route) {
        return {
            link: function(scope, element, attrs) {
                var href = attrs.cgAutoRefreshHref || "";
                if (element.is("a") && 0 !== href.length) {
                    attrs.$observe("cgAutoRefreshHref", function(href) {
                        angular.isDefined(href) && element.attr("href", href)
                    }),
                        element.attr("href", href);
                    var onRefresh = function(event) {
                            if (event.metaKey || event.ctrlKey)
                                return !0;
                            var current_pathname = location.pathname;
                            return current_pathname === href ? ($route.reload(),
                                event.preventDefault(),
                                !1) : void 0
                        }
                        ;
                    element.on("click", onRefresh),
                        scope.$on("$destroy", function() {
                            element.off("click", onRefresh)
                        })
                }
            },
            restrict: "A"
        }
    }
    ]),
    angular.module("directives").directive("cgJumpOutAngularHref", ["$window", function($window) {
        return {
            link: function(scope, element, attrs) {
                var link = attrs.cgJumpOutAngularHref;
                element.attr("href", link),
                    element.on("click", function(e) {
                        return $window.location = link,
                            e.preventDefault(),
                            !1
                    })
            }
        }
    }
    ]),
    angular.module("directives").directive("cgLinkTips", ["Setting", "LinkTipService", function(Setting, LinkTipService) {
        var identityUrlInfo = function(url) {
                var api = new URL(Setting.host)
                    , info = {
                    type: "outer",
                    url: url.href
                };
                if (url.host && url.host.indexOf(api.host) >= 0) {
                    var params = url.pathname.match(LinkTipService.ATTACHMENT_PREVIEW_REG);
                    if (params && 5 == params.length) {
                        params[3],
                            params[4];
                        info.type = "attachment"
                    } else
                        info.type = "inner"
                }
                return info
            }
            , exactTips = function(content) {
                var links = (content + "").match(LinkTipService.LINK_REG)
                    , tips = [];
                if (links)
                    for (var i = 0; i < links.length; i++) {
                        var link = links[i]
                            , url = "";
                        try {
                            url = new URL(link)
                        } catch (e) {
                            continue
                        }
                        tips.push(identityUrlInfo(url))
                    }
                return tips
            }
            ;
        return {
            templateUrl: "common/directives/linkTips/tpl/tips.html",
            scope: {
                content: "=cgLinkTips"
            },
            link: function($scope, element, attr) {
                $scope.tips = [];
                var content = $scope.content;
                content ? $scope.tips = exactTips(content) : $scope.$watch("content", function(ctn) {
                    $scope.tips = exactTips(ctn)
                })
            }
        }
    }
    ]).service("LinkTipService", function() {
        return {
            LINK_REG: /([a-zA-z]+:\/\/[^\s^<^>^（^）]*[a-zA-Z0-9&?%=]+)/g,
            ATTACHMENT_REG: /^\/u\/([^\/]+)\/p\/([^\/]+)\/attachment\/([^\/]+)/,
            ATTACHMENT_PREVIEW_REG: /^\/u\/([^\/]+)\/p\/([^\/]+)\/attachment\/([^\/]+)\/preview\/([^\/]+)/
        }
    }),
    angular.module("directives").directive("cgLoadMore", [function() {
        var link = function(scope, element, attrs) {
                var load_more_id = scope.$eval(attrs.cgLoadMore);
                scope.load_more_id = load_more_id
            }
            ;
        return {
            link: link,
            scope: {},
            priority: 999,
            templateUrl: "common/directives/loadMore/tpl/load_more.html"
        }
    }
    ]),
    angular.module("services").factory("LoadMore", ["$q", "$rootScope", function($q, $rootScope) {
        var LoadMoreHelper = function() {
                var id = 0
                    , scope = {};
                this.instance = function(load_more_id, $scope) {
                    id = load_more_id,
                        scope = $scope
                }
                ;
                var listen = function(type, callback) {
                        return scope.$on("load.more." + type, callback)
                    }
                    , broadcast = function(type, data) {
                        $rootScope.$broadcast("load.more." + type, data)
                    }
                    , onRequest = function(callback) {
                        var deferred = $q.defer();
                        return listen("request", callback),
                            deferred.promise
                    }
                    , sendRequest = function(callback, data) {
                        broadcast("request", data),
                        callback && callback(data)
                    }
                    ;
                return this.listen = listen,
                    this.broadcast = broadcast,
                    this.onRequest = onRequest,
                    this.sendRequest = sendRequest,
                    this
            }
            ;
        return new LoadMoreHelper
    }
    ]);
var loadingDirective = angular.module("directives");
loadingDirective.directive("cgMonkeyLoading", function() {
    return {
        templateUrl: "common/directives/loading/tpl/loading.html",
        restrict: "E",
        replace: !0,
        link: function(scope, element, attrs) {
            scope.imageSize = scope.$eval(attrs.imageSize) || 24,
                scope.containerMargin = scope.$eval(attrs.containerMargin) || 40,
                scope.circlePadding = scope.$eval(attrs.circlePadding) || 16;
            var w = scope.circlePadding;
            scope.loadingStyle = {
                width: scope.imageSize + w + "px",
                height: scope.imageSize + w + "px"
            },
                scope.loadingTextStyle = {
                    width: scope.imageSize + w + "px",
                    height: scope.imageSize + w + "px",
                    "line-height": scope.imageSize + w + "px"
                }
        }
    }
}),
    angular.module("app").controller("InsertImageLightMDController", ["$scope", "$rootScope", function($scope, $rootScope) {
        $scope.insertImages = function(images) {
            $rootScope.$broadcast("on.light.md.image.insert", images)
        }
    }
    ]),
    angular.module("directives").directive("cgLightMdEditor", ["hljsService", "$filter", "Common", "Setting", "Errors", "Flash", function(hljs, $filter, Common, Setting, Errors, Flash) {
        return {
            scope: {
                editor_id: "@editorId",
                ctn: "&ngModel",
                onSubmit: "=cgLightMdEditor",
                onChange: "=onChange",
                onFocus: "=onFocus",
                onBlur: "=onBlur",
                onPreview: "=onPreview",
                at_member: "=atMember",
                placeholder: "@placeholder",
                project_dependency: "=projectDependency",
                mode: "@mode",
                at_item: "=atItem",
                at_context_type: "=atContextType",
                extra_item: "=extraItem",
                img_compression: "=imgCompression",
                show_submit: "=showSubmit",
                image_picker_mode: "=imagePickerMode",
                tab_index: "@tabIndex"
            },
            link: function(scope, element, attrs) {
                var textarea = $(element).find("textarea.editor")
                    , textItem = textarea[0]
                    , preview = $(element).find(".editor > .preview > .markdown.content");
                textarea.on("keydown", function(event) {
                    return 9 == event.keyCode ? (textarea[0].insertContent("    ", function(t) {
                        scope.content = t.value
                    }),
                    event.preventDefault && event.preventDefault(),
                        !1) : void 0
                }),
                    scope.refreshPreview = function(html) {
                        preview.html(""),
                        html && 0 !== html.length && (html = $filter("restyleEmoji")(html),
                            preview.html(html),
                            preview.find("pre code").each(function(i, e) {
                                hljs.highlightBlock(e)
                            }))
                    }
                    ,
                    scope.removePreview = function() {
                        preview.html("")
                    }
                    ,
                    scope.focus = function() {
                        textarea.focus()
                    }
                    ,
                    scope.insertCode = function() {
                        var value = textarea.val()
                            , inv = ""
                            , position = textItem.getCaretPosition();
                        value.length > 0 && (/[\n]$/.test(value) || (inv += "\n",
                            position += 1),
                            position += 1,
                            inv += "\n"),
                            inv += "```\n\n```\n",
                            textItem.insertContent(inv, function(t) {
                                position += 4,
                                0 >= position && (position = 0),
                                    t.setCaretPosition(position),
                                    t.oninput(),
                                    Common.safeApply.call(scope, function() {
                                        scope.content = t.value
                                    })
                            })
                    }
                    ,
                    scope.insertImage = function(img_src) {
                        var inHtml = ""
                            , position = textItem.getCaretPosition()
                            , img_src = img_src || "这里插入图片地址"
                            , selected = textItem.getSelectedText()
                            , empty = 0 === textItem.value.length;
                        empty || (inHtml += "\n"),
                            inHtml += " ![图片](" + img_src + ") \n";
                        var has_select = selected && selected.length > 0;
                        has_select && (position = position + selected.length + 2,
                            textItem.setCaretPosition(position),
                            inHtml = "\n" + inHtml),
                            textItem.insertContent(inHtml, function(t) {
                                t.oninput(),
                                    Common.safeApply.call(scope, function() {
                                        scope.content = t.value
                                    })
                            })
                    }
                    ,
                    scope.imageSelectDone = function(images) {
                        angular.forEach(images, function(image) {
                            scope.insertImage(image)
                        })
                    }
                    ,
                scope.onFocus && textarea.on("focus", function() {
                    Common.safeApply.call(scope, function() {
                        scope.onFocus(scope.content)
                    })
                }),
                scope.onBlur && textarea.on("blur", function() {
                    Common.safeApply.call(scope, function() {
                        scope.onBlur(scope.content)
                    })
                }),
                    scope.img_uploading = !1,
                    scope.light_md_upload_setting = {
                        xhrFields: {
                            withCredentials: !0
                        },
                        url: Setting.api_host + "/api/tweet/insert_image",
                        pasteZone: textarea,
                        dropZone: textarea,
                        disableImageResize: "undefined" == typeof scope.img_compression ? !1 : !scope.img_compression,
                        loadImageMaxFileSize: 52428800,
                        process: Common.scaleImageFilter,
                        processstart: function() {
                            Common.safeApply.call(scope, function() {
                                scope.img_uploading = !0
                            })
                        },
                        done: function(e, data) {
                            scope.img_uploading = !1,
                                0 == data.result.code ? scope.insertImage(data.result.data) : Errors.handle(data.result)
                        },
                        fail: function() {
                            scope.img_uploading = !1,
                                Flash.fail().send("上传失败!")
                        },
                        paste: Common.addFilenameWhenPaste
                    }
            },
            templateUrl: "common/directives/markdown/tpl/light.html",
            controller: "LightMdEditorController",
            replace: !0
        }
    }
    ]).controller("LightMdEditorController", ["$scope", "Markdown", "LightMdEditorService", "BubbleCommentFormService", "$rootScope", "Common", "btfModal", function($scope, Markdown, LightMdEditorService, BubbleCommentFormService, $rootScope, Common, btfModal) {
        $scope.content = $scope.ctn() || "",
            $scope.sending = !1,
            $scope.previewing = !1,
            $scope.previewed = !1,
            $scope.project_id = null ,
            $scope.sendContent = function(content) {
                if (!$scope.sending) {
                    $scope.sending = !0;
                    var promise = $scope.onSubmit && $scope.onSubmit(content);
                    promise ? (promise.then(function() {
                        $scope.content = ""
                    }),
                        promise["finally"](function() {
                            $scope.sending = !1,
                                $scope.removePreview(),
                                $scope.previewed = !1
                        })) : ($scope.sending = !1,
                        $scope.previewed = !1)
                }
            }
            ,
            $scope.showEnterButton = function() {
                return !$scope.mode && !$scope.onChange || $scope.show_submit
            }
        ;
        var doPreview = function() {
                if ($scope.removePreview(),
                    0 != $scope.content.length) {
                    $scope.previewing = !0;
                    var promise = null ;
                    if ($rootScope.PROJECT) {
                        var params = Common.projectParams($rootScope.PROJECT);
                        promise = Markdown.project_simple_preview(params, {
                            content: $scope.content
                        })
                    } else
                        promise = Markdown.simple_preview({
                            content: $scope.content
                        });
                    promise.then(function(result) {
                        var content = result.data || "";
                        $scope.refreshPreview(content),
                        angular.isFunction($scope.onPreview) && $scope.onPreview(content)
                    }),
                        promise["finally"](function() {
                            $scope.previewing = !1
                        })
                }
            }
            ;
        $scope.togglePreview = function() {
            return this.showEmptyInfo() ? void ($scope.previewed = !1) : ($scope.previewed = !$scope.previewed,
                void ($scope.previewed && doPreview()))
        }
        ;
        var resetEditor = function(success) {
                success && ($scope.content = ""),
                    $scope.sending = !1,
                    $scope.removePreview(),
                    $scope.previewed = !1
            }
            ;
        $scope.onChange && $scope.$watch("content", function(content) {
            angular.isDefined(content) && $scope.onChange(content, resetEditor)
        }),
            $scope.showEmptyInfo = function() {
                return 0 === $scope.content.length
            }
            ,
            LightMdEditorService.onAtPerson(function(event, name) {
                var content = $scope.content || "";
                content = BubbleCommentFormService.atPerson(null , content, name),
                    $scope.content = content,
                    $scope.focus()
            }, $scope.editor_id),
            $scope.dropdownMode = function() {
                return $scope.image_picker_mode ? $scope.image_picker_mode : $scope.showEnterButton() ? "md-editor up" : "md-editor down"
            }
            ,
            $scope.$watch("project_dependency", function(project) {
                project && ($scope.project_id = project.is_public ? null  : project.id)
            })
    }
    ]).service("LightMdEditorService", ["$rootScope", "btfModal", "Project", "ProjectResolver", function($rootScope, btfModal, Project, ProjectResolver) {
        var atPerson = function(name, id) {
                $rootScope.$broadcast("light.md.editor." + (id || "default") + ".at.person", name)
            }
            , onAtPerson = function(callback, id) {
                $rootScope.$on("light.md.editor." + (id || "default") + ".at.person", callback)
            }
            ;
        return {
            atPerson: atPerson,
            onAtPerson: onAtPerson
        }
    }
    ]),
    angular.module("directives").directive("cgNewYear", ["ipCookie", "$timeout", "AdBanner", function(ipCookie, $timeout, AdBanner) {
        return {
            scope: {},
            restrict: "E",
            controller: "NewYearBannerController",
            templateUrl: "common/directives/marketing/tpl/marketing-new-year.html",
            link: function(scope, element, attrs) {},
            replace: !0
        }
    }
    ]).controller("NewYearBannerController", ["$scope", "AdBanner", "$q", "ipCookie", "$timeout", function($scope, AdBanner, $q, ipCookie, $timeout) {
        $scope.ads = [],
            $scope.banners = {
                large: {
                    key: "new_year_large"
                },
                min: {
                    key: "new_year_min"
                }
            };
        var deferred = $q.defer();
        deferred.resolve();
        var promise = deferred.promise;
        promise.then(function() {
            var pro = AdBanner.get({
                id: $scope.banners.large.key
            });
            pro.$promise.then(function(result) {
                0 == result.code && ($scope.banners.large.ad = result.data,
                    AdBanner.get({
                        id: $scope.banners.min.key
                    }, function(result) {
                        if (0 == result.code) {
                            $scope.banners.min.ad = result.data;
                            var cookie = ipCookie("new-year-banner");
                            $scope.minShow = !0,
                                $scope.largeShow = !0,
                            cookie || ($scope.minShow = !1,
                                $scope.largeShow = !1,
                                $timeout(function() {
                                    $scope.largeShow = !0,
                                        ipCookie("new-year-banner", !0, {
                                            path: "/"
                                        }),
                                        $timeout(function() {
                                            $scope.minShow = !0
                                        }, 500)
                                }, 5e3))
                        }
                    }))
            })
        }),
            $scope.expand = function() {
                $scope.minShow ? ($scope.minShow = !1,
                    $scope.largeShow = !1) : ($scope.largeShow = !0,
                    $timeout(function() {
                        $scope.minShow = !0
                    }, 1e3))
            }
            ,
            promise["catch"](function() {
                return $scope.destory(),
                    !1
            }),
            promise["finally"](function() {
                $scope.loading = !1
            })
    }
    ]),
    angular.module("directives").directive("cgSnowContainer", [function() {
        return {
            scope: {
                open: "@"
            },
            restrict: "E",
            templateUrl: "common/directives/marketing/tpl/marketing-snow.html",
            link: function(scope, element, attrs) {
                scope.open = "true" === scope.open ? !0 : !1
            },
            replace: !0
        }
    }
    ]),
    angular.module("directives").directive("cgMakeSnow", ["$window", "$timeout", function($window, $timeout) {
        var Snow = function(element, settings) {
                this.settings = settings,
                    this.flakes = [],
                    this.flakeCount = settings.count,
                    this.mx = -100,
                    this.my = -100,
                    function() {
                        var requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || function(callback) {
                                    $timeout(callback, 1e3 / 60)
                                }
                            ;
                        $window.requestAnimationFrame = requestAnimationFrame
                    }(),
                    this.init(element)
            }
            ;
        return Snow.prototype.init = function(element) {
            this.canvas = element.get(0),
                this.ctx = this.canvas.getContext("2d"),
                this.canvas.width = $window.innerWidth,
                this.canvas.height = $window.innerHeight,
                this.flakes = [];
            for (var i = 0; i < this.flakeCount; i++) {
                var x = Math.floor(Math.random() * this.canvas.width)
                    , y = Math.floor(Math.random() * this.canvas.height)
                    , size = Math.floor(100 * Math.random()) % this.settings.size + 2
                    , speed = Math.floor(100 * Math.random()) % this.settings.speed + Math.random() * size / 10 + .5
                    , opacity = .5 * Math.random() + this.settings.opacity;
                this.flakes.push({
                    speed: speed,
                    velY: speed,
                    velX: 0,
                    x: x,
                    y: y,
                    size: size,
                    stepSize: Math.random() / 30,
                    step: 0,
                    angle: 180,
                    opacity: opacity
                })
            }
            1 == this.settings.interaction && this.canvas.addEventListener("mousemove", function(e) {
                this.mx = e.clientX,
                    this.my = e.client
            });
            var thiz = this;
            angular.element($window).resize(function() {
                thiz.ctx.clearRect(0, 0, thiz.canvas.width, thiz.canvas.height),
                    thiz.canvas.width = $window.innerWidth,
                    thiz.canvas.height = $window.innerHeight
            }),
                this.image = angular.element("<img src='" + this.settings.image + "' style='display: none'>"),
                this.snow()
        }
            ,
            Snow.prototype.snow = function() {
                var thiz = this
                    , render = function() {
                        thiz.ctx.clearRect(0, 0, thiz.canvas.width, thiz.canvas.height);
                        for (var i = 0; i < thiz.flakeCount; i++) {
                            var flake = thiz.flakes[i]
                                , x = thiz.mx
                                , y = thiz.my
                                , minDist = 100
                                , x2 = flake.x
                                , y2 = flake.y
                                , dist = Math.sqrt((x2 - x) * (x2 - x) + (y2 - y) * (y2 - y));
                            if (minDist > dist) {
                                var force = minDist / (dist * dist)
                                    , xcomp = (x - x2) / dist
                                    , ycomp = (y - y2) / dist
                                    , deltaV = force / 2;
                                flake.velX -= deltaV * xcomp,
                                    flake.velY -= deltaV * ycomp
                            } else
                                switch (flake.velX *= .98,
                                flake.velY <= flake.speed && (flake.velY = flake.speed),
                                    thiz.settings.windPower) {
                                    case !1:
                                        flake.velX += Math.cos(flake.step += .05) * flake.stepSize;
                                        break;
                                    case 0:
                                        flake.velX += Math.cos(flake.step += .05) * flake.stepSize;
                                        break;
                                    default:
                                        flake.velX += .01 + thiz.settings.windPower / 100
                                }
                            if (flake.y += flake.velY,
                                    flake.x += flake.velX,
                                (flake.y >= thiz.canvas.height || flake.y <= 0) && thiz.resetFlake(flake),
                                (flake.x >= thiz.canvas.width || flake.x <= 0) && thiz.resetFlake(flake),
                                0 == thiz.settings.image) {
                                var grd = thiz.ctx.createRadialGradient(flake.x, flake.y, 0, flake.x, flake.y, flake.size - 1);
                                grd.addColorStop(0, thiz.settings.startColor),
                                    grd.addColorStop(1, thiz.settings.endColor),
                                    thiz.ctx.fillStyle = grd,
                                    thiz.ctx.beginPath(),
                                    thiz.ctx.arc(flake.x, flake.y, flake.size, 0, 2 * Math.PI),
                                    thiz.ctx.fill()
                            } else
                                thiz.ctx.drawImage(thiz.image.get(0), flake.x, flake.y, 2 * flake.size, 2 * flake.size)
                        }
                        $window.cancelAnimationFrame(render),
                            $window.requestAnimationFrame(render)
                    }
                    ;
                render()
            }
            ,
            Snow.prototype.resetFlake = function(flake) {
                if (0 == this.settings.windPower || 0 == this.settings.windPower)
                    flake.x = Math.floor(Math.random() * this.canvas.width),
                        flake.y = 0;
                else if (this.settings.windPower > 0) {
                    var xarray = Array(Math.floor(Math.random() * this.canvas.width), 0)
                        , yarray = Array(0, Math.floor(Math.random() * this.canvas.height))
                        , allarray = Array(xarray, yarray)
                        , selected_array = allarray[Math.floor(Math.random() * allarray.length)];
                    flake.x = selected_array[0],
                        flake.y = selected_array[1]
                } else {
                    var xarray = Array(Math.floor(Math.random() * this.canvas.width), 0)
                        , yarray = Array(this.canvas.width, Math.floor(Math.random() * this.canvas.height))
                        , allarray = Array(xarray, yarray)
                        , selected_array = allarray[Math.floor(Math.random() * allarray.length)];
                    flake.x = selected_array[0],
                        flake.y = selected_array[1]
                }
                flake.size = Math.floor(100 * Math.random()) % this.settings.size + 2,
                    flake.speed = Math.floor(100 * Math.random()) % this.settings.speed + Math.random() * flake.size / 10 + .5,
                    flake.velY = flake.speed,
                    flake.velX = 0,
                    flake.opacity = .5 * Math.random() + this.settings.opacity
            }
            ,
        {
            scope: {
                speed: "@",
                interaction: "@",
                size: "@",
                count: "@",
                opacity: "@",
                startColor: "@",
                endColor: "@",
                windPower: "@",
                image: "@"
            },
            restrict: "A",
            link: function(scope, element, attrs) {
                scope.speed = parseFloat(scope.speed),
                    scope.size = parseInt(scope.size),
                    scope.opacity = parseFloat(scope.opacity),
                    scope.windPower = parseFloat(scope.windPower),
                    scope.interaction = "true" === scope.interaction ? !0 : !1,
                    scope.image = "false" === scope.image ? !1 : scope.image;
                new Snow(element,{
                    speed: scope.speed || 0,
                    interaction: scope.interaction || !0,
                    size: scope.size || 2,
                    count: scope.count || 200,
                    opacity: scope.opacity || 1,
                    startColor: scope.startColor || "rgba(255,255,255,1)",
                    endColor: scope.endColor || "rgba(255,255,255,0)",
                    windPower: scope.windPower || 0,
                    image: scope.image || !1
                })
            },
            replace: !0
        }
    }
    ]),
    angular.module("directives").directive("cgWow", [function(emojis) {
        return {
            link: function(scope, element, attrs) {
                angular.element(document).ready(function() {
                    var wow = new WOW;
                    wow.init()
                })
            }
        }
    }
    ]),
    angular.module("directives").directive("cgPageScroll", ["$anchorScroll", "location", "Common", function($anchorScroll, location, Common) {
        var _firstLoaded = !0;
        return {
            restrict: "A",
            link: function(scope, el, attrs) {
                if (_firstLoaded)
                    var un = scope.$on("markdown.load.success", function() {
                        un(),
                            _firstLoaded = !1;
                        var hash = location.hash()
                            , $target = el.find('[id="' + hash + '"],[name="' + hash + '"]');
                        $target.length > 0 && window.scrollTo(0, $target.offset().top - 60)
                    });
                el.on("click.pageScroll", "a", function(e) {
                    var href = $(this).attr("href");
                    if (href && "#" == href.charAt(0)) {
                        e.preventDefault();
                        var hash = decodeURIComponent(href.slice(1));
                        if (Common.safeApply.call(scope, function() {
                                location.skipReload().hash(hash)
                            }),
                            "false" === attrs.cgPageScroll)
                            $anchorScroll(),
                                Common.safeApply.call(scope, function() {
                                    location.skipReload().hash("")
                                });
                        else {
                            var $target = el.find('[id="' + hash + '"],[name="' + hash + '"]');
                            $target.length > 0 && window.scrollTo(0, $target.offset().top - 60)
                        }
                    }
                })
            }
        }
    }
    ]),
    angular.module("app").controller("InsertLinkController", ["$scope", "$rootScope", function($scope, $rootScope) {
        $scope.link = "",
            $scope.$watch("link", function(link) {
                $rootScope.$broadcast("on.insert.link.change", link)
            }),
            $scope.$on("on.project.link.inserted", function() {
                $scope.link = ""
            }),
            $scope.insertNow = function() {
                var modal = $("#insert_link_modal");
                setTimeout(function() {
                    modal.find(".ok.button").trigger("click")
                }, 0)
            }
    }
    ]),
    angular.module("directives").directive("cgMarkdown", ["$rootScope", "$compile", "hljsService", "Markdown", "$parse", "$timeout", function($rootScope, $compile, hljs, MarkdownAPI, $parse, $timeout) {
        var nextId = 0;
        new Markdown.Converter;
        return {
            require: "ngModel",
            replace: !0,
            template: '<div class="markdown-editor"></div>',
            link: function(scope, iElement, iAttrs, ngModel) {
                var fn = $parse(iAttrs.cgMarkdown)
                    , off_refer_resource = scope.$eval(iAttrs.offReferResource) || !1
                    , editorUniqueId = nextId++
                    , preview = !!iAttrs.preview
                    , style = iAttrs.style || "height:500px;"
                    , newElement = $compile('<div><div class="wmd-panel"><div id="wmd-button-bar-' + editorUniqueId + '"></div><textarea class="wmd-input" cg-at-who ' + (off_refer_resource ? "" : "cg-refer-resource") + ' at-member="PROJECT.id" id="wmd-input-' + editorUniqueId + '" ng-model="' + iAttrs.ngModel + '" style="' + style + '" ></textarea></div><div id="wmd-preview-' + editorUniqueId + '" style="display:none;"></div><div class="markdown content" id="preview-' + editorUniqueId + '" style="' + (preview ? "" : "display:none;") + '"></div></div>')(scope);
                iElement.html(newElement);
                var converter = new Markdown.Converter
                    , help = function() {}
                    , editor = new Markdown.Editor(converter,"-" + editorUniqueId,{
                    helpButton: {
                        handler: help
                    },
                    strings: {
                        bold: "粗体 <strong> Ctrl+B",
                        boldexample: "在此输入文字",
                        italic: "斜体 <em> Ctrl+I",
                        italicexample: "在此输入文字",
                        link: "链接 <a> Ctrl+L",
                        linkdescription: "在此输入链接内容",
                        linkdialog: "<h2>插入链接</h2>",
                        quote: "引用 <blockquote> Ctrl+Q",
                        quoteexample: "这里输入引用文字",
                        code: "代码片段 <pre><code> Ctrl+K",
                        codeexample: "在此输入代码片段",
                        image: "图片 <img> Ctrl+G",
                        imagedescription: "在这里输入图片描述",
                        imagedialog: "<h2>插入图片</h2>",
                        olist: "数字列表 <ol> Ctrl+O",
                        ulist: "符号列表 <ul> Ctrl+U",
                        litem: "列表项",
                        heading: "标题 <h1>/<h2> Ctrl+H",
                        headingexample: "这里输入标题",
                        hr: "水平分割线 <hr> Ctrl+R",
                        undo: "撤销 - Ctrl+Z",
                        redo: "重做 - Ctrl+Y",
                        redomac: "重做 - Ctrl+Shift+Z",
                        help: "需要帮助"
                    }
                });
                editor.run();
                var $wmdInput = $("#wmd-input-" + editorUniqueId)
                    , preview = $("#preview-" + editorUniqueId)
                    , bar = $("#wmd-button-bar-" + editorUniqueId)
                    , buttons = bar.find(".wmd-button")
                    , row = bar.find(".wmd-button-row")
                    , btn_regex = /wmd\-(.*)\-button/
                    , replace_ids = {
                    redo: "flipped undo",
                    link: "url",
                    quote: "quote left",
                    image: "photo",
                    olist: "ordered list",
                    ulist: "list",
                    hr: "ellipsis horizontal"
                };
                buttons.each(function(i, button) {
                    var self = $(button)
                        , id = self.attr("id").replace("-" + editorUniqueId, "");
                    id = id.match(btn_regex),
                    id && 2 == id.length && (id = id[1]),
                        id = replace_ids[id] || id;
                    var icon = '<i class="' + id + ' icon"></i>';
                    self.find("span").hide(),
                        self.append(icon)
                });
                var preview_button = $(['<li class="wmd-button" id="wmd-preview-button" title="Preview" style="left: 375px;">', '<i class="unhide icon"></i>', "</li>"].join("\n"));
                row.append(preview_button);
                var help_icon = bar.find(".wmd-help-button .help.icon")
                    , help_url = "/help/";
                help_icon.wrap('<a class="gray" href="' + help_url + '" target="_blank"></a>'),
                    preview_button.on("click", function() {
                        if (preview.is(":hidden")) {
                            preview.show();
                            var promise = getPreview();
                            promise["finally"](function() {
                                addRefreshPreviewBtn()
                            }),
                                preview_button.find(".icon").removeClass("unhide").addClass("hide")
                        } else
                            preview.hide(),
                                preview_button.find(".icon").removeClass("hide").addClass("unhide")
                    }),
                    preview.on("click", "#markdown-refresh-btn", function() {
                        var promise = getPreview();
                        promise["finally"](function() {
                            addRefreshPreviewBtn()
                        })
                    });
                var addRefreshPreviewBtn = function() {
                        var btn = $('<a href="javascript:void(0);" id="markdown-refresh-btn"><i class="refresh icon"></i></a>');
                        $("#markdown-refresh-btn").remove(),
                            preview.append(btn)
                    }
                    , getPreview = function(content) {
                        var rawContent = content || $wmdInput.val() || "";
                        if (0 != rawContent.length && !preview.is(":hidden")) {
                            var promise = MarkdownAPI.simple_preview({
                                content: rawContent
                            });
                            return promise.then(function(html) {
                                preview.html(html.data),
                                    preview.find("pre code, code").each(function(i, e) {
                                        hljs.highlightBlock(e)
                                    })
                            }),
                                promise
                        }
                    }
                    ;
                preview && getPreview(),
                    $rootScope.$watch("InsertImageModal", function(modal) {
                        modal && modal.activate()
                    }),
                    $rootScope.$watch("InsertLinkModal", function(modal) {
                        modal && modal.activate()
                    });
                var import_images = []
                    , import_link = ""
                    , refreshModal = function() {
                        setTimeout(function() {
                            $("#insert_image_modal").modal("refresh")
                        }, 500)
                    }
                    ;
                scope.$on("on.project.image.insert", function(event, images) {
                    import_images = angular.copy(images)
                }),
                    scope.$on("on.insert.image.by.url", function() {
                        refreshModal()
                    }),
                    editor.hooks.set("insertImageDialog", function(enterLink) {
                        return $(".wmd-prompt-background").hide(),
                            $timeout(function() {
                                var modal = $("#insert_image_modal");
                                modal.modal("setting", {
                                    onShow: function() {
                                        $rootScope.$broadcast("on.project.image.loading")
                                    },
                                    onApprove: function() {
                                        if (angular.isArray(import_images) > 0) {
                                            var file = import_images[0];
                                            enterLink(file.owner_preview),
                                                import_images = []
                                        } else
                                            angular.isString(import_images) && enterLink(import_images)
                                    },
                                    onHide: function() {
                                        $rootScope.$broadcast("on.project.image.inserted")
                                    }
                                }),
                                    modal.modal("show")
                            }, 300),
                            !0
                    }),
                    scope.$on("on.insert.link.change", function(event, link) {
                        link && (import_link = link)
                    }),
                    editor.hooks.set("insertLinkDialog", function(enterLink) {
                        return $(".wmd-prompt-background").hide(),
                            $timeout(function() {
                                var modal = $("#insert_link_modal");
                                modal.modal("setting", {
                                    onApprove: function() {
                                        enterLink(import_link)
                                    },
                                    onHide: function() {
                                        $rootScope.$broadcast("on.project.link.inserted")
                                    }
                                }),
                                    modal.modal("show")
                            }),
                            !0
                    }),
                    editor.hooks.chain("onChange", function() {
                        var rawContent = $wmdInput.val();
                        scope.$apply(function() {
                            fn(scope, {
                                $content: rawContent
                            })
                        })
                    })
            }
        }
    }
    ]),
    angular.module("directives").directive("cgPagedown", ["PagedownService", "$rootScope", "$timeout", "$parse", "$compile", "Setting", "Common", "Errors", "Markdown", "Flash", function(PagedownService, $rootScope, $timeout, $parse, $compile, Setting, Common, Errors, MarkdownService, Flash) {
        return {
            scope: {
                content: "=ngModel",
                id: "@",
                features: "=",
                minHeight: "@minHeight"
            },
            link: function(scope, element, attrs) {
                var fn = $parse(attrs.cgPagedown)
                    , editor_wrapper = element.find(".pagedown-editor")
                    , editor = element.find(".pagedown-editor textarea")
                    , preview = element.find(".pagedown-preview");
                editor.addClass("pagedown-input cg-textarea-editable").attr("id", "wmd-input" + scope.id);
                var converter = Markdown.getSanitizingConverter()
                    , isReferable = !!editor.attr("cg-refer-resource")
                    , previewCallback = function(result) {
                    result.data && preview.html(result.data),
                        preview.find("pre code").each(function(i, e) {
                            hljs.highlightBlock(e)
                        })
                }
                    , doPreview = _.throttle(function(text, callback) {
                    scope.button.previewing && (isReferable && $rootScope.USER && $rootScope.PROJECT ? MarkdownService.project_preview(Common.projectParams($rootScope.PROJECT), {
                        content: text
                    }).then(function(result) {
                        previewCallback(result),
                        angular.isFunction(callback) && callback(result)
                    }) : MarkdownService.preview({
                        toc: !0
                    }, {
                        content: text
                    }).then(function(result) {
                        previewCallback(result),
                        angular.isFunction(callback) && callback(result)
                    }))
                }, 1e3);
                converter.hooks.chain("preConversion", function(text) {
                    return doPreview(text),
                        ""
                }),
                    converter.hooks.chain("postConversion", function(text) {
                        return preview.html()
                    }),
                    Markdown.Extra.init(converter),
                    scope.editor = new Markdown.Editor(converter,scope.id,PagedownService.editor_setting),
                    scope.editor.run(),
                    PagedownService.compileImagePicker(element, scope);
                var bar = PagedownService.replaceButtons(scope.id);
                PagedownService.autoScroll(editor, preview),
                    editor.on("keydown", function(event) {
                        return 9 == event.keyCode ? (editor[0].insertContent("    ", function(t) {
                            scope.content = t.value
                        }),
                        event.preventDefault && event.preventDefault(),
                            !1) : void 0
                    }),
                    editor_wrapper.TextAreaResizer({
                        minHeight: scope.minHeight
                    }),
                    $rootScope.$watch("InsertImageModal", function(modal) {
                        modal && $rootScope.PROJECT && modal.activate()
                    }),
                    $rootScope.$watch("InsertLinkModal", function(modal) {
                        modal && modal.activate()
                    });
                var import_link = "";
                scope.editor.hooks.set("insertImageDialog", function(enterLink) {
                    $(".wmd-prompt-background").hide();
                    var dropdown = element.find(".image-picker-dropdown");
                    return dropdown.length > 0 && dropdown.dropdown("toggle"),
                        scope.imageSelectDone = function(images) {
                            $timeout(function() {
                                enterLink(images)
                            })
                        }
                        ,
                        !0
                }),
                    scope.$on("on.insert.link.change", function(event, link) {
                        link && (import_link = link)
                    }),
                    scope.editor.hooks.set("insertLinkDialog", function(enterLink) {
                        return $(".wmd-prompt-background").hide(),
                            $timeout(function() {
                                var modal = $("#insert_link_modal");
                                modal.modal("setting", {
                                    onApprove: function() {
                                        enterLink(import_link)
                                    },
                                    onHide: function() {
                                        $rootScope.$broadcast("on.project.link.inserted")
                                    }
                                }),
                                    modal.modal("show")
                            }),
                            !0
                    });
                var onContentChange = function() {
                        var rawContent = editor.val();
                        scope.$apply(function() {
                            scope.content = rawContent,
                                fn(scope, {
                                    $content: rawContent
                                })
                        })
                    }
                    ;
                scope.editor.hooks.chain("onChange", onContentChange),
                    scope.toggleBodyOverflow = function(fullscreen) {
                        fullscreen ? $("body").css("overflow", "hidden") : $("body").css("overflow", "auto")
                    }
                    ,
                    scope.img_uploading = !1,
                    PagedownService.compileImageLoading(bar, scope),
                    scope.insert_image_setting = {
                        xhrFields: {
                            withCredentials: !0
                        },
                        url: Setting.api_host + "/api/tweet/insert_image",
                        pasteZone: editor,
                        dropZone: editor,
                        disableImageResize: !1,
                        loadImageMaxFileSize: 52428800,
                        process: Common.scaleImageFilter,
                        processstart: function() {
                            Common.safeApply.call(scope, function() {
                                scope.img_uploading = !0
                            })
                        },
                        done: function(e, data) {
                            if (scope.img_uploading = !1,
                                0 == data.result.code) {
                                var textItem = editor[0]
                                    , inHtml = "";
                                textItem.value.length > 0 && (inHtml += "\n"),
                                    inHtml += " ![图片](" + data.result.data + ") \n",
                                    textItem.insertContent(inHtml, onContentChange),
                                    scope.editor.refreshPreview()
                            } else
                                Errors.handle(data.result)
                        },
                        fail: function() {
                            scope.img_uploading = !1,
                                Flash.fail().send("图片上传失败!")
                        },
                        paste: Common.addFilenameWhenPaste
                    },
                    element.find(".pagedown-toc-dropdown").dropdown();
                var toc = element.find(".markdown-toc");
                scope.updateToc = function() {
                    MarkdownService.toc({
                        content: scope.content || ""
                    }).then(function(result) {
                        toc.html(result.data)
                    })
                }
                    ,
                    toc.on("click", "a", function(e) {
                        scope.button.previewing = !0;
                        var that = this;
                        doPreview(editor.val(), function() {
                            $(that).trigger("click.pageScroll")
                        })
                    })
            },
            transclude: !0,
            templateUrl: "common/directives/pagedown/tpl/pagedown.html",
            controller: "PagedownController"
        }
    }
    ]).controller("PagedownController", ["$scope", "ModalService", function($scope, ModalService) {
        $scope.button = {
            previewing: !1,
            full_screen: !1
        };
        var modal = $scope.pagedown_help_modal = ModalService.instance("hello-moto-modal");
        $scope.togglePreview = function(preview) {
            $scope.button.previewing = angular.isDefined(preview) ? preview : !$scope.button.previewing,
                $scope.editor.refreshPreview()
        }
            ,
            $scope.toggleFullscreen = function() {
                $scope.button.full_screen = !$scope.button.full_screen,
                    $scope.button.full_screen ? this.togglePreview(!0) : this.togglePreview(!1),
                    $scope.toggleBodyOverflow($scope.button.full_screen)
            }
            ,
            $scope.toggleHelpModal = function() {
                modal.toggle()
            }
    }
    ]).service("PagedownService", ["$compile", "$rootScope", function($compile, $rootScope) {
        var setting = {
                strings: {
                    bold: "粗体 <strong> Ctrl+B",
                    boldexample: "在此输入文字",
                    italic: "斜体 <em> Ctrl+I",
                    italicexample: "在此输入文字",
                    link: "链接 <a> Ctrl+L",
                    linkdescription: "在此输入链接内容",
                    linkdialog: "<h2>插入链接</h2>",
                    quote: "引用 <blockquote> Ctrl+Q",
                    quoteexample: "这里输入引用文字",
                    code: "代码片段 <pre><code> Ctrl+K",
                    codeexample: "在此输入代码片段",
                    image: "图片 <img> Ctrl+G",
                    imagedescription: "在这里输入图片描述",
                    imagedialog: "<h2>插入图片</h2>",
                    olist: "数字列表 <ol> Ctrl+O",
                    ulist: "符号列表 <ul> Ctrl+U",
                    litem: "列表项",
                    heading: "标题 <h1>/<h2> Ctrl+H",
                    headingexample: "这里输入标题",
                    hr: "水平分割线 <hr> Ctrl+R",
                    undo: "撤销 - Ctrl+Z",
                    redo: "重做 - Ctrl+Y",
                    redomac: "重做 - Ctrl+Shift+Z",
                    help: "需要帮助"
                }
            }
            , replaceButtons = function(id) {
                var bar = ($("#wmd-button-row" + id),
                    $("#wmd-button-bar" + id))
                    , buttons = bar.find("#wmd-button-row" + id + " .wmd-button")
                    , btn_regex = new RegExp("wmd\\-(.*)\\-button" + (id ? "\\" + id : ""))
                    , replace_ids = {
                    redo: "flipped undo",
                    link: "url",
                    quote: "quote left",
                    image: "photo",
                    olist: "ordered list",
                    ulist: "list",
                    hr: "ellipsis horizontal"
                };
                return buttons.each(function(i, button) {
                    var self = $(button)
                        , id = self.attr("id").replace("-" + id, "");
                    id = id.match(btn_regex),
                    id && 2 == id.length && (id = id[1]),
                        id = replace_ids[id] || id;
                    var icon = '<i class="' + id + ' icon"></i>';
                    self.find("span").hide(),
                        self.append(icon)
                }),
                    bar
            }
            , compileImageLoading = function(bar, scope) {
                var icon = bar.find("#wmd-image-button-1 .photo.icon");
                icon.attr("ng-class", "{photo: !img_uploading, loading: img_uploading}"),
                    $compile(icon)(scope)
            }
            , autoScroll = function(editor, preview) {
                editor.on("scroll", function() {
                    editor.is(".hovered") && preview.stop().animate({
                        scrollTop: preview[0].scrollHeight * (editor[0].scrollTop / editor[0].scrollHeight)
                    })
                }).on("mouseenter", function() {
                    editor.addClass("hovered")
                }).on("mouseleave", function() {
                    editor.removeClass("hovered")
                }),
                    preview.on("scroll", function() {
                        preview.is(".hovered") && editor.stop().animate({
                            scrollTop: editor[0].scrollHeight * (preview[0].scrollTop / preview[0].scrollHeight)
                        })
                    }).on("mouseenter", function() {
                        preview.addClass("hovered")
                    }).on("mouseleave", function() {
                        preview.removeClass("hovered")
                    })
            }
            , compileImagePicker = function(wrapper, scope) {
                var button_row = wrapper.find(".wmd-button-row")
                    , image_picker = $('<span style="position: absolute;left: 167px;top: 13px; z-index: 2;"><span class="apply-image-picker-for-pagedown" cg-project-image-picker dropdown-mode="dropdownMode()" project-id="project_id" image-select-done="imageSelectDone"></span></span>');
                button_row.after(image_picker);
                var pagedown = wrapper.find(".apply-image-picker-for-pagedown")
                    , removeProjectWatcher = $rootScope.$watch("PROJECT", function(project) {
                    angular.isDefined(project) && (scope.project_id = project.is_public ? null  : project.id,
                        $compile(pagedown)(scope),
                        removeProjectWatcher())
                })
            }
            ;
        return {
            editor_setting: setting,
            replaceButtons: replaceButtons,
            autoScroll: autoScroll,
            compileImageLoading: compileImageLoading,
            compileImagePicker: compileImagePicker
        }
    }
    ]),
    angular.module("directives").directive("cgPager", ["Pager", "Flash", function(Pager, Flash) {
        var default_show_count = 2
            , prev_sign = "<"
            , next_sign = ">"
            , buildPageArray = function(start, end) {
                for (var pages = [], i = start; end >= i; i++)
                    pages.push(i);
                return pages
            }
            , getPagers = function(opt) {
                if (!opt)
                    return [];
                var pages = [];
                if (opt.totalRow > opt.pageSize) {
                    var begin_page = opt.page > default_show_count ? opt.page - default_show_count : 1;
                    1 != begin_page && pages.push(1);
                    var end_page = begin_page + default_show_count + 2;
                    end_page > opt.totalPage && (end_page = opt.totalPage),
                        pages = pages.concat(buildPageArray(begin_page, end_page)),
                    end_page < opt.totalPage && pages.push(opt.totalPage),
                    1 != opt.page && pages.splice(0, 0, prev_sign),
                    opt.page != opt.totalPage && pages.push(next_sign)
                }
                return angular.copy(pages)
            }
            , isPageNumber = function(n) {
                return !isNaN(n)
            }
            , Pagers = {}
            , link = function(scope, element, attrs) {
                element.addClass("cg pagination-outer clearfix");
                var pager_id = attrs.cgPager || !1
                    , pager_options = {};
                if (!pager_id)
                    return void Flash.fail().send("该页面存在未设置 id 的分页组件！");
                var CurPager = Pager.instance(pager_id, scope);
                CurPager.disabledUrlChange = scope.disabledUrlChange,
                    Pagers[pager_id] = CurPager;
                var promise = CurPager.onOptionsReady();
                promise.then(null , null , function(pager_opt) {
                    element.show(),
                        pager_options = pager_opt,
                    pager_options.page > pager_options.totalPage && (pager_options.page = pager_options.totalPage,
                    0 != pager_options.totalRow && sendPageSignal(CurPager, pager_options.page)),
                        scope.current_page = pager_options.page,
                        scope.pager_pages = getPagers(pager_options),
                        scope.isPageNumber = isPageNumber
                }),
                    element.hide(),
                    CurPager.directiveReady();
                var sendPageSignal = function(CurPager, page) {
                        CurPager.changePage(page),
                            CurPager.changeUrl(page)
                    }
                    ;
                scope.gotoPage = function(page) {
                    var page_no = 1;
                    if (page === prev_sign)
                        page_no = +scope.current_page - 1;
                    else if (page === next_sign)
                        page_no = +scope.current_page + 1;
                    else {
                        if (!isPageNumber(page))
                            return;
                        page_no = page
                    }
                    var CurPager = Pagers[pager_id];
                    sendPageSignal(CurPager, page_no)
                }
            }
            ;
        return {
            link: link,
            templateUrl: "common/directives/pager/tpl/pager.html",
            scope: {
                disabledUrlChange: "="
            }
        }
    }
    ]),
    angular.module("services").factory("Pager", ["$q", "$rootScope", "location", function($q, $rootScope, $location) {
        var currentPage = function() {
                var pages = $location.search();
                if (!pages)
                    return 1;
                var name = "page" + (0 == this.index ? "" : this.index)
                    , cp = pages[name];
                return +cp || 1
            }
            , changeUrl = function(page) {
                this.index >= 0 && !this.disabledUrlChange && $location.skipReload().search("page" + (0 == this.index ? "" : this.index), 1 == page ? void 0 : page)
            }
            , STATUS = {
                PAGER_HELPER_OPT_READY: 1,
                PAGER_DIRECTIVE_READY: 2,
                PAGER_ALL_READY: 3
            }
            , pager_options_stack = []
            , pager_status_stack = []
            , exactPagerOptions = function(pager_opt) {
                return pager_opt ? {
                    page: pager_opt.page,
                    pageSize: pager_opt.pageSize,
                    totalPage: pager_opt.totalPage,
                    totalRow: pager_opt.totalRow
                } : void 0
            }
            , onChange = function(callback) {
                return this.listen("page.changed", callback)
            }
            , changePage = function(page) {
                this.emit("page.changed", page)
            }
            , optionsReady = function(options) {
                this.pagerOptions(options),
                    this.changeUrl(options.page);
                var cur_status = this.pagerStatus();
                if (cur_status == STATUS.PAGER_DIRECTIVE_READY || cur_status == STATUS.PAGER_ALL_READY)
                    this.pagerStatus(STATUS.PAGER_ALL_READY),
                        this.broadcast("options.ready", exactPagerOptions(this.pagerOptions()));
                else {
                    this.pagerStatus(STATUS.PAGER_HELPER_OPT_READY);
                    var thiz = this
                        , promise = this.onDirectiveReady();
                    promise.then(null , null , function() {
                        thiz.broadcast("options.ready", exactPagerOptions(thiz.pagerOptions()))
                    })
                }
            }
            , onOptionsReady = function(callback) {
                return this.listen("options.ready", callback)
            }
            , directiveReady = function() {
                var cur_status = this.pagerStatus();
                cur_status == STATUS.PAGER_HELPER_OPT_READY ? (this.pagerStatus(STATUS.PAGER_ALL_READY),
                    this.emit("directive.ready")) : this.pagerStatus(STATUS.PAGER_DIRECTIVE_READY)
            }
            , listen = function(key, callback) {
                var deferred = $q.defer();
                return this.scope.$on("pager_" + this.pager_id + "." + key, function(e, options) {
                    angular.isFunction(callback) && callback(options),
                        deferred.notify(options)
                }),
                    deferred.promise
            }
            , emit = function(key, data) {
                this.scope.$emit("pager_" + this.pager_id + "." + key, data)
            }
            , broadcast = function(key, data) {
                this.scope.$broadcast("pager_" + this.pager_id + "." + key, data)
            }
            , onDirectiveReady = function(callback) {
                var deferred = $q.defer();
                return this.scope.$on("pager_" + this.pager_id + ".directive.ready", function(e, options) {
                    angular.isFunction(callback) && callback(options),
                        deferred.notify(options)
                }),
                    deferred.promise
            }
            , PagerHelper = function() {
                return this.index = 0,
                    this.pager_id = null ,
                    this.scope = null ,
                    this.disabledUrlChange = !1,
                    this.init = function(id, scope) {
                        this.pager_id = this.pager_id || id,
                            this.scope = this.scope || scope
                    }
                    ,
                    this.instance = function(id, scope, index) {
                        var one = new PagerHelper;
                        return one.init.apply(one, arguments),
                            one.index = index || 0,
                            one
                    }
                    ,
                    this.pagerOptions = function(opt) {
                        var o = pager_options_stack[this.pager_id]
                            , o = pager_options_stack[this.pager_id] = opt || o;
                        return o
                    }
                    ,
                    this.pagerStatus = function(status) {
                        var o = pager_status_stack[this.pager_id]
                            , o = pager_status_stack[this.pager_id] = status || o;
                        return o
                    }
                    ,
                    this.hide = function() {
                        return $('[cg-pager="' + this.pager_id + '"]').hide()
                    }
                    ,
                    this.removeUrlPager = function() {
                        this.changeUrl(1)
                    }
                    ,
                    this.listen = listen,
                    this.emit = emit,
                    this.broadcast = broadcast,
                    this.onChange = onChange,
                    this.changePage = changePage,
                    this.changeUrl = changeUrl,
                    this.optionsReady = optionsReady,
                    this.onOptionsReady = onOptionsReady,
                    this.directiveReady = directiveReady,
                    this.onDirectiveReady = onDirectiveReady,
                    this.currentPage = currentPage,
                    this.timeBasedId = function() {
                        return (new Date).getTime()
                    }
                    ,
                    this
            }
            ;
        return new PagerHelper
    }
    ]),
    angular.module("directives").directive("cgPartnerLink", [function() {
        return {
            scope: {},
            restrict: "E",
            replace: !0,
            controller: "PartnerLinkController",
            templateUrl: "common/directives/partnerLink/tpl/partnerLink.html",
            link: function(scope, element, attr) {}
        }
    }
    ]).controller("PartnerLinkController", ["$scope", "PartnerLink", function($scope, PartnerLink) {
        $scope.partners = [],
            PartnerLink.partners(function(result) {
                0 == result.code && ($scope.partners = result.data)
            })
    }
    ]),
    angular.module("directives").directive("cgPickmeup", ["$parse", "Common", function($parse, Common) {
        var link = function(scope, element, attrs) {
                var fn = $parse(attrs.cgPickmeup)
                    , opts = scope.$eval(attrs.pickmeupOptions) || {}
                    , class_name = "pickmeup-" + (new Date).getTime()
                    , date = scope.$eval(attrs.ngModel);
                opts = angular.extend({
                    class_name: class_name,
                    format: "Y-m-d",
                    date: date,
                    change: function(date) {
                        Common.safeApply.call(scope, function() {
                            fn(scope, {
                                $date: date
                            })
                        })
                    }
                }, {}, opts),
                    element.pickmeup(opts),
                    scope.$watch(function() {
                        return scope.$eval(attrs.ngModel)
                    }, function(date) {
                        angular.isDefined(date) && element.pickmeup("set_date", date)
                    });
                var pickmeup = $(element).data("pickmeup");
                pickmeup && scope.$on("$destroy", function() {
                    pickmeup.remove()
                })
            }
            ;
        return {
            link: link
        }
    }
    ]),
    angular.module("directives").directive("cgPlaceholder", [function() {
        return {
            link: function(scope, element, attrs) {
                var setPlaceHolder = function(placeholder) {
                    element.attr("placeholder", placeholder)
                }
                    , placeholder = "";
                if (attrs.cgPlaceholder)
                    placeholder = attrs.cgPlaceholder;
                else {
                    var prefix = "在此输入评论内容";
                    placeholder = -1 != navigator.userAgent.toLocaleLowerCase().indexOf("mac", 0) ? prefix + "（Command+Enter）" : prefix + "（Ctrl+Enter）"
                }
                setPlaceHolder(placeholder)
            }
        }
    }
    ]),
    appDirective.directive("placeholderAttr", ["$timeout", "$parse", function($timeout, $parse) {
        return {
            restrict: "A",
            scope: {
                placeholderAttr: "=placeholderAttr"
            },
            link: function(scope, element, attrs, controller) {
                var ie = navigator.userAgent.match(/MSIE/)
                    , ie11 = navigator.userAgent.match(/Trident\/7\./);
                ie || ie11 || scope.$watch("placeholderAttr", function(value) {
                    element.attr("placeholder", value)
                })
            }
        }
    }
    ]),
    angular.module("directives").directive("cgPrevAndNext", ["$parse", "Common", function($parse, Common) {
        return {
            link: function(scope, element, attrs) {
                var fn = $parse(attrs.cgPrevAndNext)
                    , when = scope.$eval(attrs.when);
                when = "undefined" == typeof when ? !0 : !1;
                var callback = function(e) {
                        var code = e.keyCode;
                        37 != code && 39 != code || !when || Common.safeApply.call(scope, function() {
                            fn(scope, {
                                $event: 37 == code ? "prev" : "next"
                            })
                        })
                    }
                    ;
                $(document).on("keydown", callback),
                    scope.$on("$destroy", function() {
                        $(document).off("keydown", callback)
                    })
            }
        }
    }
    ]),
    angular.module("directives").directive("cgProjectActivity", [function() {
        var support_type = ["ProjectStar", "ProjectTopic", "ProjectFile", "Depot", "Project", "ProjectMember", "QcTask", "Task", "ProjectWatcher", "PullRequestBean", "PullRequestComment", "MergeRequestBean", "MergeRequestComment", "TaskComment", "CommitLineNote", "ProjectFileComment"];
        return {
            scope: {
                type: "&type",
                activity: "=cgProjectActivity",
                showProject: "="
            },
            controller: ["$scope", "$filter", "TaskUrgencyService", "TaskCommentService", "TaskDeadlineService", "GitService", function($scope, $filter, TaskUrgencyService, TaskCommentService, TaskDeadlineService, GitService) {
                $scope.resolve = function(type) {
                    return -1 === support_type.indexOf(type) ? "Empty" : type
                }
                ;
                var isComment = $scope.isComment = function(activity) {
                        return "comment" === activity.action
                    }
                    ;
                $scope.topicTitle = function(activity) {
                    return isComment(activity) ? activity.project_topic.parent.title : activity.project_topic.title
                }
                    ,
                    $scope.topicPath = function(activity) {
                        return isComment(activity) ? activity.project_topic.parent.path : activity.project_topic.path
                    }
                    ,
                    $scope.topicContent = function(activity) {
                        var content = "";
                        return content = isComment(activity) ? activity.project_topic.content : activity.project_topic.parent.content,
                            TaskCommentService.text(content, !0)
                    }
                ;
                var isFolder = $scope.isFolder = function(activity) {
                        return activity.action.indexOf("dir") >= 0
                    }
                    , isHistory = function(activity) {
                        return activity.action.indexOf("history") >= 0
                    }
                    ;
                $scope.fileType = function(activity) {
                    return isFolder(activity) ? "文件夹" : isHistory(activity) ? "历史版本" : "文件"
                }
                    ,
                    $scope.filePath = function(activity, file) {
                        return -1 !== ["delete_dir", "delete_file"].indexOf(activity.action) ? [activity.project.path, "/attachment"].join("") : file.path
                    }
                    ,
                    $scope.shaPath = function(activity, commit) {
                        return [activity.depot.path, "/commit/", commit.sha].join("")
                    }
                    ,
                    $scope.shortSha = function(commit) {
                        return commit.sha.substring(0, 7)
                    }
                    ,
                    $scope.isQuit = function(activity) {
                        return "quit" === activity.action
                    }
                    ,
                    $scope.deadlineMsg = function(date) {
                        return date ? "更新了任务的截止日期" : "移除了任务的截止日期"
                    }
                    ,
                    $scope.parseDeadline = function(date) {
                        return date ? "[" + TaskDeadlineService.format(date).date + "]" : ""
                    }
                    ,
                    $scope.lineNoteUrlWithAnchor = function(activity) {
                        var anchor = "";
                        return "Commit" == activity.line_note.noteable_type ? anchor = "#commit-comment-" + activity.line_note.id : "MergeRequestBean" == activity.line_note.noteable_type ? anchor = "#mr-comment-" + activity.line_note.id : "PullRequestBean" == activity.line_note.noteable_type && (anchor = "#pr-comment-" + activity.line_note.id),
                        activity.line_note.noteable_url + anchor
                    }
                    ,
                    $scope.commitLink = GitService.activityCommitLink,
                    $scope.priorities = TaskUrgencyService.priorities,
                    $scope.commentToText = TaskCommentService.text
            }
            ],
            templateUrl: "common/directives/projectActivities/tpl/activity.html",
            replace: !0
        }
    }
    ]),
    angular.module("directives").directive("cgTimeline", [function() {
        return {
            scope: {
                activities: "=cgTimeline",
                showSeparator: "=",
                showProject: "="
            },
            link: function(scope, element, attrs) {},
            templateUrl: "common/directives/projectActivities/tpl/timeline.html",
            controller: "TimelineController"
        }
    }
    ]).controller("TimelineController", ["$scope", "Common", "$rootScope", "$filter", function($scope, Common, $rootScope, $filter) {
        var PROJECT = $rootScope.PROJECT
            , unread_count = PROJECT && PROJECT.un_read_activities_count || 0;
        $scope.activity_count = 0,
            $scope.$watch("activities", function(activities) {
                activities && ($scope.activities_of_date = Common.orderActivityByDate($scope.activities))
            }),
            $scope.timelineDate = function(activity) {
                return $filter("amDateFormat")(activity.created_at, "YYYY-M-D ddd")
            }
            ,
            $scope.isToday = $rootScope.isToday,
            $scope.makeCount = function(activity) {
                $scope.activity_count++,
                    activity.index = $scope.activity_count
            }
            ,
            $scope.showUnreadSeparator = function(activity) {
                return PROJECT && unread_count == activity.index && $scope.showSeparator
            }
    }
    ]).service("TimelineService", [function() {}
    ]),
    angular.module("directives").directive("cgItemsGroup", [function() {
        return {
            scope: {
                groups: "=cgItemsGroup",
                items: "=groupItems",
                selectProject: "=onProjectSelect",
                itemTemplateUrl: "@itemTemplateUrl",
                editable: "=editable",
                loading: "=loading",
                pinDisabled: "=pinDisabled",
                cgProjectArchiverEnable: "=cgProjectArchiverEnable"
            },
            link: function(scope, element, attrs) {},
            templateUrl: "common/directives/projectGroup/tpl/group.html",
            transclude: !0,
            controller: "ItemsGroupController"
        }
    }
    ]).controller("ItemsGroupController", ["$scope", "ItemsGroupService", "Project", "Flash", "Projects", "FrequentlyProjectsService", "Common", "$timeout", "location", function($scope, ItemsGroupService, Project, Flash, Projects, FrequentlyProjectsService, Common, $timeout, $location) {
        $scope.itemsInGroup = function(group) {
            var items = [];
            return angular.forEach($scope.items, function(item) {
                item.groupId === group.id && items.push(item)
            }),
                items
        }
        ;
        var matchAnyGroup = function(item) {
                var match = !1;
                return angular.forEach($scope.groups, function(group) {
                    group.id !== item.groupId || match || (match = !0)
                }),
                    match
            }
            ;
        $scope.noGroupItems = function() {
            var items = [];
            return angular.forEach($scope.items, function(item) {
                0 !== item.groupId && matchAnyGroup(item) || items.push(item)
            }),
                items
        }
            ,
            $scope.closeAllGroup = function() {
                angular.forEach($scope.groups, function(g) {
                    g.editing = !1
                })
            }
            ,
            $scope.toggleGroup = function($event, group) {
                angular.forEach($scope.groups, function(g) {
                    g.id !== group.id && (g.open = !1),
                        g.editing = !1
                }),
                    group.open = !group.open,
                    ItemsGroupService.groupPosition($event),
                    group.open
            }
            ,
            $scope.closeGroup = function($event, group) {
                group.open = !1
            }
            ,
            $scope.editTitle = function($event, group) {
                group.open && (group.editing = !0,
                    $event.stopPropagation())
            }
            ,
            $scope.toggleProjectSelect = function($event, group, project) {
                if ($scope.editable) {
                    var is_open = group && group.open;
                    (null  === group || is_open) && (project.selected = !project.selected,
                    is_open && $event.stopPropagation());
                    var selected_projects = getSelectedProjects();
                    $scope.selectProject && $scope.selectProject(selected_projects)
                }
            }
            ,
            $scope.groupUnreadCount = function(group) {
                var items = $scope.itemsInGroup(group)
                    , count = 0;
                return angular.forEach(items, function(item) {
                    count += item.un_read_activities_count || 0
                }),
                    count
            }
            ,
            $scope.projectPath = function(project) {
                return $scope.editable ? "javascript:void(0);" : project.project_path
            }
        ;
        var getSelectedProjects = function() {
                var projects = [];
                return angular.forEach($scope.items, function(item) {
                    item.selected && projects.push(item)
                }),
                    projects
            }
            ;
        $scope.checkGroupName = function(new_name, group) {
            (0 === new_name.length || group.copy_name !== group.name) && (group.copy_name = group.name)
        }
            ,
            $scope.updating_name = !1,
            $scope.updateGroupName = function(new_name, group) {
                if (group.name !== new_name) {
                    $scope.updating_name = !0;
                    var promise = Project.updateGroupName({
                        group_id: group.id
                    }, {
                        name: new_name
                    });
                    promise.then(function() {
                        group.name = new_name,
                            Flash.success().send("分组名更新成功！"),
                            ItemsGroupService.groupNameUpdate(group)
                    }),
                        promise["catch"](function() {
                            group.new_name = group.name
                        }),
                        promise["finally"](function() {
                            $scope.updating_name = !1
                        })
                } else
                    group.editing = !1,
                        group.open = !1
            }
            ,
            $scope.pin = function($event, project) {
                if (project.pin) {
                    var promise = Projects.pinCancel({
                        ids: project.id
                    });
                    promise.then(function() {
                        project.pin = !1,
                            FrequentlyProjectsService.pin(project.pin)
                    })
                } else {
                    var promise = Projects.pin({
                        ids: project.id
                    });
                    promise.then(function() {
                        project.pin = !0,
                            FrequentlyProjectsService.pin(project.pin)
                    })
                }
                return $event.stopPropagation(),
                    $event.preventDefault(),
                    !1
            }
            ,
            $scope.pinTitle = function(project) {
                return project.pin ? "取消常用" : "设置常用"
            }
            ,
            $scope.unarchive = function($event, project) {
                Projects.unarchive({
                    id: project.id
                })
            }
            ,
            $scope.listItemFocus = function(event) {
                $timeout(function() {
                    angular.element(".projects-view  li.projects-item").removeClass("focus")
                })
            }
            ,
            $scope.enterItem = function(event) {
                $timeout(function() {
                    angular.element(event.target).find("a").click()
                })
            }
            ,
            $scope.unarchive = function(id) {
                if (confirm("将该项目解除归档？")) {
                    var p = Project.unarchive({
                        id: id
                    }, {});
                    p.then(function(result) {
                        $location.path("/user/projects/all")
                    })
                }
            }
            ,
            FrequentlyProjectsService.onPinCancel(function($event, project) {
                var prj = Common.findOfId($scope.items, project.id);
                prj && (prj.pin = !1)
            })
    }
    ]).service("ItemsGroupService", ["$rootScope", function($rootScope) {
        var groupNameUpdate = function(name) {
                $rootScope.$broadcast("on.project.group.name.update.success", name)
            }
            , onGroupNameUpdate = function(callback) {
                $rootScope.$on("on.project.group.name.update.success", callback)
            }
            , groupPosition = function($event) {
                var target = $($event.target)
                    , group = target.parents('[class*="project-group-"]')
                    , wrapper = group.find(".items-wrapper")
                    , group_container = group.parent()
                    , item_margin = 15
                    , gwidth = group.outerWidth() + item_margin
                    , gheight = group.outerHeight() + item_margin
                    , index = group.index() + 1
                    , gcwidth = group_container.innerWidth()
                    , gcheight = group_container.innerHeight()
                    , rows = Math.round(gcheight / gheight)
                    , cols = Math.floor(gcwidth / gwidth)
                    , cur_row = Math.ceil(index / cols)
                    , cur_col = index - (cur_row - 1) * cols
                    , position = [];
                return cur_col === cols || cur_col === cols - 1 ? position.push("right") : position.push("left"),
                    cur_row === rows && 1 !== rows ? position.push("top") : position.push("top"),
                    wrapper.removeClass("left right top bottom"),
                    wrapper.addClass(position.join(" ")),
                    position
            }
            ;
        return {
            onGroupNameUpdate: onGroupNameUpdate,
            groupNameUpdate: groupNameUpdate,
            groupPosition: groupPosition
        }
    }
    ]),
    angular.module("app").config(["$routeProvider", "$locationProvider", "UserResolver", "ProjectResolver", "GroupResolver", "DepotResolver", function($routeProvider, $locationProvider, UserResolver, ProjectResolver) {
        $locationProvider.html5Mode(!0),
            $routeProvider.when("/example/items-group", {
                templateUrl: "common/directives/projectGroup/tpl/example.html",
                controller: "ItemsGroupExampleController",
                title: "Items Group Example"
            })
    }
    ]);
var directive = angular.module("directives");
directive.directive("cgQcRect", ["cd3", function(cd3) {
    return {
        link: function(scope, element, attrs) {
            var value = scope.$eval(attrs.cgQcRect)
                , width = scope.$eval(attrs.cgWidth);
            value = parseInt(value);
            var max = scope.$eval(attrs.cgMaxViolation);
            width = 10 * Math.floor(width / 10);
            var svg = cd3.select(element, width, 18)
                , xw = value / max * width || 0;
            cd3.rect(svg, {
                x: width - xw,
                y: 0,
                w: xw,
                h: 18,
                c: "#ccc"
            })
        }
    }
}
]),
    directive.directive("cgQcArc", ["cd3", function(cd3) {
        return {
            link: function(scope, element, attrs) {
                var data = scope.$eval(attrs.cgQcArc)
                    , w = scope.$eval(attrs.cgArcW)
                    , h = scope.$eval(attrs.cgArcH)
                    , x = scope.$eval(attrs.cgArcX)
                    , y = scope.$eval(attrs.cgArcY)
                    , r = scope.$eval(attrs.cgArcR)
                    , vFontSize = scope.$eval(attrs.cgVFontSize)
                    , dotRadius = scope.$eval(attrs.cgDotRadius)
                    , cFontSize = scope.$eval(attrs.cgCFontSize)
                    , showBorder = scope.$eval(attrs.cgShowBorder)
                    , centerComment = scope.$eval(attrs.cgCenterComment)
                    , svg = cd3.select(element, w, h);
                cd3.arc(svg, {
                    x: x,
                    y: y,
                    r: r,
                    w: w,
                    h: h,
                    data: data,
                    showBorder: showBorder,
                    dotRadius: dotRadius,
                    vFontSize: vFontSize,
                    cFontSize: cFontSize,
                    centerComment: centerComment
                })
            }
        }
    }
    ]),
    directive.directive("cgQcChart", ["cd3", function(cd3) {
        var prepareData = function(data) {
                var rData = []
                    , ds = data.split(";");
                return ds && ds.forEach(function(s) {
                    var d = s.split("=");
                    2 == d.length && rData.push({
                        x: parseInt(d[0]),
                        y: parseInt(d[1])
                    })
                }),
                    rData
            }
            ;
        return {
            link: function(scope, element, attrs) {
                var data = scope.$eval(attrs.cgQcChart);
                data = decodeURIComponent(data),
                    data = prepareData(data);
                var w = scope.$eval(attrs.cgChartW)
                    , h = scope.$eval(attrs.cgChartH)
                    , marginLeft = scope.$eval(attrs.cgChartMarginLeft)
                    , marginTop = scope.$eval(attrs.cgChartMarginTop)
                    , marginRight = scope.$eval(attrs.cgChartMarginRight)
                    , marginBottom = scope.$eval(attrs.cgChartMarginBottom)
                    , width = w + marginLeft + marginRight
                    , height = h + marginTop + marginBottom
                    , svg = cd3.select(element, width, height);
                cd3.chart(svg, {
                    w: w,
                    h: h,
                    data: data,
                    marginLeft: marginLeft,
                    marginTop: marginTop,
                    marginRight: marginRight,
                    marginBottom: marginBottom
                })
            }
        }
    }
    ]),
    directive.directive("cgQcDropVersions", [function() {
        return {
            link: function(scope, element, attrs) {
                element.dropdown()
            }
        }
    }
    ]),
    directive.directive("cgQcShortText", [function() {
        return {
            link: function(scope, element, attrs) {
                var text = scope.$eval(attrs.cgQcShortText)
                    , length = scope.$eval(attrs.cgQcShortLength);
                text && (text && length > text.length && (length = text.length),
                    text = text.substring(0, length),
                    element.text(text + "..."))
            }
        }
    }
    ]),
    directive.directive("cgQcDefaultVersions", function() {
        return {
            link: function(scope, element, attrs) {
                var versions = scope.$eval(attrs.cgQcDefaultVersions)
                    , ref = scope.$eval(attrs.cgQcRef);
                if (versions && ref)
                    for (var i = 0; i < versions.length; i++) {
                        var version = versions[i];
                        ref == version.ref && element.text(version.version.substring(0, 10))
                    }
                else
                    element.text("请选择版本")
            }
        }
    }),
    directive.directive("cgQcVersions", ["QcService", "Pager", "$location", "Errors", function(QcService, Pager, $location, Errors) {
        return {
            restrict: "E",
            scope: {
                username: "@",
                project_name: "@projectName",
                current_ref: "@currentRef",
                PROJECT: "=project"
            },
            link: function(scope, element, attrs) {
                var pager_id = scope.pager_id = (new Date).getTime()
                    , CPager = Pager.instance(pager_id, scope);
                CPager.onChange(function(page) {
                    loadTasks(page)
                });
                var loadTasks = function(page) {
                        var promise = QcService.taskActions.tasks({
                            username: scope.username,
                            project_name: scope.project_name,
                            page: page,
                            pageSize: 10
                        });
                        scope.tasks = [],
                            promise.then(function(result) {
                                CPager.optionsReady(result.data),
                                    scope.tasks = result.data.list
                            }),
                            promise["catch"](function() {
                                return scope.destory(),
                                    !1
                            }),
                            promise["finally"](function() {})
                    }
                    ;
                loadTasks(1),
                    scope.deleteFailedTask = function(id) {
                        QcService.taskActions.delete_task({
                            username: scope.username,
                            project_name: scope.project_name,
                            id: id
                        }, function(result) {
                            if (0 == result.code) {
                                var url = "/u/" + scope.username + "/p/" + scope.project_name + "/qc/";
                                return void $location.path(url)
                            }
                            Errors.handle(result)
                        })
                    }
            },
            templateUrl: "common/directives/qcDirectives/tpl/qc-versions.html",
            controller: "QcVersionsController",
            replace: !0
        }
    }
    ]).controller("QcVersionsController", [function() {}
    ]),
    directive.directive("cgQcAnalysisResult", [function() {
        return {
            restrict: "E",
            scope: {
                task: "=task",
                PROJECT: "=project"
            },
            templateUrl: "common/directives/qcDirectives/tpl/qc-analysis-result.html",
            replace: !0
        }
    }
    ]),
    directive.directive("cgQcTaskInfo", [function() {
        return {
            restrict: "E",
            scope: {
                task: "=task",
                PROJECT: "=project",
                current_ref: "@currentRef",
                inner_menu: "@innerMenu"
            },
            templateUrl: "common/directives/qcDirectives/tpl/qc-task-info.html",
            replace: !0
        }
    }
    ]),
    directive.directive("cgQcRules", [function() {
        return {
            restrict: "E",
            scope: {
                username: "@username",
                project_name: "@projectName",
                resource_key: "=resourceKey",
                current_ref: "=currentRef",
                current_type: "=currentType",
                current_rule: "=currentRule"
            },
            templateUrl: "common/directives/qcDirectives/tpl/qc-rules.html",
            replace: !0,
            controller: "QcRulesController"
        }
    }
    ]).controller("QcRulesController", ["QcService", "$scope", "location", function(QcService, $scope, location) {
        $scope.metrics_sort = ["violations", "blocker", "critical", "major", "minor", "info"],
            $scope.metrics = QcService.severities,
            $scope.loading_rule = !0,
            $scope.$watch("current_type", function() {
                if ($scope.current_type && $scope.current_type.length > 0) {
                    var violations = $scope.metrics[$scope.current_type] && $scope.metrics[$scope.current_type].rule_violation;
                    violations = violations || ["blocker_violations", "critical_violations", "major_violations", "minor_violations", "info_violations"],
                        QcService.rules({
                            username: $scope.username,
                            project_name: $scope.project_name,
                            resourceKey: $scope.resource_key,
                            violations: violations
                        }, function(rules) {
                            $scope.loading_rule = !1,
                                $scope.rules = rules
                        })
                } else
                    $scope.loading_rule = !1
            }),
            $scope.changeViolation = function(metric) {
                $scope.current_type = metric.key,
                    $scope.current_rule = "",
                    location.skipReload().search("type", $scope.current_type),
                    location.skipReload().search("rule", $scope.current_rule)
            }
            ,
            $scope.changeRule = function(rule) {
                $scope.current_rule = rule.key,
                    location.skipReload().search("rule", $scope.current_rule)
            }
            ,
            $scope.loading_issues = !0,
            QcService.issues({
                username: $scope.username,
                project_name: $scope.project_name,
                resourceKey: $scope.resource_key
            }, function(issues) {
                $scope.issues = issues,
                    $scope.loading_issues = !1
            })
    }
    ]),
    directive.directive("cgQcFolders", [function() {
        return {
            restrict: "E",
            scope: {
                username: "@username",
                project_name: "@projectName",
                resource_key: "=resourceKey",
                current_ref: "=currentRef",
                current_type: "=currentType",
                current_rule: "=currentRule",
                current_file: "=currentFile",
                current_folder: "=currentFolder",
                current_lang: "=currentLang",
                code_full: "=codeFull",
                filename: "=filename",
                type: "@type",
                title: "@title"
            },
            templateUrl: "common/directives/qcDirectives/tpl/qc-folders.html",
            replace: !0,
            controller: "QcFoldersController"
        }
    }
    ]).controller("QcFoldersController", ["QcService", "$scope", "location", function(QcService, $scope, location) {
        var defaultMetrics = "issues" == $scope.type ? "violations" : "duplicated_lines";
        $scope.folder_loading = !0;
        var load = function() {
                var metrics = QcService.severities[$scope.current_type] && QcService.severities[$scope.current_type].violation || $scope.current_type;
                "violations" == $scope.current_type && (metrics = ["violations", "blocker_violations", "critical_violations", "major_violations", "minor_violations", "info_violations"]),
                    QcService.files({
                        username: $scope.username,
                        project_name: $scope.project_name,
                        resourceKey: $scope.resource_key,
                        metrics: metrics || defaultMetrics,
                        rules: $scope.current_rule
                    }, function(folders) {
                        $scope.folders = folders,
                            $scope.folder_loading = !1
                    })
            }
            ;
        $scope.$watch("current_type", function() {
            $scope.current_type && $scope.current_type.length > 0 && (load(),
                $scope.current_folder = null ,
                $scope.current_file = null )
        }),
            $scope.$watch("current_rule", function() {
                $scope.current_rule && $scope.current_rule.length > 0 && (load(),
                    $scope.current_folder = null ,
                    $scope.current_file = null )
            }),
            $scope.changeFolder = function(folder) {
                folder.value > 0 && ($scope.current_folder = $scope.current_folder == folder.key ? "" : folder.key,
                    location.skipReload().search("folder", $scope.current_folder))
            }
            ,
            $scope.changeFile = function(file) {
                file.value > 0 && ($scope.current_file = file.key,
                    $scope.current_lang = file.language,
                    $scope.filename = file.name,
                    location.skipReload().search("file", $scope.current_file))
            }
            ,
            $scope.$watch("current_folder", function() {
                if ($scope.files = [],
                    $scope.current_folder && $scope.current_folder.length > 0) {
                    $scope.loading_file = !0;
                    var metrics = QcService.severities[$scope.current_type] && QcService.severities[$scope.current_type].violation;
                    "violations" == $scope.current_type && (metrics = ["violations", "blocker_violations", "critical_violations", "major_violations", "minor_violations", "info_violations"]),
                        QcService.files({
                            username: $scope.username,
                            project_name: $scope.project_name,
                            resourceKey: $scope.current_folder,
                            metrics: metrics || defaultMetrics,
                            rules: $scope.current_rule
                        }, function(files) {
                            $scope.files = files,
                                $scope.loading_file = !1
                        })
                }
            }),
            $scope.scrollTo = function() {
                var befores = $("#folder_anchor").parent().prevAll();
                $(".folder.box").scrollTop(befores.height() * (befores.length - 1))
            }
    }
    ]),
    directive.directive("cgQcCodeDashboard", [function() {
        return {
            restrict: "E",
            scope: {
                username: "@username",
                project_name: "@projectName",
                current_ref: "@currentRef",
                resource_key: "=resourceKey",
                current_file: "=currentFile"
            },
            templateUrl: "common/directives/qcDirectives/tpl/qc-code-dashboard.html",
            controller: "QcCodeDashboardController",
            replace: !0
        }
    }
    ]).controller("QcCodeDashboardController", ["QcService", "$scope", "location", function(QcService, $scope, location) {
        $scope.dashboard_loading = !0,
            $scope.$watch("current_file", function() {
                QcService.code_dashboard({
                    username: $scope.username,
                    project_name: $scope.project_name,
                    resourceKey: !$scope.current_file || $scope.current_file.length <= 0 ? $scope.username + "-" + $scope.project_name + "-" + $scope.current_ref : $scope.current_file
                }, function(data) {
                    $scope.dashboard = data,
                        $scope.dashboard_loading = !1
                })
            })
    }
    ]),
    directive.directive("cgQcIssueCode", [function() {
        return {
            restrict: "E",
            scope: {
                username: "@username",
                project_name: "@projectName",
                resource_key: "=resourceKey",
                current_ref: "=currentRef",
                current_type: "=currentType",
                current_rule: "=currentRule",
                current_lang: "=currentLang",
                current_file: "=currentFile"
            },
            templateUrl: "common/directives/qcDirectives/tpl/qc-issue-code.html",
            controller: "QcIssueCodeController",
            replace: !0
        }
    }
    ]).controller("QcIssueCodeController", ["QcService", "$scope", function(QcService, $scope) {
        $scope.loading_issue = !0,
            $scope.$watch("current_file", function() {
                if ($scope.current_file && $scope.current_file.length > 0) {
                    $scope.loading_issue = !0,
                        $scope.issue = null ;
                    var metrics = $scope.current_type;
                    "violations" == $scope.current_type && (metrics = ""),
                        QcService.issueDetail({
                            username: $scope.username,
                            project_name: $scope.project_name,
                            resourceKey: $scope.current_file,
                            rules: $scope.current_rule,
                            lang: $scope.current_lang || "java",
                            severities: metrics,
                            pageIndex: 1,
                            pageSize: 200
                        }, function(issue) {
                            $scope.issue = issue,
                                $scope.loading_issue = !1
                        })
                } else
                    $scope.loading_issue = !1
            })
    }
    ]),
    directive.directive("cgQcDuplicationsCode", [function() {
        return {
            restrict: "E",
            scope: {
                username: "@username",
                project_name: "@projectName",
                resource_key: "=resourceKey",
                current_ref: "=currentRef",
                current_type: "=currentType",
                current_rule: "=currentRule",
                current_lang: "=currentLang",
                current_file: "=currentFile",
                once: "=once"
            },
            templateUrl: "common/directives/qcDirectives/tpl/qc_duplications_code.html",
            controller: "QcDuplicationsCodeController",
            replace: !0
        }
    }
    ]).controller("QcDuplicationsCodeController", ["QcService", "$scope", function(QcService, $scope) {
        $scope.loading_duplications = !0,
            $scope.$watch("current_file", function() {
                $scope.current_file && $scope.current_file.length > 0 ? ($scope.loading_duplications = !0,
                    $scope.duplications = null ,
                    QcService.duplications({
                        username: $scope.username,
                        project_name: $scope.project_name,
                        resourceKey: $scope.current_file,
                        once: $scope.once
                    }, function(duplications) {
                        $scope.duplications = duplications,
                            $scope.loading_duplications = !1
                    })) : $scope.loading_duplications = !1
            })
    }
    ]),
    directive.directive("cgQcCode", [function() {
        return {
            restrict: "E",
            scope: {
                username: "@username",
                project_name: "@projectName",
                resource_key: "=resourceKey",
                current_ref: "=currentRef",
                current_type: "=currentType",
                current_rule: "=currentRule",
                current_lang: "=currentLang",
                current_file: "=currentFile",
                current_folder: "=currentFolder",
                code_full: "=codeFull",
                filename: "=filename",
                type: "@type"
            },
            templateUrl: "common/directives/qcDirectives/tpl/qc-code.html",
            controller: "QcCodeController",
            replace: !0
        }
    }
    ]).controller("QcCodeController", ["QcService", "$scope", "location", function(QcService, $scope, location) {
        $scope.code_type = "dashboard",
            $scope.code_full = !1,
            $scope.changeTab = function(code_type) {
                $scope.code_type = code_type
            }
            ,
            $scope.$watch("current_file", function() {
                $scope.current_file && $scope.current_file.length > 0 && ($scope.code_type = $scope.type)
            })
    }
    ]),
    directive.directive("cgQcLoading", [function() {
        return {
            restrict: "E",
            scope: {
                text: "@",
                loading: "=loading",
                noData: "=noData"
            },
            templateUrl: "common/directives/qcDirectives/tpl/qc-loading.html",
            replace: !0
        }
    }
    ]),
    angular.module("directives").directive("cgRandomBackground", ["$rootScope", function($rootScope) {
        return {
            link: function(scope, element) {
                element.addClass("random-background")
            },
            controller: "RandomBackgroundController"
        }
    }
    ]).controller("RandomBackgroundController", ["$scope", "$rootScope", "$location", "$localStorage", "$q", "WallPaper", "Common", "AccountAboutService", function($scope, $rootScope, $location, $localStorage, $q, WallPaper, Common, AccountAboutService) {
        $scope.wall_papers = [];
        var getWallPaper = function() {
                var deferred = $q.defer();
                if (!$(".random-background").hasClass("account-background")) {
                    var time_limit = 6048e5;
                    $localStorage.wallpapers_saved_time && $localStorage.wall_papers && (new Date).getTime() - $localStorage.wallpapers_saved_time < time_limit ? ($scope.wall_papers = $localStorage.wall_papers,
                        deferred.resolve(randomWallPaper($scope.wall_papers))) : ($localStorage.$reset(),
                        WallPaper.wall_paper({
                            type: 2,
                            ratio: 5
                        }, function(result) {
                            result.data && ($localStorage.$default({
                                wallpapers_saved_time: (new Date).getTime(),
                                wall_papers: result.data
                            }),
                                $scope.wall_papers = result.data,
                                deferred.resolve(randomWallPaper($scope.wall_papers)))
                        })),
                        AccountAboutService.setPhotoBy(deferred.promise)
                }
            }
            , randomWallPaper = function(wall_papers) {
                var random = Math.round(Math.random() * wall_papers.length)
                    , wall_paper = wall_papers[random == wall_papers.length ? random - 1 : random];
                return setWallPaper(wall_paper),
                {
                    link: wall_paper.group.link,
                    author: wall_paper.group.author
                }
            }
            , setWallPaper = function(wall_paper) {
                if (wall_paper) {
                    var $random_background = $(".random-background");
                    $random_background.css("margin", 0),
                        $random_background.css("padding", 0),
                        $random_background.css("background", "url(" + wall_paper.url + ") no-repeat center center fixed"),
                        $random_background.css("height", "100%"),
                        $random_background.css("background-size", "cover")
                }
            }
            , removeWallPaper = function() {
                $(".random-background").attr("style", "margin:0; padding:0")
            }
            ;
        $rootScope.$on("$routeChangeSuccess", function() {
            var isAccount = Common.isAccount($location);
            isAccount ? getWallPaper() : removeWallPaper()
        })
    }
    ]);
var appDirective = angular.module("directives");
appDirective.directive("cgRegisterConfirmationTip", function() {
    return {
        templateUrl: "app/layout/confirmation_tip.html",
        replace: !1,
        transclude: !0
    }
}),
    angular.module("directives").directive("cgReferResource", ["Search", "PROJECT", "$injector", "Common", "ReferTaskService", "$timeout", function(Search, PROJECT, $injector, Common, ReferTaskService, $timeout) {
        var SUGGESTION_COUNT = 6;
        return {
            link: function(scope, element, attrs) {
                var project = scope.$eval(attrs.cgReferResource)
                    , Project = PROJECT.resolve($injector)
                    , onSelect = scope.$eval(attrs.onReferResourceSelect) || angular.noop;
                project && (Project = project.then ? project : $injector.invoke(function($q) {
                    var deferred = $q.defer();
                    return scope.$evalAsync(function() {
                        deferred.resolve(project)
                    }),
                        deferred.promise
                }));
                var modal_id = "refer_resource_modal_" + (new Date).getTime()
                    , modal = ReferTaskService.referModal(modal_id);
                scope.$watch(attrs.cgReferResource, function(project) {
                    project && (Project = project.then ? project : $injector.invoke(function($q) {
                        var deferred = $q.defer();
                        return scope.$evalAsync(function() {
                            deferred.resolve(project)
                        }),
                            deferred.promise
                    }),
                        modal.locals({
                            project: project,
                            Project: Project
                        })),
                        Project.then(function() {
                            bindAtWho()
                        })
                });
                var onResourceChosen = _.once(function(callback) {
                        ReferTaskService.onModalSignal(modal_id, "select.resource", function(event, resource) {
                            $timeout(function() {
                                $("#" + modal_id).modal("hide"),
                                    callback("#" + resource.code)
                            })
                        })
                    })
                    , callbacks = {
                        remote_filter: _.debounce(function(query, callback) {
                            var prj = null
                                , promise = Project.then(function(project) {
                                return prj = project,
                                    Search.resource(Common.projectParams(project, {
                                        keyword: query,
                                        pageSize: SUGGESTION_COUNT
                                    }))
                            });
                            promise.then(function(result) {
                                var resources = result.data && result.data.list || []
                                    , data = resources.map(function(resource) {
                                    return {
                                        code: resource.code,
                                        title: Common.html(resource.title),
                                        type: resource.target_type
                                    }
                                });
                                if (result.data.totalRow > SUGGESTION_COUNT) {
                                    var more = {
                                        type: "More",
                                        project: prj.id
                                    };
                                    data.push(more)
                                }
                                callback(data)
                            })
                        }, 300),
                        tpl_eval: function(tpl, map) {
                            if ("More" === map.type)
                                return '<li class="refer-resource-item more-resource" data-value="' + map.project + '">更多结果</li>';
                            try {
                                var type = ['<span class="icon">', ReferTaskService.icons[map.type], "</span>"].join("");
                                return tpl = ['<li class="refer-resource-item popup ellipsis" data-value="#${code}">', type, '<span class="number">#${code}</span> <span class="title">${title}</span></li>'].join(""),
                                    tpl.replace(/\$\{([^\}]*)\}/g, function(tag, key, pos) {
                                        return map[key]
                                    })
                            } catch (err) {
                                return ""
                            }
                        },
                        before_insert: function(content, $li, query, callback) {
                            return $li.is(".more-resource") ? ($("#" + modal_id).modal("show"),
                                onResourceChosen(callback),
                                void ReferTaskService.sendModalSignal(modal_id, "key", query)) : content
                        },
                        sorter: function(query, items) {
                            return items
                        }
                    }
                    , bindAtWho = function() {
                        $(element).data("atwho", null ),
                            element.atwho({
                                at: "#",
                                start_with_space: !1,
                                limit: 10,
                                search_key: "show_content",
                                callbacks: callbacks
                            })
                    }
                    ;
                element.on("shown.atwho", function() {
                    onSelect(!0),
                    modal.active() || modal.activate({
                        Project: Project
                    })
                }).on("hidden.atwho", function() {
                    onSelect(!1)
                }),
                    scope.$on("$destroy", function() {
                        var app = $(element).data("atwho");
                        app && (app.close(),
                            $(element).data("atwho", null )),
                        modal && modal.deactivate()
                    })
            }
        }
    }
    ]).controller("ReferTaskController", ["$scope", "ReferTaskService", "$timeout", "Search", "Common", "Pager", function($scope, ReferTaskService, $timeout, Search, Common, Pager) {
        $scope.key = void 0,
            $scope.resource_id = 0,
            $scope.resource_type = "Task",
            $scope.project = void 0,
            $scope.loading = !1,
            $scope.loaded = !1,
            $scope.resources = [],
            $scope.max_count = 0,
            $scope.cur_index = 0,
            $scope.pager_id = (new Date).getTime();
        var resourcePager = Pager.instance($scope.pager_id, $scope, 0)
            , loadResource = function(key, type, page) {
                $scope.loading = !0,
                    $scope.loaded = !1,
                    $scope.resources = [];
                var promise = $scope.Project.then(function(Project) {
                    $scope.project = Project;
                    var params = Common.projectParams(Project, {
                        keyword: key,
                        type: type || $scope.resource_type,
                        pageSize: 8,
                        page: page || 1
                    });
                    return Search.resource(params)
                });
                promise.then(function(result) {
                    $scope.resources = result.data && result.data.list || [],
                        $scope.max_count = $scope.resources.length,
                        $scope.loaded = !0,
                        resourcePager.optionsReady(result.data)
                }),
                    promise["finally"](function() {
                        $scope.cur_index = 0,
                            $scope.loading = !1
                    })
            }
            ;
        ReferTaskService.onModalSignal($scope.id, "key", function(event, key) {
            Common.safeApply.call($scope, function() {
                $scope.key = key
            }),
                loadResource(key)
        }),
            resourcePager.onChange(function(page) {
                loadResource($scope.key, $scope.resource_type, page)
            }),
            $scope.$watch("key", _.debounce(function(key) {
                angular.isDefined(key) && loadResource(key)
            }, 300)),
            $scope.changeResourceType = function(type) {
                $scope.resource_type = type,
                    loadResource($scope.key, type)
            }
            ,
            $scope.chooseResource = function(resource, $event) {
                return resource || (resource = $scope.resources[$scope.cur_index]),
                    ReferTaskService.sendModalSignal($scope.id, "select.resource", resource),
                    $scope.cur_index = 0,
                    $event ? ($event.preventDefault(),
                        !1) : void 0
            }
        ;
        var makeCircleCallback = function(type) {
                return function() {
                    $scope.resource_type = type,
                        loadResource($scope.key, type)
                }
            }
            ;
        $scope.Project.then(function(project) {
            project && project.is_public && ($scope.resource_type = "PullRequest",
                $scope.tab_circle_callback = [makeCircleCallback("PullRequest")])
        }),
            $scope.tab_circle_callback = [makeCircleCallback("Task"), makeCircleCallback("ProjectTopic"), makeCircleCallback("ProjectFile"), makeCircleCallback("MergeRequest")],
            $scope.onIndexChange = function(index) {
                $scope.cur_index = index
            }
            ,
            $scope.search = function() {
                loadResource($scope.key, $scope.resource_type)
            }
    }
    ]).service("ReferTaskService", ["btfModal", "$rootScope", function(btfModal, $rootScope) {
        var onModalSignal = function(id, action, callback) {
            $rootScope.$on(id + "." + action, callback)
        }
            , sendModalSignal = function(id, action, data) {
            $rootScope.$broadcast(id + "." + action, data)
        }
            , referModal = function(id) {
            var setting = {
                controller: "ReferTaskController",
                templateUrl: "common/directives/resource/tpl/resource_modal.html",
                resolve: {
                    id: function() {
                        return id
                    }
                }
            }
                , modal = btfModal(setting);
            return modal
        }
            , icons = {
            Task: '<i class="resource tasks icon"></i>',
            MergeRequestBean: '<i class="resource coding icon merge-request"></i>',
            PullRequestBean: '<i class="resource coding icon pull-request"></i>',
            ProjectTopic: '<i class="resource icon chat"></i>',
            ProjectFile: '<i class="resource icon file"></i>'
        };
        return {
            referModal: referModal,
            sendModalSignal: sendModalSignal,
            onModalSignal: onModalSignal,
            icons: icons
        }
    }
    ]),
    angular.module("directives").directive("referResourceLink", ["Search", "$rootScope", "Common", "ReferResourceLinkService", "ReferTaskService", function(Search, $rootScope, Common, ReferResourceLinkService, ReferTaskService) {
        return {
            restrict: "C",
            link: function(scope, element) {
                var wait = 300
                    , code = +element.html().replace(/\#/gi, "")
                    , clazz = element.attr("class").split(" ")
                    , type = ReferResourceLinkService.type(clazz && clazz.length >= 2 ? clazz[1] : "")
                    , href = element.attr("href") || ""
                    , project_reg = /^.*?\/u\/(.*?)\/p\/(.*?)\/.*$/
                    , matches = href.match(project_reg);
                if (!matches || 3 !== matches.length)
                    throw new Error("Can not match project information from refer resource link: " + href);
                var project_params = {
                    username: matches[1],
                    project_name: matches[2]
                }
                    , loadReferResource = _.debounce(function() {
                    var params = $.extend(project_params, {
                        code: code
                    })
                        , promise = Search.resourceByCode(params);
                    promise.then(function(result) {
                        if (result.data) {
                            var title = Common.htmlToPlaintext(result.data.title)
                                , img = result.data.img
                                , html = ['<div style="word-break: break-all;line-height: 20px;position: relative;', img ? 'text-align: center;">' : '">', img ? '<div><img style="max-width: 100%;" src="' + img + '"/></div>' : "", ReferTaskService.icons[type], title, "</div>"].join("");
                            element.data("html", html).data("variation", "small"),
                                element.off("mouseenter"),
                                element.is(".refer-resource-hover") ? element.popup("show") : element.popup(),
                                element.on("click", function() {
                                    element.popup("hide")
                                })
                        }
                    }),
                        promise["catch"](function() {
                            element.removeAttr("title"),
                                element.popup("remove")
                        })
                }, wait);
                element.on("mouseleave", function() {
                    element.removeClass("refer-resource-hover")
                }),
                    element.on("mouseenter", function() {
                        element.addClass("refer-resource-hover"),
                            loadReferResource()
                    }),
                    scope.$on("$destroy", function() {
                        element.popup("remove")
                    })
            },
            controller: "ReferResourceLinkController"
        }
    }
    ]).controller("ReferResourceLinkController", ["$scope", "ReferResourceLinkService", function($scope, ReferResourceLinkService) {}
    ]).service("ReferResourceLinkService", ["Common", function(Common) {
        var resourceType = function(clazz) {
                var types = {
                    task: "Task",
                    "merge-request-bean": "MergeRequestBean",
                    mergerequestbean: "MergeRequestBean",
                    "pull-request-bean": "PullRequestBean",
                    pullrequestbean: "PullRequestBean",
                    "project-topic": "ProjectTopic",
                    projecttopic: "ProjectTopic",
                    "project-file": "ProjectFile",
                    projectfile: "ProjectFile",
                    "default": "X"
                };
                return Common.smartSwitch(types, clazz)
            }
            ;
        return {
            type: resourceType
        }
    }
    ]),
    angular.module("directives").directive("cgTaskResourceReferenceList", ["ResourceReference", function(ResourceReference) {
        var getParams = function(task) {
                var project = task.project;
                return {
                    username: project.owner_user_name,
                    project_name: project.name,
                    code: task.number
                }
            }
            , link = function(scope) {
                scope.showList = !0,
                    scope.$watch("task", function(task) {
                        task && loadResourceReferenceList()
                    }),
                    scope.$on("task.detail.change", function() {
                        loadResourceReferenceList()
                    });
                var loadResourceReferenceList = function() {
                        var params = getParams(scope.task);
                        ResourceReference.list(params, function(result) {
                            scope.resourceReference = result.data,
                                scope.showResourceReferences = scope.resourceReference.Task && scope.resourceReference.Task.length > 0 || scope.resourceReference.ProjectTopic && scope.resourceReference.ProjectTopic.length > 0 || scope.resourceReference.ProjectFile && scope.resourceReference.ProjectFile.length > 0 || scope.resourceReference.MergeRequestBean && scope.resourceReference.MergeRequestBean.length > 0
                        })
                    }
                    ;
                scope.delReference = function(resource) {
                    if (resource && confirm("确定取消关联：" + resource.title + " ？")) {
                        var params = getParams(scope.task);
                        ResourceReference["delete"](angular.extend(params, {
                            iid: resource.code
                        }), function() {
                            _.remove(scope.resourceReference.Task, function(r) {
                                return r.code == resource.code
                            }),
                                _.remove(scope.resourceReference.ProjectTopic, function(r) {
                                    return r.code == resource.code
                                }),
                                _.remove(scope.resourceReference.ProjectFile, function(r) {
                                    return r.code == resource.code
                                }),
                                _.remove(scope.resourceReference.MergeRequestBean, function(r) {
                                    return r.code == resource.code
                                }),
                                scope.showResourceReferences = scope.resourceReference.Task && scope.resourceReference.Task.length > 0 || scope.resourceReference.ProjectTopic && scope.resourceReference.ProjectTopic.length > 0 || scope.resourceReference.ProjectFile && scope.resourceReference.ProjectFile.length > 0 || scope.resourceReference.MergeRequestBean && scope.resourceReference.MergeRequestBean.length > 0
                        })
                    }
                }
                    ,
                    scope.imgPopup = function(file) {
                        return file.img ? '<div style="word-break: break-all;line-height: 20px;position: relative;text-align: center;"><div><img style="max-width: 100%;" src="' + file.img + '"/></div></div>' : void 0
                    }
            }
            ;
        return {
            scope: {
                task: "=self"
            },
            restrict: "EA",
            templateUrl: "common/directives/resourceReferenceList/tpl/resourceReferenceList.html",
            link: link
        }
    }
    ]),
    angular.module("directives").directive("cgImageRotate", function() {
        return {
            restrict: "A",
            link: function(scope, element, attrs) {
                scope.$watch(attrs.cgImageRotate, function(src) {
                    if (src) {
                        var img = element[0];
                        img.onload = function() {
                            var parent_width = element.parent().width()
                                , div = $('<div class="rotate-image-wrapper">');
                            div.css({
                                width: parent_width,
                                height: img.height
                            }),
                                element.wrapAll(div);
                            var width = img.width
                                , height = img.height;
                            element.data("height", img.height),
                                element.data("width", img.width),
                                element.data("degrees", 0),
                                div.attr("selectstart", function(e) {
                                    return !1
                                }),
                                element.on("click", function() {
                                    var rotateDegrees = +element.data("degrees") + 90;
                                    element.data("degrees", rotateDegrees);
                                    var higher = height > width
                                        , horizon = rotateDegrees / 90 % 2 !== 0
                                        , wrapper = element.parents(".rotate-image-wrapper");
                                    horizon ? wrapper.addClass("horizon") : wrapper.removeClass("horizon");
                                    var rate = width / height
                                        , half = Math.abs((width - height) / 2);
                                    higher ? height > parent_width ? (rate = parent_width / height,
                                        element.css({
                                            top: -half * rate + "px",
                                            left: half * rate + "px",
                                            height: parent_width
                                        })) : element.css({}) : element.css({
                                        top: half + "px",
                                        left: -half + "px"
                                    });
                                    var r = "rotate(" + rotateDegrees + "deg)";
                                    element.css({
                                        "-moz-transform": r,
                                        "-webkit-transform": r,
                                        "-o-transform": r,
                                        "-ms-transform": r
                                    })
                                })
                        }
                            ,
                            img.src = src
                    }
                })
            }
        }
    }),
    angular.module("directives").directive("cgScrollTo", ["$timeout", function($timeout) {
        function scroll(settings) {
            return function() {
                var scrollPane = angular.element(settings.container)
                    , scrollTo = "number" == typeof settings.scrollTo ? settings.scrollTo : angular.element(settings.scrollTo)
                    , scrollY = "number" == typeof scrollTo ? scrollTo : scrollTo.offset().top - settings.offset;
                scrollPane.animate({
                    scrollTop: scrollY
                }, settings.duration, settings.easing, function() {
                    "function" == typeof callback && callback.call(this)
                })
            }
        }
        return {
            restrict: "A",
            link: function(scope, element, attrs) {
                var settings = angular.extend({
                    container: "html, body",
                    scrollTo: angular.element("#" + attrs.cgScrollTo),
                    offset: 0,
                    duration: 300,
                    easing: "swing"
                }, attrs);
                element.on("click", function() {
                    $timeout(scroll(settings))
                })
            }
        }
    }
    ]),
    angular.module("directives").directive("cgScrollToTop", [function() {
        var scrolltotop = {
            setting: {
                startline: 1,
                scrollto: 0,
                scrollduration: 80,
                fadeduration: [500, 100]
            },
            controlHTML: '<img id="scroll-to-top-image" src="/static/b9e996dc8a17687d1cc968333cc5854b.gif" style="width:50px;" />',
            controlattrs: {
                offsetx: 45,
                offsety: 165
            },
            anchorkeyword: "#top",
            state: {
                isvisible: !1,
                shouldvisible: !1
            },
            before: angular.noop,
            after: angular.noop,
            flying: !1,
            scrollup: function() {
                var thiz = this;
                this.flying = !0,
                this.before && this.before(),
                this.cssfixedsupport || this.$control.css({
                    opacity: 0
                });
                var dest = isNaN(this.setting.scrollto) ? this.setting.scrollto : parseInt(this.setting.scrollto);
                dest = "string" == typeof dest && 1 == jQuery("#" + dest).length ? jQuery("#" + dest).offset().top : 0,
                    this.$body.animate({
                        scrollTop: dest
                    }, this.setting.scrollduration, function() {
                        thiz.flying = !1
                    })
            },
            keepfixed: function() {
                var $window = jQuery(window)
                    , controlx = $window.scrollLeft() + $window.width() - this.$control.width() - this.controlattrs.offsetx
                    , controly = $window.scrollTop() + $window.height() - this.$control.height() - this.controlattrs.offsety;
                this.$control.css({
                    left: controlx + "px",
                    top: controly + "px"
                })
            },
            togglecontrol: function() {
                var scrolltop = jQuery(window).scrollTop();
                this.cssfixedsupport || this.keepfixed(),
                    this.state.shouldvisible = scrolltop >= this.setting.startline ? !0 : !1,
                    this.state.shouldvisible && !this.state.isvisible ? (this.$control.stop().show(),
                        this.state.isvisible = !0) : 0 == this.state.shouldvisible && this.state.isvisible && !this.flying && this.fadeout()
            },
            fadeout: function() {
                var thiz = this
                    , bottom = $(window).height() + 100
                    , hideControl = function() {
                        thiz.$control.stop().hide().css({
                            bottom: thiz.controlattrs.offsety,
                            right: thiz.controlattrs.offsetx,
                            opacity: 1
                        }),
                            thiz.state.isvisible = !1,
                        thiz.after && thiz.after()
                    }
                    ;
                this.byClick ? this.$control.animate({
                    bottom: bottom + "px",
                    opacity: 0
                }, 1500, hideControl) : hideControl(),
                    this.byClick = !1
            },
            offset: function(x, y) {
                scrolltotop.controlattrs.offsetx = x,
                    scrolltotop.controlattrs.offsety = y
            },
            init: function() {
                jQuery(document).ready(function($) {
                    var mainobj = scrolltotop
                        , iebrws = document.all;
                    mainobj.cssfixedsupport = !iebrws || iebrws && "CSS1Compat" == document.compatMode && window.XMLHttpRequest,
                        mainobj.$body = $(window.opera ? "CSS1Compat" == document.compatMode ? "html" : "body" : "html,body"),
                        mainobj.$control = $('<div id="topcontrol">' + mainobj.controlHTML + "</div>").css({
                            zindex: 999,
                            position: mainobj.cssfixedsupport ? "fixed" : "absolute",
                            bottom: mainobj.controlattrs.offsety,
                            right: mainobj.controlattrs.offsetx,
                            display: "none",
                            cursor: "pointer"
                        }).attr({
                            title: "Coding 超人飞向外太空拯救宇宙！"
                        }).click(function() {
                            return mainobj.byClick = !0,
                                mainobj.scrollup(),
                                !1
                        }).appendTo("body"),
                    document.all && !window.XMLHttpRequest && "" != mainobj.$control.text() && mainobj.$control.css({
                        width: mainobj.$control.width()
                    }),
                        mainobj.togglecontrol(),
                        $('a[href="' + mainobj.anchorkeyword + '"]').click(function() {
                            return mainobj.byClick = !0,
                                mainobj.scrollup(),
                                !1
                        }),
                        $(window).bind("scroll resize", function(e) {
                            mainobj.togglecontrol()
                        })
                })
            },
            destroy: function() {
                this.$control.remove()
            }
        };
        return {
            link: function(scope) {
                scrolltotop.before = function() {
                    $("#scroll-to-top-image").attr("src", "/static/7d64ac8008464a746b75a83348950ec8.gif")
                }
                    ,
                    scrolltotop.after = function() {
                        $("#scroll-to-top-image").attr("src", "/static/b9e996dc8a17687d1cc968333cc5854b.gif")
                    }
                    ,
                    scrolltotop.init(),
                    scope.$on("$destroy", function() {
                        scrolltotop.destroy()
                    })
            }
        }
    }
    ]),
    angular.module("directives").directive("cgPerfectScrollBar", [function() {
        return {
            scope: {
                update: "=cgPerfectScrollBar"
            },
            link: function(scope, element) {
                element.perfectScrollbar(),
                    scope.$watch("update", function(update) {
                        update && (element[0].scrollTop = 0,
                            element[0].scrollLeft = 0,
                            element.perfectScrollbar("update"))
                    })
            }
        }
    }
    ]),
    angular.module("directives").directive("cgAdvanceEsearch", ["$document", "$window", "Common", "$timeout", function($document, $window, Common, $timeout) {
        var postLink = function(scope, element) {
                var input = element.find("input, textarea")
                    , search_input = element.find(".search-input")
                    , dropdown = element.find(".search-dropdown");
                scope.hover = !1,
                    scope.focus = !1,
                    input.attr("autocomplete", "off");
                var quickFocus = function(event) {
                        var s = 115
                            , ignoreCurrentFocusTarget = $(event.target).is("textarea, input, .cke_wysiwyg_div");
                        if (!ignoreCurrentFocusTarget && event.keyCode === s) {
                            var page_search_input = $("#page-search-input");
                            return 1 === page_search_input.length ? page_search_input.focus() : input.focus(),
                                event.preventDefault(),
                                !1
                        }
                    }
                    ;
                $($document).on("keypress", quickFocus),
                    element.on("mouseenter", ".search-dropdown", function() {
                        Common.safeApply.call(scope, function() {
                            scope.hover = !0
                        })
                    }),
                    element.on("mouseleave", ".search-dropdown", function() {
                        Common.safeApply.call(scope, function() {
                            scope.hover = !1
                        })
                    }),
                    input.on("blur", function() {
                        Common.safeApply.call(scope, function() {
                            scope.focus = !1,
                                $timeout(function() {
                                    scope.prefix && (scope.prefix.hidden = !1),
                                        scope.groups = [],
                                        scope.cur_item_id = null ,
                                        scope.search_text = ""
                                }, 300)
                        })
                    }),
                    input.on("focus", function() {
                        Common.safeApply.call(scope, function() {
                            scope.focus = !0
                        })
                    }),
                    element.on("click", ".advance-search-item", function() {
                        Common.safeApply.call(scope, function() {
                            scope.hover = !1,
                                $timeout(function() {
                                    scope.search_text = ""
                                }, 100)
                        })
                    }),
                    input.on("keydown", function(event) {
                        var backspace = 8
                            , esc = 27;
                        if (angular.isUndefined(input[0].getCaretPosition))
                            throw new Error("cg-textarea-editable is required on input/textarea!");
                        event.keyCode === backspace && 0 === input[0].getCaretPosition() ? Common.safeApply.call(scope, function() {
                            scope.prefix && (scope.prefix.hidden = !0),
                                scope.groups = [],
                                scope.cur_item_id = null ,
                                scope.searchNow(scope.search_text)
                        }) : event.keyCode === esc && input.blur()
                    });
                var perfectHeight = function() {
                        var height = window.innerHeight - 80;
                        return height > 0 ? height : 100
                    }
                    , onWindowResize = function() {
                        dropdown.css("max-height", perfectHeight())
                    }
                    ;
                $($window).on("resize", onWindowResize),
                    dropdown.css("max-height", perfectHeight()),
                    scope.$on("$destroy", function() {
                        $($document).off("keypress", quickFocus),
                            input.off("focus"),
                            input.off("blur"),
                            element.off("mouseenter"),
                            element.off("mouseleave"),
                            $($window).off("resize", onWindowResize)
                    }),
                    scope.setSearching = function(searching) {
                        searching ? search_input.addClass("searching") : search_input.removeClass("searching")
                    }
            }
            ;
        return {
            link: postLink,
            controller: "CgAdvanceESearchController",
            scope: {
                search_text: "=ngModel"
            },
            transclude: !0,
            replace: !0,
            restrict: "A",
            require: "ngModel",
            templateUrl: "common/directives/search/tpl/search.html"
        }
    }
    ]).controller("CgAdvanceESearchController", ["$rootScope", "$scope", "ESearchDropdownService", "Common", "$timeout", "ESearch", "ESearchGroupBuilder", "$location", function($rootScope, $scope, ESearchDropdownService, Common, $timeout, ESearch, ESearchGroupBuilder, $location) {
        var search_path = "/esearch";
        $scope.groups = [],
            $scope.items = [],
            $scope.start_index = 0,
            $scope.cur_item_id = "",
            $scope.loading = !1,
            $scope.prefix = !1,
            $scope.showDropdown = function() {
                return $scope.hover && !$scope.focus ? ($scope.setSearching($scope.groups.length > 0 && $scope.search_text.length > 0),
                    !0) : ($scope.setSearching($scope.focus && $scope.groups.length > 0 && $scope.search_text.length > 0),
                    $scope.focus)
            }
        ;
        var inActiveAll = function() {
                angular.forEach($scope.items, function(item) {
                    item.active = !1
                })
            }
            , setActive = function(index) {
                inActiveAll(),
                0 > index || ($scope.items[index].active = !0)
            }
            ;
        $scope.onIndexChange = function(index) {
            index -= 1,
                setActive(index),
            0 !== $scope.items.length && $scope.items[index] && ($scope.cur_item_id = $scope.items[index].id)
        }
        ;
        var clearQueryString = function() {
                $location.search("q", null ).search("project", null ).search("user", null ).search("type", null )
            }
            ;
        $scope.onIndexEnter = function(index) {
            if (index -= 1,
                -1 === index && ($scope.showPrefix() ? $location.path(search_path).search("q", $scope.search_text).search("project", $scope.prefix.name).search("user", $scope.prefix.owner_user_name) : (clearQueryString(),
                    $location.path(search_path).search("q", $scope.search_text)),
                    $scope.prefix = !1),
                -1 !== index) {
                if (0 === $scope.items.length)
                    return;
                var item = $scope.items[index]
                    , url = item.url;
                angular.isFunction(item.action) ? item.action.call(item) : url && ($location.path(url),
                    clearQueryString(),
                    inActiveAll())
            }
            $scope.groups = [],
                $scope.cur_item_id = null ,
                $scope.search_text = "",
                $scope.hover = !1,
                $scope.reset_start_index = (new Date).getTime()
        }
            ,
            $scope.showPrefix = function() {
                return $scope.prefix && !$scope.prefix.hidden
            }
            ,
            $scope.submit = function(event) {
                return $scope.cur_item_id ? (event.preventDefault(),
                    !1) : void ($scope.showPrefix() && ($scope.prefix.hidden = !0))
            }
            ,
            $scope.$watch("groups", function(groups) {
                groups.length > 0 && ($scope.items = ESearchDropdownService.items($scope.groups),
                $scope.items && $scope.items[0] && $timeout(function() {
                    setActive(-1),
                        $scope.cur_item_id = $scope.items[0].id
                }, 100))
            });
        var isGroupsEmpty = function(groups) {
                var count = 0;
                return angular.forEach(groups, function(group) {
                    group && group.resources.totalRow > 0 && (count += group.resources.totalRow)
                }),
                0 === count
            }
            , handleResult = function(grps, inProject) {
                if (!grps || isGroupsEmpty(grps)) {
                    var group = ESearchGroupBuilder.ofType(null , ESearchDropdownService.ITEM_TYPES.NONE, null );
                    return void ($scope.groups = [group])
                }
                $scope.groups = [],
                    $scope.cur_item_id = null ,
                    angular.forEach(grps, function(item) {
                        if (item.resources && item.resources.totalRow > 0) {
                            var type = item.type
                                , g = ESearchGroupBuilder.ofType(item.resources, type, item.title);
                            if (ESearchDropdownService.SUPPORT_MORE_SEARCH_TYPES.indexOf(type) >= 0) {
                                var more_url = search_path + "?type=" + type;
                                $scope.showPrefix() && (more_url += "&project=" + $scope.prefix.name + "&user=" + $scope.prefix.owner_user_name),
                                    g.addItem(ESearchDropdownService.itemOfMore(Common.uuid(), item.title, more_url, function() {
                                        $location.path(search_path).search("q", $scope.search_text),
                                            $scope.showPrefix() ? $location.search("project", $scope.prefix.name).search("user", $scope.prefix.owner_user_name) : $location.search("project", null ).search("user", null ),
                                            $location.search("type", type),
                                            $scope.prefix = !1
                                    }))
                            }
                            $scope.groups.push(g)
                        }
                    })
            }
            , reorder = function(grps) {
                for (var pathToItem = [["task", "task"], ["topic", "topic"], ["attachment", "file"], ["member", "friend"], ["pp", "tweet"], ["tweet", "tweet"], ["relationship", "friend"], ["following", "friend"], ["merges", "merge"], ["pulls", "pull"]], result = [], i = 0, len = pathToItem.length; len > i; i++) {
                    var regex = new RegExp(pathToItem[i][0])
                        , type = pathToItem[i][1];
                    if (regex.test($location.path()) && grps[type]) {
                        var item = grps[type];
                        item.type = type,
                            result.push(item),
                            delete grps[type];
                        break
                    }
                }
                return angular.forEach(grps, function(item, type) {
                    item.type = type,
                        result.push(item)
                }),
                    result
            }
            ;
        $scope.searchNow = function(search_text) {
            if ($scope.showDropdown(),
                angular.isDefined(search_text) && search_text.length > 0) {
                $scope.reset_start_index = (new Date).getTime(),
                    $scope.loading = !0;
                var promise = null ;
                if ($scope.showPrefix()) {
                    var projectKey = $scope.prefix.owner_user_name + "/" + $scope.prefix.name;
                    promise = ESearch.ofProject({
                        project: projectKey,
                        q: search_text,
                        types: "project_topics,tasks,files,friends,merge_requests,pull_requests",
                        page: 1,
                        pageSize: 5
                    }, function(result) {
                        var grps = {
                            task: {
                                resources: result.data.tasks,
                                title: "任务"
                            },
                            topic: {
                                resources: result.data.project_topics,
                                title: "讨论"
                            },
                            file: {
                                resources: result.data.files,
                                title: "文档"
                            },
                            friend: {
                                resources: result.data.friends,
                                title: "成员"
                            },
                            merge: {
                                resources: result.data.merge_requests,
                                title: "合并请求"
                            },
                            pull: {
                                resources: result.data.pull_requests,
                                title: "PULL请求"
                            }
                        };
                        handleResult(reorder(grps), !0)
                    })
                } else
                    promise = ESearch.all({
                        q: search_text,
                        types: "projects,project_topics,tasks,tweets,files,friends,merge_requests,pull_requests",
                        page: 1,
                        pageSize: 5
                    }, function(result) {
                        var grps = {
                            project: {
                                resources: result.data.projects,
                                title: "项目"
                            },
                            task: {
                                resources: result.data.tasks,
                                title: "任务"
                            },
                            topic: {
                                resources: result.data.project_topics,
                                title: "讨论"
                            },
                            file: {
                                resources: result.data.files,
                                title: "文档"
                            },
                            tweet: {
                                resources: result.data.tweets,
                                title: "冒泡"
                            },
                            friend: {
                                resources: result.data.friends,
                                title: "用户"
                            },
                            merge: {
                                resources: result.data.merge_requests,
                                title: "合并请求"
                            },
                            pull: {
                                resources: result.data.pull_requests,
                                title: "PULL请求"
                            }
                        };
                        handleResult(reorder(grps))
                    });
                promise["finally"](function() {
                    $scope.loading = !1
                })
            }
        }
            ,
            $scope.$watch("search_text", _.debounce($scope.searchNow, 300));
        var removeProjectWatcher = $rootScope.$watch("PROJECT", function(prefix) {
            angular.isDefined(prefix) ? $scope.prefix = angular.copy(prefix) : $scope.prefix = !1
        });
        $scope.suffix = function(name) {
            return name ? name.substring(name.lastIndexOf(".") + 1) : "???"
        }
            ,
            $scope.$on("$destroy", function() {
                removeUserWatcher(),
                    removeProjectWatcher()
            })
    }
    ]).service("ESearchDropdownService", ["$rootScope", "TaskCommentService", "$filter", function($rootScope, TaskCommentService, $filter) {
        function Item(id, type, icon, title, subtitle, url, action) {
            this.id = id,
                this.type = type,
                this.icon = icon,
                this.title = title,
                this.subtitle = subtitle,
                this.url = url,
                this.action = action
        }
        function Group(id, type, title, items) {
            this.id = id,
                this.type = type || GROUP_TYPES.LIST,
                this.title = title,
                this.items = items || []
        }
        var GROUP_TYPES = {
            LIST: "list",
            SIMPLE: "simple",
            MORE: "simple:more"
        }
            , ITEM_TYPES = {
            SIMPLE: "simple",
            TOPIC: "topic",
            PROJECT: "project",
            TWEET: "tweet",
            FRIEND: "friend",
            TASK: "task",
            MR: "merge",
            PR: "pull",
            RESOURCE: "resource",
            FILE: "file",
            MORE: "more",
            NONE: "none"
        }
            , SUPPORT_ITEM_TYPES = [ITEM_TYPES.SIMPLE, ITEM_TYPES.TOPIC, ITEM_TYPES.TASK, ITEM_TYPES.FILE, ITEM_TYPES.MORE, ITEM_TYPES.PROJECT, ITEM_TYPES.TWEET, ITEM_TYPES.FRIEND, ITEM_TYPES.MR, ITEM_TYPES.PR, ITEM_TYPES.RESOURCE, ITEM_TYPES.NONE]
            , SUPPORT_MORE_SEARCH_TYPES = [ITEM_TYPES.TOPIC, ITEM_TYPES.TASK, ITEM_TYPES.FILE, ITEM_TYPES.PROJECT, ITEM_TYPES.TWEET, ITEM_TYPES.FRIEND, ITEM_TYPES.MR, ITEM_TYPES.PR, ITEM_TYPES.RESOURCE];
        Item.prototype.parent = function(group) {
            this.$parent = group
        }
            ,
            Item.prototype.tpl = function() {
                return SUPPORT_ITEM_TYPES.indexOf(this.type) >= 0 ? "common/directives/search/tpl/items/" + this.type + ".html" : "common/directives/search/tpl/items/default.html"
            }
            ,
            Item.prototype.clazz = function() {
                var clazz = [this.type];
                return this.active && clazz.push("active"),
                    clazz
            }
        ;
        var createItem = function(id, type, icon, title, subtitle, url, action) {
                if (arguments.length > 1 && arguments.length <= 6)
                    return new Item(id,type,icon,$filter("htmlToPlainText")(TaskCommentService.text(title, !0)),$filter("htmlToPlainText")(TaskCommentService.text(subtitle, !0)),url,action);
                if (1 === arguments.length)
                    throw new Error("Construct group dropdown item from resource object require resolved!")
            }
            , createItemOfMore = function(id, title, url, action) {
                return new Item(id,ITEM_TYPES.SIMPLE,"",title,"",url,action)
            }
            ;
        Group.prototype.addItem = function(item) {
            item.parent(this),
                this.items.push(item)
        }
            ,
            Group.prototype.clazz = function() {
                return this.type.split(":")
            }
        ;
        var createGroup = function(id, type, title, items) {
                return new Group(id,type,title,items)
            }
            , collectItems = function(groups) {
                var arr = [];
                return angular.forEach(groups, function(group) {
                    arr = arr.concat(group.items)
                }),
                    arr
            }
            ;
        return {
            item: createItem,
            itemOfMore: createItemOfMore,
            items: collectItems,
            group: createGroup,
            GROUP_TYPES: GROUP_TYPES,
            ITEM_TYPES: ITEM_TYPES,
            SUPPORT_MORE_SEARCH_TYPES: SUPPORT_MORE_SEARCH_TYPES
        }
    }
    ]).service("ESearchGroupBuilder", ["ESearchDropdownService", "Common", "$rootScope", function(ESearchDropdownService, Common, $rootScope) {
        var project_path_prefix = ($rootScope.PROJECT,
            $rootScope.USER,
            "");
        $rootScope.$watch("PROJECT", function(PROJECT) {
            PROJECT && (project_path_prefix = PROJECT ? PROJECT.project_path : "")
        });
        var builders = {};
        builders[ESearchDropdownService.ITEM_TYPES.PROJECT] = function(resources) {
            var group = ESearchDropdownService.group(Common.uuid(), ESearchDropdownService.GROUP_TYPES.LIST);
            return angular.forEach(resources.list, function(project) {
                if (project) {
                    var matchArr = project.project_path.match(/u\/([^\/]*)\/p/i)
                        , username = "undefined";
                    matchArr && 2 == matchArr.length && (username = matchArr[1]),
                        group.addItem(ESearchDropdownService.item(Common.uuid(), ESearchDropdownService.ITEM_TYPES.PROJECT, project.icon, username + "/" + project.name, project.description, project.project_path))
                }
            }),
                group
        }
            ,
            builders[ESearchDropdownService.ITEM_TYPES.TASK] = function(resources) {
                var group = ESearchDropdownService.group(Common.uuid(), ESearchDropdownService.GROUP_TYPES.LIST);
                return angular.forEach(resources.list, function(task) {
                    task && task.project && group.addItem(ESearchDropdownService.item(Common.uuid(), ESearchDropdownService.ITEM_TYPES.TASK, "", task.content, task.description && task.description[0] || "", task.project.project_path + "/task/" + task.id))
                }),
                    group
            }
            ,
            builders[ESearchDropdownService.ITEM_TYPES.TOPIC] = function(resources) {
                var group = ESearchDropdownService.group(Common.uuid(), ESearchDropdownService.GROUP_TYPES.LIST);
                return angular.forEach(resources.list, function(topic) {
                    topic && topic.project && group.addItem(ESearchDropdownService.item(Common.uuid(), ESearchDropdownService.ITEM_TYPES.TOPIC, "", topic.title, topic.content, topic.project.project_path + "/topic/" + topic.id))
                }),
                    group
            }
            ,
            builders[ESearchDropdownService.ITEM_TYPES.TWEET] = function(resources) {
                var group = ESearchDropdownService.group(Common.uuid(), ESearchDropdownService.GROUP_TYPES.LIST);
                return angular.forEach(resources.list, function(tweet) {
                    tweet && group.addItem(ESearchDropdownService.item(Common.uuid(), ESearchDropdownService.ITEM_TYPES.TWEET, "", tweet.content, "", tweet.path))
                }),
                    group
            }
            ,
            builders[ESearchDropdownService.ITEM_TYPES.FRIEND] = function(resources) {
                var group = ESearchDropdownService.group(Common.uuid(), ESearchDropdownService.GROUP_TYPES.LIST);
                return angular.forEach(resources.list, function(friend) {
                    friend && group.addItem(ESearchDropdownService.item(Common.uuid(), ESearchDropdownService.ITEM_TYPES.FRIEND, friend.avatar, friend.name, friend.global_key, friend.path))
                }),
                    group
            }
        ;
        var PRMRBuilders = function(resources, title, type) {
                var group = ESearchDropdownService.group(Common.uuid(), ESearchDropdownService.GROUP_TYPES.LIST, title);
                return angular.forEach(resources.list, function(mrOrPr) {
                    mrOrPr && group.addItem(ESearchDropdownService.item(Common.uuid(), type, "", mrOrPr.title, "", mrOrPr.path))
                }),
                    group
            }
            ;
        builders[ESearchDropdownService.ITEM_TYPES.MR] = function(resources) {
            return PRMRBuilders(resources, "MR", ESearchDropdownService.ITEM_TYPES.MR)
        }
            ,
            builders[ESearchDropdownService.ITEM_TYPES.PR] = function(resources) {
                return PRMRBuilders(resources, "PR", ESearchDropdownService.ITEM_TYPES.PR)
            }
            ,
            builders[ESearchDropdownService.ITEM_TYPES.FILE] = function(resources) {
                var group = ESearchDropdownService.group(Common.uuid(), ESearchDropdownService.GROUP_TYPES.LIST);
                return angular.forEach(resources.list, function(file) {
                    file && group.addItem(ESearchDropdownService.item(Common.uuid(), ESearchDropdownService.ITEM_TYPES.FILE, file.preview, file.name, "", file.path))
                }),
                    group
            }
            ,
            builders[ESearchDropdownService.ITEM_TYPES.NONE] = function() {
                var group = ESearchDropdownService.group(Common.uuid(), ESearchDropdownService.GROUP_TYPES.SIMPLE);
                return group.addItem(ESearchDropdownService.item(Common.uuid(), ESearchDropdownService.ITEM_TYPES.NONE)),
                    group
            }
        ;
        var buildOfType = function(resources, type, title) {
                var group = Common.smartSwitch(builders, type, resources);
                return title && (group.title = title),
                    group
            }
            ;
        return {
            ofType: buildOfType
        }
    }
    ]),
    angular.module("directives").directive("cgAdvanceSearch", ["$document", "$window", "Common", "$timeout", function($document, $window, Common, $timeout) {
        var postLink = function(scope, element) {
                var input = element.find("input, textarea")
                    , search_input = element.find(".search-input")
                    , dropdown = element.find(".search-dropdown");
                scope.hover = !1,
                    scope.focus = !1,
                    input.attr("autocomplete", "off");
                var quickFocus = function(event) {
                        var s = 115
                            , ignoreCurrentFocusTarget = $(event.target).is("textarea, input, .cke_wysiwyg_div");
                        if (!ignoreCurrentFocusTarget && event.keyCode === s) {
                            var page_search_input = $("#page-search-input");
                            return 1 === page_search_input.length ? page_search_input.focus() : input.focus(),
                                event.preventDefault(),
                                !1
                        }
                    }
                    ;
                $($document).on("keypress", quickFocus),
                    element.on("mouseenter", ".search-dropdown", function() {
                        Common.safeApply.call(scope, function() {
                            scope.hover = !0
                        })
                    }),
                    element.on("mouseleave", ".search-dropdown", function() {
                        Common.safeApply.call(scope, function() {
                            scope.hover = !1
                        })
                    }),
                    input.on("blur", function() {
                        Common.safeApply.call(scope, function() {
                            scope.focus = !1,
                            scope.prefix && $timeout(function() {
                                scope.prefix && (scope.prefix.hidden = !1),
                                    scope.groups = [],
                                    scope.cur_item_id = null
                            }, 300)
                        })
                    }),
                    input.on("focus", function() {
                        Common.safeApply.call(scope, function() {
                            scope.focus = !0
                        })
                    }),
                    element.on("click", ".advance-search-item", function() {
                        Common.safeApply.call(scope, function() {
                            scope.hover = !1,
                                $timeout(function() {
                                    scope.search_text = ""
                                }, 100)
                        })
                    }),
                    input.on("keydown", function(event) {
                        var backspace = 8
                            , esc = 27;
                        if (angular.isUndefined(input[0].getCaretPosition))
                            throw new Error("cg-textarea-editable is required on input/textarea!");
                        event.keyCode === backspace && 0 === input[0].getCaretPosition() ? Common.safeApply.call(scope, function() {
                            scope.prefix && (scope.prefix.hidden = !0),
                                scope.groups = [],
                                scope.cur_item_id = null ,
                                scope.searchNow(scope.search_text)
                        }) : event.keyCode === esc && input.blur()
                    });
                var perfectHeight = function() {
                        var height = window.innerHeight - 80;
                        return height > 0 ? height : 100
                    }
                    , onWindowResize = function() {
                        dropdown.css("max-height", perfectHeight())
                    }
                    ;
                $($window).on("resize", onWindowResize),
                    dropdown.css("max-height", perfectHeight()),
                    scope.$on("$destroy", function() {
                        $($document).off("keypress", quickFocus),
                            input.off("focus"),
                            input.off("blur"),
                            element.off("mouseenter"),
                            element.off("mouseleave"),
                            $($window).off("resize", onWindowResize)
                    }),
                    scope.setSearching = function(searching) {
                        searching ? search_input.addClass("searching") : search_input.removeClass("searching")
                    }
            }
            ;
        return {
            link: postLink,
            controller: "CgAdvanceSearchController",
            scope: {
                search_text: "=ngModel"
            },
            transclude: !0,
            replace: !0,
            restrict: "A",
            require: "ngModel",
            templateUrl: "common/directives/search/tpl/search.html"
        }
    }
    ]).controller("CgAdvanceSearchController", ["$rootScope", "$scope", "SearchDropdownService", "Common", "$timeout", "Search", "SearchGroupBuilder", "$location", function($rootScope, $scope, SearchDropdownService, Common, $timeout, Search, SearchGroupBuilder, $location) {
        var search_path = "/search"
            , MAX_GROUP_ITEM_SIZE = 6;
        $scope.groups = [],
            $scope.items = [],
            $scope.start_index = 0,
            $scope.cur_item_id = "",
            $scope.loading = !1,
            $scope.prefix = !1,
            $scope.showDropdown = function() {
                return $scope.hover && !$scope.focus ? ($scope.setSearching($scope.groups.length > 0 && $scope.search_text.length > 0),
                    !0) : ($scope.setSearching($scope.focus && $scope.groups.length > 0 && $scope.search_text.length > 0),
                    $scope.focus)
            }
        ;
        var inActiveAll = function() {
                angular.forEach($scope.items, function(item) {
                    item.active = !1
                })
            }
            , setActive = function(index) {
                inActiveAll(),
                0 > index || ($scope.items[index].active = !0)
            }
            ;
        $scope.onIndexChange = function(index) {
            index -= 1,
                setActive(index),
            0 !== $scope.items.length && $scope.items[index] && ($scope.cur_item_id = $scope.items[index].id)
        }
        ;
        var clearQueryString = function() {
                $location.search("q", null ).search("project", null ).search("user", null ).search("type", null )
            }
            ;
        $scope.onIndexEnter = function(index) {
            if (index -= 1,
                -1 === index && ($scope.showPrefix() ? $location.path(search_path).search("q", $scope.search_text).search("project", $scope.prefix.name).search("user", $scope.prefix.owner_user_name) : (clearQueryString(),
                    $location.path(search_path).search("q", $scope.search_text)),
                    $scope.prefix = !1),
                -1 !== index) {
                if (0 === $scope.items.length)
                    return;
                var item = $scope.items[index]
                    , url = item.url;
                angular.isFunction(item.action) ? item.action.call(item) : url && ($location.path(url),
                    clearQueryString(),
                    inActiveAll())
            }
            $scope.groups = [],
                $scope.cur_item_id = null ,
                $scope.search_text = "",
                $scope.hover = !1,
                $scope.reset_start_index = (new Date).getTime()
        }
            ,
            $scope.showPrefix = function() {
                return $scope.prefix && !$scope.prefix.hidden
            }
            ,
            $scope.submit = function(event) {
                return $scope.cur_item_id ? (event.preventDefault(),
                    !1) : void ($scope.showPrefix() && ($scope.prefix.hidden = !0))
            }
            ,
            $scope.$watch("groups", function(groups) {
                groups.length > 0 && ($scope.items = SearchDropdownService.items($scope.groups),
                $scope.items && $scope.items[0] && $timeout(function() {
                    setActive(-1),
                        $scope.cur_item_id = $scope.items[0].id
                }, 100))
            });
        var isGroupsEmpty = function(groups) {
                var regions = ["file", "task", "topic", "pull-request", "merge-request", "friend", "project"]
                    , count = 0;
                return angular.forEach(regions, function(region) {
                    var group = groups[region];
                    group && group.resources.totalRow > 0 && (count += group.resources.totalRow)
                }),
                0 === count
            }
            , handleResult = function(grps, inProject) {
                if (!grps || isGroupsEmpty(grps)) {
                    var group = SearchGroupBuilder.ofType(null , SearchDropdownService.ITEM_TYPES.NONE);
                    return void ($scope.groups = [group])
                }
                $scope.groups = [],
                    $scope.cur_item_id = null ,
                    angular.forEach(grps, function(item, type) {
                        if (item.resources && item.resources.totalRow > 0) {
                            var g = SearchGroupBuilder.ofType(item.resources, type)
                                , count = item.count || MAX_GROUP_ITEM_SIZE;
                            (!inProject && g.items.length > count || inProject && g.items.length > count && SearchDropdownService.SUPPORT_PROJECT_MORE_SEARCH_TYPES.indexOf(type) >= 0) && (g.items.splice(count, g.items.length),
                                g.addItem(SearchDropdownService.itemOfMore(Common.uuid(), item.title, g.more_url || search_path, function() {
                                    $location.path(search_path).search("q", $scope.search_text),
                                        $scope.showPrefix() ? $location.search("project", $scope.prefix.name).search("user", $scope.prefix.owner_user_name) : $location.search("project", null ).search("user", null ),
                                        $location.search("type", type),
                                        $scope.prefix = !1
                                }))),
                                $scope.groups.push(g)
                        }
                    })
            }
            ;
        $scope.searchNow = function(search_text) {
            if ($scope.showDropdown(),
                angular.isDefined(search_text) && search_text.length > 0) {
                $scope.reset_start_index = (new Date).getTime(),
                    $scope.loading = !0;
                var promise = null ;
                promise = $scope.showPrefix() ? Search.ofProject({
                    username: $scope.prefix.owner_user_name,
                    project_name: $scope.prefix.name,
                    q: search_text
                }, function(result) {
                    var tasks = result.data.tasks
                        , topics = result.data.project_topics
                        , mrs = result.data.merge_requests
                        , prs = result.data.pull_requests
                        , files = result.data.project_files
                        , grps = {
                        task: {
                            resources: tasks,
                            title: "任务",
                            count: 6
                        },
                        topic: {
                            resources: topics,
                            title: "讨论",
                            count: 6
                        },
                        file: {
                            resources: files,
                            title: "文档",
                            count: 6
                        }
                    };
                    $scope.prefix.is_public ? grps["pull-request"] = {
                        resources: prs,
                        title: "MR",
                        count: 6
                    } : grps["merge-request"] = {
                        resources: mrs,
                        title: "MR",
                        count: 6
                    },
                        handleResult(grps, !0)
                }) : Search.quick({
                    q: search_text,
                    pageSize: 6
                }, function(result) {
                    var projects = result.data.projects
                        , friends = result.data.friends
                        , grps = {
                        project: {
                            resources: projects,
                            title: "项目",
                            count: 10
                        }
                    };
                    $rootScope.USER && (grps.friend = {
                        resources: friends,
                        title: "好友",
                        count: 6
                    }),
                        handleResult(grps)
                }),
                    promise["finally"](function() {
                        $scope.loading = !1
                    })
            }
        }
            ,
            $scope.$watch("search_text", _.debounce($scope.searchNow, 300));
        var removeProjectWatcher = $rootScope.$watch("PROJECT", function(prefix) {
            angular.isDefined(prefix) ? $scope.prefix = angular.copy(prefix) : $scope.prefix = !1
        });
        $scope.suffix = function(name) {
            return name ? name.substring(name.lastIndexOf(".") + 1) : "???"
        }
            ,
            $scope.$on("$destroy", function() {
                removeProjectWatcher()
            })
    }
    ]).service("SearchDropdownService", ["$rootScope", "TaskCommentService", "$filter", function($rootScope, TaskCommentService, $filter) {
        function Item(id, type, icon, title, subtitle, url, action) {
            this.id = id,
                this.type = type,
                this.icon = icon,
                this.title = title,
                this.subtitle = subtitle,
                this.url = url,
                this.action = action
        }
        function Group(id, type, title, items) {
            this.id = id,
                this.type = type || GROUP_TYPES.LIST,
                this.title = title,
                this.items = items || []
        }
        var GROUP_TYPES = {
            LIST: "list",
            SIMPLE: "simple",
            MORE: "simple:more"
        }
            , ITEM_TYPES = {
            SIMPLE: "simple",
            TOPIC: "topic",
            PROJECT: "project",
            TWEET: "tweet",
            FRIEND: "friend",
            TASK: "task",
            MR: "merge-request",
            PR: "pull-request",
            FILE: "file",
            MORE: "more",
            NONE: "none"
        }
            , SUPPORT_ITEM_TYPES = [ITEM_TYPES.SIMPLE, ITEM_TYPES.FILE, ITEM_TYPES.MORE, ITEM_TYPES.PROJECT, ITEM_TYPES.TWEET, ITEM_TYPES.FRIEND, ITEM_TYPES.NONE]
            , SUPPORT_PROJECT_MORE_SEARCH_TYPES = [ITEM_TYPES.TOPIC, ITEM_TYPES.TASK];
        Item.prototype.parent = function(group) {
            this.$parent = group
        }
            ,
            Item.prototype.tpl = function() {
                return SUPPORT_ITEM_TYPES.indexOf(this.type) >= 0 ? "common/directives/search/tpl/items/" + this.type + ".html" : "common/directives/search/tpl/items/default.html"
            }
            ,
            Item.prototype.clazz = function() {
                var clazz = [this.type];
                return this.active && clazz.push("active"),
                    clazz
            }
        ;
        var createItem = function(id, type, icon, title, subtitle, url, action) {
                if (arguments.length > 1 && arguments.length <= 6)
                    return new Item(id,type,icon,$filter("htmlToPlainText")(TaskCommentService.text(title, !0)),$filter("htmlToPlainText")(TaskCommentService.text(subtitle, !0)),url,action);
                if (1 === arguments.length)
                    throw new Error("Construct group dropdown item from resource object require resolved!")
            }
            , createItemOfMore = function(id, title, url, action) {
                return new Item(id,ITEM_TYPES.SIMPLE,"",title,"",url,action)
            }
            ;
        Group.prototype.addItem = function(item) {
            item.parent(this),
                this.items.push(item)
        }
            ,
            Group.prototype.onAction = function() {
                $rootScope.$on("advance.search.action", function($event, item) {})
            }
            ,
            Group.prototype.types = function() {
                var dir = this.type.split(":");
                return {
                    type: dir[0],
                    subtype: dir[1] || "list"
                }
            }
            ,
            Group.prototype.clazz = function() {
                return this.type.split(":")
            }
        ;
        var createGroup = function(id, type, title, items) {
                return new Group(id,type,title,items)
            }
            , collectItems = function(groups) {
                var arr = [];
                return angular.forEach(groups, function(group) {
                    arr = arr.concat(group.items)
                }),
                    arr
            }
            ;
        return {
            item: createItem,
            itemOfMore: createItemOfMore,
            items: collectItems,
            group: createGroup,
            GROUP_TYPES: GROUP_TYPES,
            ITEM_TYPES: ITEM_TYPES,
            SUPPORT_PROJECT_MORE_SEARCH_TYPES: SUPPORT_PROJECT_MORE_SEARCH_TYPES
        }
    }
    ]).service("SearchGroupBuilder", ["SearchDropdownService", "Common", "$rootScope", function(SearchDropdownService, Common, $rootScope) {
        var project_path_prefix = ($rootScope.PROJECT,
            $rootScope.USER,
            "");
        $rootScope.$watch("PROJECT", function(PROJECT) {
            PROJECT && (project_path_prefix = PROJECT ? PROJECT.project_path : "")
        });
        var search_path = "/search"
            , buildMoreUrlSuffix = function(project, type) {
            return project ? "project=" + project.name + "&user=" + project.owner_user_name + "&type=" + type : "type=" + type
        }
            , builders = {};
        builders[SearchDropdownService.ITEM_TYPES.PROJECT] = function(resources) {
            var group = SearchDropdownService.group(Common.uuid(), SearchDropdownService.GROUP_TYPES.LIST, "项目");
            return angular.forEach(resources.list, function(project) {
                project && group.addItem(SearchDropdownService.item(Common.uuid(), SearchDropdownService.ITEM_TYPES.PROJECT, project.icon, project.owner_user_name + "/" + project.name, project.description, project.project_path))
            }),
                group
        }
            ,
            builders[SearchDropdownService.ITEM_TYPES.TASK] = function(resources) {
                var group = SearchDropdownService.group(Common.uuid(), SearchDropdownService.GROUP_TYPES.LIST, "任务")
                    , project = {};
                angular.forEach(resources.list, function(task) {
                    task && task.project && (group.addItem(SearchDropdownService.item(Common.uuid(), SearchDropdownService.ITEM_TYPES.TASK, "", task.content, "", task.project.project_path + "/task/" + task.id)),
                        project = task.project)
                });
                var more_url = search_path + "?" + buildMoreUrlSuffix(project, SearchDropdownService.ITEM_TYPES.TASK);
                return group.more_url = more_url,
                    group
            }
            ,
            builders[SearchDropdownService.ITEM_TYPES.TOPIC] = function(resources) {
                var group = SearchDropdownService.group(Common.uuid(), SearchDropdownService.GROUP_TYPES.LIST, "讨论")
                    , project = {};
                angular.forEach(resources.list, function(topic) {
                    topic && topic.project && (group.addItem(SearchDropdownService.item(Common.uuid(), SearchDropdownService.ITEM_TYPES.TOPIC, "", topic.title, topic.content, topic.project.project_path + "/topic/" + topic.id)),
                        project = topic.project)
                });
                var more_url = search_path + "?" + buildMoreUrlSuffix(project, SearchDropdownService.ITEM_TYPES.TOPIC);
                return group.more_url = more_url,
                    group
            }
            ,
            builders[SearchDropdownService.ITEM_TYPES.TWEET] = function(resources) {
                var group = SearchDropdownService.group(Common.uuid(), SearchDropdownService.GROUP_TYPES.LIST, "冒泡");
                return angular.forEach(resources.list, function(tweet) {
                    tweet && group.addItem(SearchDropdownService.item(Common.uuid(), SearchDropdownService.ITEM_TYPES.TWEET, "", tweet.content, "", tweet.path))
                }),
                    group
            }
            ,
            builders[SearchDropdownService.ITEM_TYPES.FRIEND] = function(resources) {
                var group = SearchDropdownService.group(Common.uuid(), SearchDropdownService.GROUP_TYPES.LIST, "用户");
                return angular.forEach(resources.list, function(friend) {
                    friend && group.addItem(SearchDropdownService.item(Common.uuid(), SearchDropdownService.ITEM_TYPES.FRIEND, friend.avatar, friend.name, friend.global_key, friend.path))
                }),
                    group
            }
        ;
        var PRMRBuilders = function(resources, title, type) {
                var group = SearchDropdownService.group(Common.uuid(), SearchDropdownService.GROUP_TYPES.LIST, title);
                return angular.forEach(resources.list, function(mrOrPr) {
                    mrOrPr && group.addItem(SearchDropdownService.item(Common.uuid(), type, "", mrOrPr.title, "", mrOrPr.path))
                }),
                    group
            }
            ;
        builders[SearchDropdownService.ITEM_TYPES.MR] = function(resources) {
            return PRMRBuilders(resources, "MR", SearchDropdownService.ITEM_TYPES.MR)
        }
            ,
            builders[SearchDropdownService.ITEM_TYPES.PR] = function(resources) {
                return PRMRBuilders(resources, "PR", SearchDropdownService.ITEM_TYPES.PR)
            }
            ,
            builders[SearchDropdownService.ITEM_TYPES.FILE] = function(resources) {
                var group = SearchDropdownService.group(Common.uuid(), SearchDropdownService.GROUP_TYPES.LIST, "文档")
                    , filePath = function(parent_id, file_id) {
                        return [project_path_prefix, "/attachment/", parent_id || "default", "/preview/", file_id].join("")
                    }
                    ;
                return angular.forEach(resources.list, function(file) {
                    file && group.addItem(SearchDropdownService.item(Common.uuid(), SearchDropdownService.ITEM_TYPES.FILE, file.preview, file.name, "", filePath(file.parent_id, file.file_id)))
                }),
                    group
            }
            ,
            builders[SearchDropdownService.ITEM_TYPES.NONE] = function() {
                var group = SearchDropdownService.group(Common.uuid(), SearchDropdownService.GROUP_TYPES.SIMPLE);
                return group.addItem(SearchDropdownService.item(Common.uuid(), SearchDropdownService.ITEM_TYPES.NONE)),
                    group;
            }
        ;
        var buildOfType = function(resources, type) {
                return Common.smartSwitch(builders, type, resources)
            }
            ;
        return {
            ofType: buildOfType
        }
    }
    ]),
    angular.module("directives").directive("cgSearchFilter", ["Common", function(Common) {
        return {
            scope: {
                content: "=filter",
                callback: "&"
            },
            link: function(scope, element, attrs) {
                scope.searchInput = "";
                var dropdownElem = $(element).find(".dropdown");
                dropdownElem.dropdown({
                    onHide: function() {
                        Common.safeApply.call(scope, function() {
                            scope.searchInput = ""
                        })
                    }
                }),
                    scope.toggleSelect = function(item) {
                        if (item.excluded) {
                            for (var i = scope.content.data.length - 1; i >= 0; i--)
                                scope.content.data[i].selected = !1;
                            item.selected = !0,
                                scope.content.result = item.key.toString(),
                            "sort" === scope.content.type && ("asc" === item.order ? scope.content.order = "asc" : scope.content.order = "desc")
                        } else {
                            for (var i = scope.content.data.length - 1; i >= 0; i--) {
                                var d = scope.content.data[i];
                                d.excluded && (d.selected = !1)
                            }
                            item.selected = !item.selected;
                            for (var result = "", i = 0, len = scope.content.data.length; len > i; i++) {
                                var d = scope.content.data[i];
                                d.selected && (result += d.key.toString() + ",")
                            }
                            if ("" === result) {
                                var d = scope.content.data[0];
                                d.selected = !0,
                                    scope.content.result = d.key.toString()
                            } else
                                scope.content.result = result.substring(0, result.length - 1)
                        }
                        scope.callback()
                    }
            },
            templateUrl: "common/directives/search/tpl/search_filter.html"
        }
    }
    ]),
    angular.module("directives").directive("cgSearchHighlight", function() {
        return {
            scope: {
                content: "=cgSearchHighlight"
            },
            link: function(scope, element, attrs) {
                var wrapper = element.find(".esearch-highlight-wrapper");
                scope.$watch("content", function(content) {
                    if (angular.isDefined(content)) {
                        var html = wrapper.html();
                        html = html.replace(/&lt;em&gt;/gi, "<em>"),
                            html = html.replace(/&lt;\/em&gt;/gi, "</em>"),
                        html.length >= 100 && (html += "..."),
                            wrapper.html(html)
                    }
                })
            },
            template: '<span class="esearch-highlight-wrapper" ng-bind="content"></span>'
        }
    }),
    appDirective.directive("cgDropdown", ["Common", "$timeout", function(Common, $timeout) {
        return {
            link: function(scope, element, attrs) {
                var fn = attrs.cgOnChange && scope.$eval(attrs.cgOnChange) || angular.noop
                    , setting = scope.$eval(attrs.dropdownSetting) || {};
                fn && (setting.onChange = function(value) {
                        Common.safeApply.call(scope, function() {
                            fn(scope, value)
                        })
                    }
                ),
                    attrs.cgDropdown ? scope.$watch(attrs.cgDropdown, function(value) {
                        angular.isArray(value) && 0 === value.length || angular.isDefined(value) && $timeout(function() {
                            element.dropdown(setting)
                        }, 300)
                    }) : element.dropdown(setting),
                    scope.$on("$destroy", function() {
                        element.dropdown("hide")
                    })
            }
        }
    }
    ]),
    appDirective.directive("cgUiDropdown", ["Common", function(Common) {
        return {
            scope: {
                setting: "=cgUiDropdown"
            },
            link: function(scope, element) {
                element.dropdown(scope.setting),
                    scope.setting.close = function() {
                        element.dropdown("hide")
                    }
                    ,
                    scope.setting.show = function() {
                        element.dropdown("show")
                    }
                    ,
                    scope.$on("$destroy", function() {
                        element.dropdown("hide")
                    })
            }
        }
    }
    ]),
    angular.module("directives").directive("cgModal", [function() {
        return {
            scope: {
                instance: "=cgModal"
            },
            link: function(scope, element) {
                var modal = $(element)
                    , instance = scope.instance;
                instance && (modal.attr("id", instance.id),
                    instance.$$modal_deferred.resolve(modal),
                    instance.removeModal = function() {
                        scope.$emit("ui.modal.remove", instance.id),
                            $("#" + instance.id).remove()
                    }
                    ,
                    modal.modal("setting", instance.setting || {}))
            }
        }
    }
    ]).factory("UIModal", ["Common", "$q", function(Common, $q) {
        function Modal(id, setting) {
            this.id = id || "modal-" + Common.uuid(),
                this.setting = setting || {},
                this.handlers = {},
                this.$$modal_deferred = $q.defer(),
                this.$$modal = this.$$modal_deferred.promise
        }
        return Modal.prototype = {
            action: function() {
                var args = arguments;
                this.$$modal.then(function(modal) {
                    modal.modal.apply(modal, args)
                })
            },
            on: function(event, callback) {
                var name = "on" + Common.capitalize(event)
                    , handler = {};
                return handler[name] = callback,
                    this.$$modal.then(function(modal) {
                        modal.modal("setting", handler)
                    }),
                    this
            },
            off: function(event) {
                var name = "on" + Common.capitalize(event)
                    , handler = {};
                return handler[name] = angular.noop,
                    this.$$modal.then(function(modal) {
                        modal.modal("setting", handler)
                    }),
                    this
            },
            toggle: function() {
                this.$$modal.then(function(modal) {
                    var isActive = modal.modal("is active");
                    modal.modal(isActive ? "hide" : "show")
                })
            },
            remove: function() {
                var self = this;
                this.$$modal.then(function() {
                    self.removeModal()
                })
            }
        },
            Modal
    }
    ]).service("ModalService", ["UIModal", "$rootScope", function(Modal, $rootScope) {
        var $$modals = {}
            , instance = function() {
                var id, setting;
                2 === arguments.length && (id = arguments[0],
                    setting = arguments[1]),
                1 === arguments.length && (angular.isString(arguments[0]) ? id = arguments[0] : setting = arguments[0]),
                $$modals[id] && angular.isFunction($$modals[id].removeModal) && $$modals[id].removeModal();
                var one = new Modal(id,setting);
                return $$modals[one.id] = one,
                    one
            }
            , get = function(id) {
                return $$modals[id]
            }
            , remove = function(id) {
                delete $$modals[id]
            }
            ;
        return $rootScope.$on("ui.modal.remove", function(event, id) {
            $$modals[id] && remove(id)
        }),
        {
            get: get,
            instance: instance,
            remove: remove
        }
    }
    ]),
    angular.module("directives").directive("cgPopup", ["$timeout", function($timeout) {
        return {
            scope: {
                opt: "=cgPopup",
                on: "=on",
                id: "@template",
                position: "@position"
            },
            link: function(scope, element, attrs) {
                var opt = scope.opt
                    , on = scope.on;
                if (opt = opt || {
                            on: on || "hover"
                        },
                    on && (opt.on = on),
                    scope.position && element.data("position", scope.position),
                        scope.id) {
                    var el = $(scope.id).hide();
                    $timeout(function() {
                        element.data("html", el.html())
                    }, 1500)
                }
                element.popup(opt),
                scope.$parent && scope.$parent.$on("$destroy", function() {
                    element.popup("remove")
                })
            },
            priority: 0
        }
    }
    ]),
    angular.module("directives").directive("cgShowMore", [function() {
        return {
            scope: {
                content: "=cgShowMore",
                limitTo: "@limitTo",
                canShowMore: "&canShowMore",
                clickable: "&clickable"
            },
            link: function(scope) {
                scope.limitTo || (scope.limitTo = 200),
                "undefined" == typeof scope.canShowMore && (scope.canShowMore = !0),
                    scope.show = !1,
                    scope.toggleShow = function() {
                        var clickable = scope.clickable();
                        (void 0 === clickable || clickable) && (scope.show = !scope.show)
                    }
            },
            templateUrl: "common/directives/showMore/tpl/more.html"
        }
    }
    ]),
    angular.module("directives").directive("cgTagColor", [function() {
        var calColor = function(element, color) {
                element.css("background-color", color);
                var bgColor = element.css("background-color")
                    , channels = bgColor.match(/\d+/g)
                    , R = channels[0]
                    , G = channels[1]
                    , B = channels[2];
                element.css("background", "rgb(" + [R, G, B].join(",") + ")");
                var gray = Math.floor(.299 * R + .587 * G + .114 * B);
                element.css("color", 186 > gray ? "white" : "black")
            }
            ;
        return {
            scope: {
                color: "=cgTagColor"
            },
            link: function(scope, element) {
                scope.$watch("color", function(color) {
                    angular.isDefined(color) && calColor(element, color)
                })
            }
        }
    }
    ]),
    angular.module("directives").directive("cgTagDropdown", [function() {
        return {
            scope: {
                items: "=cgTagDropdown",
                onAdd: "=onTagAdd",
                onRemove: "=onTagRemove",
                onCreate: "=onTagCreate",
                left: "@left"
            },
            link: function(scope, element) {
                var dp = element.find(".ui.dropdown.tag-dropdown")
                    , input = element.find(".search input");
                dp.dropdown({
                    onShow: function() {
                        input.focus()
                    }
                })
            },
            templateUrl: "common/directives/tag/tpl/dropdown.html",
            controller: "TagDropdownController",
            transclude: !0
        }
    }
    ]).controller("TagDropdownController", ["$scope", "TagDropdownService", "Common", "$filter", "TopicTagEditorService", "$rootScope", function($scope, TagDropdownService, Common, $filter, TopicTagEditorService, $rootScope) {
        $scope.searchTag = {
            name: ""
        },
            $scope.cur_index = 0,
            $scope.random_color = TagDropdownService.randomColor(),
            $scope.onSelectIndexChange = function(index) {
                $scope.cur_index = index || 0;
                var filtered_items = $filter("filter")($scope.items, $scope.searchTag);
                0 === filtered_items.length && ($scope.cur_index = 0)
            }
        ;
        var toggleTagActive = function(item) {
                Common.safeApply.call($scope, function() {
                    item.active ? $scope.onAdd(item) : $scope.onRemove(item)
                })
            }
            ;
        $scope.onSelectIndexEnter = function(index, items) {
            if (!isNaN(index)) {
                var filtered_items = $filter("filter")($scope.items, $scope.searchTag);
                if (0 === filtered_items.length && $scope.searchTag.name.length > 0) {
                    var tag = {
                        name: $scope.searchTag.name,
                        color: $scope.random_color
                    }
                        , promise = $scope.onCreate && $scope.onCreate(tag) || TopicTagEditorService.onTagCreate($rootScope.PROJECT, $scope, tag)
                        , allDone = promise.then(function(result) {
                        var id = result.data || 0;
                        return tag.id = id,
                            $scope.onAdd(tag)
                    });
                    allDone.then(function() {
                        $scope.searchTag.name = "",
                            $scope.changeColor()
                    })
                } else
                    items[index] && (items[index].active = !items[index].active,
                        toggleTagActive(items[index]))
            }
        }
            ,
            $scope.$watch("searchTag.name", function(name) {
                angular.isDefined(name) && ($scope.cur_index = 0)
            }),
            $scope.toggleActive = function(item) {
                item.active = !item.active,
                    toggleTagActive(item)
            }
            ,
            $scope.changeColor = function() {
                $scope.random_color = TagDropdownService.randomColor()
            }
    }
    ]).service("TagDropdownService", [function() {
        var getRandomColor = function() {
                for (var letters = "0123456789ABCDEF".split(""), color = "#", i = 0; 6 > i; i++)
                    color += letters[Math.floor(16 * Math.random())];
                return color
            }
            ;
        return {
            randomColor: getRandomColor
        }
    }
    ]),
    angular.module("directives").directive("cgTagEditor", [function() {
        return {
            scope: {
                current_tags: "=cgTagEditor",
                tags: "=tags",
                onAdd: "=onTagAdd",
                onRemove: "=onTagRemove",
                onSelect: "=onTagSelect",
                onCreate: "=onTagCreate"
            },
            templateUrl: function(element, attrs) {
                return "common/directives/tag/tpl/" + (attrs.mode ? attrs.mode : "editor") + ".html"
            },
            controller: "TopicTagEditorController",
            replace: !0
        }
    }
    ]).controller("TopicTagEditorController", ["$scope", "Topic", "Common", "TopicTagEditorService", function($scope, Topic, Common, TopicTagEditorService) {
        $scope.tag_editing = !1,
            $scope.selected_tags = [],
            $scope.update_scrollbar = null ,
            $scope.all_tags = [],
            $scope.updateScrollbar = function() {
                $scope.update_scrollbar = (new Date).getTime()
            }
        ;
        var toggleTagActive = function(active, tag) {
                angular.forEach($scope.all_tags, function(t) {
                    t.name === tag.name && (t.active = active)
                })
            }
            , toggleTagsActive = function(active, tags) {
                var tag_ids = $.map(tags, function(tag) {
                    return tag.id
                });
                angular.forEach($scope.all_tags, function(tag) {
                    -1 === tag_ids.indexOf(tag.id) ? tag.active = !active : tag.active = active
                })
            }
            ;
        $scope.onTagRemove = function(tag, $event) {
            $scope.tag_editing = !0;
            var promise = $scope.onRemove(tag, $scope.selected_tags);
            return promise.then(function() {
                $scope.selected_tags = Common.removeOfId($scope.selected_tags, tag.id),
                    toggleTagActive(!1, tag)
            }),
                promise["finally"](function() {
                    $scope.tag_editing = !1,
                        $scope.updateScrollbar()
                }),
            $event && $event.stopPropagation(),
                promise
        }
            ,
            $scope.onTagAdd = function(tag) {
                $scope.tag_editing = !0;
                var promise = $scope.onAdd(tag, $scope.selected_tags);
                return promise.then(function() {
                    $scope.selected_tags.push(tag),
                        toggleTagActive(!0, tag)
                }),
                    promise["finally"](function() {
                        $scope.tag_editing = !1,
                            $scope.updateScrollbar()
                    }),
                    promise
            }
            ,
            $scope.onTagCreate = function(tag) {
                $scope.tag_editing = !0;
                var promise = $scope.onCreate && $scope.onCreate(tag, $scope.selected_tags) || TopicTagEditorService.onTagCreate($rootScope.PROJECT, $scope, tag);
                return promise["finally"](function() {
                    $scope.tag_editing = !1,
                        $scope.updateScrollbar()
                }),
                    promise
            }
            ,
            $scope.selectTag = function(tag) {
                $scope.onSelect && $scope.onSelect(tag)
            }
            ,
            $scope.$on("project.tag.updated", function(event, tag) {
                var changed = Common.findOfId($scope.selected_tags, tag.id);
                changed && (changed.color = tag.color,
                    changed.name = tag.name)
            }),
            $scope.$watch("current_tags", function(current_tags) {
                angular.isDefined(current_tags) && ($scope.all_tags = angular.copy($scope.tags),
                    $scope.selected_tags = angular.copy(current_tags),
                    toggleTagsActive(!0, current_tags))
            }),
            $scope.$watch("tags", function(tags) {
                angular.isDefined(tags) && $scope.selected_tags.length >= 0 && ($scope.all_tags = angular.copy(tags),
                    angular.forEach($scope.selected_tags, function(tag) {
                        var selected = Common.findOfId($scope.all_tags, tag.id);
                        selected && (selected.active = !!selected)
                    }))
            })
    }
    ]).service("TopicTagEditorService", ["$rootScope", "Task", "Common", function($rootScope, Task, Common) {
        var onTagCreate = function(project, $scope, tag) {
                if (tag.color && tag.name) {
                    var project_params = Common.projectParams(project)
                        , promise = Task.addTag(project_params, {
                        name: tag.name,
                        color: tag.color
                    });
                    return promise.then(function(result) {
                        var id = result.data;
                        tag.id = id,
                            $scope.$emit("project.tag.create", tag)
                    }),
                        promise
                }
            }
            ;
        return {
            onTagCreate: onTagCreate
        }
    }
    ]),
    angular.module("directives").directive("cgTaskCommentActivity", function() {
        return {
            scope: {
                activity: "=cgTaskCommentActivity",
                editor_id: "@editorId",
                onRemove: "=",
                anchor: "@"
            },
            link: function(scope, element, attrs) {},
            templateUrl: "common/directives/task/comments/tpl/activity.html",
            controller: "TaskCommentActivityController",
            replace: !0
        }
    }).controller("TaskCommentActivityController", ["$scope", "$filter", "Common", "TaskUrgencyService", "Task", "LightMdEditorService", "TaskDeadlineService", "TaskCommentActivityService", function($scope, $filter, Common, TaskUrgencyService, Task, LightMdEditorService, TaskDeadlineService, TaskCommentActivityService) {
        $scope.activity.taskComment && ($scope.activity.taskComment.content = $filter("restyleMarkDownImage")($scope.activity.taskComment.content, 800, 800)),
            TaskCommentActivityService.squashLabelChanges($scope.activity),
            $scope.canRemove = function(owner, user) {
                return owner.global_key === user.global_key
            }
            ,
            $scope.doRemove = function() {
                if (confirm("确认删除该评论？")) {
                    var comment = $scope.activity.taskComment
                        , task = $scope.activity.task
                        , dcPromise = Task.deleteComment({
                        id: task.id,
                        comment_id: comment.id
                    });
                    dcPromise.then(function() {
                        $scope.onRemove(comment)
                    })
                }
            }
            ,
            $scope.atPerson = function(comment) {
                var name = comment.owner.name;
                LightMdEditorService.atPerson(name, $scope.editor_id)
            }
            ,
            $scope.resolveType = function() {
                return "Task" === $scope.activity.target_type ? "commit_refer" === $scope.activity.action ? "commit_refer" : "update_label" === $scope.activity.action ? "update_label" : "add_watcher" === $scope.activity.action || "remove_watcher" === $scope.activity.action ? "update_watcher" : "action" : "MergeRequestBean" === $scope.activity.target_type ? "merge_request" : "comment"
            }
            ,
            $scope.activityClass = function() {
                var is_action = "Task" === $scope.activity.target_type || "MergeRequestBean" === $scope.activity.target_type;
                return {
                    comment: !is_action,
                    action: is_action
                }
            }
            ,
            $scope.actionMsg = function(act) {
                var activity = act || $scope.activity;
                if ("MergeRequestBean" === activity.target_type) {
                    var msg = [activity.action_msg, " 合并请求", "<a href='", activity.merge_request_path, "' target='_blank'>", "#", activity.merge_request_iid, " ", activity.merge_request_title, "</a>"].join("");
                    return msg
                }
                var actions = {
                    update_priority: function(activity) {
                        var priorities = TaskUrgencyService.priorities
                            , msg = ["更新了任务优先级为 [", priorities[activity.task.priority], "]"].join("");
                        return msg
                    },
                    reassign: function(activity) {
                        var name = activity.task.owner.name;
                        return name = activity.task.owner.global_key === activity.user.global_key ? "自己" : name,
                        activity.action_msg + "任务给 " + name
                    },
                    update_deadline: function(activity) {
                        var deadline = TaskDeadlineService.format(activity.task.deadline);
                        return deadline.date ? activity.action_msg + "为" + deadline.date : "移除了任务的截止日期"
                    },
                    update_description: function(activity) {
                        return activity.action_msg
                    },
                    update_label: function(activity) {
                        var msg = activity.action_msg;
                        if (!activity.labels)
                            return msg;
                        var label_msg = "";
                        if (activity.labels.length > 0) {
                            var labels = activity.labels.map(function(label) {
                                return label.name
                            }).join(", ");
                            label_msg = "更新了标签为 - " + labels
                        } else
                            activity.labels_before.length > 0 && (label_msg = "移除了所有标签");
                        return label_msg || msg
                    },
                    add_watcher: function(activity) {
                        return "添加了关注者"
                    },
                    remove_watcher: function(activity) {
                        return "删除了关注者"
                    },
                    "default": function(activity) {
                        return activity.action_msg + "任务"
                    }
                }
                    , action = $scope.activity.action;
                return Common.smartSwitch(actions, action, activity)
            }
            ,
            $scope.labelsMsg = function(labels) {
                return $.map(labels || [], function(label) {
                    return label.name
                }).join(", ")
            }
            ,
            $scope.actionIconClass = function() {
                var activity = $scope.activity
                    , actions = {
                    create: "add",
                    update: "edit",
                    "delete": "remove",
                    finish: "checkmark",
                    reassign: "user",
                    restore: "circle blank",
                    update_priority: "exclamation",
                    update_deadline: "calendar",
                    update_description: "rotate180 align right"
                }
                    , action = $scope.activity.action;
                return Common.smartSwitch(actions, action, activity)
            }
            ,
            $scope.shaPath = function(activity, commit) {
                return [activity.commit.depot.depot_path, "/commit/", commit.sha].join("")
            }
            ,
            $scope.shortSha = function(commit) {
                return commit.sha.substring(0, 7)
            }
    }
    ]).service("TaskCommentActivityService", function() {
        var squashLabelChanges = function(activity) {
                var count = 0;
                if (activity && "update_label" === activity.action && activity.label_histories && (count = activity.label_histories.length) > 0) {
                    var first = activity.label_histories[0]
                        , last = activity.label_histories[count - 1]
                        , labels_before = first.labels_before
                        , labels = last.labels
                        , added = []
                        , deleted = [];
                    angular.forEach(labels_before, function(label) {
                        _.find(labels, {
                            id: label.id
                        }) || deleted.push(label)
                    }),
                        angular.forEach(labels, function(label) {
                            _.find(labels_before, {
                                id: label.id
                            }) || added.push(label)
                        }),
                        last.added = added,
                        last.deleted = deleted
                }
            }
            ;
        return {
            squashLabelChanges: squashLabelChanges
        }
    }),
    angular.module("directives").directive("cgTaskCreator", ["Common", function(Common) {
        return {
            scope: {
                task: "=cgTaskCreator",
                project_name: "=projectName",
                username: "=username",
                members: "=members",
                multiple: "&multiple",
                project_dependency: "=projectDependency",
                insert_image: "=insertImage"
            },
            link: function(scope, element) {
                scope.multiple = scope.multiple();
                var input = element.find("#main-task-input");
                input.on("focus", function() {
                    Common.safeApply.call(scope, function() {
                        scope.show_description = !0
                    })
                })
            },
            templateUrl: "common/directives/task/tpl/creator.html",
            controller: "TaskCreatorController",
            replace: !0
        }
    }
    ]).controller("TaskCreatorController", ["$scope", "TaskCreatorService", "Common", "Task", "TaskItemService", "$rootScope", function($scope, TaskCreatorService, Common, Task, TaskItemService, $rootScope) {
        var resetEditor = angular.noop();
        $scope.show_description = !1,
            $scope.description_focused = !1,
            $scope.$watch("members", function(members) {
                members && $scope.task && ($scope.task.owner = $rootScope.USER)
            }),
            $scope.createTask = function(task) {
                if (task && task.content && !$scope.creating) {
                    $scope.creating = !0;
                    var param = {
                        priority: task.priority,
                        content: task.content,
                        owner_id: task.owner.id,
                        deadline: task.deadline || "",
                        description: task.description || ""
                    }
                        , cPromise = Task.create({
                        username: $scope.username,
                        project_name: $scope.project_name
                    }, param);
                    return cPromise.then(function(result) {
                        $scope.creating = !1;
                        var task = result.data;
                        task.content = Common.revertHtml(task.content),
                            TaskItemService.sendProjectTaskSignal("add", task),
                            $scope.task.content = "",
                            $scope.task.priority = 1,
                            $scope.task.deadline = "",
                            $scope.task.description = "",
                            resetEditor(!0)
                    }),
                        cPromise["catch"](function() {
                            $scope.creating = !1,
                                resetEditor(!1)
                        }),
                        cPromise
                }
            }
            ,
            $scope.onDescriptionChange = function(content, re) {
                $scope.task.description = content,
                    resetEditor = re
            }
            ,
            $scope.hideDescription = function() {
                $scope.show_description = !1
            }
            ,
            $scope.onDescriptionSubmit = function() {
                return $scope.createTask($scope.task)
            }
    }
    ]).service("TaskCreatorService", [function() {}
    ]),
    angular.module("directives").directive("cgTaskDeadline", [function() {
        return {
            scope: {
                task: "=cgTaskDeadline",
                options: "&",
                mode: "&",
                onChange: "=onDeadlineChange"
            },
            templateUrl: function(element, attrs) {
                var mode = attrs.mode;
                return "common/directives/task/tpl/" + (mode ? mode : "deadline") + ".html"
            },
            controller: "TaskDeadlineController",
            replace: !0
        }
    }
    ]).controller("TaskDeadlineController", ["$scope", "TaskDeadlineService", function($scope, TaskDeadlineService) {
        $scope.options = $scope.options(),
            $scope.options = angular.extend({
                hide_on_select: !0,
                quick_button: !0
            }, {}, $scope.options),
            $scope.deadline = "",
            $scope.onDeadlineChange = function(date) {
                (angular.isUndefined($scope.task.deadline) || _.isEmpty($scope.task.deadline)) && _.isEmpty(date) || ($scope.task.deadline = date ? date : "",
                    $scope.deadline = TaskDeadlineService.format(date),
                angular.isFunction($scope.onChange) && $scope.onChange($scope.deadline))
            }
            ,
            $scope.$watch("task.deadline", function(deadline) {
                angular.isDefined(deadline) && ($scope.deadline = TaskDeadlineService.format(deadline))
            })
    }
    ]).service("TaskDeadlineService", [function() {
        var formatDate = function(date) {
                if (!date)
                    return {};
                var today = function() {
                    return moment().startOf("day")
                }
                    , tomorrow = today().add(1, "days")
                    , the_day_after_tomorrow = today().add(2, "days")
                    , yesterday = today().subtract(1, "days")
                    , the_day_before_yesterday = today().subtract(2, "days")
                    , year = moment(date).year()
                    , today_year = moment(today()).year()
                    , same_year = year === today_year
                    , data = {};
                if (today().isAfter(date) && same_year) {
                    moment.lang("zh-cn");
                    var d_date = moment(date).format("MMMDo");
                    if (yesterday.isSame(date))
                        d_date = "昨天";
                    else if (the_day_before_yesterday.isSame(date))
                        d_date = "前天";
                    else {
                        moment.lang("zh-cn");
                        var week = moment(date).week()
                            , today_week = today().week();
                        week === today_week ? d_date = moment(date).format("dddd") : week + 1 === today_week && (d_date = "上周" + moment.langData("zh-cn").weekdaysMin(moment(date)))
                    }
                    data = {
                        date: d_date,
                        clazz: "expired"
                    }
                } else if (today().isSame(date) && same_year)
                    data = {
                        date: "今天",
                        clazz: "today"
                    };
                else if (tomorrow.isSame(date) && same_year)
                    data = {
                        date: "明天",
                        clazz: "tomorrow"
                    };
                else if (the_day_after_tomorrow.isSame(date) && same_year)
                    data = {
                        date: "后天",
                        clazz: "default"
                    };
                else {
                    moment.lang("zh-cn");
                    var week = moment(date).week()
                        , today_week = today().week();
                    if (week === today_week && same_year)
                        d_date = moment(date).format("dddd");
                    else if (week - 1 === today_week && same_year)
                        d_date = "下周" + moment.langData("zh-cn").weekdaysMin(moment(date));
                    else {
                        var format = today_year === year ? "MMMDo" : "YYYY年MMMDo";
                        d_date = moment(date).format(format)
                    }
                    data = {
                        date: d_date,
                        clazz: today_year > year ? "expired" : "default"
                    }
                }
                return data
            }
            ;
        return {
            format: formatDate
        }
    }
    ]),
    angular.module("directives").directive("cgTaskDetailActivity", function() {
        return {
            scope: {
                task: "=task",
                just_show_comment: "=justShowComment",
                project_path: "=projectPath",
                onJustShowComment: "=",
                onCommentRemove: "="
            },
            templateUrl: "common/directives/task/detail/tpl/activity.html",
            controller: "TaskDetailActivityController"
        }
    }).controller("TaskDetailActivityController", ["$scope", "Common", "Activity", "TaskItemService", "$filter", function($scope, Common, Activity, TaskItemService, $filter) {
        var removeWatchers = [];
        $scope.activities = [],
            $scope.loading_activity = !1,
            $scope.$on("project.task.detail.modal.hide", function(event, task_id) {
                $scope.activities = [],
                    $scope.loading_activity = !1
            });
        var loadActivities = function(task_id, last_id) {
                $scope.loading_activity = !0;
                var atPromise = Activity.task({
                    id: task_id,
                    last_id: last_id || 9999999
                });
                return atPromise.then(function(result) {
                    var activities = Common.removeNullItem(result.data || [], "id");
                    $scope.activities = Common.squashActivity(activities, 6e4)
                }),
                    atPromise["finally"](function() {
                        $scope.loading_activity = !1
                    }),
                    atPromise
            }
            ;
        $scope.showActivity = function(activity) {
            return "TaskComment" === activity.target_type && $scope.just_show_comment || !$scope.just_show_comment
        }
            ,
            $scope.checkIconClass = function(done) {
                return {
                    "checkmark sign done": done,
                    "empty checkbox processing": !done
                }
            }
            ,
            $scope.toggleComments = function() {
                return $scope.just_show_comment = !$scope.just_show_comment,
                angular.isFunction($scope.onJustShowComment) && $scope.just_show_comment && $scope.onJustShowComment(),
                    !1
            }
            ,
            $scope.onRemove = function() {
                loadActivities($scope.task_id),
                    $scope.task.comments -= 1
            }
        ;
        var signals = ["update.status", "update.owner", "update.priority", "update.content", "update.deadline", "update.description", "activity.refresh", "tag.remove", "tag.add"];
        angular.forEach(signals, function(signal) {
            var removeWatcher = TaskItemService.onProjectTaskSignal(signal, function($event, task) {
                loadActivities(task.id)
            });
            removeWatchers.push(removeWatcher)
        }),
            $scope.onRemove = function() {
                loadActivities($scope.task.id),
                angular.isFunction($scope.onCommentRemove) && $scope.onCommentRemove()
            }
            ,
            $scope.$on("$destroy", function() {
                removeWatchers.map(function(removeWatcher) {
                    angular.isFunction(removeWatcher) && removeWatcher()
                })
            }),
            $scope.$watch("task", function(task) {
                task && loadActivities(task.id)
            })
    }
    ]),
    angular.module("directives").directive("cgTaskDetail", function() {
        return {
            scope: {
                task_id: "=taskId",
                project_username: "=projectUsername",
                project_name: "=projectName",
                onTaskNoFound: "=",
                onTaskChange: "=",
                edit_desc: "=editDescription",
                just_show_comment: "=justShowComment"
            },
            link: function(scope, element, attrs, ctrl) {
                angular.isDefined(ctrl) && (angular.isFunction(scope.doInit) && ctrl.setModalOnShowCallback(function() {
                    scope.doInit()
                }),
                angular.isFunction(scope.doDestroy) && ctrl.setModalOnHideCallback(function() {
                    scope.doDestroy()
                }))
            },
            require: "^?cgTaskDetailModal",
            controller: "CgTaskDetailController",
            templateUrl: "common/directives/task/detail/tpl/detail.html"
        }
    }).controller("CgTaskDetailController", ["$rootScope", "$scope", "Common", "Task", "Activity", "Project", "TaskItemService", "$timeout", "$q", "PageTitle", function($rootScope, $scope, Common, Task, Activity, Project, TaskItemService, $timeout, $q, PageTitle) {
        var initialed = !1;
        $scope.task = null ,
            $scope.loading = !1,
            $scope.$on("project.task.detail.modal.hide", function(event, task_id) {
                $scope.loading = !1,
                    $scope.task = null ,
                    resetTitle()
            });
        var removeWatchers = []
            , loadTaskDetail = function(task_id) {
            $scope.loading = !0;
            var params = {
                username: $scope.project_username,
                project_name: $scope.project_name
            }
                , query_params = angular.extend(params, {
                id: task_id
            })
                , qPromise = Task.query(query_params);
            return qPromise.then(function(result) {
                $scope.task = result.data,
                    $scope.task.content = Common.revertHtml($scope.task.content),
                    $scope.task.add_description = $scope.edit_desc,
                    $timeout(function() {
                        $rootScope.$broadcast("project.task.description.editor.focus")
                    }),
                $scope.edit_desc && $location.skipReload().search("edit_desc", void 0).replace(),
                    setTaskDetailTitle($scope.task)
            }),
                qPromise["catch"](function(error, result) {
                    result && 1600 === result.code && angular.isFunction($scope.onTaskNoFound) && $scope.onTaskNoFound()
                }),
                qPromise["finally"](function() {
                    $scope.loading = !1,
                        initialed = !0
                }),
                qPromise
        }
            , _ORIGIN_TITLE = window.document.title
            , setTaskDetailTitle = function(task) {
            var title = "任务 - " + Common.ellipsisString($scope.task.content, 20) + " - Coding.net";
            PageTitle.set(title)
        }
            , resetTitle = function() {
            PageTitle.set(_ORIGIN_TITLE)
        }
            , removeTaskWatcher = $scope.$watch("task_id", function(task_id) {
            angular.isNumber(task_id) && initialed && loadTaskDetail(task_id)
        });
        removeWatchers.push(removeTaskWatcher),
            $scope.onComment = function(content) {
                var task = $scope.task
                    , cPromise = Task.comment({
                    id: task.id
                }, {
                    content: content
                });
                return cPromise.then(function() {
                    $scope.task.comments += 1,
                        TaskItemService.sendProjectTaskSignal("activity.refresh", task),
                        $scope.$broadcast("task.detail.change", task)
                }),
                    cPromise
            }
            ,
            $scope.onCommentRemove = function() {
                $scope.task.comments -= 1
            }
        ;
        var signals = ["update.status", "update.owner", "update.priority", "update.content", "update.deadline", "update.description", "tag.add", "tag.remove"];
        angular.forEach(signals, function(signal) {
            var removeWatcher = TaskItemService.onProjectTaskSignal(signal, function($event, task) {
                angular.isFunction($scope.onTaskChange) && $scope.onTaskChange(task)
            });
            removeWatchers.push(removeWatcher)
        }),
            removeWatchers.push(TaskItemService.onProjectTaskSignal("update.content", function($event, task) {
                setTaskDetailTitle(task)
            })),
            $scope.doInit = function() {
                loadTaskDetail($scope.task_id)
            }
            ,
            $scope.doDestroy = function() {
                $scope.task = null ,
                    $scope.edit_desc = !1,
                    $scope.just_show_comment = !1
            }
            ,
            $scope.$on("task.detail.description.change", function(task) {
                $scope.$broadcast("task.detail.change", task)
            }),
            $scope.$on("$destroy", function() {
                removeWatchers.map(function(removeWatcher) {
                    removeWatcher()
                })
            })
    }
    ]),
    angular.module("directives").directive("cgTaskDetailHeader", [function() {
        return {
            scope: {
                task: "=cgTaskDetailHeader",
                members: "=members",
                tags: "=tags"
            },
            templateUrl: "common/directives/task/detail/tpl/header.html",
            controller: "TaskItemController",
            replace: !0
        }
    }
    ]),
    angular.module("directives").directive("cgTaskDetailMenu", function() {
        return {
            scope: {
                task: "="
            },
            templateUrl: "common/directives/task/detail/tpl/menu.html",
            controller: "TaskDetailModalMenuController",
            replace: "true"
        }
    }).controller("TaskDetailModalMenuController", ["$rootScope", "$scope", "TaskUrgencyService", "Common", "TaskItemService", "Task", "Project", function($rootScope, $scope, TaskUrgencyService, Common, TaskItemService, Task, Project) {
        $scope.priorities = TaskUrgencyService.priorities,
            $scope.USER = $rootScope.USER,
            $scope.form = void 0,
            $scope.tags = null ,
            $scope.members = [],
            $scope.$on("project.task.detail.modal.hide", function(event, task_id) {
                $scope.form = void 0,
                    $scope.tags = null ,
                    $scope.members = []
            });
        var removeWatchers = []
            , updateHandlers = {
            owner: function(owner) {
                $scope.task.owner = angular.copy(owner)
            },
            urgency: function(urgency) {
                var priority = urgency.value;
                $scope.task.priority = priority
            },
            deadline: function(value) {
                var deadline = value.form_value || void 0;
                $scope.task.deadline = deadline
            }
        };
        $scope.$on("task.detail.select", function(event, select) {
            var key = select.name;
            $scope.form[key] = select.value,
                Common.smartSwitch(updateHandlers, key, select.value)
        }),
            $scope.toggleWatch = function(task) {
                task.watching = !0;
                var promise = (task.watch ? Task.removeWatch : Task.watch)({
                    id: task.id
                }, {});
                promise.then(function() {
                    task.watch = !task.watch,
                        TaskItemService.sendProjectTaskSignal("update.watch", task)
                }),
                    promise["finally"](function() {
                        task.watching = !1
                    })
            }
            ,
            $scope.removeTask = function(task) {
                if (!$scope.updating && confirm("确认删除该任务？")) {
                    $scope.updating = !0;
                    var params = getProjectParams();
                    params = angular.extend(params, {
                        id: task.id
                    });
                    var rPromise = Task["delete"](params);
                    rPromise.then(function() {
                        TaskItemService.sendProjectTaskSignal("remove", task),
                            $scope.updating = !1
                    }),
                        rPromise["catch"](function() {
                            $scope.updating = !1
                        })
                }
            }
        ;
        var getProjectParams = function() {
                return TaskItemService.projectParams($scope.task.project)
            }
            ;
        $scope.onTagRemove = function(tag, selected_tags) {
            var promise = Task.removeTaskTag($.extend({
                task: $scope.task.id,
                label: tag.id
            }, getProjectParams()), {});
            return promise.then(function() {
                var task = angular.copy($scope.task)
                    , tags = Common.removeOfId(selected_tags, tag.id);
                task.labels = angular.copy(tags),
                    TaskItemService.sendProjectTaskSignal("tag.remove", task)
            }),
                promise
        }
            ,
            $scope.onTagAdd = function(tag, selected_tags) {
                var promise = Task.addTaskTag($.extend({
                    task: $scope.task.id,
                    label: tag.id
                }, getProjectParams()), {});
                return promise.then(function() {
                    var task = angular.copy($scope.task);
                    task.labels = angular.copy(selected_tags),
                        task.labels.push(tag),
                        TaskItemService.sendProjectTaskSignal("tag.add", task)
                }),
                    promise
            }
            ,
            $scope.onTagCreate = function(tag) {
                if (tag.color && tag.name) {
                    var promise = Task.addTag(getProjectParams(), {
                        name: tag.name,
                        color: tag.color
                    });
                    return promise.then(function(result) {
                        var id = result.data;
                        tag.id = id,
                            $scope.$emit("project.tag.create", tag)
                    }),
                        promise
                }
            }
            ,
            $scope.addWatcher = function(member) {
                return Task.watch({
                    id: $scope.task.id,
                    global_key: member.global_key
                }, {}).then(function() {
                    TaskItemService.sendProjectTaskSignal("watcher.add", $scope.task)
                })
            }
            ,
            $scope.removeWatcher = function(member) {
                var p = Task.removeWatch({
                    id: $scope.task.id,
                    global_key: member.global_key
                });
                return p.then(function() {
                    TaskItemService.sendProjectTaskSignal("watcher.remove", $scope.task)
                }),
                    p
            }
        ;
        var loadMembers = function() {
            var params = getProjectParams()
                , promise = Project.membersByKey(params);
            return promise.then(function(result) {
                $scope.members = result.data && result.data.list || []
            }),
                promise
        }
            , loadTaskLabels = function(project_id) {
            var promise = Project.tags({
                id: project_id
            });
            return promise.then(function(result) {
                $scope.tags = result.data || []
            }),
                promise
        }
            , loadTaskWatchers = function(task_id) {
            $scope.loading_watchers = !0;
            var params = getProjectParams()
                , promise = Task.watchers($.extend({
                task: task_id,
                pageSize: 1e3
            }, params));
            promise.then(function(result) {
                $scope.watchers = result.data && result.data.list || []
            }),
                promise["finally"](function() {
                    $scope.loading_watchers = !1
                })
        }
            , watchers_effects = ["watch", "owner"];
        angular.forEach(watchers_effects, function(effect) {
            var removeWatcher = TaskItemService.onProjectTaskSignal("update." + effect, function(scope, task) {
                loadTaskWatchers(task.id)
            });
            removeWatchers.push(removeWatcher)
        }),
            $scope.$watch("task", function(task) {
                angular.isObject(task) && ($scope.form = {
                    project: task.project,
                    owner: task.owner,
                    urgency: {
                        value: task.priority,
                        text: $scope.priorities[task.priority]
                    },
                    deadline: task.deadline,
                    labels: task.labels
                },
                    $scope.task_copy = angular.copy(task),
                    loadTaskWatchers(task.id),
                    loadMembers(),
                    loadTaskLabels(task.project.id))
            }),
            $scope.$on("$destroy", function() {
                removeWatchers.map(function(removeWatcher) {
                    angular.isFunction(removeWatcher) && removeWatcher()
                })
            })
    }
    ]),
    angular.module("directives").directive("cgTaskDetailModal", ["Common", "$timeout", "$document", "ElementResizeListener", "TaskItemService", function(Common, $timeout, $document, ElementResizeListener, TaskItemService) {
        return {
            scope: {
                id: "@id",
                show: "=showModal",
                task: "=task",
                onClose: "=onModalClose",
                onTaskChange: "="
            },
            link: function(scope) {
                var $modal = $("#" + scope.id).show();
                scope.closing = !1;
                var destroyed = !1
                    , duration = 300
                    , refreshModal = _.debounce(function() {
                    var scrollTop = $modal.parent().scrollTop();
                    $modal.css({
                        marginTop: "1em",
                        top: 0
                    }),
                        $modal.modal("refresh"),
                        $modal.parent().scrollTop(scrollTop)
                }, 200);
                $modal.modal({
                    duration: duration,
                    autofocus: !1,
                    onHide: function() {
                        Common.safeApply.call(scope, function() {
                            scope.closing = !0,
                                scope.show = !1,
                            angular.isFunction(scope.onClose) && (scope.onClose(),
                                scope.onHideCallback()),
                                $timeout(function() {
                                    scope.closing = !1
                                }, duration)
                        }),
                            setTimeout(function() {
                                $("body").height("100%"),
                                destroyed && $modal.remove()
                            }, 200),
                            scope.$broadcast("project.task.detail.modal.hide", scope.task.id)
                    },
                    onShow: function() {
                        Common.safeApply.call(scope, function() {
                            scope.closing = !0,
                                $timeout(scope.onShowCallback)
                        })
                    }
                }),
                    scope.$watch("show", function(show) {
                        var active = $modal.modal("is active") && !scope.closing;
                        show !== !0 || active ? show === !1 && active && $modal.modal("hide") : $modal.modal("show")
                    }),
                    scope.hideModal = function() {
                        $modal.modal("hide")
                    }
                    ,
                    TaskItemService.onProjectTaskSignal("remove", function(e, task) {
                        task.id === scope.task.id && $modal.modal("hide");
                    }),
                    ElementResizeListener.on($modal[0], refreshModal),
                    scope.$on("$destroy", function() {
                        ElementResizeListener.off($modal[0], refreshModal),
                            destroyed = !0,
                            $modal.modal("hide")
                    })
            },
            templateUrl: "common/directives/task/detail/tpl/modal.html",
            controller: "TaskDetailModalController",
            replace: !0
        }
    }
    ]).controller("TaskDetailModalController", ["$scope", function($scope) {
        $scope.onModalShow = angular.noop(),
            $scope.onShowCallback = angular.noop(),
            $scope.onHideCallback = angular.noop(),
            $scope.edit_description = !1,
            $scope.just_show_comment = !1,
            this.setModalOnShowCallback = function(callback) {
                angular.isFunction(callback) && ($scope.onShowCallback = callback)
            }
            ,
            this.setModalOnHideCallback = function(callback) {
                angular.isFunction(callback) && ($scope.onHideCallback = callback)
            }
    }
    ]),
    angular.module("app").controller("TaskDetailSelectMemberController", ["$scope", function($scope) {
        var SELECT_FILED_NAME = "owner";
        $scope.owner = void 0,
            $scope.$watch("form.owner", function(owner) {
                (angular.isUndefined($scope.owner) || owner && owner.id !== $scope.owner.id) && ($scope.owner = angular.copy(owner))
            }),
            $scope.selectMember = function(member) {
                $scope.$emit("task.detail.select", {
                    name: SELECT_FILED_NAME,
                    value: member
                })
            }
            ,
            $scope.$watch("owner", function(owner) {
                owner && $scope.form.owner && owner.id !== $scope.form.owner.id && $scope.selectMember(owner)
            })
    }
    ]),
    angular.module("app").controller("TaskDetailSelectProjectController", ["$scope", function($scope) {
        var SELECT_FILED_NAME = "project";
        $scope.selectProject = function(project) {
            $scope.$emit("task.detail.select", {
                name: SELECT_FILED_NAME,
                value: project
            })
        }
    }
    ]),
    angular.module("app").controller("TaskDetailSelectUrgencyController", ["$scope", "TaskUrgencyService", function($scope, TaskUrgencyService) {
        var SELECT_FILED_NAME = "urgency";
        $scope.selectUrgency = function(urgency) {
            $scope.$emit("task.detail.select", {
                name: SELECT_FILED_NAME,
                value: {
                    value: urgency,
                    text: $scope.priorities[urgency]
                }
            })
        }
    }
    ]),
    angular.module("directives").directive("cgTagColorPicker", ["Common", "$document", "$parse", function(Common, $document, $parse) {
        return {
            scope: {
                show: "@cgTagColorPicker",
                tag: "=ngModel",
                can_change_color: "=canChangeColor",
                onColorChange: "="
            },
            link: function(scope, element) {
                scope.$watch("tag.color", function(color) {
                    angular.isDefined(color) && element.css("background-color", color)
                }),
                    element.on("click", function(event) {
                        return $(event.target).is(".tag-color-picker, .tag-color-picker *") ? void event.stopPropagation() : void Common.safeApply.call(scope, function() {
                            scope.show = !scope.show
                        })
                    });
                var hideColorPicker = function(event) {
                        var self = $(event.target);
                        return self.is(".tag-color-picker, .tag-color-picker *") || self.is(element) ? !1 : void Common.safeApply.call(scope, function() {
                            scope.show = !1
                        })
                    }
                    ;
                $document.on("click", hideColorPicker),
                    scope.$on("$destroy", function() {
                        $document.off("click", hideColorPicker)
                    })
            },
            templateUrl: "common/directives/task/issues/tpl/tag_color_picker.html",
            controller: "IssuesTagColorPickerController"
        }
    }
    ]).controller("IssuesTagColorPickerController", ["$scope", "IssuesTagColorPickerService", "TagDropdownService", function($scope, IssuesTagColorPickerService, TagDropdownService) {
        $scope.colors = IssuesTagColorPickerService.colors,
            $scope.changeColor = function(color) {
                $scope.tag.color = color,
                $scope.onColorChange && $scope.onColorChange($scope.tag)
            }
            ,
            $scope.hidePicker = function() {
                $scope.show = !1
            }
            ,
            $scope.randomColor = function() {
                $scope.changeColor(TagDropdownService.randomColor())
            }
    }
    ]).service("IssuesTagColorPickerService", [function() {
        var colors = ["#1b1c1d", "#f2c61f", "#5bbd72", "#3b83c0", "#e07b53", "#564f8a", "#d95c5c", "#00b5ad", "#bababb", "#fbeebb", "#cdebd4", "#c4daec", "#f6d7cb", "#cccadc", "#f4cece", "#b2e9e6"]
            , hex_color_regex = /^#(?:[0-9a-f]{3}){1,2}$/i;
        return {
            colors: colors,
            hex_color_regex: hex_color_regex
        }
    }
    ]),
    angular.module("directives").directive("cgTaskItem", [function() {
        return {
            scope: {
                task: "=cgTaskItem",
                tags: "=tags",
                members: "=members",
                just_show: "=justShow",
                hide_watch: "=hideWatch"
            },
            templateUrl: "common/directives/task/tpl/item.html",
            controller: "TaskItemController",
            transclude: !0,
            replace: !0
        }
    }
    ]).controller("TaskItemController", ["$scope", "TaskItemService", "Task", "Flash", "$rootScope", "$timeout", "Common", "$location", function($scope, TaskItemService, Task, Flash, $rootScope, $timeout, Common, $location) {
        $scope.USER = $rootScope.USER,
            $scope.PROJECT = $rootScope.PROJECT;
        var project_params = {}
            , project = $scope.PROJECT || $scope.task.project;
        project && (project_params = {
            username: project.owner_user_name,
            project_name: project.name
        });
        var STATUS = {
            processing: 1,
            done: 2
        };
        $scope.STATUS = STATUS,
            $scope.updating = !1,
            $scope.task_copy = null ,
            $scope.project_dependency = null ;
        var removeTaskWatcher = $scope.$watch("task", function(task) {
                task && ($scope.task = task,
                    $scope.task.commenting = !1,
                    $scope.task.show_description = !1,
                    $scope.task_copy = angular.copy($scope.task),
                    $scope.project_dependency = task.project,
                    removeTaskWatcher())
            })
            , handleUpdate = function(promise, task, field) {
                promise.then(function() {
                    var tmp = angular.copy(task);
                    tmp.copy = $scope.task_copy,
                        TaskItemService.sendProjectTaskSignal("update." + field, tmp),
                        $scope.task_copy[field] = angular.copy(task[field]),
                    "owner" === field && ($scope.task_copy.owner_id = task.owner_id)
                }),
                    promise["catch"](function() {
                        task[field] = angular.copy($scope.task_copy[field]),
                        "owner" === field && (task.owner_id = $scope.task_copy.owner_id),
                            Flash.warn().send("操作失败！")
                    }),
                    promise["finally"](function() {
                        $scope.updating = !1
                    }),
                    $scope.updating = !0
            }
            ;
        $scope.toggleTaskStatus = function(task, event) {
            if (!$scope.updating) {
                task.status = task.status == STATUS.processing ? STATUS.done : STATUS.processing;
                var usPromise = Task.updateStatus({
                    id: task.id
                }, {
                    status: task.status
                });
                handleUpdate(usPromise, task, "status")
            }
            event && event.stopPropagation()
        }
            ,
            $scope.removeTask = function(task) {
                if (!$scope.updating && confirm("确认删除该任务？")) {
                    $scope.updating = !0;
                    var params = TaskItemService.projectParams($rootScope.PROJECT || task.project);
                    params = angular.extend(params, {
                        id: task.id
                    });
                    var rPromise = Task["delete"](params);
                    rPromise.then(function() {
                        TaskItemService.sendProjectTaskSignal("remove", task),
                            $scope.updating = !1
                    }),
                        rPromise["catch"](function() {
                            $scope.updating = !1
                        })
                }
            }
            ,
            $scope.toggleAddDescription = function(task) {
                task.add_description = !task.add_description,
                    $timeout(function() {
                        $rootScope.$broadcast("project.task.description.editor.focus")
                    })
            }
            ,
            $scope.updateTaskContent = function($event, task) {
                if (task.content !== $scope.task_copy.content && task.editable && !$scope.updating) {
                    var ucPromise = Task.updateContent({
                        id: task.id
                    }, {
                        content: task.content
                    });
                    handleUpdate(ucPromise, task, "content")
                }
                return task.editable = !1,
                $event && $event.preventDefault(),
                    !1
            }
            ,
            $scope.$watch("task.owner", function(owner) {
                if ($scope.task_copy) {
                    var changed = TaskItemService.ownerChanged(owner, $scope.task_copy.owner);
                    if (changed && !$scope.updating && $scope.task.id) {
                        var task = $scope.task;
                        task.owner_id = owner.id;
                        var uoPromise = Task.updateOwner({
                            id: task.id
                        }, {
                            owner_id: owner.id
                        });
                        handleUpdate(uoPromise, task, "owner")
                    }
                }
            });
        var doUpdatePriority = _.debounce(function(priority) {
            if (priority != $scope.task_copy.priority) {
                var task = $scope.task
                    , pPromise = Task.updatePriority({
                    id: task.id
                }, {
                    priority: priority
                });
                handleUpdate(pPromise, task, "priority")
            }
        }, 200);
        $scope.$watch("task.priority", function(priority) {
            !$scope.updating && $scope.task.id && doUpdatePriority(priority)
        }),
            $scope.$watch("task.deadline", function(deadline) {
                if (!$scope.updating && $scope.task_copy.deadline !== deadline && angular.isDefined(deadline)) {
                    var task = $scope.task
                        , udPromise = Task.updateDeadline({
                        id: task.id
                    }, {
                        deadline: deadline
                    });
                    handleUpdate(udPromise, task, "deadline")
                }
            }),
            $scope.setTaskEditable = function(task, $event) {
                $($event.target).is("textarea") && !$scope.just_show && task.status == STATUS.processing && (task.editable = !0)
            }
            ,
            $scope.toggleTaskCommenting = function(task) {
                task.commenting = !task.commenting,
                task.commenting && (task.show_description = !1)
            }
            ,
            $scope.toggleShowDescription = function(task) {
                task.show_description = !task.show_description,
                task.show_description && (task.description = "",
                    task.commenting = !1)
            }
            ,
            $scope.taskClass = function(task) {
                return {
                    done: task.status == STATUS.done,
                    editing: task.editable,
                    commenting: task.commenting && !task.show_description,
                    "show-description": task.show_description && !task.commenting
                }
            }
            ,
            $scope.checkIconClass = function(task) {
                return {
                    "checkmark sign done": task.status == STATUS.done,
                    "empty checkbox processing": task.status == STATUS.processing
                }
            }
            ,
            $scope.showMark = function(task) {
                return $rootScope.USER && task.owner.id !== $rootScope.USER.id
            }
            ,
            $scope.watchClass = function(task) {
                return task.watching ? "loading" : task.watch ? "hide" : "unhide"
            }
            ,
            $scope.watchWords = function(task) {
                return task.watch ? "取消关注" : "关注"
            }
            ,
            $scope.toggleWatch = function(task) {
                task.watching = !0;
                var promise;
                promise = task.watch ? Task.removeWatch({
                    id: task.id,
                    global_key: $rootScope.USER.global_key
                }) : Task.watch({
                    id: task.id,
                    global_key: $rootScope.USER.global_key
                }, {}),
                    promise.then(function() {
                        task.watch = !task.watch,
                            TaskItemService.sendProjectTaskSignal("update.watch", task)
                    }),
                    promise["finally"](function() {
                        task.watching = !1
                    })
            }
            ,
            $scope.onTagRemove = function(tag) {
                var promise = Task.removeTaskTag($.extend({
                    task: $scope.task.id,
                    label: tag.id
                }, project_params), {});
                return promise.then(function() {
                    $scope.task.labels = Common.removeOfId($scope.task.labels, tag.id)
                }),
                    promise
            }
            ,
            $scope.onTagAdd = function(tag) {
                var promise = Task.addTaskTag($.extend({
                    task: $scope.task.id,
                    label: tag.id
                }, project_params), {});
                return promise.then(function() {
                    $scope.task.labels.push(tag),
                        TaskItemService.sendProjectTaskSignal("update.status", $scope.task)
                }),
                    promise
            }
            ,
            $scope.onTagCreate = function(tag) {
                var promise = Task.addTag(project_params, {
                    name: tag.name,
                    color: tag.color
                });
                return promise.then(function(result) {
                    var id = result.data;
                    tag.id = id,
                        $scope.$emit("project.tag.create", tag),
                        TaskItemService.sendProjectTaskSignal("update.status", $scope.task)
                }),
                    promise
            }
            ,
            $scope.onDetailTagSelect = function(tag) {
                $location.path($scope.task.project.project_path + "/tasks/label/" + tag.id)
            }
            ,
            $scope.$on("project.tag.updated", function(event, tag) {
                var changed = Common.findOfId($scope.task.labels, tag.id);
                changed && (changed.color = tag.color,
                    changed.name = tag.name)
            })
    }
    ]).service("TaskItemService", ["$rootScope", function($rootScope) {
        var sendSignal = function(signal, task) {
                var tmp = angular.copy(task)
                    , id = "project.task." + signal;
                $rootScope.$broadcast(id, tmp)
            }
            , onSignal = function(signal, callback) {
                var id = "project.task." + signal;
                return $rootScope.$on(id, callback)
            }
            , ownerChanged = function(before, after) {
                var before = $.makeArray(before)
                    , after = $.makeArray(after);
                if (before.length !== after.length)
                    return !0;
                var tmp = [];
                for (var i in before)
                    tmp[before[i].id] = 1;
                for (var i in after)
                    if (1 != tmp[after[i].id])
                        return !0;
                return !1
            }
            , projectParams = function(project) {
                return {
                    username: project.owner_user_name,
                    project_name: project.name
                }
            }
            , orderMembers = function(members, user_id) {
                var first = null
                    , arr = [];
                return angular.forEach(members || [], function(member) {
                    member && (member.user_id == user_id ? first = member : arr.push(member))
                }),
                    arr = _.sortByOrder(arr, "created_at"),
                    arr.splice(0, 0, first),
                    arr
            }
            ;
        return {
            sendProjectTaskSignal: sendSignal,
            onProjectTaskSignal: onSignal,
            ownerChanged: ownerChanged,
            projectParams: projectParams,
            orderMembers: orderMembers
        }
    }
    ]),
    angular.module("directives").directive("cgTaskSimpleItem", ["TaskDeadlineService", function(TaskDeadlineService) {
        return {
            scope: {
                task: "=cgTaskSimpleItem",
                members: "=members",
                just_show: "=justShow",
                hide_watch: "=hideWatch",
                onSelectTask: "=",
                show_project_name: "=showProjectName"
            },
            link: function(scope) {
                scope.doSelectTask = function(task, event) {
                    angular.isFunction(scope.onSelectTask) && scope.onSelectTask(task),
                    event && event.preventDefault()
                }
                    ,
                    scope.$watch("task", function(task) {
                        task && (scope.formated_deadline = TaskDeadlineService.format(task.deadline))
                    })
            },
            templateUrl: "common/directives/task/tpl/item_simple.html",
            controller: "TaskItemController",
            replace: !0
        }
    }
    ]),
    angular.module("directives").directive("cgTaskShow", [function() {
        return {
            scope: {
                task: "=cgTaskShow"
            },
            link: function(scope) {
                scope.just_show = !0
            },
            templateUrl: "common/directives/task/tpl/just_show.html",
            controller: "TaskItemController"
        }
    }
    ]),
    angular.module("directives").directive("cgTaskMemberPicker", ["Common", "$timeout", "$rootScope", "TaskItemService", function(Common, $timeout, $rootScope, TaskItemService) {
        return {
            scope: {
                selected_user: "=cgTaskMemberPicker",
                members: "=members",
                multiple: "&multiple",
                active: "=",
                direction: "@",
                mode: "@"
            },
            link: function(scope, element) {
                scope.member_users = [];
                var dropdown = $(element).find(".dropdown")
                    , filter_input = $(element).find(".member-picker-filter")
                    , outer = $(element).find(".members-outer");
                scope.$watch("members", function(members) {
                    members && members.length > 0 && ($rootScope.USER && (scope.member_users = TaskItemService.orderMembers(members, $rootScope.USER.id)),
                        scope.member_users = Common.m2u(scope.member_users))
                });
                scope.$watch("active", function() {
                    scope.isEnable() ? dropdown.dropdown({
                        onShow: function() {
                            filter_input.focus(),
                                scope.scrollToSelected(scope.selectedIndex())
                        },
                        onHide: function() {
                            Common.safeApply.call(scope, function() {
                                scope.searchUsers.name = ""
                            })
                        }
                    }) : dropdown.dropdown("destroy")
                });
                var UP = 38
                    , DOWN = 40
                    , ENTER = 13;
                filter_input.on("keydown", function(event) {
                    var code = event.keyCode;
                    code === UP ? (Common.safeApply.call(scope, function() {
                        scope.selectUser("up")
                    }),
                        event.preventDefault()) : code === DOWN ? (Common.safeApply.call(scope, function() {
                        scope.selectUser("down")
                    }),
                        event.preventDefault()) : code === ENTER ? scope.doQuickSelect && Common.safeApply.call(scope, function() {
                        scope.doQuickSelect()
                    }) : $timeout(function() {
                        scope.quick_select_index = -1;
                        var index = scope.selectedIndex();
                        scope.scrollToSelected(index || 0)
                    }, 400)
                }),
                    scope.scrollToSelected = function(index) {
                        var height = outer.find("a.item:eq(0)").outerHeight();
                        outer.scrollTop(index * height),
                            filter_input.focus()
                    }
                    ,
                    scope.hide = function() {
                        dropdown.dropdown("hide")
                    }
            },
            templateUrl: function(element, attrs) {
                var mode = attrs.mode;
                return "common/directives/task/tpl/" + (mode ? mode : "member_picker") + ".html"
            },
            controller: "TaskMemberPickerController",
            replace: !0,
            transclude: !0
        }
    }
    ]).controller("TaskMemberPickerController", ["$scope", "TaskMemberPickerService", "TaskItemService", "Common", "$timeout", "$filter", function($scope, TMPService, TaskItemService, Common, $timeout, $filter) {
        var isMultiple = $scope.isMultiple = $scope.multiple();
        $scope.selected_user = TMPService.initSelectedUser($scope.selected_user, isMultiple),
            $scope.selected_user_copy = angular.copy($scope.selected_user),
            $scope.searchUsers = {
                name: ""
            },
            $scope.quick_select_index = -1;
        var inSelectedUser = function(user_id) {
                return $scope.selected_user ? isMultiple ? !!Common.findOfId($scope.selected_user, user_id) : $scope.selected_user.id === user_id : void 0
            }
            , toggleSingleSelectedUser = function(user) {
                var shouldRemoveIt = inSelectedUser(user.id);
                shouldRemoveIt ? $scope.selected_user = angular.copy($scope.selected_user_copy) : $scope.selected_user = angular.copy(user)
            }
            , toggleMultipleSelectedUser = function(user) {
                var shouldRemoveIt = inSelectedUser(user.id);
                shouldRemoveIt ? $scope.selected_user.length > 1 && ($scope.selected_user = Common.removeOfId($scope.selected_user, user.id)) : ($scope.selected_user.push(user),
                    $scope.selected_user = angular.copy($scope.selected_user))
            }
            , filteredUser = function() {
                var users = $filter("filter")($scope.member_users, $scope.searchUsers.name);
                return users && 1 === users.length && ($scope.quick_select_index = 0,
                    enableSelectMethod()),
                    users
            }
            , selectedUserByIndex = function(index) {
                var user = null
                    , users = filteredUser();
                return angular.forEach(users, function(u, i) {
                    i === index && (user = u)
                }),
                    user
            }
            ;
        $scope.selectedIndex = function() {
            var index = -1
                , users = filteredUser();
            return angular.forEach(users, function(user, i) {
                inSelectedUser(user.id) && (index = i)
            }),
                index
        }
            ,
            $scope.quickSelected = function(index) {
                return -1 !== $scope.quick_select_index && index === $scope.quick_select_index
            }
            ,
            $scope.doQuickSelect = null ;
        var enableSelectMethod = function() {
                $scope.doQuickSelect = function() {
                    var qi = $scope.quick_select_index;
                    if (!(-1 >= qi)) {
                        if (qi === $scope.selectedIndex())
                            return $scope.scrollToSelected(qi),
                                void ($scope.quick_select_index = -1);
                        var user = selectedUserByIndex($scope.quick_select_index);
                        $scope.toggleSelect(user, !0),
                            $scope.quick_select_index = -1
                    }
                }
            }
            ;
        $scope.selectUser = function(upOrDown) {
            var index = -1;
            index = $scope.quick_select_index > -1 ? $scope.quick_select_index : this.selectedIndex();
            var users = filteredUser();
            if (index >= -1) {
                if (index >= -1 && index < users.length - 1 && "down" === upOrDown ? index += 1 : index <= users.length - 1 && index > 0 && "up" === upOrDown && (index -= 1),
                        $scope.quick_select_index = index,
                    $scope.quick_select_index <= -1)
                    return;
                $scope.scrollToSelected(index),
                $scope.doQuickSelect && ($scope.doQuickSelect = null ),
                    enableSelectMethod()
            }
        }
            ,
            $scope.$watch("selected_user", function(selected) {
                if (selected) {
                    var index = $scope.selectedIndex();
                    $scope.scrollToSelected(index || 0),
                        $scope.hide()
                }
            }),
            $scope.toggleSelect = function(user, not_by_click) {
                if (user) {
                    var copy_user = angular.copy(user);
                    isMultiple ? toggleMultipleSelectedUser(copy_user) : toggleSingleSelectedUser(copy_user),
                    not_by_click || ($scope.quick_select_index = -1)
                }
            }
            ,
            $scope.isActive = function(user_id) {
                return inSelectedUser(user_id)
            }
            ,
            $scope.isEnable = function() {
                return "undefined" == typeof $scope.active ? !0 : $scope.active
            }
            ,
            $scope.menuDirection = function() {
                var left = "left" === $scope.direction;
                return {
                    right: !left,
                    left: left
                }
            }
    }
    ]).service("TaskMemberPickerService", [function() {
        var initSelectedUser = function(users, multiple) {
                var tmp = angular.copy(users);
                return multiple ? angular.isArray(tmp) ? tmp : [tmp] : angular.isArray(tmp) ? tmp[0] : tmp
            }
            ;
        return {
            initSelectedUser: initSelectedUser
        }
    }
    ]),
    angular.module("directives").directive("cgTaskProjectPicker", ["Common", "$timeout", function(Common, $timeout) {
        return {
            scope: {
                selected_project: "=cgTaskProjectPicker",
                projects: "=projects",
                active: "=",
                non_cancelable: "=nonCancelable",
                direction: "@",
                mode: "@"
            },
            link: function(scope, element) {
                var dropdown = $(element).find(".dropdown")
                    , filter_input = $(element).find(".project-picker-filter")
                    , outer = $(element).find(".projects-outer");
                scope.$watch("active", function() {
                    scope.isEnable() ? dropdown.dropdown({
                        onShow: function() {
                            filter_input.focus(),
                                scope.scrollToSelected(scope.selectedIndex())
                        },
                        onHide: function() {
                            Common.safeApply.call(scope, function() {
                                scope.searchProjects.name = "",
                                    scope.quick_select_index = -1
                            })
                        }
                    }) : dropdown.dropdown("destroy")
                });
                var UP = 38
                    , DOWN = 40
                    , ENTER = 13
                    , resetSelect = _.debounce(function() {
                    scope.quick_select_index = -1;
                    var index = scope.selectedIndex();
                    scope.scrollToSelected(index || 0)
                }, 200);
                filter_input.on("keydown", function(event) {
                    var code = event.keyCode;
                    code === UP ? (Common.safeApply.call(scope, function() {
                        scope.selectProject("up")
                    }),
                        event.preventDefault()) : code === DOWN ? (Common.safeApply.call(scope, function() {
                        scope.selectProject("down")
                    }),
                        event.preventDefault()) : code === ENTER ? scope.doQuickSelect && Common.safeApply.call(scope, function() {
                        scope.doQuickSelect()
                    }) : resetSelect()
                }),
                    scope.scrollToSelected = function(index) {
                        var height = outer.find("a.item:eq(0)").outerHeight();
                        outer.scrollTop(index * height),
                            filter_input.focus()
                    }
                    ,
                    scope.hide = function() {
                        dropdown.dropdown("hide")
                    }
            },
            templateUrl: function(element, attrs) {
                var mode = attrs.mode;
                return "common/directives/task/tpl/" + (mode ? mode : "project_picker") + ".html"
            },
            controller: "TaskProjectPickerController",
            replace: !0,
            transclude: !0
        }
    }
    ]).controller("TaskProjectPickerController", ["$scope", "TaskProjectPickerService", "TaskItemService", "Common", "$timeout", "$filter", function($scope, TMPService, TaskItemService, Common, $timeout, $filter) {
        $scope.selected_project = TMPService.initSelectedProject($scope.selected_project),
            $scope.selected_project_copy = angular.copy($scope.selected_project),
            $scope.searchProjects = {
                name: ""
            },
            $scope.quick_select_index = -1;
        var inSelectedProject = function(project_id) {
                return $scope.selected_project ? $scope.selected_project.id === project_id : void 0
            }
            , toggleSingleSelectedProject = function(project) {
                var shouldRemoveIt = inSelectedProject(project.id);
                shouldRemoveIt && !$scope.non_cancelable ? $scope.selected_project = angular.copy($scope.selected_project_copy) : $scope.selected_project = angular.copy(project)
            }
            , filteredProject = function() {
                var projects = $filter("searchString")($scope.projects, {
                    key: $scope.searchProjects.name,
                    region: "name"
                });
                return projects && 1 === projects.length && ($scope.quick_select_index = 0,
                    enableSelectMethod()),
                    projects
            }
            , selectedProjectByIndex = function(index) {
                var project = null
                    , projects = filteredProject();
                return angular.forEach(projects, function(u, i) {
                    i === index && (project = u)
                }),
                    project
            }
            ;
        $scope.selectedIndex = function() {
            var index = -1
                , projects = filteredProject();
            return angular.forEach(projects, function(project, i) {
                inSelectedProject(project.id) && (index = i)
            }),
                index
        }
            ,
            $scope.quickSelected = function(index) {
                return -1 !== $scope.quick_select_index && index === $scope.quick_select_index
            }
            ,
            $scope.doQuickSelect = null ;
        var enableSelectMethod = function() {
                $scope.doQuickSelect = function() {
                    var qi = $scope.quick_select_index;
                    if (!(-1 >= qi)) {
                        var project = selectedProjectByIndex($scope.quick_select_index);
                        $scope.toggleSelect(project, !0),
                            $scope.quick_select_index = -1
                    }
                }
            }
            ;
        $scope.selectProject = function(upOrDown) {
            var index = -1;
            index = $scope.quick_select_index > -1 ? $scope.quick_select_index : this.selectedIndex();
            var projects = filteredProject();
            if (index >= -1) {
                if (index >= -1 && index < projects.length - 1 && "down" === upOrDown ? index += 1 : index <= projects.length - 1 && index > 0 && "up" === upOrDown && (index -= 1),
                        $scope.quick_select_index = index,
                    $scope.quick_select_index <= -1)
                    return;
                $scope.scrollToSelected(index),
                $scope.doQuickSelect && ($scope.doQuickSelect = null ),
                    enableSelectMethod()
            }
        }
            ,
            $scope.$watch("selected_project", function(selected) {
                if (selected) {
                    var index = $scope.selectedIndex();
                    $scope.scrollToSelected(index || 0),
                        $scope.hide()
                }
            }),
            $scope.toggleSelect = function(project, not_by_click) {
                if (project) {
                    var copy_project = angular.copy(project);
                    toggleSingleSelectedProject(copy_project),
                    not_by_click || ($scope.quick_select_index = -1)
                }
            }
            ,
            $scope.isActive = function(project_id) {
                return inSelectedProject(project_id)
            }
            ,
            $scope.isEnable = function() {
                return "undefined" == typeof $scope.active ? !0 : $scope.active
            }
            ,
            $scope.menuDirection = function() {
                var left = "left" === $scope.direction;
                return {
                    right: !left,
                    left: left
                }
            }
    }
    ]).service("TaskProjectPickerService", [function() {
        var initSelectedProject = function(projects) {
                var tmp = angular.copy(projects);
                return angular.isArray(tmp) ? tmp[0] : tmp
            }
            ;
        return {
            initSelectedProject: initSelectedProject
        }
    }
    ]),
    angular.module("directives").directive("cgTaskComment", [function() {
        return {
            restrict: "EA",
            scope: {
                task: "=ngModel",
                show: "="
            },
            link: function(scope, element) {
                var input = element.find(".task-comment-form input");
                scope.focusInput = function() {
                    input.focus()
                }
            },
            templateUrl: "common/directives/task/tpl/comment.html",
            controller: "TaskCommentController",
            replace: !0
        }
    }
    ]).controller("TaskCommentController", ["$rootScope", "$scope", "Task", "Common", "BubbleCommentFormService", "TaskCommentService", "$q", function($rootScope, $scope, Task, Common, bcfService, TaskCommentService, $q) {
        var task = $scope.task
            , PAGESIZE = 5;
        $scope.comment = "",
            $scope.commenting = !1,
            $scope.comments = [],
            $scope.loading = !1,
            $scope.loaded = !1;
        var loadComments = function() {
                $scope.comments = [],
                    $scope.loading = !0,
                    $scope.loaded = !1;
                var cPromise = Task.comments({
                    id: task.id,
                    pageSize: PAGESIZE
                });
                cPromise.then(function(result) {
                    $scope.comments = result.data.list || [],
                        commentToText($scope.comments),
                        $scope.task.comments = result.data.totalRow
                }),
                    cPromise["finally"](function() {
                        $scope.loading = !1,
                            $scope.loaded = !0
                    })
            }
            , commentToText = function(comments) {
                angular.forEach(comments, function(comment) {
                    comment.content = TaskCommentService.text(comment.content)
                })
            }
            ;
        $scope.doComment = function(comment) {
            if (comment.length > 0 && !$scope.commenting) {
                $scope.commenting = !0;
                var cPromise = Task.comment({
                    id: task.id
                }, {
                    content: comment
                });
                cPromise.then(function(result) {
                    var cm = result.data;
                    cm.content = TaskCommentService.text(cm.content),
                        $scope.comments.splice(0, 0, cm),
                        $scope.task.comments++,
                        $scope.comment = ""
                }),
                    cPromise["finally"](function() {
                        $scope.commenting = !1
                    })
            }
        }
            ,
            $scope.canRemove = function(comment, user) {
                return comment && comment.owner.id === user.id
            }
            ,
            $scope.remove = function(comment) {
                if (comment && confirm("确认删除该评论？")) {
                    var dcPromise = Task.deleteComment({
                        id: task.id,
                        comment_id: comment.id
                    });
                    dcPromise.then(function() {
                        $scope.comments = Common.removeOfId($scope.comments, comment.id),
                            $scope.task.comments--
                    })
                }
            }
            ,
            $scope.atPerson = function(comment) {
                $scope.comment = bcfService.atPerson(null , $scope.comment, comment.owner.name),
                    $scope.focusInput()
            }
            ,
            $scope.$watch("show", function(show) {
                show ? loadComments() : $scope.comments = []
            }),
            $scope.gotoDetail = function() {
                task.just_show_comment = !0,
                    $rootScope.$broadcast("goto.task.detail", task)
            }
            ,
            $scope.showDetail = function() {
                return $scope.task.comments > $scope.comments.length && $scope.loaded
            }
    }
    ]).service("TaskCommentService", ["$filter", function($filter) {
        var commentToText = function(content, simple_format) {
                var html = $("<span>" + content + "</span>");
                if (html.find("img").each(function() {
                        var self = $(this)
                            , title = self.attr("title") || "图片";
                        self.replaceWith("[" + title + "]")
                    }),
                        html.find("a").each(function() {
                            var self = $(this)
                                , html = self.text();
                            if ($.trim(html)) {
                                var text = html.text && html.text() || html;
                                if (!simple_format) {
                                    var href = self.attr("href");
                                    text = ["[", text, "@@", href, "]"].join("")
                                }
                                self.replaceWith(text)
                            } else
                                self.remove()
                        }),
                        html.find("code").each(function() {
                            var self = $(this);
                            self.replaceWith("[代码]")
                        }),
                        html = $("<div></div>").html(html).html(),
                        html = $filter("htmlToPlainText")(html),
                        !simple_format) {
                    var link_reg = /\[(\S+?)\@{2}(\S+?)\]/gi;
                    html = html.replace(link_reg, function(m, m1, m2, index, origin) {
                        return m1 && m2 ? ['<a href="', m2, '" target="_blank">', m1, "</a>"].join("") : origin
                    })
                }
                return html
            }
            ;
        return {
            text: commentToText
        }
    }
    ]),
    angular.module("directives").directive("cgTaskDescription", ["$filter", "AllImageLoaded", function($filter, AllImageLoaded) {
        return {
            restrict: "EA",
            scope: {
                task: "=ngModel",
                show: "=",
                can_edit: "=canEdit",
                project_dependency: "=projectDependency",
                allLoadingDone: "="
            },
            link: function(scope, element) {
                var removeWatcher = scope.$watch("task.description", function(description) {
                    angular.isDefined(description) && "" !== description && (removeWatcher(),
                        scope.task.description = $filter("restyleMarkDownImage")(scope.task.description, 800, 800))
                });
                scope.$on("project.task.description.editor.focus", function() {
                    var md_editor = element.find("textarea");
                    md_editor.focus()
                }),
                    scope.onImageLoad = function(callback) {
                        AllImageLoaded.init(element.find(".markdown.content"), callback)
                    }
            },
            templateUrl: "common/directives/task/tpl/description.html",
            controller: "TaskDescriptionController",
            replace: !0
        }
    }
    ]).controller("TaskDescriptionController", ["$scope", "$filter", "Task", "TaskItemService", function($scope, $filter, Task, TaskItemService) {
        $scope.loading = !1,
            $scope.editing = !1,
            $scope.loaded = !1,
            $scope.markdown = "";
        var loadDescription = function() {
                $scope.loading = !0,
                    $scope.loaded = !1;
                var promise = Task.description({
                    id: $scope.task.id
                });
                return promise.then(function(result) {
                    $scope.loaded = !0,
                        $scope.task.description = result.data && result.data.description || "",
                        $scope.markdown = result.data && result.data.markdown || "",
                    angular.isFunction($scope.allLoadingDone) && $scope.onImageLoad(function() {
                        $scope.allLoadingDone()
                    })
                }),
                    promise["finally"](function() {
                        $scope.loading = !1
                    }),
                    promise
            }
            ;
        $scope.$watch("task", function(task) {
            task && loadDescription()
        }),
            $scope.$watch("show", function(show) {
                return angular.isUndefined(show) ? void 0 : $scope.task && $scope.task.add_description && $scope.can_edit ? ($scope.editing = !0,
                    $scope.loading = !1,
                    void ($scope.loaded = !0)) : void ($scope.editing = !1)
            }),
            $scope.toggleEditable = function() {
                return $scope.can_edit ? void ($scope.editing = !$scope.editing) : void ($scope.editing = !1)
            }
            ,
            $scope.onDescriptionSubmit = function(description) {
                var promise = Task.updateDescription({
                    id: $scope.task.id
                }, {
                    description: description
                });
                return promise.then(function(result) {
                    $scope.markdown = result.data && result.data.markdown,
                        $scope.task.description = result.data && result.data.description,
                        $scope.task.description = $filter("restyleMarkDownImage")($scope.task.description, 800, 800),
                        $scope.task.has_description = !$scope.task.description || $scope.task.description.length > 0,
                        $scope.editing = !1,
                        $scope.loading = !1,
                        $scope.loaded = !0,
                        TaskItemService.sendProjectTaskSignal("update.description", $scope.task),
                        $scope.$emit("task.detail.description.change", $scope.task)
                }),
                    promise
            }
    }
    ]),
    angular.module("directives").directive("cgTaskUrgency", ["TaskUrgencyService", "Common", function(TaskUrgencyService, Common) {
        var MAX_PRIORITY = 3
            , changeLevel = function(more, scope) {
                var priority = scope.priority;
                return more && MAX_PRIORITY > priority && ("number" == typeof more ? priority += more : priority++),
                !more && priority > 0 && priority--,
                    Common.safeApply.call(scope, function() {
                        scope.priority = priority
                    }),
                    priority
            }
            ;
        return {
            restrict: "EA",
            scope: {
                priority: "=priority"
            },
            link: function(scope, element) {
                scope.priority = void 0 === scope.priority ? 1 : scope.priority;
                var textarea = element.siblings("textarea.urgency, input.urgency")
                    , UP = 38
                    , DOWN = 40
                    , onKeydown = function(event) {
                        var level = 0;
                        return event.keyCode === UP ? (level = changeLevel(!0, scope),
                            scope.onUrgencyChanged(null , level),
                            event.preventDefault(),
                            !1) : event.keyCode === DOWN ? (level = changeLevel(!1, scope),
                            scope.onUrgencyChanged(null , level),
                            event.preventDefault(),
                            !1) : void 0
                    }
                    ;
                textarea.on("keydown", onKeydown),
                    scope.$on("$destroy", function() {
                        textarea.off("keydown", onKeydown)
                    })
            },
            templateUrl: "common/directives/task/tpl/urgency.html",
            controller: "TaskUrgencyController",
            replace: !0
        }
    }
    ]).controller("TaskUrgencyController", ["$scope", "TaskUrgencyService", function($scope, TaskUrgencyService) {
        $scope.onUrgencyChanged = function(event, priority) {
            $scope.priority = priority
        }
            ,
            $scope.priorities = TaskUrgencyService.priorities
    }
    ]).service("TaskUrgencyService", [function() {
        var setSelectionRange = function(input, selectionStart, selectionEnd) {
            if (input.setSelectionRange)
                input.focus(),
                    input.setSelectionRange(selectionStart, selectionEnd);
            else if (input.createTextRange) {
                var range = input.createTextRange();
                range.collapse(!0),
                    range.moveEnd("character", selectionEnd),
                    range.moveStart("character", selectionStart),
                    range.select()
            }
        }
            , setCaretToPos = function(input, pos) {
            setSelectionRange(input, pos, pos)
        }
            , priorities = ["有空再看", "正常处理", "优先处理", "十万火急"];
        return {
            setCaretToPos: setCaretToPos,
            priorities: priorities
        }
    }
    ]),
    angular.module("directives").directive("cgTaskUrgencyHead", [function() {
        return {
            restrict: "EA",
            scope: {
                priority: "="
            },
            link: function(scope, element, attrs) {},
            templateUrl: "common/directives/task/tpl/urgency_head.html",
            replace: !0
        }
    }
    ]),
    angular.module("directives").directive("cgClickableTextareaLink", ["LinkTipService", "$location", "Setting", "Common", function(LinkTipService, $location, Setting, Common) {
        return {
            link: function(scope, element) {
                var id = Common.uuid()
                    , tip = $('<div class="clickable-textarea-link-tip"></div>');
                tip.attr("id", id);
                var linkCollector = function(content) {
                        var links = {};
                        return content ? (content.replace(LinkTipService.LINK_REG, function() {
                            if (arguments.length >= 2)
                                for (var offset = arguments[arguments.length - 2], link = arguments[0], i = offset; i < offset + link.length; i++)
                                    links[i] = link
                        }),
                            links) : links
                    }
                    , onClick = function(event) {
                        var links = linkCollector(this.value)
                            , clickOnLink = links[this.selectionStart];
                        if (clickOnLink && this.selectionEnd === this.selectionStart)
                            if (event.metaKey)
                                window.open(clickOnLink);
                            else {
                                var aLink = $('<a class="gray" href="' + clickOnLink + '" target="_blank"></a>').html("点击打开链接：" + clickOnLink);
                                tip.html(aLink),
                                    element.parent().append(tip),
                                    tip.show()
                            }
                        else
                            onBlur()
                    }
                    , onBlur = function() {
                        setTimeout(function() {
                            $("#" + id).fadeOut()
                        }, 200)
                    }
                    ;
                element.on("click", onClick),
                    element.on("blur", onBlur),
                    scope.$on("$destroy", function() {
                        element.off("click", onClick)
                    })
            }
        }
    }
    ]);
var textareaDirective = angular.module("directives");
textareaDirective.directive("cgTextareaEditable", function() {
    var editable = {
        getCaretPosition: function() {
            return this.selectionStart
        },
        setCaretPosition: function(position) {
            this.selectionStart = position,
                this.selectionEnd = position,
                this.focus()
        },
        hasSelection: function() {
            return this.selectionStart == this.selectionEnd ? !1 : !0
        },
        getSelectedText: function() {
            return this.value.substring(this.selectionStart, this.selectionEnd)
        },
        setSelection: function(start, end) {
            this.selectionStart = start,
                this.selectionEnd = end,
                this.focus()
        },
        insertContent: function(content, fn) {
            var newCaretPosition = this.getCaretPosition() + content.length;
            this.value = this.value || "",
                this.value = this.value.substring(0, this.getCaretPosition()) + content + this.value.substring(this.getCaretPosition(), this.value.length),
                this.setCaretPosition(newCaretPosition),
            fn && fn(this)
        }
    };
    return {
        link: function(scope, element, attrs) {
            angular.extend(element[0].__proto__, editable)
        }
    }
}),
    textareaDirective.directive("cgFileSelector", function() {}),
    angular.module("directives").directive("cgTimeoutInput", ["$timeout", "$parse", "Common", function($timeout, $parse, Common) {
        var ENTERKEY = 13
            , itvs = {}
            , link = function(scope, element, attrs) {
                var enter = !!attrs.enter
                    , time = attrs.time || 300
                    , hash = function(scope, element) {
                        return scope.$id + "_" + element[0].outerHTML
                    }
                    , parent = scope.$parent
                    , fn = $parse(attrs.cgTimeoutInput)
                    , callback = function(e) {
                        var ident = hash(scope, element)
                            , itv = itvs[ident];
                        itv && ($timeout.cancel(itv),
                            delete itvs[ident]),
                            itvs[ident] = itv = $timeout(function() {
                                Common.safeApply.call(scope, function() {
                                    fn(parent)
                                }),
                                    delete itvs[ident]
                            }, time),
                            enter && e.keyCode == ENTERKEY ? (Common.safeApply.call(scope, function() {
                                fn(parent)
                            }),
                                $timeout.cancel(itv),
                                delete itvs[ident]) : e.keyCode == ENTERKEY && ($timeout.cancel(itv),
                                delete itvs[ident])
                    }
                    ;
                element.on("keyup", callback),
                    scope.$on("$destroy", function() {})
            }
            ;
        return {
            link: link,
            scope: {}
        }
    }
    ]),
    angular.module("directives").directive("cgTriggerFormSubmit", ["$parse", "Common", function($parse, Common) {
        return {
            link: function(scope, element, attrs) {
                var id = attrs.cgTriggerFormSubmit
                    , form = $("#" + id);
                if (0 !== form.length) {
                    var submit = function() {
                            form.submit()
                        }
                        ;
                    element.on("click", submit),
                        scope.$on("$destroy", function() {
                            element.off("click", submit),
                                form = void 0,
                                id = void 0
                        })
                }
            }
        }
    }
    ]),
    angular.module("directives").directive("cgTriggerUpload", ["$parse", "Common", function($parse, Common) {
        return {
            link: function(scope, element, attrs) {
                var fn = $parse(attrs.cgTriggerUpload);
                element.on("click", function() {
                    Common.safeApply.call(scope, function() {
                        var callback = function(target) {
                                $(target).trigger("click")
                            }
                            ;
                        fn(scope, {
                            $callback: callback
                        })
                    })
                })
            }
        }
    }
    ]),
    angular.module("filters").filter("bytes", function() {
        return function(bytes, precision) {
            if (isNaN(parseFloat(bytes)) || !isFinite(bytes))
                return "-";
            if (0 === bytes)
                return 0;
            "undefined" == typeof precision && (precision = 1);
            var units = ["bytes", "KB", "MB", "GB", "TB", "PB"]
                , number = Math.floor(Math.log(bytes) / Math.log(1024));
            return (bytes / Math.pow(1024, Math.floor(number))).toFixed(precision) + " " + units[number]
        }
    }),
    angular.module("filters").filter("commitsToArray", function() {
        return function(obj) {
            return obj instanceof Object ? _.map(obj, function(val, key) {
                return Object.defineProperty(val, "$key", {
                    __proto__: null ,
                    value: key
                })
            }) : obj
        }
    }),
    angular.module("filters").filter("createTimeFilter", ["Time", function(Time) {
        return function(date) {
            var today = function() {
                return moment().startOf("day")
            }
                , week = moment(date).week()
                , today_week = today().week()
                , year = moment(date).year()
                , today_year = moment(today()).year()
                , same_year = year === today_year;
            if (week === today_week && same_year)
                return Time.friendly(date);
            var year = moment(date).year()
                , today_year = moment(today()).year()
                , format = today_year === year ? "MMMDo" : "YYYY年MMMDo";
            return moment(date).format(format)
        }
    }
    ]),
    angular.module("filters").filter("distance", function() {
        return function(input, key, precision) {
            (!precision || 1 > precision) && (precision = 3);
            var duration = moment.duration(input, key)
                , langData = moment.langData()
                , output = ""
                , units = {
                yy: duration.years(),
                MM: duration.months(),
                dd: duration.days(),
                hh: duration.hours(),
                mm: duration.minutes()
            };
            if (0 == units.mm)
                output += langData.relativeTime(duration.seconds(), !0, "s");
            else
                for (key in units) {
                    var number = units[key];
                    if (number > 0 && (output += langData.relativeTime(number, !0, key),
                            precision--),
                        0 == precision)
                        break
                }
            return output
        }
    }),
    angular.module("filters").filter("encodeUri", ["$window", function($window) {
        return $window.encodeURIComponent
    }
    ]),
    angular.module("filters").filter("decodeUri", ["$window", function($window) {
        return $window.decodeURIComponent
    }
    ]),
    angular.module("filters").filter("encodeGitUri", ["$window", function($window) {
        return function(str) {
            return $window.encodeURIComponent(str).replace(/%2F/g, "/")
        }
    }
    ]),
    angular.module("filters").filter("friendlyNumber", function() {
        return function(num) {
            return num >= 1e3 && 99999 >= num ? Math.floor(num / 100) / 10 + "K" : num
        }
    }),
    angular.module("filters").filter("highlight", function() {
        return function(text, search, caseSensitive) {
            return text && (search || angular.isNumber(search)) ? (text = text.toString(),
                search = search.toString(),
                caseSensitive ? text.split(search).join('<span class="highlight-match-text">' + search + "</span>") : text.replace(new RegExp(search,"gi"), '<span class="highlight-match-text">$&</span>')) : text
        }
    }),
    angular.module("filters").filter("htmlToPlainText", function() {
        return function(html) {
            return angular.element("<div>" + html + "</div>").text()
        }
    }),
    angular.module("filters").filter("pathToId", ["$window", function($window) {
        return function(str) {
            return str.replace(/[./]/g, "_")
        }
    }
    ]),
    angular.module("filters").filter("percent", function() {
        return function(number, precision) {
            return isNaN(parseFloat(number)) || !isFinite(number) ? "-" : 0 == number ? 0 : ("undefined" == typeof precision && (precision = 2),
            (100 * number).toFixed(precision) + "%")
        }
    }),
    angular.module("filters").filter("projectDescription", [function() {
        return function(input) {
            return input && 0 !== $.trim(input).length || (input = "&lt;该项目未添加简介&gt;"),
                input
        }
    }
    ]),
    angular.module("filters").filter("qcShortVersionFilter", function() {
        return function(version) {
            return version ? version.substring(0, 10) : ""
        }
    }).filter("qcTaskDetailFilter", ["Time", function(Time) {
        return function(task) {
            return "版本号：" + task.task.ref + "\n源码目录：" + task.task.sources + "\n编码：" + task.task.encode + "\n语言：" + task.task.language + "\n创建者：" + task.creator.name + "\n创建于：" + Time.friendly(task.task.created_at)
        }
    }
    ]).filter("qcPermissionUserFilter", function() {
        return function(PROJECT) {
            return PROJECT && PROJECT.current_user_role ? "member" == PROJECT.current_user_role || "admin" == PROJECT.current_user_role || "owner" == PROJECT.current_user_role : !1
        }
    }).filter("qcShortTextFilter", function() {
        return function(text, length) {
            return text ? (text && length > text.length && (length = text.length),
                text = text.substring(0, length),
            text + "...") : void 0
        }
    }),
    angular.module("filters").filter("restyleEmoji", [function() {
        var replaceMonkeyToText = function(ctn) {
                var monkey = ctn.find(".emotion.monkey");
                return 0 === monkey.length ? ctn : (monkey.each(function() {
                    var title = $(this).attr("title")
                        , url = $(this).attr("src");
                    $(this).replaceWith([":", title, "@", url, ": "].join(""))
                }),
                    ctn)
            }
            , splitMonkey = function(text) {
                var reg = /(\:[^\:\ ]+\@\S+\:)/g
                    , monkey = text.split(reg);
                if (1 === monkey.length)
                    return monkey;
                var new_monkey = [];
                $.each(monkey, function(i, m) {
                    0 !== $.trim(m).length && new_monkey.push(m)
                }),
                    monkey = new_monkey,
                    new_monkey = [];
                for (var continual_monkey = [], i = 0; i < monkey.length; i++) {
                    var m = monkey[i];
                    m.match(reg) ? continual_monkey.push(m) : (continual_monkey.length > 0 && (new_monkey.push(continual_monkey),
                        continual_monkey = []),
                        new_monkey.push(m))
                }
                return continual_monkey.length > 0 && new_monkey.push(continual_monkey),
                    new_monkey
            }
            , textToImage = function(text) {
                text = text.substring(1, text.length - 1);
                var params = text.split("@")
                    , title = params[0]
                    , url = params[1]
                    , img = $("<img>").attr("title", title).attr("src", url).addClass("emotion monkey");
                return img
            }
            , continualMonkeyHandler = function(arr) {
                var handlers = {
                    1: function(images) {
                        return $('<div class="two_wrapper"></div>').wrapInner(images)
                    },
                    2: function(images) {
                        return handlers[1](images)
                    },
                    3: function(images) {
                        return $('<div class="three_wrapper"></div>').wrapInner(images)
                    },
                    more: function(images) {
                        return handlers[3](images)
                    }
                }
                    , images = $.map(arr, function(text) {
                    return textToImage(text)
                })
                    , handler = handlers[arr.length]
                    , result = handler && handler(images) || handlers.more(images);
                return $("<div>").html(result)
            }
            , replaceMonkeyToImage = function(monkey) {
                var html = "";
                return $.each(monkey, function(i, m) {
                    html += angular.isArray(m) ? continualMonkeyHandler(m).html() : m
                }),
                    html
            }
            ;
        return function(ctn) {
            var content = $("<div>").html(ctn);
            if (content.text() == ctn)
                return ctn;
            replaceMonkeyToText(content);
            var monkey = splitMonkey(content.html())
                , new_ctn = replaceMonkeyToImage(monkey);
            return new_ctn
        }
    }
    ]),
    angular.module("filters").filter("restyleMarkDownImage", [function() {
        return function(ctn, width, height) {
            width = width ? width : 500,
                height = height ? height : 500;
            var url_reg = /https\:\/\/(\S+)\.qbox\.me\/(\S+)\.(png|jpg|jpeg|gif)(\?(imageView2|imageMogr2|type))?/g
                , preview_reg = /(http|https)\:\/\/[\w\.\:]+\/api\/project\/(\d+)\/files\/(\d+)\/imagePreview(\?(width|type|height))?/g
                , checkImageMogr = function(url) {
                if (!url)
                    return !1;
                var url_arr = url.split("?");
                return url_arr.length > 1
            }
                , checkAttrType = function(ctn, url) {
                var url_index = ctn.indexOf(url)
                    , type = ctn.substring(url_index - 6, url_index);
                return ' src="' !== type && 'href="' !== type
            }
                , new_old = {};
            ctn = ctn.replace(url_reg, function(url) {
                if (checkImageMogr(url) || checkAttrType(ctn, url))
                    return url;
                var ext = url.replace(/.*(png|jpg|jpeg|gif)$/, "$1");
                ext = ext !== url ? "&imageMogr2/format/" + ext : "";
                var tail = "?imageView2/2/w/" + width + "/h/" + height + ext
                    , new_url = url + tail;
                return new_old[new_url] = url,
                    new_url
            }),
                ctn = ctn.replace(preview_reg, function(url) {
                    if (checkImageMogr(url) || checkAttrType(ctn, url))
                        return url;
                    var tail = "?type=2&width=" + width + "&height=" + height
                        , new_url = url + tail;
                    return new_old[new_url] = url,
                        new_url
                });
            var html = $("<div>").html(ctn)
                , links = html.find("a.bubble-markdown-image-link");
            return links.each(function(i) {
                var thiz = $(this)
                    , new_href = thiz.attr("href");
                new_old[new_href] && thiz.attr("href", new_old[new_href].replace(/&amp;/g, "&"))
            }),
                html.html()
        }
    }
    ]),
    angular.module("filters").filter("equalRole", function() {
        return function(bean, role) {
            return bean && bean.current_user_role_id ? bean.current_user_role == role : !1
        }
    }).filter("isRole", function() {
        return function(bean, role) {
            return bean && bean.current_user_role_id ? isNaN(role) ? bean.current_user_role == role : bean.current_user_role_id >= role : !1
        }
    }).filter("advanceRole", function() {
        return function(bean, role) {
            return bean && bean.current_user_role_id && !isNaN(role) ? bean.current_user_role_id > role : !1
        }
    }).filter("isOwnerOf", function() {
        return function(user, bean) {
            return user && bean && (user.user_id || user.id) === (bean.owner_id || bean.owner && bean.owner.id)
        }
    }).filter("isCreatorOf", function() {
        return function(user, bean) {
            return user && bean && (user.user_id || user.id) === (bean.creator_id || bean.creator && bean.creator.id)
        }
    }).filter("isRoleIn", function() {
        return function(role_id, roles) {
            return role_id && roles && roles.indexOf(role_id) >= 0
        }
    }),
    angular.module("filters").filter("searchString", function() {
        var getNameOfItem = function(item, region) {
                return (region && item[region] || item || "").toLowerCase()
            }
            ;
        return function(data, filter) {
            var key = (filter.key || "").toLowerCase()
                , region = filter.region;
            return angular.isArray(data) && key ? (data = _.filter(data, function(item) {
                var name = getNameOfItem(item, region);
                return name.indexOf(key) >= 0
            }),
                data = _.sortBy(data, function(item) {
                    var name = getNameOfItem(item, region);
                    return name.length / key.length
                })) : data
        }
    }),
    angular.module("filters").filter("shortCommitId", ["$window", function($window) {
        return function(str, num) {
            return isNaN(parseInt(num, 10)) && (num = 7),
                str.substring(0, num)
        }
    }
    ]),
    angular.module("filters").filter("testMember", function() {
        return function(arr, test) {
            return "undefined" == typeof arr || null  === arr ? !1 : "undefined" == typeof test || null  === test ? !1 : _.indexOf(arr, test) >= 0 ? !0 : !1
        }
    }),
    angular.module("filters").filter("thumbnail", ["Common", function(Common) {
        return function(src, size) {
            return Common.thumbnail(src, size)
        }
    }
    ]),
    angular.module("filters").filter("unreadCount", function() {
        return function(count, max) {
            return max = max || 99,
                count > max ? max + "+" : count
        }
    }),
    angular.module("app").config(["$routeProvider", "$locationProvider", "UserResolver", "ProjectResolver", "GroupResolver", "DepotResolver", "PermissionResolver", function($routeProvider, $locationProvider, UserResolver, ProjectResolver, GroupResolver, DepotResolver, PermissionResolver) {
        $locationProvider.html5Mode(!0),
            $routeProvider.when("/ui/:region?", {
                templateUrl: "app/ui/index.html",
                controller: "CodingUIController",
                title: "Coding UI"
            }),
            $routeProvider.when("/cg/:region?", {
                templateUrl: "app/cg/index.html",
                controller: "CodingCgController",
                title: "cg 指令"
            }),
            $routeProvider.when("/search", {
                templateUrl: "app/search/search.html",
                controller: "SearchController",
                title: "搜索"
            }),
            $routeProvider.when("/esearch", {
                templateUrl: "app/esearch/search.html",
                controller: "ESearchController",
                title: "搜索"
            }),
            $routeProvider.when("/", {
                resolve: {
                    redirect: function() {
                        location.href = location.host.indexOf("coding.net") >= 0 ? "/" : "/home-desktop.html"
                    }
                }
            }),
            $routeProvider.when("/privacy", {
                templateUrl: "app/about/privacy.html",
                title: "隐私策略"
            }),
            $routeProvider.when("/projects", {
                templateUrl: "app/public_projects/index.html",
                controller: "PublicProjectsIndexController",
                title: "精彩项目"
            }),
            $routeProvider.when("/tags/search/:tag", {
                templateUrl: "app/tags/index.html",
                controller: "TagSearchController",
                title: "个性标签"
            }),
            $routeProvider.when("/terms", {
                templateUrl: "app/about/terms.html",
                title: "服务条款"
            }),
            $routeProvider.when("/about", {
                templateUrl: "app/about/about.html",
                title: "关于 Coding"
            }),
            $routeProvider.when("/jobs", {
                templateUrl: "app/about/jobs.html",
                title: "招贤纳士"
            }),
            $routeProvider.when("/gitsla", {
                templateUrl: "app/about/gitsla.html",
                title: "Git 代码托管服务等级协议"
            }),
            $routeProvider.when("/login", {
                templateUrl: "app/user/account/login.html",
                controller: "LoginController",
                title: "用户登录"
            }),
            $routeProvider.when("/input_two_factor_auth_code", {
                templateUrl: "app/user/account/input_two_factor_auth_code.html",
                controller: "InputTwoFactorAuthCode",
                title: "两步验证动态验证码"
            }),
            $routeProvider.when("/register", {
                templateUrl: "app/user/account/register.html",
                controller: "RegisterController",
                title: "用户注册"
            }),
            $routeProvider.when("/payment/weixin", {
                templateUrl: "app/user/payment/weixin.html",
                controller: "WeixinPaymentController",
                title: "微信支付"
            }),
            $routeProvider.when("/activate", {
                templateUrl: "app/user/account/confirm.html",
                controller: "ConfirmController",
                title: "用户激活"
            }),
            $routeProvider.when("/user/activate", {
                templateUrl: "app/user/account/reactivate.html",
                controller: "ReActivateController",
                title: "重发激活邮件"
            }),
            $routeProvider.when("/resetPassword", {
                templateUrl: "app/user/account/sendResetPassword.html",
                controller: "SendResetPasswordController",
                title: "重置密码"
            }),
            $routeProvider.when("/user/resetPassword", {
                templateUrl: "app/user/account/resetPassword.html",
                controller: "ResetPasswordController",
                title: "重置密码"
            }),
            $routeProvider.when("/reset_email", {
                templateUrl: "app/user/setting/email/reset_email.html",
                controller: "ResetEmailController",
                module: "setting",
                title: "重设邮箱"
            }),
            $routeProvider.when("/supplement", {
                templateUrl: "app/user/account/supplement.html",
                controller: "RegisterController",
                title: "三方登录"
            }),
            $routeProvider.when("/u/:username", {
                templateUrl: "app/user/space/index.html",
                controller: "UserSpaceController",
                title: "个人首页"
            }),
            $routeProvider.when("/u/:username/:region?", {
                templateUrl: "app/user/space/index.html",
                controller: "UserSpaceController",
                title: "个人首页"
            }),
            $routeProvider.when("/u/:username/project/:second_tab?", {
                templateUrl: "app/user/space/index.html",
                controller: "UserSpaceController",
                title: function($routeParams) {
                    return $routeParams.region = "project",
                        "个人首页"
                }
            }),
            $routeProvider.when("/u/:username/activity/:second_tab?", {
                templateUrl: "app/user/space/index.html",
                controller: "UserSpaceController",
                title: function($routeParams) {
                    return $routeParams.region = "activity",
                        "个人首页"
                }
            }),
            $routeProvider.when("/u/:username/bubble/:second_tab?", {
                templateUrl: "app/user/space/index.html",
                controller: "UserSpaceController",
                title: function($routeParams) {
                    return $routeParams.region = "bubble",
                        "个人首页"
                }
            }),
            $routeProvider.when("/u/:username/bubble-topic/:second_tab?", {
                templateUrl: "app/user/space/index.html",
                controller: "UserSpaceController",
                title: function($routeParams) {
                    return $routeParams.region = "bubble-topic",
                        "个人首页"
                }
            }),
            $routeProvider.when("/u/:username/pp/:id", {
                templateUrl: "app/user/tweet/index.html",
                controller: "TweetController",
                title: "冒泡"
            }),
            $routeProvider.when("/pp/topic", {
                templateUrl: "app/tweet_topic/index.html",
                controller: "TweetTopicListController",
                title: "话题墙"
            }),
            $routeProvider.when("/pp/topic/:topic_id[/]?:region?[/]?:tab?", {
                templateUrl: "app/tweet_topic/detail.html",
                controller: "TweetTopicDetailController",
                title: "话题"
            }),
            $routeProvider.when("/pp/:region?", {
                templateUrl: "app/tweet/index.html",
                controller: "TweetListController",
                title: "冒泡"
            }),
            $routeProvider.when("/user", {
                templateUrl: "app/user/index.html",
                resolve: {
                    USER: UserResolver
                },
                controller: "UserController",
                module: "home",
                title: function($q, $rootScope) {
                    var deferred = $q.defer();
                    return $rootScope.$watch("USER", function(user) {
                        user ? deferred.resolve(user.name + " - 个人中心") : user === !1 && deferred.resolve("个人中心")
                    }),
                        deferred.promise
                }
            }).when("/user/projects/:region?", {
                templateUrl: "app/user/projects.html",
                controller: "MyProjectController",
                module: "projects",
                resolve: {
                    USER: UserResolver
                },
                title: function($routeParams) {
                    var region = $routeParams.region
                        , titles = {
                        create: "创建项目",
                        created: "我创建的项目",
                        joined: "我参与的项目",
                        deploy: "已开启演示的项目",
                        watched: "我关注的项目",
                        stared: "我收藏的项目"
                    };
                    return titles[region] || "我的所有项目"
                }
            }),
            $routeProvider.when("/user/relationship/:region?", {
                templateUrl: "app/user/relationship.html",
                controller: "RelationshipController",
                resolve: {
                    USER: UserResolver
                },
                reloadOnSearch: !1,
                module: "relationship",
                title: function($routeParams) {
                    var region = $routeParams.region
                        , titles = {
                        friends: "我关注的人",
                        fans: "我的粉丝"
                    };
                    return titles[region] || "关系中心"
                }
            }).when("/user/activities/:region?", {
                templateUrl: "app/user/activities_wall.html",
                controller: "MyActivitiesController",
                resolve: {
                    USER: UserResolver
                },
                reloadOnSearch: !1,
                module: "activities",
                title: function($routeParams) {
                    var region = $routeParams.region
                        , titles = {
                        tweet: "冒泡",
                        project_update: "项目更新",
                        topic: "项目讨论",
                        task: "任务动态",
                        other: "其他动态"
                    };
                    return titles[region] || "动态"
                }
            });
        var messagePageTitle = function($routeParams) {
                var region = $routeParams.region
                    , titles = {
                    unread: "未读私信"
                };
                return titles[region] || "我的私信"
            }
            ;
        $routeProvider.when("/user/messages/:region?", {
            templateUrl: "app/user/messages.html",
            controller: "MessageController",
            module: "messages",
            resolve: {
                USER: UserResolver
            },
            title: messagePageTitle
        }).when("/user/messages/:region/:user_key", {
            templateUrl: "app/user/messages.html",
            controller: "MessageController",
            module: "messages",
            resolve: {
                USER: UserResolver
            },
            title: messagePageTitle
        }),
            $routeProvider.when("/user/notifications/:region?", {
                templateUrl: "app/user/notifications.html",
                controller: "NotificationController",
                module: "notifications",
                resolve: {
                    USER: UserResolver
                },
                title: function($routeParams) {
                    var region = $routeParams.region
                        , titles = {
                        atme: "@提到我的 - 通知中⼼",
                        comments: "评论 - 通知中心",
                        system: "系统通知 - 通知中心"
                    };
                    return titles[region] || "通知中心"
                }
            }),
            $routeProvider.when("/u/:username/p/:project_name", {
                templateUrl: function() {
                    return "app/project/index.html"
                },
                resolve: {
                    PROJECT: ProjectResolver
                },
                controller: "ProjectController",
                module: "home",
                reloadOnSearch: !1,
                title: function($routeParams) {
                    return "项目主页 - " + $routeParams.project_name
                }
            }).when("/u/:username/p/:project_name/stargazers", {
                templateUrl: "app/git/public_view/stargazers.html",
                resolve: {
                    PROJECT: ProjectResolver
                },
                controller: "StargazersController",
                title: function($routeParams) {
                    return "项目关注者 - " + $routeParams.project_name
                }
            }).when("/u/:username/p/:project_name/watchers", {
                templateUrl: "app/git/public_view/watchers.html",
                resolve: {
                    PROJECT: ProjectResolver
                },
                controller: "WatchersController",
                title: function($routeParams) {
                    return "项目收藏者 - " + $routeParams.project_name
                }
            }).when("/u/:username/p/:project_name/git/branches", {
                templateUrl: "app/git/branch/index.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "BranchIndexController",
                module: "git",
                title: function($routeParams) {
                    var project_name = $routeParams.project_name;
                    return "分支 - Git仓库 - " + project_name
                }
            }).when("/u/:username/p/:project_name/git/branches/create", {
                templateUrl: "app/git/branch/new.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "BranchNewController",
                module: "git",
                title: function($routeParams) {
                    var project_name = $routeParams.project_name;
                    return "创建分支 - Git仓库 - " + project_name
                }
            }).when("/u/:username/p/:project_name/git/pulls", {
                templateUrl: "app/git/pull/index.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "PullRequestIndexController",
                module: "git",
                title: function($routeParams) {
                    var project_name = $routeParams.project_name;
                    return "Pull Request - 代码托管 - " + project_name
                }
            }).when("/u/:username/p/:project_name/git/pulls/:region*?", {
                templateUrl: "app/git/pull/index.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "PullRequestIndexController",
                module: "git",
                title: function($routeParams) {
                    var project_name = $routeParams.project_name;
                    return "Pull Request - 代码托管 - " + project_name
                }
            }).when("/u/:username/p/:project_name/git/pull/create", {
                templateUrl: "app/git/pull/new.html",
                resolve: {
                    USER: UserResolver,
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "PullRequestNewController",
                module: "git",
                title: function($routeParams) {
                    var project_name = $routeParams.project_name;
                    return "创建 Pull Request - 代码托管 - " + project_name
                }
            }).when("/u/:username/p/:project_name/git/pull/:iid", {
                templateUrl: "app/git/pull/show.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "PullRequestShowController",
                module: "git",
                title: "Pull Request - 代码托管"
            }).when("/u/:username/p/:project_name/git/merges", {
                templateUrl: "app/git/merge/index.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "MergeRequestIndexController",
                module: "git",
                title: function($routeParams) {
                    var project_name = $routeParams.project_name;
                    return "Merge Request - 代码托管 - " + project_name
                }
            }).when("/u/:username/p/:project_name/git/merges/:region*?", {
                templateUrl: "app/git/merge/index.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "MergeRequestIndexController",
                module: "git",
                title: function($routeParams) {
                    var project_name = $routeParams.project_name;
                    return "Merge Request - 代码托管 - " + project_name
                }
            }).when("/u/:username/p/:project_name/git/merge/create", {
                templateUrl: "app/git/merge/new.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "MergeRequestNewController",
                module: "git",
                title: function($routeParams) {
                    var project_name = $routeParams.project_name;
                    return "创建 Merge Request - 代码托管 - " + project_name
                }
            }).when("/u/:username/p/:project_name/git/merge/:iid", {
                templateUrl: "app/git/merge/show.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "MergeRequestShowController",
                module: "git",
                title: function($routeParams) {
                    var project_name = $routeParams.project_name;
                    return "Merge Request - 代码托管 - " + project_name
                }
            }).when("/u/:username/p/:project_name/git/merge/:iid/edit", {
                templateUrl: "app/git/merge/edit.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "MergeRequestEditController",
                module: "git",
                title: function($routeParams) {
                    var project_name = $routeParams.project_name;
                    return "Merge Request - 代码托管 - " + project_name
                }
            }).when("/u/:username/p/:project_name/git/tags", {
                templateUrl: "app/git/tag/index.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "TagIndexController",
                module: "git",
                title: function($routeParams) {
                    var project_name = $routeParams.project_name;
                    return "标签 - Git仓库 - " + project_name
                }
            }).when("/u/:username/p/:project_name/git/tags/create", {
                templateUrl: "app/git/tag/new.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "TagNewController",
                module: "git",
                title: function($routeParams) {
                    var project_name = $routeParams.project_name;
                    return "创建标签 - Git仓库 - " + project_name
                }
            }).when("/u/:username/p/:project_name/git/compare/", {
                templateUrl: "app/git/compare.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "CompareController",
                module: "git"
            }).when("/u/:username/p/:project_name/git/compare/:region", {
                templateUrl: "app/git/compare.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "CompareController",
                module: "git"
            }).when("/u/:username/p/:project_name/git/forks", {
                templateUrl: "app/git/public_view/forks.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "ForksController",
                module: "git"
            }).when("/u/:username/p/:project_name/git", {
                templateUrl: "app/git/tree.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "TreeController",
                module: "git",
                title: function($routeParams) {
                    var project_name = $routeParams.project_name;
                    return "Git仓库 - " + project_name
                }
            }).when("/u/:username/p/:project_name/git/blob/:region*?", {
                templateUrl: "app/git/blob.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "BlobController",
                reloadOnSearch: !1,
                module: "git"
            }).when("/u/:username/p/:project_name/git/tree/:region*?", {
                templateUrl: "app/git/tree.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "TreeController",
                reloadOnSearch: !1,
                module: "git"
            }).when("/u/:username/p/:project_name/git/blame/:region*?", {
                templateUrl: "app/git/blame.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "BlameController",
                reloadOnSearch: !1,
                module: "git"
            }).when("/u/:username/p/:project_name/git/commits/:region*?", {
                templateUrl: "app/git/commits.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "CommitsController",
                module: "git"
            }).when("/u/:username/p/:project_name/git/commit/:region*?", {
                templateUrl: "app/git/commit.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "CommitController",
                module: "git"
            }).when("/u/:username/p/:project_name/git/plot[/]?:branch*?", {
                templateUrl: "app/git/plot/plot.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "PlotController",
                module: "git",
                title: function($routeParams) {
                    var project_name = $routeParams.project_name;
                    return "项目网络 - Git仓库 - " + project_name
                }
            }).when("/u/:username/p/:project_name/git/graph[/]?:region*?", {
                templateUrl: "app/git/stat/graph.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "GraphGitController",
                module: "git",
                title: function($routeParams) {
                    var project_name = $routeParams.project_name;
                    return "统计图表 - Git 仓库" + project_name
                }
            }).when("/u/:username/p/:project_name/git/delete/:region*?", {
                templateUrl: "app/git/edit/delete.html",
                resolve: {
                    USER: UserResolver,
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "DeleteFileInGitController",
                module: "git"
            }).when("/u/:username/p/:project_name/git/new/:region*?", {
                templateUrl: "app/git/edit/new.html",
                resolve: {
                    USER: UserResolver,
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    ACE: ["$ocLazyLoad", function($ocLazyLoad) {
                        return $ocLazyLoad.load({
                            name: "ui.ace",
                            files: ["static/ace/ace-generate.js"]
                        })
                    }
                    ],
                    PERMISSION: PermissionResolver
                },
                controller: "NewFileInGitController",
                module: "git"
            }).when("/u/:username/p/:project_name/git/edit/:region*?", {
                templateUrl: "app/git/edit/edit.html",
                resolve: {
                    USER: UserResolver,
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    ACE: ["$ocLazyLoad", function($ocLazyLoad) {
                        return $ocLazyLoad.load({
                            name: "ui.ace",
                            files: ["static/ace/ace-generate.js"]
                        })
                    }
                    ],
                    PERMISSION: PermissionResolver
                },
                controller: "EditFileInGitController",
                reloadOnSearch: !1,
                module: "git"
            }).when("/u/:username/p/:project_name/codeInsight/show/:commit_id[/]?:path*?", {
                templateUrl: "app/codeInsight/show.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "CodeInsightShowController",
                title: function($routeParams) {
                    return "Code Insight - " + $routeParams.project_name
                }
            }).when("/u/:username/p/:project_name/ide", {
                templateUrl: "app/ide/ide.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "IdeController",
                title: function($routeParams) {
                    return "WebIDE - " + $routeParams.project_name
                }
            }).when("/u/:username/p/:project_name/continuousIntegration", {
                templateUrl: "app/ci/ci.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    DEPOT: DepotResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "CiController",
                title: function($routeParams) {
                    return "持续集成 - " + $routeParams.project_name
                }
            }).when("/u/:username/p/:project_name/qc", {
                templateUrl: "app/qc/report.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "ReportController",
                module: "qc",
                title: function($routeParams) {
                    return "概要 - 质量管理 - " + $routeParams.project_name
                }
            }).when("/u/:username/p/:project_name/qc/dashboard", {
                templateUrl: "app/qc/report.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "ReportController",
                module: "qc",
                title: function($routeParams) {
                    return "概要 - 质量管理 - " + $routeParams.project_name
                }
            }).when("/u/:username/p/:project_name/qc/dashboard/:region", {
                templateUrl: "app/qc/report.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "ReportController",
                module: "qc",
                title: function($routeParams) {
                    var region = $routeParams.region;
                    return "概要 - " + (region ? region.substring(0, 7) : "") + " - 质量管理"
                }
            }).when("/u/:username/p/:project_name/qc/issues", {
                templateUrl: "app/qc/issues.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "IssuesController",
                module: "qc",
                title: function($routeParams) {
                    return "问题代码 - 质量管理 - " + $routeParams.project_name
                }
            }).when("/u/:username/p/:project_name/qc/issues/:region", {
                templateUrl: "app/qc/issues.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "IssuesController",
                module: "qc",
                title: function($routeParams) {
                    var region = $routeParams.region;
                    return "问题代码 [" + (region ? region.substring(0, 7) : "") + "] - 质量管理"
                }
            }).when("/u/:username/p/:project_name/qc/duplications", {
                templateUrl: "app/qc/duplications.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "DuplicationsController",
                module: "qc",
                title: function($routeParams) {
                    return "重复代码 - 质量管理 - " + $routeParams.project_name
                }
            }).when("/u/:username/p/:project_name/qc/duplications/:region", {
                templateUrl: "app/qc/duplications.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "DuplicationsController",
                module: "qc",
                title: function($routeParams) {
                    var region = $routeParams.region;
                    return "重复代码 [" + (region ? region.substring(0, 7) : "") + "] - 质量管理"
                }
            }).when("/u/:username/p/:project_name/qc/task/init", {
                templateUrl: "app/qc/init.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "QcInitController",
                module: "qc",
                title: function($routeParams) {
                    return "创建分析任务 - 质量管理 - " + $routeParams.project_name
                }
            });
        var projectTaskPageTitle = function($routeParams) {
            var project_name = $routeParams.project_name
                , region = $routeParams.region
                , user = $routeParams.user
                , titles = ($routeParams.status,
            {
                processing: "进行中的任务 - " + project_name,
                done: "已完成的任务 - " + project_name,
                user: function() {
                    return user + "的任务 - " + project_name
                }()
            });
            return $routeParams.id ? "" : titles[region] || project_name + "项目任务"
        }
            , privateProjectRequired = ["$rootScope", "$q", "$location", function($rootScope, $q, $location) {
            var deferred = $q.defer()
                , removePrivateWatcher = $rootScope.$watch("PROJECT.is_public", function(is_public) {
                angular.isUndefined(is_public) || (removePrivateWatcher(),
                    is_public === !0 ? (deferred.reject(),
                        $location.path($rootScope.PROJECT.project_path)) : is_public === !1 && deferred.resolve())
            });
            return deferred.promise
        }
        ];
        $routeProvider.when("/u/:username/p/:project_name/tasks/:region?", {
            templateUrl: "app/task/index.html",
            resolve: {
                USER: UserResolver,
                PROJECT: ProjectResolver,
                "private": privateProjectRequired
            },
            controller: "TaskController",
            module: "tasks",
            title: projectTaskPageTitle
        }).when("/u/:username/p/:project_name/tasks/:region/:user", {
            templateUrl: "app/task/index.html",
            resolve: {
                USER: UserResolver,
                PROJECT: ProjectResolver,
                "private": privateProjectRequired
            },
            controller: "TaskController",
            module: "tasks",
            title: projectTaskPageTitle
        }).when("/u/:username/p/:project_name/tasks/:region/:user/:status", {
            templateUrl: "app/task/index.html",
            resolve: {
                USER: UserResolver,
                PROJECT: ProjectResolver,
                "private": privateProjectRequired
            },
            controller: "TaskController",
            module: "tasks",
            title: projectTaskPageTitle
        }).when("/u/:username/p/:project_name/task/:id[/]?:show_comment*?", {
            templateUrl: "app/task/index.html",
            resolve: {
                USER: UserResolver,
                PROJECT: ProjectResolver,
                "private": privateProjectRequired
            },
            controller: "TaskController",
            module: "tasks",
            title: projectTaskPageTitle
        });
        var projectTopicPageTitle = function($routeParams) {
                var region = $routeParams.region
                    , project_name = $routeParams.project_name
                    , titles = {
                    hot: "热门讨论 - " + project_name,
                    create: "创建新的讨论 - " + project_name,
                    edit: "编辑讨论 - " + project_name
                };
                return "edit" === $routeParams.watchers ? titles.edit : titles[region] || "所有讨论 - " + project_name
            }
            ;
        $routeProvider.when("/u/:username/p/:project_name/topic[/]?:region?[/]?:watchers?[/]?:tag_name?", {
            templateUrl: "app/topic/index.html",
            resolve: {
                PROJECT: ProjectResolver
            },
            controller: "TopicController",
            module: "topic",
            title: projectTopicPageTitle
        }).when("/u/:username/p/:project_name/attachment/:region?/:action?/:file_id?/:editor_type?", {
            templateUrl: "app/attachment/attachment.html",
            resolve: {
                USER: UserResolver,
                PROJECT: ProjectResolver,
                "private": privateProjectRequired
            },
            controller: "ProjectAttachmentController",
            module: "attachment",
            title: function($routeParams) {
                var project_name = $routeParams.project_name;
                return "项目文档 - " + project_name
            }
        }),
            $routeProvider.when("/u/:username/p/:project_name/paas", {
                templateUrl: "app/paas/show.html",
                resolve: {
                    PROJECT: ProjectResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "PaasShowController",
                module: "paas",
                title: function($routeParams) {
                    return "控制台 - 演示平台 - " + $routeParams.project_name
                }
            }).when("/u/:username/p/:project_name/paas/logs", {
                templateUrl: "app/paas/logs.html",
                resolve: {
                    USER: UserResolver,
                    PROJECT: ProjectResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "PaasLogsController",
                module: "paas",
                title: function($routeParams) {
                    return "应用日志 - 演示平台 - " + $routeParams.project_name
                }
            }).when("/u/:username/p/:project_name/paas/files[/]?:region*?", {
                templateUrl: "app/paas/files.html",
                resolve: {
                    USER: UserResolver,
                    PROJECT: ProjectResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "PaasFilesController",
                module: "paas",
                title: function($routeParams) {
                    return "文件系统 - 演示平台 - " + $routeParams.project_name
                }
            }).when("/u/:username/p/:project_name/paas/vars", {
                templateUrl: "app/paas/vars.html",
                resolve: {
                    USER: UserResolver,
                    PROJECT: ProjectResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "PaasVarsController",
                module: "paas",
                title: function($routeParams) {
                    return "环境变量 - 演示平台 - " + $routeParams.project_name
                }
            }).when("/u/:username/p/:project_name/paas/services", {
                templateUrl: "app/paas/service/show.html",
                resolve: {
                    USER: UserResolver,
                    PROJECT: ProjectResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "PaasServicesController",
                module: "paas",
                title: function($routeParams) {
                    return "服务管理 - 演示平台 - " + $routeParams.project_name
                }
            }).when("/u/:username/p/:project_name/paas/services/:service_id/console", {
                templateUrl: "app/paas/service/console.html",
                resolve: {
                    USER: UserResolver,
                    PROJECT: ProjectResolver,
                    PERMISSION: PermissionResolver
                },
                controller: "PaasServiceConsoleController",
                module: "paas",
                title: function($routeParams) {
                    return "服务控制台 - 演示平台 - " + $routeParams.project_name
                }
            }),
            $routeProvider.when("/1111", {
                templateUrl: "app/marketing/single.html",
                controller: "MarketingSingleController",
                title: function($routeParams) {
                    return "光棍节活动"
                }
            }).when("/app", {
                templateUrl: "app/mobile_app/index.html",
                controller: "MobileAppController",
                title: function($routeParams) {
                    return "Coding Apps"
                }
            }),
            $routeProvider.when("/s/:hash", {
                templateUrl: "app/share/index.html",
                controller: "ShareController",
                title: "资源分享"
            }),
            $routeProvider.otherwise({
                resolve: {
                    redirect: function($location) {
                        var git_repo_regex = /\/(\S.*)\/(\S.*)(\.git)$/
                            , matches = location.pathname.match(git_repo_regex);
                        if (matches && 4 === matches.length) {
                            var username = matches[1]
                                , project_name = matches[2]
                                , path = ["/u/", username, "/p/", project_name, "/git"].join("");
                            return void $location.path(path).replace()
                        }
                        location.href = "/user"
                    }
                }
            })
    }
    ]),
    angular.module("services").service("AllImageLoaded", ["$window", function($window) {
        $window.image_counters = {};
        var counters = {}
            , initCounters = function(element, callback) {
                var images = element.find("img")
                    , ready_id = (new Date).getTime() + "_" + Math.floor(1e5 * Math.random());
                counters[ready_id] || (counters[ready_id] = 0),
                    images.length > 0 ? injectOnLoad(images, ready_id, callback) : callback && callback()
            }
            , injectOnLoad = function(images, ready_id, callback) {
                var checkAllReady = function() {
                        ++counters[ready_id] == images.length && (callback && callback(images),
                            $window.image_counters["onload_" + ready_id] = void 0,
                            counters[ready_id] = void 0)
                    }
                    , handleImageCallbacks = function(image) {
                        image.onload = checkAllReady,
                            image.onerror = onError.bind(null , image)
                    }
                    , onError = function(image) {
                        image.src = "/static/00675e5d336cf413a91edec4a3525894.png",
                            handleImageCallbacks(image)
                    }
                    ;
                angular.forEach(images, handleImageCallbacks)
            }
            ;
        return {
            init: initCounters
        }
    }
    ]);
var api = angular.module("services");
api.factory("User", ["$resource", "Reference", function($resource, Reference) {
    var actions = {
        search: {
            method: "GET",
            url: "/api/user/search",
            params: {
                key: ""
            }
        },
        follow: {
            method: "POST",
            url: "/api/user/follow"
        },
        unfollow: {
            method: "POST",
            url: "/api/user/unfollow"
        },
        current: {
            method: "GET",
            url: "/api/current_user"
        },
        friends: {
            method: "GET",
            url: "/api/user/friends",
            params: {
                page: 1,
                pageSize: 10
            }
        },
        followers: {
            method: "GET",
            url: "/api/user/followers",
            params: {
                page: 1,
                pageSize: 10
            }
        },
        relationships: {
            method: "GET",
            url: "/api/user/relationships"
        },
        sign_up: {
            method: "POST",
            url: "/api/register"
        },
        sign_up_phone: {
            method: "POST",
            url: "/api/account/register/phone"
        },
        captcha: {
            method: "GET",
            url: "/api/captcha/:action"
        },
        request_valid: {
            method: "POST",
            url: "/api/request_valid",
            params: {
                type: 0
            }
        },
        check: {
            method: "GET",
            url: "/api/user/check",
            params: {
                key: ""
            }
        },
        check_phone: {
            method: "GET",
            url: "/api/account/check/phone",
            params: {
                phone: ""
            }
        },
        update_info: {
            method: "POST",
            url: "/api/user/updateInfo"
        },
        update_passwd: {
            method: "POST",
            url: "/api/user/updatePassword"
        },
        get_notification: {
            method: "GET",
            url: "/api/user/getNotificationSettings"
        },
        set_notification: {
            method: "GET",
            url: "/api/user/changeNotificationSetting",
            params: {
                settingType: "",
                settingContent: ""
            }
        },
        get_avatar: {
            method: "GET",
            url: "/api/user/avatar"
        },
        get_gravatar: {
            method: "GET",
            url: "/api/user/gravatar"
        },
        confirm: {
            method: "POST",
            url: "/api/activate"
        },
        confirm_phone: {
            method: "POST",
            url: "/api/account/activate/phone"
        },
        set_phone_password: {
            method: "POST",
            url: "/api/account/activate/phone/set_password"
        },
        send_activate: {
            method: "GET",
            url: "/api/activate",
            params: {
                email: ""
            }
        },
        resend_activate: {
            method: "GET",
            url: "/api/resendactivate",
            params: {
                email: ""
            }
        },
        send_reset_pwd: {
            method: "GET",
            url: "/api/resetPassword",
            params: {
                email: ""
            }
        },
        reset_pwd: {
            method: "POST",
            url: "/api/resetPassword"
        },
        phone_reset_pwd: {
            method: "POST",
            url: "/api/phone/resetPassword"
        },
        sign_in: {
            method: "POST",
            url: "/api/login"
        },
        sign_in_phone: {
            method: "POST",
            url: "/api/account/login/phone"
        },
        sign_out: {
            method: "POST",
            url: "/api/logout"
        },
        byKey: {
            method: "GET",
            url: "/api/user/key/:key"
        },
        by_key: {
            method: "GET",
            url: "/api/user/key/:key/no_cache"
        },
        byName: {
            method: "GET",
            url: "/api/user/name/:name"
        },
        byId: {
            method: "GET",
            url: "/api/user/id/:id"
        },
        unread_count: {
            method: "GET",
            url: "/api/user/unread-count"
        },
        get_at_who: {
            method: "GET",
            url: "/api/user/relationships/all"
        },
        get_at_who_context: {
            method: "GET",
            url: "/api/user/relationships/context"
        },
        invite: {
            method: "POST",
            url: "/api/invite/user"
        },
        inviteMember: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/invite"
        },
        inviteEmail: {
            method: "GET",
            url: "/api/invite/email",
            params: {
                key: ""
            }
        },
        checkInviteKey: {
            method: "GET",
            url: "/api/invite"
        },
        inviteRegister: {
            method: "POST",
            url: "/api/invite/user/register"
        },
        inviteNotLimitedRegister: {
            method: "POST",
            url: "/api/invite/user/email_not_limited/register"
        },
        inviteNotLimited: {
            method: "POST",
            url: "/api/invite/user/not_limited"
        },
        open_friends: {
            method: "GET",
            url: "/api/user/friends/:global_key",
            params: {
                page: 1,
                pageSize: 10
            }
        },
        open_followers: {
            method: "GET",
            url: "/api/user/followers/:global_key",
            params: {
                page: 1,
                pageSize: 10
            }
        },
        oauthBind: {
            method: "POST",
            url: "/api/oauth/github/binding"
        },
        oauthRegister: {
            method: "POST",
            url: "/api/oauth/github/supplement"
        },
        beforeActivate: {
            method: "GET",
            url: "/api/beforeactivate"
        },
        beforeReset: {
            method: "GET",
            url: "/api/before_reset"
        },
        beforeResetPassword: {
            method: "GET",
            url: "/api/beforeresetpwd"
        },
        oauthActivate: {
            method: "POST",
            url: "/api/oauth/github/activate"
        },
        search_by_tag: {
            method: "GET",
            url: "/api/tags/search/:tag"
        },
        refresh_gravatar: {
            method: "POST",
            url: "/api/user/refresh_gravatar"
        },
        refresh_gravatar_status: {
            method: "GET",
            url: "/api/user/refresh_gravatar/status"
        },
        generate_code: {
            method: "POST",
            url: "/api/user/generate_phone_code"
        },
        generate_register_code: {
            method: "POST",
            url: "/api/account/register/generate_phone_code"
        },
        generate_activate_code: {
            method: "POST",
            url: "/api/account/activate/generate_phone_code"
        },
        generate_reset_code: {
            method: "POST",
            url: "/api/account/reset_password/generate_phone_code"
        },
        phone_valid: {
            method: "POST",
            url: "/api/user/validate_phone_code"
        },
        enterprise_plan: {
            method: "GET",
            url: "/api/enterprise_plan"
        }
    }
        , API = $resource("", {}, actions);
    return Reference.agentAll(API, {}, actions)
}
]),
    api.factory("Tweet", ["$resource", "Reference", "User", function($resource, Reference, User) {
        var actions = {
            create: {
                method: "POST"
            },
            "delete": {
                method: "DELETE"
            },
            update: {
                method: "PUT"
            },
            query: {
                method: "GET",
                url: "/api/tweet/:global_key/:tweet_id"
            },
            comment: {
                method: "POST",
                url: "/api/tweet/:id/comment"
            },
            commentOfId: {
                method: "GET",
                url: "/api/tweet/comment/:id"
            },
            comments: {
                method: "GET",
                url: "/api/tweet/:id/comments"
            },
            likes: {
                method: "GET",
                url: "/api/tweet/:id/likes"
            },
            allLikesAndRewards: {
                method: "GET",
                url: "/api/tweet/:id/allLikesAndRewards"
            },
            delete_comment: {
                method: "DELETE",
                url: "/api/tweet/:id/comment/:comment"
            },
            public_tweets: {
                method: "GET",
                url: "/api/tweet/public_tweets",
                params: {
                    last_id: 99999999
                }
            },
            user_public: {
                method: "GET",
                url: "/api/tweet/user_public",
                params: {
                    last_id: 99999999,
                    user_id: 0
                }
            },
            like: {
                method: "POST",
                url: "/api/tweet/:id/like"
            },
            un_like: {
                method: "POST",
                url: "/api/tweet/:id/unlike"
            },
            hot_user: {
                method: "GET",
                url: "/api/tweet/hot_user"
            },
            best_user: {
                method: "GET",
                url: "/api/tweet/best_user"
            },
            last_tweet: {
                method: "GET",
                url: "/api/tweet/last",
                params: {
                    last_id: 99999999
                }
            },
            project_tweet: {
                method: "GET",
                url: "/api/project/:project_id/tweet/:tweet_id"
            },
            project_tweets: {
                method: "GET",
                url: "/api/project/:project_id/tweet",
                params: {
                    last_id: 99999999
                }
            },
            project_tweet_create: {
                method: "POST",
                url: "/api/project/:project_id/tweet"
            },
            project_tweet_delete: {
                method: "DELETE",
                url: "/api/project/:project_id/tweet/:tweet_id"
            },
            project_tweet_comment: {
                method: "POST",
                url: "/api/project/:project_id/tweet/:tweet_id/comment"
            },
            project_tweet_comment_delete: {
                method: "DELETE",
                url: "/api/project/:project_id/tweet/:tweet_id/comment/:id"
            },
            project_tweet_comments: {
                method: "GET",
                url: "/api/project/:project_id/tweet/:tweet_id/comments",
                params: {
                    last_id: 99999999
                }
            },
            reward: {
                method: "POST",
                url: "/api/tweet/:tweet_id/reward"
            },
            prepareReward: {
                method: "GET",
                url: "/api/tweet/:tweet_id/preparereward"
            }
        }
            , API = $resource("/api/tweet/:tweet_id", {}, actions);
        return Reference.agentAll(API, {}, actions)
    }
    ]),
    api.factory("Project", ["Reference", "User", "Task", "$resource", "$rootScope", function(Reference, User, Task, $resource, $rootScope) {
        var actions = {
            create: {
                method: "POST"
            },
            "delete": {
                method: "DELETE"
            },
            update: {
                method: "PUT"
            },
            get_project_icon: {
                method: "GET",
                url: "/api/project/:id/project_icon"
            },
            query: {
                method: "GET",
                params: {
                    project_id: 0
                }
            },
            queryByName: {
                method: "GET",
                url: "/api/user/:username/project/:project_name"
            },
            member: {
                method: "GET",
                url: "/api/project/member/:member_id"
            },
            membersWithType: {
                method: "GET",
                url: "/api/project/:project_id/members/:type"
            },
            updateMemberType: {
                method: "POST",
                url: "/api/project/:project_id/member/:global_key/:type"
            },
            add_member: {
                method: "POST",
                url: "/api/project/:id/members/add",
                params: {
                    users: "0"
                }
            },
            update_alias: {
                method: "POST",
                url: "/api/project/:id/members/update_alias/:user_id"
            },
            members: {
                method: "GET",
                url: "/api/project/:id/members",
                params: {
                    page: 1,
                    pageSize: 200
                }
            },
            membersByKey: {
                method: "GET",
                url: "/api/user/:username/project/:project_name/members",
                params: {
                    page: 1,
                    pageSize: 200
                }
            },
            update_visit: {
                method: "GET",
                url: "/api/project/:id/update_visit"
            },
            activities: {
                method: "GET",
                url: "/api/user/:username/project/:project_name/activities"
            },
            quit: {
                method: "POST",
                url: "/api/project/:id/quit"
            },
            kickout: {
                method: "POST",
                url: "/api/project/:id/kickout/:user_id"
            },
            star: {
                method: "POST",
                url: "/api/user/:username/project/:project_name/star"
            },
            unstar: {
                method: "POST",
                url: "/api/user/:username/project/:project_name/unstar"
            },
            watch: {
                method: "POST",
                url: "/api/user/:username/project/:project_name/watch"
            },
            unwatch: {
                method: "POST",
                url: "/api/user/:username/project/:project_name/unwatch"
            },
            stared: {
                method: "POST",
                url: "/api/user/:username/project/:project_name/stared"
            },
            watched: {
                method: "POST",
                url: "/api/user/:username/project/:project_name/watched"
            },
            stargazers: {
                method: "GET",
                url: "/api/user/:username/project/:project_name/stargazers"
            },
            watchers: {
                method: "GET",
                url: "/api/user/:username/project/:project_name/watchers"
            },
            search_user: {
                method: "GET",
                url: "/api/user/:username/project/:project_name/user/search"
            },
            createGroup: {
                method: "POST",
                url: "/api/project_group"
            },
            moveToGroup: {
                method: "PUT",
                url: "/api/project_group/:group_id/project"
            },
            moveOutGroup: {
                method: "DELETE",
                url: "/api/project_group/:group_id/project"
            },
            updateGroupName: {
                method: "PUT",
                url: "/api/project_group/:group_id"
            },
            tags: {
                method: "GET",
                url: "/api/project/:id/topic/label"
            },
            delTag: {
                method: "DELETE",
                url: "/api/project/:id/topic/label/:label_id"
            },
            addTag: {
                method: "POST",
                url: "/api/project/:id/topic/label"
            },
            updateTag: {
                method: "PUT",
                url: "/api/project/:id/topic/label/:label_id"
            },
            tagged: {
                method: "GET",
                url: "/api/project/:id/label/:label_id"
            },
            transfer: {
                method: "PUT",
                url: "/api/project/:id/transfer_to/:global_key"
            },
            archive: {
                method: "POST",
                url: "/api/project/:id/archive"
            },
            unarchive: {
                method: "POST",
                url: "/api/project/:id/unarchive"
            },
            count: {
                method: "GET",
                url: "/api/project_count"
            }
        }
            , API = $resource("/api/project/:project_id", {}, actions);
        return Reference.agentAll(API, {
            tags: {
                copy: function(result) {
                    return angular.copy(result)
                },
                isArray: !0
            }
        }, actions)
    }
    ]),
    api.factory("Projects", ["$resource", "Reference", function($resource, Reference) {
        var actions = {
            query: {
                method: "GET",
                params: {
                    page: 1,
                    pageSize: 4,
                    type: "all"
                }
            },
            "public": {
                method: "GET",
                url: "/api/user/:username/public_projects",
                params: {
                    page: 1,
                    pageSize: 10,
                    type: "joined"
                }
            },
            "private": {
                method: "GET",
                url: "/api/user/projects/private",
                params: {
                    page: 1,
                    pageSize: 10,
                    type: "joined"
                }
            },
            hot: {
                method: "GET",
                url: "/api/projects/hot"
            },
            recommend: {
                method: "GET",
                url: "/api/projects/recommend"
            },
            pin: {
                method: "POST",
                url: "/api/user/projects/pin"
            },
            pinCancel: {
                method: "DELETE",
                url: "/api/user/projects/pin"
            },
            pinProjects: {
                method: "GET",
                url: "/api/user/projects/pin"
            }
        }
            , API = $resource("/api/projects", {}, actions);
        return Reference.agentAll(API, null , actions)
    }
    ]),
    api.factory("Voucher", ["$resource", "Reference", function($resource, Reference) {
        var actions = {
            check: {
                method: "POST",
                url: "/api/voucher/check"
            },
            captcha: {
                method: "GET",
                url: "/api/voucher/captcha"
            }
        }
            , API = $resource("", {}, actions);
        return Reference.agentAll(API, null , actions)
    }
    ]),
    api.factory("Task", ["$resource", "Reference", "User", function($resource, Reference, User) {
        var actions = {
            create: {
                method: "POST"
            },
            creating: {
                method: "GET",
                url: "/api/task/creating"
            },
            comment: {
                method: "POST",
                url: "/api/task/:id/comment"
            },
            "delete": {
                method: "DELETE",
                url: "/api/user/:username/project/:project_name/task/:id"
            },
            query: {
                method: "GET",
                url: "/api/user/:username/project/:project_name/task/:id"
            },
            description: {
                method: "GET",
                url: "/api/task/:id/description"
            },
            deleteComment: {
                method: "DELETE",
                url: "/api/task/:id/comment/:comment_id"
            },
            comments: {
                method: "GET",
                url: "/api/task/:id/comments",
                params: {
                    pageSize: 5,
                    page: 1
                }
            },
            deleteById: {
                method: "DELETE",
                url: "/api/task/:id"
            },
            updateContent: {
                method: "PUT",
                url: "/api/task/:id/content"
            },
            updateStatus: {
                method: "PUT",
                url: "/api/task/:id/status"
            },
            updateOwner: {
                method: "PUT",
                url: "/api/task/:id/owner"
            },
            updatePriority: {
                method: "PUT",
                url: "/api/task/:id/priority"
            },
            updateDeadline: {
                method: "PUT",
                url: "/api/task/:id/deadline"
            },
            updateDescription: {
                method: "PUT",
                url: "/api/task/:id/description"
            },
            list: {
                method: "GET",
                url: "/api/user/:username/project/:project_name/tasks/:status"
            },
            listOfOwner: {
                method: "GET",
                url: "/api/user/:username/project/:project_name/tasks/user/:owner/:status"
            },
            listOfOwnerSimple: {
                method: "GET",
                url: "/api/project/:id/tasks/user/:owner/:status"
            },
            countOfUser: {
                method: "GET",
                url: "/api/project/:id/task/user/count"
            },
            count: {
                method: "GET",
                url: "/api/project/:id/task/count"
            },
            listOfCurrentUser: {
                method: "GET",
                url: "/api/tasks/:status"
            },
            listOfCurrentUserInProject: {
                method: "GET",
                url: "/api/tasks/project/:project_id/:status"
            },
            listOfCurrentUserWithSearch: {
                method: "GET",
                url: "/api/tasks/search"
            },
            countOfCurrentUser: {
                method: "GET",
                url: "/api/tasks/count"
            },
            countOfCurrentUserInProject: {
                method: "GET",
                url: "/api/tasks/projects/count"
            },
            watch: {
                method: "POST",
                url: "/api/task/:id/user/:global_key/watch"
            },
            removeWatch: {
                method: "DELETE",
                url: "/api/task/:id/user/:global_key/watch"
            },
            tags: {
                method: "GET",
                url: "/api/user/:username/project/:project_name/task/label",
                params: {
                    withCount: !0
                }
            },
            addTag: {
                method: "POST",
                url: "/api/user/:username/project/:project_name/topics/label"
            },
            updateTag: {
                method: "PUT",
                url: "/api/user/:username/project/:project_name/topics/label/:id"
            },
            delTag: {
                method: "DELETE",
                url: "/api/user/:username/project/:project_name/topics/label/:id"
            },
            addTaskTag: {
                method: "POST",
                url: "/api/user/:username/project/:project_name/task/:task/label/:label"
            },
            removeTaskTag: {
                method: "DELETE",
                url: "/api/user/:username/project/:project_name/task/:task/label/:label"
            },
            listOfTag: {
                method: "GET",
                url: "/api/user/:username/project/:project_name/tasks/label/:label"
            },
            watchers: {
                method: "GET",
                url: "/api/user/:username/project/:project_name/task/:task/watchers"
            }
        }
            , API = $resource("/api/user/:username/project/:project_name/task/:id", {}, actions);
        return Reference.agentAll(API, {
            tags: {
                copy: function(result) {
                    return angular.copy(result)
                },
                isArray: !0
            }
        }, actions)
    }
    ]),
    api.factory("Group", ["Reference", "User", "$resource", function(Reference, User, $resource) {
        var actions = {
            create: {
                method: "POST"
            },
            "delete": {
                method: "DELETE"
            },
            update: {
                method: "PUT"
            },
            query: {
                method: "GET",
                params: {
                    group_id: 0
                }
            },
            member: {
                method: "GET",
                url: "/api/group/member/:member_id"
            },
            members: {
                method: "GET",
                url: "/api/group/:group_id/members",
                refer: ["user_id", "inviter_id"]
            }
        }
            , API = $resource("/api/group/:group_id", {}, actions);
        return Reference.agentAll(API, {}, actions)
    }
    ]),
    api.factory("Groups", ["$resource", "Reference", function($resource, Reference) {
        var actions = {
            query: {
                method: "GET",
                params: {
                    page: 1,
                    pageSize: 4
                }
            }
        }
            , API = $resource("/api/groups", {}, actions);
        return Reference.agentAll(API, null , actions)
    }
    ]),
    api.factory("Activity", ["Reference", "$resource", "Group", "Project", "User", "Tweet", "Flash", function(Reference, $resource, Group, Project, User, Tweet, Flash) {
        var actions = {
            last: {
                method: "GET",
                url: "/api/activities/last",
                params: {
                    type: "all",
                    last_id: ""
                }
            },
            user_tweet: {
                method: "GET",
                url: "/api/activities/user_tweet",
                params: {
                    last_id: ""
                }
            },
            tweet_last: {
                method: "GET",
                url: "/api/activities/tweet_last",
                params: {
                    last_id: 9999999
                }
            },
            projects_last: {
                method: "GET",
                url: "/api/activities/projects_last",
                params: {
                    last_id: ""
                }
            },
            watched_projects_last: {
                method: "GET",
                url: "/api/activities/watched_projects_last",
                params: {
                    last_id: ""
                }
            },
            following: {
                method: "GET",
                url: "/api/activity/following",
                params: {
                    last_id: ""
                }
            },
            "delete": {
                method: "DELETE",
                url: "/api/activity/:id"
            },
            projectOfUser: {
                method: "GET",
                url: "/api/project/:project_id/activities/user/:user_id"
            },
            project: {
                method: "GET",
                url: "/api/project/:project_id/activities"
            },
            user_public: {
                method: "GET",
                url: "/api/user/:username/activities_public",
                params: {
                    last_id: ""
                }
            },
            group_last: {
                method: "GET",
                url: "/api/group/:group_id/activities/last"
            },
            task: {
                method: "GET",
                url: "/api/activity/task/:id"
            },
            project_file: {
                method: "GET",
                url: "/api/project/:project_id/file/:file_id/activities"
            }
        }
            , API = $resource("", {}, actions);
        return Reference.agentAll(API, {}, actions)
    }
    ]),
    api.factory("Attachment", ["$resource", "Reference", "User", function($resource, Reference, User) {
        var actions = {
            create: {
                method: "POST",
                url: "/api/project/:id/files/:dir/create",
                params: {
                    dir: 0
                }
            },
            view: {
                method: "GET",
                url: "/api/project/:id/files/:file/view",
                params: {
                    file: 0
                }
            },
            edit: {
                method: "POST",
                url: "/api/project/:id/files/:file/edit",
                params: {
                    file: 0
                }
            },
            files: {
                method: "GET",
                url: "/api/project/:id/files/:dir",
                params: {
                    dir: 0
                }
            },
            "delete": {
                method: "DELETE",
                url: "/api/project/:id/file/delete",
                params: {
                    fileIds: "0"
                }
            },
            folders: {
                method: "GET",
                url: "/api/project/:id/folders"
            },
            all_folders: {
                method: "GET",
                url: "/api/project/:id/all_folders"
            },
            mkdir: {
                method: "POST",
                url: "/api/project/:id/mkdir",
                params: {
                    name: "新建文件夹"
                }
            },
            update_name: {
                method: "PUT",
                url: "/api/project/:id/dir/:dir/name/:name"
            },
            rmdir: {
                method: "DELETE",
                url: "/api/project/:id/rmdir/:dir"
            },
            pdf: {
                method: "GET",
                url: "/api/project/:id/files/:file/pdfPreview",
                params: {
                    page: 1
                }
            },
            count: {
                method: "GET",
                url: "/api/project/:id/folders/filecount"
            },
            all_count: {
                method: "GET",
                url: "/api/project/:id/folders/all_file_count"
            },
            move: {
                method: "PUT",
                url: "/api/project/:id/files/moveto/:folder"
            },
            images: {
                method: "GET",
                url: "/api/project/:id/files/:dir/images"
            },
            image: {
                method: "GET",
                url: "/api/project/:id/files/image/:file",
                params: {
                    folderId: 0,
                    orderByDesc: !0,
                    type: "all"
                }
            },
            images_count: {
                method: "GET",
                url: "/api/project/:id/folders/image_count"
            },
            download_url: {
                method: "GET",
                url: "/api/project/:id/files/:file_id/download_url"
            },
            deleteComment: {
                method: "DELETE",
                url: "/api/project/:id/files/:file_id/comment/:comment_id"
            },
            comment: {
                method: "POST",
                url: "/api/project/:id/files/:file_id/comment"
            },
            histories: {
                method: "GET",
                url: "/api/project/:id/files/:file_id/histories"
            },
            deleteHistory: {
                method: "DELETE",
                url: "/api/project/:id/files/histories/:history_id"
            },
            is_existed: {
                method: "GET",
                url: "/api/project/:id/dir/:dir/files/existed"
            },
            updateRemark: {
                method: "POST",
                url: "/api/project/:id/files/:file_id/histories/:history_id/remark"
            },
            rename: {
                method: "PUT",
                url: "/api/project/:id/files/:file_id/rename"
            },
            view_history: {
                method: "GET",
                url: "/api/project/:id/files/histories/:history_id/view"
            },
            fileStatus: {
                method: "GET",
                url: "/api/project/:id/files/histories/:history_id/status"
            }
        }
            , API = $resource("", {}, actions);
        return Reference.agentAll(API, {
            folders: {
                copy: function(result) {
                    return angular.copy(result)
                },
                isArray: !0
            },
            all_folders: {
                copy: function(result) {
                    return angular.copy(result)
                },
                isArray: !0
            },
            mkdir: {
                copy: function(result) {
                    return angular.copy(result)
                }
            }
        }, actions)
    }
    ]),
    api.factory("Topic", ["$resource", "Reference", "User", "Markdown", function($resource, Reference, User, Markdown) {
        var actions = {
            create: {
                method: "POST",
                url: "/api/project/:id/topic",
                params: {
                    parent: 0
                }
            },
            comment: {
                method: "POST",
                url: "/api/project/:id/topic",
                params: {
                    parent: 999999
                }
            },
            update: {
                method: "PUT",
                url: "/api/topic/:id"
            },
            "delete": {
                method: "DELETE",
                url: "/api/topic/:id"
            },
            list: {
                method: "GET",
                url: "/api/project/:id/topics"
            },
            mine: {
                method: "GET",
                url: "/api/project/:id/topics/me"
            },
            count: {
                method: "GET",
                url: "/api/project/:id/topic/count"
            },
            detail: {
                method: "GET",
                url: "/api/topic/:id",
                params: {
                    type: 0,
                    toc: !0
                }
            },
            comments: {
                method: "GET",
                url: "/api/topic/:id/comments"
            },
            delTag: {
                method: "DELETE",
                url: "/api/topic/:id/label/:label_id"
            },
            addTag: {
                method: "POST",
                url: "/api/topic/:id/label/:label_id"
            },
            watch: {
                method: "POST",
                url: "/api/project/:project/topic/:topic/watch"
            },
            watchers: {
                method: "GET",
                url: "/api/project/:project/topic/:topic/watchers"
            },
            list_watch: {
                method: "GET",
                url: "/api/project/:project/topic/watching"
            },
            addWatcher: {
                method: "POST",
                url: "/api/topic/:id/user/:global_key/watch"
            },
            removeWatcher: {
                method: "DELETE",
                url: "/api/topic/:id/user/:global_key/watch"
            }
        }
            , API = $resource("", {}, actions);
        return Reference.agentAll(API, {}, actions)
    }
    ]),
    api.factory("Markdown", ["$resource", "Reference", function($resource, Reference) {
        var actions = {
            preview: {
                method: "POST",
                url: "/api/markdown/preview",
                params: {
                    toc: !1
                }
            },
            simple_preview: {
                method: "POST",
                url: "/api/markdown/previewNoAt"
            },
            project_preview: {
                method: "POST",
                url: "/api/user/:username/project/:project_name/markdown",
                params: {
                    toc: !0
                }
            },
            project_simple_preview: {
                method: "POST",
                url: "/api/user/:username/project/:project_name/markdownNoAt"
            },
            toc: {
                method: "POST",
                url: "/api/markdown/toc"
            }
        }
            , API = $resource("", {}, actions);
        return Reference.agentAll(API, {}, actions)
    }
    ]),
    api.factory("Notifications", ["$resource", function($resource) {
        var actions = {
            all: {
                method: "GET",
                url: "/api/notification"
            },
            unread: {
                method: "GET",
                url: "/api/notification/unread-list"
            },
            mark_read: {
                method: "POST",
                url: "/api/notification/mark-read"
            },
            unread_count: {
                method: "GET",
                url: "/api/notification/unread-count"
            }
        };
        return $resource({}, {}, actions)
    }
    ]),
    api.factory("Messages", ["$resource", "Reference", function($resource, Reference) {
        var actions = {
            conversations: {
                method: "GET",
                url: "/api/message/conversations"
            },
            conversation: {
                method: "GET",
                url: "/api/message/conversations/:user_key"
            },
            del_conversation: {
                method: "DELETE",
                url: "/api/message/conversations/:id"
            },
            read_conversation: {
                method: "POST",
                url: "/api/message/conversations/:user_key/read"
            },
            send_message: {
                method: "POST",
                url: "/api/message/send"
            },
            del_message: {
                method: "DELETE",
                url: "/api/message/:id"
            },
            clear_all: {
                method: "DELETE",
                url: "/api/message"
            },
            unread_count: {
                method: "GET",
                url: "/api/message/unread-count"
            },
            last: {
                method: "GET",
                url: "/api/message/conversations/:user_key/last",
                params: {
                    id: 0
                }
            }
        }
            , API = $resource({}, {}, actions);
        return Reference.agentAll(API, {}, actions)
    }
    ]),
    api.factory("Options", ["$resource", function($resource) {
        var actions = {
            jobs: {
                method: "GET",
                url: "/api/options/jobs"
            }
        };
        return $resource({}, {}, actions)
    }
    ]),
    api.factory("Tags", ["$resource", "Reference", function($resource, Reference) {
        var actions = {
            user_tag_list: {
                method: "GET",
                url: "/api/tagging/user_tag_list"
            }
        }
            , API = $resource("", {}, actions);
        return Reference.agentAll(API, {}, actions)
    }
    ]),
    api.factory("Search", ["$resource", "Reference", function($resource, Reference) {
        var actions = {
            quick: {
                method: "GET",
                url: "/api/search/quick"
            },
            ofProject: {
                method: "GET",
                url: "/api/u/:username/p/:project_name/search"
            },
            moreProjects: {
                method: "GET",
                url: "/api/search/quick/projects"
            },
            moreProjectTopics: {
                method: "GET",
                url: "/api/search/quick/project_topics"
            },
            moreTasks: {
                method: "GET",
                url: "/api/search/quick/tasks"
            },
            moreTweets: {
                method: "GET",
                url: "/api/search/quick/tweets"
            },
            moreFriends: {
                method: "GET",
                url: "/api/search/quick/friends"
            },
            resource: {
                method: "GET",
                url: "/api/u/:username/p/:project_name/resource/search"
            },
            resourceByCode: {
                method: "GET",
                url: "/api/u/:username/p/:project_name/resource/:code"
            }
        }
            , API = $resource("", {}, actions);
        return Reference.agentAll(API, {}, actions)
    }
    ]),
    api.factory("ESearch", ["$resource", "Reference", function($resource, Reference) {
        var actions = {
            ofProject: {
                method: "GET",
                url: "/api/esearch/in-project?q=:q+project::project&types=:types",
                params: {
                    q: "",
                    project: ""
                }
            },
            all: {
                method: "GET",
                url: "/api/esearch/all?q=:q&types=:types",
                params: {
                    q: ""
                }
            },
            moreProjects: {
                method: "GET",
                url: "/api/esearch/project?q=:q",
                params: {
                    q: ""
                }
            },
            moreTopics: {
                method: "GET",
                url: "/api/esearch/topic?q=:q",
                params: {
                    q: ""
                }
            },
            moreTasks: {
                method: "GET",
                url: "/api/esearch/task?q=:q",
                params: {
                    q: ""
                }
            },
            moreTweets: {
                method: "GET",
                url: "/api/esearch/tweet?q=:q",
                params: {
                    q: ""
                }
            },
            moreFiles: {
                method: "GET",
                url: "/api/esearch/file?q=:q",
                params: {
                    q: ""
                }
            },
            moreMRs: {
                method: "GET",
                url: "/api/esearch/mr?q=:q",
                params: {
                    q: ""
                }
            },
            morePRs: {
                method: "GET",
                url: "/api/esearch/pr?q=:q",
                params: {
                    q: ""
                }
            },
            moreFriends: {
                method: "GET",
                url: "/api/esearch/user?q=:q",
                params: {
                    q: ""
                }
            }
        }
            , API = $resource("", {}, actions);
        return Reference.agentAll(API, {}, actions)
    }
    ]),
    api.factory("PublicProjects", ["$resource", function($resource) {
        var actions = {
            public_projects: {
                method: "GET",
                url: "/api/public/all"
            }
        };
        return $resource({}, {}, actions)
    }
    ]),
    api.factory("AdBanner", ["$resource", "Reference", function($resource, Reference) {
        var actions = {
            get: {
                method: "GET",
                url: "/api/banner/:id"
            }
        }
            , API = $resource("", {}, actions);
        return API
    }
    ]),
    api.factory("OAuth", ["$resource", "Reference", function($resource, Reference) {
        var actions = {
            github_email: {
                method: "GET",
                url: "/api/oauth/github/callback"
            },
            platforms: {
                method: "GET",
                url: "/api/oauth/user/platforms"
            },
            unbind: {
                method: "POST",
                url: "/api/oauth/:platform/unbind"
            }
        }
            , API = $resource("", {}, actions);
        return Reference.agentAll(API, {}, actions)
    }
    ]),
    api.factory("Customer", ["$resource", "Reference", function($resource, Reference) {
        var actions = {
            list: {
                method: "GET",
                url: "/api/oauth/applications",
                params: {
                    pageSize: 9999
                }
            },
            save: {
                method: "POST",
                url: "/api/oauth/applications"
            },
            info: {
                method: "GET",
                url: "/api/oauth/applications/:application_id"
            },
            update: {
                method: "PUT",
                url: "/api/oauth/applications/:application_id"
            },
            "delete": {
                method: "DELETE",
                url: "/api/oauth/applications/:application_id"
            },
            user_count: {
                method: "GET",
                url: "/api/oauth/applications/:application_id/user_count"
            },
            reset_secret: {
                method: "PUT",
                url: "/api/oauth/applications/:application_id/key"
            },
            revoke_users: {
                method: "DELETE",
                url: "/api//oauth/applications/:application_id/tokens/revoke"
            },
            authorized: {
                method: "GET",
                url: "/api/oauth/applications/authorized"
            },
            revoke: {
                method: "POST",
                url: "/api/oauth/applications/:application_id/access/revoke"
            }
        }
            , API = $resource("", {}, actions);
        return Reference.agentAll(API, {}, actions)
    }
    ]),
    api.factory("WallPaper", ["$resource", "Reference", function($resource, Reference) {
        var actions = {
            groups: {
                method: "GET",
                url: "/api/wallpaper/groups",
                params: {
                    page: 1,
                    pageSize: 999
                }
            },
            wall_paper: {
                method: "GET",
                url: "/api/wallpaper/wallpapers",
                params: {
                    page: 1,
                    pageSize: 999
                }
            }
        }
            , API = $resource("", {}, actions);
        return Reference.agentAll(API, {}, actions)
    }
    ]),
    api.factory("Email", ["$resource", "Reference", function($resource, Reference) {
        var actions = {
            check_email: {
                method: "POST",
                url: "/api/email/check"
            },
            activate_email: {
                method: "POST",
                url: "/api/email/activate"
            },
            reset_email: {
                method: "PUT",
                url: "/api/email/reset"
            }
        }
            , API = $resource("", {}, actions);
        return Reference.agentAll(API, {}, actions)
    }
    ]),
    api.factory("TweetTopic", ["$resource", "Reference", function($resource, Reference) {
        var actions = {
            hot_topic: {
                method: "GET",
                url: "/api/tweet_topic/hot"
            },
            marketing_ad: {
                method: "GET",
                url: "/api/tweet_topic/marketing_ad"
            },
            joined: {
                method: "GET",
                url: "/api/user/:global_key/tweet_topic/joined"
            },
            watched: {
                method: "GET",
                url: "/api/user/:global_key/tweet_topic/watched"
            },
            detail: {
                method: "GET",
                url: "/api/tweet_topic/:id"
            },
            watch: {
                method: "POST",
                url: "/api/tweet_topic/:id/watch"
            },
            unwatch: {
                method: "DELETE",
                url: "/api/tweet_topic/:id/unwatch"
            },
            tweets: {
                method: "GET",
                url: "/api/public_tweets/topic/:id"
            },
            hot_joined: {
                method: "GET",
                url: "/api/tweet_topic/:id/hot_joined"
            },
            watchers: {
                method: "GET",
                url: "/api/tweet_topic/:id/watched"
            },
            joins: {
                method: "GET",
                url: "/api/tweet_topic/:id/joined"
            },
            top_tweet: {
                method: "GET",
                url: "/api/public_tweets/topic/:id/top"
            },
            auto_complete: {
                method: "GET",
                url: "/api/tweet_topic/topic/auto_complete"
            },
            default_topics: {
                method: "GET",
                url: "/api/tweet_topic/defaults"
            }
        }
            , API = $resource("", {}, actions);
        return Reference.agentAll(API, {}, actions)
    }
    ]),
    api.factory("PartnerLink", ["$resource", "Reference", function($resource, Reference) {
        var actions = {
            partners: {
                method: "GET",
                url: "/api/partner/link",
                params: {
                    page: 1,
                    pageSize: 999
                }
            }
        }
            , API = $resource("", {}, actions);
        return Reference.agentAll(API, {}, actions)
    }
    ]),
    api.factory("TwoFactorAuth", ["$resource", "Reference", function($resource, Reference) {
        var actions = {
            method: {
                method: "GET",
                url: "/api/user/2fa/method"
            },
            new_totp_info: {
                method: "GET",
                url: "/api/user/2fa/totp"
            },
            open_totp: {
                method: "POST",
                url: "/api/user/2fa/totp"
            },
            close_two_factor_auth: {
                method: "DELETE",
                url: "/api/user/2fa"
            },
            check_two_factor_auth_code: {
                method: "POST",
                url: "/api/check_two_factor_auth_code"
            }
        }
            , API = $resource("", {}, actions);
        return Reference.agentAll(API, {}, actions)
    }
    ]),
    api.factory("SecretQuestion", ["$resource", "Reference", function($resource, Reference) {
        var actions = {
            get_secret_question: {
                method: "GET",
                url: "/api/secret_question"
            },
            setting_secret_question: {
                method: "POST",
                url: "/api/secret_question"
            },
            count_secret_question: {
                method: "GET",
                url: "/api/count_secret_question"
            }
        }
            , API = $resource("", {}, actions);
        return Reference.agentAll(API, {}, actions)
    }
    ]),
    api.factory("Share", ["$resource", "Reference", function($resource, Reference) {
        var actions = {
            get: {
                method: "GET",
                url: "/api/share/:hash"
            },
            query: {
                method: "GET",
                url: "/api/share/query",
                params: {
                    resourceId: 0,
                    resourceType: 0,
                    accessType: 0
                }
            },
            create: {
                method: "POST",
                url: "/api/share/create"
            },
            "delete": {
                method: "DELETE",
                url: "/api/share/:hash"
            },
            image: {
                method: "GET",
                url: "/api/share/image/:hash"
            },
            download: {
                method: "GET",
                url: "/api/share/download/:hash"
            },
            download_url: {
                method: "GET",
                url: "/api/share/download_url/:hash"
            },
            pdf: {
                method: "GET",
                url: "/api/share/pdf/:hash",
                params: {
                    page: 1
                }
            },
            markdown: {
                method: "GET",
                url: "/api/share/markdown/:hash"
            }
        }
            , API = $resource("", {}, actions);
        return Reference.agentAll(API, {}, actions)
    }
    ]),
    api.factory("ResourceReference", ["$resource", "Reference", function($resource, Reference) {
        var actions = {
            list: {
                method: "GET",
                url: "/api/user/:username/project/:project_name/resource_reference/:code"
            },
            "delete": {
                method: "DELETE",
                url: "/api/user/:username/project/:project_name/resource_reference/:code"
            }
        }
            , API = $resource("", {}, actions);
        return Reference.agentAll(API, {}, actions)
    }
    ]),
    angular.module("services").factory("At", ["$q", "$rootScope", "User", "Common", function($q, $rootScope, User, Common) {
        var Loadings = {}
            , setLoading = function(contants, value) {
                Loadings[contants] || (Loadings[contants] = {
                    loading: !0,
                    promise: null
                }),
                    Loadings[contants].loading = value
            }
            , getLoading = function(contants) {
                return Loadings[contants] && Loadings[contants].loading
            }
            , getPromise = function(contants) {
                return Loadings[contants] && Loadings[contants].promise
            }
            , setPromise = function(contants, promise) {
                Loadings[contants] || (Loadings[contants] = {
                    loading: !0,
                    promise: null
                }),
                    Loadings[contants].promise = promise
            }
            , getAtsOfProject = function(project_id) {
                var key = "ATWHOS_PROJECT_" + project_id;
                return setLoading(key, getLoading(key) || !1),
                    getAts(key, function(deferred) {
                        return setLoading(key, !0),
                            User.get_at_who({
                                project_id: project_id
                            }, function(result) {
                                $rootScope[key] = [];
                                var ats = result.data;
                                $.map(ats, function(u) {
                                    $rootScope[key].push({
                                        key: u.global_key,
                                        name: u.name,
                                        name_pinyin: u.name_pinyin.split("|")[1],
                                        name_pinyin_short: u.name_pinyin.split("|")[2],
                                        avatar: u.avatar
                                    })
                                }),
                                    deferred.resolve($rootScope[key])
                            })["catch"](function() {
                                return deferred.reject(),
                                    !1
                            })
                    })
            }
            , getAtsOfTweetComment = function(tweet) {
                var deferred = $q.defer()
                    , key = "ATWHOS_TWEET_COMMENT_" + tweet.id;
                $rootScope[key] = [],
                    angular.forEach(tweet.comment_list, function(comment) {
                        var user = Common.findOfId($rootScope[key], comment.owner.global_key, "key");
                        user || $rootScope[key].push({
                            key: comment.owner.global_key,
                            name: comment.owner.name,
                            name_pinyin: comment.owner.name_pinyin.split("|")[1],
                            name_pinyin_short: comment.owner.name_pinyin.split("|")[2],
                            avatar: comment.owner.avatar
                        })
                    });
                var user = Common.findOfId($rootScope[key], tweet.owner.global_key, "key");
                return user || $rootScope[key].push({
                    key: tweet.owner.global_key,
                    name: tweet.owner.name,
                    name_pinyin: tweet.owner.name_pinyin.split("|")[1],
                    name_pinyin_short: tweet.owner.name_pinyin.split("|")[2],
                    avatar: tweet.owner.avatar
                }),
                    $rootScope.ATWHOS ? ($rootScope[key] = $rootScope[key].concat(removeSameUser($rootScope[key], $rootScope.ATWHOS)),
                        deferred.resolve($rootScope[key]),
                        deferred.promise) : getAtsOfFriend().then(function() {
                        return $rootScope[key] = $rootScope[key].concat(removeSameUser($rootScope[key], $rootScope.ATWHOS)),
                            deferred.resolve($rootScope[key]),
                            deferred.promise
                    })
            }
            , removeSameUser = function(comment_users, friends) {
                var at_whos = [];
                return angular.forEach(friends, function(user) {
                    var u = Common.findOfId(comment_users, user.key, "key");
                    u || at_whos.push(user)
                }),
                    at_whos
            }
            , getAtsOfFriend = function() {
                var key = "ATWHOS";
                return setLoading(key, getLoading(key) || !1),
                    getAts(key, function(deferred) {
                        return setLoading(key, !0),
                            User.get_at_who(function(result) {
                                $rootScope.ATWHOS = [];
                                var ats = result.data;
                                $.map(ats, function(u) {
                                    $rootScope.ATWHOS.push({
                                        key: u.global_key,
                                        name: u.name,
                                        name_pinyin: u.name_pinyin.split("|")[1],
                                        name_pinyin_short: u.name_pinyin.split("|")[2],
                                        avatar: u.avatar
                                    })
                                }),
                                    deferred.resolve($rootScope.ATWHOS)
                            })["catch"](function() {
                                return deferred.reject(),
                                    !1
                            })
                    })
            }
            , getAtsByKey = function(key, context_type, item_id) {
                return item_id && (key = key + "_" + item_id),
                    setLoading(key, getLoading(key) || !1),
                    getAts(key, function(deferred) {
                        return setLoading(key, !0),
                            User.get_at_who_context({
                                context_type: context_type,
                                item_id: item_id
                            }, function(result) {
                                $rootScope[key] = [];
                                var ats = result.data;
                                $.map(ats, function(u) {
                                    u.name_pinyin && $rootScope[key].push({
                                        key: u.global_key,
                                        name: u.name,
                                        name_pinyin: u.name_pinyin.split("|")[1],
                                        name_pinyin_short: u.name_pinyin.split("|")[2],
                                        avatar: u.avatar
                                    })
                                }),
                                    deferred.resolve($rootScope[key])
                            })["catch"](function() {
                                return deferred.reject(),
                                    !1
                            })
                    })
            }
            , getAts = function(constant, callback) {
                var deferred = $q.defer()
                    , success = function() {
                        deferred.resolve($rootScope[constant])
                    }
                    , failure = function() {
                        deferred.reject()
                    }
                    ;
                if ($rootScope[constant])
                    $rootScope.$evalAsync(success);
                else if (void 0 === $rootScope[constant])
                    if (getLoading(constant)) {
                        var promise = getPromise(constant);
                        promise && promise.then(function() {
                            success()
                        })
                    } else {
                        var promise = callback && callback(deferred);
                        setPromise(constant, promise)
                    }
                else
                    $rootScope.$evalAsync(failure);
                return deferred.promise
            }
            ;
        return {
            ofProject: getAtsOfProject,
            ofFriend: getAtsOfFriend,
            ofTweetComment: getAtsOfTweetComment,
            getAts: getAtsByKey
        }
    }
    ]);
var codeInsightService = angular.module("services");
codeInsightService.factory("CodeInsight", ["$resource", "Reference", function($resource, Reference) {
    var actions = {
        tasks: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/code-insight/tasks"
        },
        create_task: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/code-insight/task/add"
        },
        tree: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/code-insight/tree"
        },
        file: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/code-insight/file"
        },
        define: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/code-insight/define"
        },
        checkProgress: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/code-insight/task/check_progress"
        },
        lastTask: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/code-insight/last"
        },
        "delete": {
            method: "POST",
            url: "/api/user/:username/project/:project_name/code-insight/delete"
        },
        task: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/code-insight/task"
        }
    }
        , API = $resource("", {}, actions);
    return Reference.agentAll(API, null , actions)
}
]);
var d3Service = angular.module("services");
d3Service.factory("cd3", [function() {
    return {
        select: function(e, w, h) {
            return d3.select(e[0]).append("svg").attr({
                opacity: 1,
                width: w,
                height: h
            })
        },
        rect: function(svg, options) {
            return svg.append("rect").transition().duration(1e3).attr({
                transform: "translate(" + options.x + "," + options.y + ")",
                width: options.w,
                height: options.h,
                fill: options.c
            }),
                svg
        },
        arc: function(svg, options) {
            function midAngle(d) {
                var val = d.startAngle + (d.endAngle - d.startAngle) / 2;
                return Math.floor(val * Math.pow(10, 15)) / Math.pow(10, 15)
            }
            svg = svg.append("g"),
                svg.append("g").attr("class", "border"),
                svg.append("g").attr("class", "slices"),
                svg.append("g").attr("class", "labels"),
                svg.append("g").attr("class", "lines"),
                svg.append("g").attr("class", "values"),
                svg.append("g").attr("class", "dots"),
                svg.append("g").attr("class", "center");
            var radius = options.r
                , pie = d3.layout.pie().sort(function(a, b) {
                return b > a ? -1 : a > b ? 1 : 0
            }).value(function(d) {
                return d.value
            });
            svg.attr({
                transform: "translate(" + (radius + options.x) + "," + (radius + options.y) + ")"
            });
            var arc = d3.svg.arc().outerRadius(radius).innerRadius(2 * radius / 3)
                , outerArc = d3.svg.arc().innerRadius(1 * radius).outerRadius(1 * radius)
                , key = function(d) {
                return d.data.label
            }
                , values = function(data, key) {
                var keys = [];
                for (var i in data)
                    keys.push(data[i][key]);
                return keys
            }
                , color = d3.scale.ordinal().domain(values(options.data, "label")).range(values(options.data, "color"))
                , data = options.data
                , border = svg.select(".border").selectAll("circle").data(pie([1]), key);
            border.enter().append("circle"),
                border.transition().duration(10).attr({
                    r: radius,
                    "stroke-width": 5,
                    stroke: "#eee",
                    fill: "rgba(0,0,0,0)"
                }).attr("display", function(d) {
                    return options.showBorder ? "block" : "none"
                }),
                border.exit().remove();
            var slice = svg.select(".slices").selectAll("path.slice").data(pie(options.data), key);
            slice.enter().insert("path").style("fill", function(d) {
                return color(d.data.label)
            }).attr("class", "slice").on({
                mouseover: function() {
                    d3.select(this).attr("transform", "scale(1.05)")
                },
                mouseout: function() {
                    d3.select(this).attr("transform", "scale(1)")
                }
            }),
                slice.transition().duration(1e3).attrTween("d", function(d) {
                    this._current = this._current || d;
                    var interpolate = d3.interpolate(this._current, d);
                    return this._current = interpolate(0),
                        function(t) {
                            return arc(interpolate(t))
                        }
                }),
                slice.exit().remove();
            var text = svg.select(".labels").selectAll("text").data(pie(data), key);
            text.enter().append("text").attr({
                dy: ".35em",
                "font-size": options.cFontSize || "14px",
                fill: "#777",
                "font-family": "微软雅黑"
            }).text(function(d) {
                return d.data.label
            }),
                text.transition().duration(1e3).attrTween("transform", function(d) {
                    this._current = this._current || d;
                    var interpolate = d3.interpolate(this._current, d);
                    return this._current = interpolate(0),
                        function(t) {
                            var d2 = interpolate(t)
                                , pos = outerArc.centroid(d2);
                            return pos[0] = (radius + 10) * (midAngle(d2) <= Math.PI ? 1 : -1),
                                pos[1] += 10,
                            "translate(" + pos + ")"
                        }
                }).styleTween("text-anchor", function(d) {
                    this._current = this._current || d;
                    var interpolate = d3.interpolate(this._current, d);
                    return this._current = interpolate(0),
                        function(t) {
                            var d2 = interpolate(t);
                            return midAngle(d2) <= Math.PI ? "start" : "end"
                        }
                }).attr("display", function(d) {
                    return d.data.showComment ? "block" : "none"
                }),
                text.exit().remove();
            var text = svg.select(".values").selectAll("text").data(pie(data), key);
            text.enter().append("text").attr({
                dy: ".35em",
                "font-size": options.vFontSize || "24px",
                "font-family": "微软雅黑"
            }).text(function(d) {
                return d.data.formatValue
            }),
                text.transition().duration(1e3).attrTween("transform", function(d) {
                    this._current = this._current || d;
                    var interpolate = d3.interpolate(this._current, d);
                    return this._current = interpolate(0),
                        function(t) {
                            var d2 = interpolate(t)
                                , pos = outerArc.centroid(d2);
                            return pos[0] = (radius + 10) * (midAngle(d2) <= Math.PI ? 1 : -1),
                                pos[1] -= 10,
                            "translate(" + pos + ")"
                        }
                }).styleTween("text-anchor", function(d) {
                    this._current = this._current || d;
                    var interpolate = d3.interpolate(this._current, d);
                    return this._current = interpolate(0),
                        function(t) {
                            var d2 = interpolate(t);
                            return midAngle(d2) <= Math.PI ? "start" : "end"
                        }
                }).attr("display", function(d) {
                    return d.data.showComment ? "block" : "none"
                }),
                text.exit().remove();
            var polyline = svg.select(".lines").selectAll("polyline").data(pie(data), key);
            polyline.enter().append("polyline"),
                polyline.transition().duration(1e3).attr({
                    "stroke-width": 1,
                    stroke: "#333",
                    fill: "rgba(0,0,0,0)",
                    points: function(d) {
                        var pos = outerArc.centroid(d);
                        pos[0] = (radius + 10) * (midAngle(d) <= Math.PI ? 1 : -1);
                        var pointers = [arc.centroid(d).join(","), outerArc.centroid(d).join(","), pos.join(",")].join(" ");
                        return pointers
                    }
                }).attr("display", function(d) {
                    return d.data.showComment ? "block" : "none"
                }),
                polyline.exit();
            var dots = svg.select(".dots").selectAll("circle").data(pie(data), key);
            dots.enter().append("circle"),
                dots.transition().duration(500).attr({
                    transform: function(d) {
                        return "translate(" + arc.centroid(d).join(",") + ")"
                    },
                    r: options.dotRadius || 4,
                    fill: "#333"
                }).attr("display", function(d) {
                    return d.data.showComment ? "block" : "none"
                }),
                dots.exit().remove();
            var center = svg.select(".center").selectAll("text").data(pie([1]), key);
            center.enter().append("text").attr({
                dy: ".35em",
                "font-size": options.ccFontSize || "16px",
                "font-family": "微软雅黑",
                "text-anchor": "middle"
            }).text(function(d) {
                return options.centerComment
            })
        },
        chart: function(svg, options) {
            var g = svg.append("g")
                , margin = {
                top: options.marginTop || 0,
                right: options.marginRight || 0,
                bottom: options.marginBottom || 0,
                left: options.marginLeft || 0
            }
                , w = options.w
                , h = options.h
                , data = options.data
                , width = w
                , height = h
                , x = d3.scale.ordinal().rangeRoundBands([0, width], .2)
                , y = d3.scale.linear().range([height, 0])
                , xAxis = d3.svg.axis().scale(x).orient("bottom")
                , yAxis = d3.svg.axis().scale(y).orient("left").ticks(4);
            d3.scale.category10();
            g.attr({
                transform: "translate(" + margin.left + "," + margin.top + ")"
            }),
                x.domain(data.map(function(d) {
                    return d.x
                })),
                y.domain([0, d3.max(data, function(d) {
                    return d.y
                })]),
                g.append("g").attr({
                    "class": "x axis",
                    transform: "translate(0," + height + ")"
                }).call(xAxis),
                g.append("g").attr({
                    "class": "y axis"
                }).call(yAxis),
                g.selectAll(".axis path,.axis line").attr({
                    fill: "none",
                    stroke: "#000",
                    "shape-rendering": "crispEdges"
                }),
                g.selectAll(".axis").attr({
                    font: "8px sans-serif"
                }),
                g.selectAll(".bar").data(data).enter().append("rect").transition().duration(1e3).attr({
                    fill: function(d) {
                        return "#888"
                    },
                    "class": "bar",
                    x: function(d) {
                        return x(d.x)
                    },
                    width: x.rangeBand(),
                    y: function(d) {
                        return y(d.y)
                    },
                    height: function(d) {
                        return height - y(d.y)
                    }
                }),
                g.selectAll(".hbar").data(data).enter().append("rect").on({
                    mousemove: function(d) {
                        vt.select("text.vt").text(d.y),
                            tg.select("path.vp" + d.x + d.y).attr({
                                display: "block"
                            })
                    },
                    mouseout: function(d) {
                        vt.select("text.vt").text(""),
                            tg.select("path.vp" + d.x + d.y).attr({
                                display: "none"
                            })
                    }
                }).transition().duration(1e3).attr({
                    fill: "rgba(0,0,0,0)",
                    "class": "hbar",
                    x: function(d) {
                        return x(d.x)
                    },
                    width: x.rangeBand(),
                    y: function(d) {
                        return 0
                    },
                    height: function(d) {
                        return height
                    }
                });
            var tg = g.append("g").attr({
                "class": "value-path",
                transform: "translate(0,0)"
            });
            tg.selectAll(".vp").data(data).enter().append("path").transition().duration(1e3).attr({
                d: function(d) {
                    var a = []
                        , tx = x(d.x) + x.rangeBand() / 2
                        , ty = y(d.y);
                    a.push("M" + tx + " " + ty),
                        tx != width / 2 ? a.push("L" + tx + " " + -margin.top / 2) : a.push("L" + tx + " " + margin.top / 2);
                    var wh;
                    return wh = tx > width / 2 ? width / 2 + x.rangeBand() : width / 2 - x.rangeBand(),
                    tx != width / 2 && a.push("L" + wh + " " + -margin.top / 2),
                        a.join(" ")
                },
                "class": function(d) {
                    return "vp" + d.x + d.y
                },
                stroke: "#333",
                fill: "none",
                "shape-rendering": "crispedges",
                display: "none"
            });
            var vt = g.append("g").attr({
                "class": "value-text",
                transform: "translate(" + width / 2 + ",0)"
            });
            vt.append("text").attr({
                "class": "vt",
                font: "8px sans-serif",
                dy: "-.7em",
                "text-anchor": "middle",
                "font-size": "11px"
            })
        }
    }
}
]);
var appService = angular.module("services");
appService.factory("Cookies", [function() {
    var cookies = function(name, value, options) {
            if ("undefined" == typeof value) {
                var cookieValue = null ;
                if (document.cookie && "" != document.cookie)
                    for (var cookies = document.cookie.split(";"), i = 0; i < cookies.length; i++) {
                        var cookie = jQuery.trim(cookies[i]);
                        if (cookie.substring(0, name.length + 1) == name + "=") {
                            cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                            break
                        }
                    }
                return cookieValue
            }
            options = options || {},
            null  === value && (value = "",
                options.expires = -1);
            var expires = "";
            if (options.expires && ("number" == typeof options.expires || options.expires.toUTCString)) {
                var date;
                "number" == typeof options.expires ? (date = new Date,
                    date.setTime(date.getTime() + 24 * options.expires * 60 * 60 * 1e3)) : date = options.expires,
                    expires = "; expires=" + date.toUTCString()
            }
            var path = options.path ? "; path=" + options.path : ""
                , domain = options.domain ? "; domain=" + options.domain : ""
                , secure = options.secure ? "; secure" : "";
            document.cookie = [name, "=", encodeURIComponent(value), expires, path, domain, secure].join("")
        }
        ;
    return {
        get: function(name) {
            return cookies(name)
        },
        remove: function(name) {
            return cookies(name, null )
        },
        set: function(name, value, opt) {
            return cookies(name, value, opt || {
                    expires: 1,
                    path: "/"
                })
        },
        login_redirect: function() {
            var redirect_url = this.get("return_url");
            return USER && redirect_url ? (this.remove("return_url"),
                void (location.href = redirect_url)) : void 0
        }
    }
}
]),
    appService.factory("location", ["$location", "$route", "$rootScope", "$timeout", function($location, $route, $rootScope, $timeout) {
        return $location.skipReload = function() {
            var lastRoute = $route.current
                , un = $rootScope.$on("$locationChangeSuccess", function() {
                $route.current = lastRoute
            });
            return $timeout(function() {
                un()
            }, 30),
                $location
        }
            ,
            $location
    }
    ]),
    appService.factory("TreeTools", [function() {
        return {
            getShortSHA: function(sha) {
                return sha.substr(0, 7)
            }
        }
    }
    ]),
    appService.factory("Common", ["$rootScope", "$filter", "$timeout", "User", "location", function($rootScope, $filter, $timeout, User, $location) {
        var removeNullItem = function(arr, key) {
                return arr ? $.map(arr, function(item) {
                    return !key && item || key && item[key] ? item : void 0
                }) : []
            }
            , getDateInMiliSecond = function(time) {
                var t = new Date(time);
                return t.setHours(0),
                    t.setMinutes(0),
                    t.setSeconds(0),
                    t.setMilliseconds(0),
                    t.getTime()
            }
            , orderActivityByDate = $rootScope.orderActivityByDate = function(arr) {
                arr = removeNullItem(arr);
                var activities = []
                    , timeline = [];
                return angular.forEach(arr, function(item, i) {
                    if (item) {
                        var date_old = getDateInMiliSecond(item.created_at)
                            , new_line = activities[date_old];
                        new_line || (new_line = activities[date_old] = []),
                        -1 === timeline.indexOf(date_old) && timeline.push(date_old),
                            new_line.push(item)
                    }
                }),
                {
                    activities: activities,
                    timeline: timeline
                }
            }
            , unifyActivity = $rootScope.unifyActivity = function(arr, exceptions, itv) {
                function except(item) {
                    if (!angular.isArray(exceptions))
                        return item;
                    for (var i = exceptions.length - 1; i >= 0; i--)
                        item[exceptions[i]] = null ;
                    return item
                }
                for (var cur, next, curTime, nextTime, ret = angular.copy(arr), i = 0, j = 1; i < ret.length && !(j >= ret.length); )
                    curTime = angular.copy(ret[i]).created_at,
                        nextTime = angular.copy(ret[j]).created_at,
                        cur = except(angular.copy(ret[i])),
                        next = except(angular.copy(ret[j])),
                        Math.abs(curTime - nextTime) < 18e5 && angular.equals(cur, next) ? ret.splice(j, 1) : (i++,
                            j++);
                return squashActivity(ret)
            }
            , squashActivity = $rootScope.squashActivity = function(arr, time) {
                function prepare(item) {
                    angular.isObject(item) && ("ProjectFile" !== item.target_type || angular.isArray(item.files) || (item.files = [item.file]),
                    "ProjectMember" !== item.target_type || angular.isArray(item.target_users) || (item.target_users = [item.target_user]),
                    "Task" !== item.target_type || "update_label" !== item.action || item.label_histories || (item.label_histories = [item]),
                    "Task" !== item.target_type && "ProjectTopic" !== item.target_type || "add_watcher" !== item.action && "remove_watcher" !== item.action || item.watchers || (item.watchers = [item.watcher]))
                }
                function squash(index, cur, next, time) {
                    if (!angular.isObject(cur) || !angular.isObject(next) || cur.target_type !== next.target_type || !angular.equals(cur.user, next.user) || Math.abs(cur.created_at - next.created_at) > (time || 3e5))
                        return index + 1;
                    if ("ProjectFile" === cur.target_type)
                        return cur.action === next.action ? (cur.files.push(next.file),
                            index) : "update_dir" === cur.action && "create_dir" === next.action && cur.file.path === next.file.path ? (cur.action = "create_dir",
                            cur.action_msg = "新建了",
                        index - 1) : index + 1;
                    if ("ProjectMember" === cur.target_type && cur.action === next.action && cur.project.path === next.project.path)
                        return cur.target_users.push(next.target_user),
                            index;
                    if ("Task" === cur.target_type) {
                        if ("update_label" === cur.action && cur.action === next.action && cur.task.path === next.task.path)
                            return cur.label_histories.push(next),
                                index;
                        if (("add_watcher" === cur.action || "remove_watcher" === cur.action) && cur.action === next.action && cur.task.path === next.task.path)
                            return cur.watchers.push(next.watcher),
                                index
                    }
                    return "ProjectTopic" !== cur.target_type || "add_watcher" !== cur.action && "remove_watcher" !== cur.action || cur.action !== next.action || cur.project_topic.path !== next.project_topic.path ? index + 1 : (cur.watchers.push(next.watcher),
                        index)
                }
                for (var ret = angular.copy(arr), i = 0; i < ret.length; ) {
                    prepare(ret[i]),
                        prepare(ret[i + 1]);
                    var newIndex = squash(i, ret[i], ret[i + 1], time);
                    i >= newIndex && ret.splice(i + 1, 1),
                        i = newIndex
                }
                return ret
            }
            ;
        $rootScope.isToday = function(time) {
            var d = new Date(time)
                , now = new Date;
            return d.getFullYear() == now.getFullYear() && d.getMonth() == now.getMonth() && d.getDate() == now.getDate()
        }
        ;
        var removeOfId = function(arr, id, key) {
                var new_arr = [];
                if (!arr)
                    return new_arr;
                for (var i = 0; i < arr.length; i++) {
                    var item = arr[i];
                    item[key ? key : "id"] != id && new_arr.push(item)
                }
                return new_arr
            }
            , replaceWith = function(arr, act, key) {
                var new_arr = [];
                if (!arr)
                    return new_arr;
                for (var i = 0; i < arr.length; i++) {
                    var item = arr[i];
                    item[key ? key : "id"] != act[key ? key : "id"] ? new_arr.push(item) : new_arr.push(act)
                }
                return new_arr
            }
            , findOfId = function(arr, id, key) {
                if (!arr)
                    return null ;
                for (var i = 0; i < arr.length; i++) {
                    var item = arr[i];
                    if (item[key ? key : "id"] == id)
                        return item
                }
                return null
            }
            , findIndex = function(arr, item, key) {
                if (!arr)
                    return -1;
                for (var i = arr.length - 1; i >= 0; i--)
                    if (arr[i][key] === item[key])
                        return i
            }
            , prependItem = function(arr, item) {
                return arr.splice(0, 0, item),
                    arr
            }
            , revertHtml = function(content) {
                return (content || "").replace(/&lt;/g, "<").replace(/&gt;/g, ">")
            }
            , html = function(content) {
                return (content || "").replace(/</g, "&lt;").replace(/>/g, "&gt;")
            }
            , safeApply = function(fn) {
                var phase = null ;
                try {
                    phase = this.$root.$$phase
                } catch (e) {
                    return
                }
                "$apply" == phase || "$digest" == phase ? fn && "function" == typeof fn && fn() : this.$apply(fn)
            }
            , isAccount = function($location) {
                var url = $location.path();
                return 0 == url.indexOf("/login") || 0 == url.indexOf("/register") || 0 == url.indexOf("/resetPassword") || 0 == url.indexOf("/user/resetPassword") || 0 == url.indexOf("/activate") || 0 == url.indexOf("/user/activate") || 0 == url.indexOf("/reset_email") || 0 == url.indexOf("/supplement") || "/" === url || "/input_two_factor_auth_code" === url
            }
            , wrapperTweetIntoActivity = function(tweet, USER) {
                var activity = {
                    tweet: {
                        id: tweet.id,
                        content: tweet.content,
                        comments_count: tweet.comments_count,
                        path: tweet.path,
                        comment_list: []
                    },
                    target_type: "Tweet",
                    id: tweet.activity_id,
                    user: {
                        path: USER.path,
                        avatar: USER.avatar,
                        name: USER.name,
                        global_key: USER.global_key
                    },
                    created_at: tweet.created_at
                };
                return angular.copy(activity)
            }
            , htmlToPlaintext = $rootScope.htmlToPlaintext = function(text) {
                return String(text).replace(/<[^>]+>/gm, "")
            }
            , htmlToPlaintextForProject = $rootScope.htmlToPlaintextForProject = function(text) {
                return String(text).replace(/<[^>]+>/gm, function(match) {
                    var element = $(match);
                    return element.is(".emotion") ? "[表情:" + element.attr("title") + "]" : element.is("img") ? "[图片]" : ""
                })
            }
            , membersToUsers = function(member) {
                return angular.isArray(member) ? member[0] && void 0 !== member[0].user_id ? $.map(member, function(m) {
                    return m.user || m
                }) : member : member.user || member
            }
            , randomEventIndex = $rootScope.randomEventIndex = function(count) {
                var date = (new Date).getDate();
                return date % (count || 3)
            }
            ;
        $rootScope.restyleEmoji = function(content) {
            return $filter("restyleEmoji")(content)
        }
        ;
        var qiniu_img_regex = /https\:\/\/(\S+)\.qbox\.me\/(\S+)\.(png|jpg|jpeg|gif)/
            , qiniu_crop_img_regex = /(\S+)(\?imageMogr2\/auto-orient\/format\/\S+\/crop\/\!\d+x\d+a\d+a\d+)/
            , gravatar_img_regex = /^(https\:\/\/www.gravatar.com\/avatar\/\S+?s=)(\d+)/
            , fruit_img_regex = /\/static\/fruit_avatar\/Fruit\-(\d+)\.png/
            , qiniu_fruit_pattern = "https://dn-coding-net-production-avatar.qbox.me/Fruit-$0.png"
            , avatars_cache = {}
            , cacheSize = function(src, size) {
                var cached = avatars_cache[src];
                return cached && (size = size > cached ? size : cached),
                    avatars_cache[src] = size,
                    size
            }
            , thumbnail = function(src, size) {
                if (!src)
                    return src;
                if (size = size || 200,
                        matches = src.match(qiniu_crop_img_regex),
                    matches && 3 === matches.length) {
                    var url = matches[1]
                        , params = matches[2]
                        , new_size = cacheSize(url, size);
                    return [url, params, "/thumbnail/", new_size].join("")
                }
                var matches = src.match(qiniu_img_regex);
                if (matches && 4 === matches.length) {
                    var prefix = matches[1]
                        , sha1 = matches[2]
                        , ext = matches[3]
                        , tmp_src = ["https://", prefix, ".qbox.me/", sha1, ".", ext].join("")
                        , new_size = cacheSize(tmp_src, size);
                    return [tmp_src, "?imageMogr2/thumbnail/", new_size].join("")
                }
                if (matches = src.match(gravatar_img_regex),
                    matches && matches.length > 0) {
                    var new_size = cacheSize(src, size);
                    return src.replace(gravatar_img_regex, "$1" + new_size)
                }
                if (matches = src.match(fruit_img_regex),
                    matches && 2 === matches.length) {
                    var no = matches[1]
                        , new_img = qiniu_fruit_pattern.replace("$0", no)
                        , new_size = cacheSize(new_img, size);
                    return new_img + "?imageMogr2/thumbnail/" + new_size
                }
                return src
            }
            , smartSwitch = function(cases, target_case, context) {
                var cases = cases || {}
                    , default_case = cases["default"]
                    , target = cases[target_case];
                return target || (target = default_case),
                    angular.isFunction(target) ? target.call(cases, context) : target
            }
            , projectParams = function(project, params) {
                return project ? angular.extend({
                    username: project.owner_user_name,
                    project_name: project.name
                }, params || {}) : {}
            }
            , addFilenameWhenPaste = function(e, data) {
                $.each(data, function(i, file) {
                    file.length > 0 && $.each(file, function(i2, f) {
                        if (!f.name) {
                            var name = (new Date).getTime() + "_" + i + "_" + i2;
                            file[i2].name = name + "." + file[i2].type.split("/")[1]
                        }
                    })
                })
            }
            , scaleImageFilter = function(event, data) {
                var file = data.files[data.index];
                data.processQueue && angular.isArray(data.processQueue) && data.processQueue.length >= 3 && file.size <= 1048576 && (data.processQueue[2].maxHeight = 5e7,
                    data.processQueue[2].maxWidth = 5e7)
            }
            , uuid = function() {
                return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(c) {
                    var r = 16 * Math.random() | 0
                        , v = "x" == c ? r : 3 & r | 8;
                    return v.toString(16)
                })
            }
            , capitalize = function(input) {
                return input ? input.replace(/([^\W_]+[^\s-]*) */g, function(txt) {
                    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()
                }) : ""
            }
            , loginRedirect = function() {
                var return_url = $location.$$search.return_url;
                /^https:\/\/(.+\.)?coding\.net/.test(return_url) ? window.location.href = return_url : /^\/.+/.test(return_url) ? $location.path(return_url).search("return_url", void 0).replace() : $location.path("/user")
            }
            , isEmail = function(email) {
                return /[\w!#$%&'*+/=?^_`{|}~-]+(?:\.[\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\w](?:[\w-]*[\w])?\.)+[\w](?:[\w-]*[\w])?/.test(email)
            }
            , isMagicEmail = function(email) {
                return /^[\w!#$%&'*+/=?^_`{|}~-]+(?:\.[\w!#$%&'*+/=?^_`{|}~-]+)*@([163\.com|126\.com|yeah\.net])+[\w]$/.test(email)
            }
            , isGlobalKey = function(gk) {
                return /^[a-zA-Z\d]{1}[a-zA-Z0-9_-]{2,32}$/.test(gk)
            }
            , isPhone = function(phone) {
                return /^1[0-9]{10}$/.test(phone)
            }
            , isCode = function(code) {
                return /^\d*$/.test(code)
            }
            , ellipsisString = function(string, length) {
                return string.length <= length ? string : string.slice(0, length) + "..."
            }
            , startCheckUnreadMessage = function() {
                var check_unread_count = function() {
                        var p = User.unread_count({}, function(result) {
                            0 == result.code && ($rootScope.unread = result.data,
                                $rootScope.USER.prj_update_count = result.data.project_update_count,
                                $rootScope.check_unread_timer_delay = 0,
                                $rootScope.check_unread_timer = $timeout(check_unread_count, 1e4))
                        });
                        p["catch"](function() {
                            $rootScope.check_unread_timer_delay += 1e4,
                                $rootScope.check_unread_timer = $timeout(check_unread_count, $rootScope.check_unread_timer_delay)
                        })
                    }
                    ;
                $rootScope.check_unread_timer_delay = 0,
                    $rootScope.check_unread_timer = $timeout(check_unread_count, 0)
            }
            ;
        return {
            removeNullItem: removeNullItem,
            orderActivityByDate: orderActivityByDate,
            unifyActivity: unifyActivity,
            squashActivity: squashActivity,
            removeOfId: removeOfId,
            replaceWith: replaceWith,
            findOfId: findOfId,
            findIndex: findIndex,
            prepend: prependItem,
            html: html,
            revertHtml: revertHtml,
            safeApply: safeApply,
            isAccount: isAccount,
            wrapperTweetIntoActivity: wrapperTweetIntoActivity,
            htmlToPlaintext: htmlToPlaintext,
            m2u: membersToUsers,
            randomEventIndex: randomEventIndex,
            thumbnail: thumbnail,
            htmlToPlaintextForProject: htmlToPlaintextForProject,
            smartSwitch: smartSwitch,
            projectParams: projectParams,
            addFilenameWhenPaste: addFilenameWhenPaste,
            scaleImageFilter: scaleImageFilter,
            uuid: uuid,
            capitalize: capitalize,
            loginRedirect: loginRedirect,
            isEmail: isEmail,
            isMagicEmail: isMagicEmail,
            isGlobalKey: isGlobalKey,
            isPhone: isPhone,
            isCode: isCode,
            ellipsisString: ellipsisString,
            startCheckUnreadMessage: startCheckUnreadMessage
        }
    }
    ]);
var depotService = angular.module("services");
depotService.factory("Depot", ["$resource", "Reference", function($resource, Reference) {
    var actions = {
        query: {
            method: "GET"
        },
        depot: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git"
        },
        tree: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/tree/:region"
        },
        treeInfo: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/treeinfo/:region"
        },
        commits: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/commits/:region"
        },
        commit: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/commit/:region"
        },
        blob_expand: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/blob_expand/:region"
        },
        add_line_note: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/line_notes"
        },
        del_line_note: {
            method: "DELETE",
            url: "/api/user/:username/project/:project_name/git/line_notes/:id"
        },
        blob: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/blob/:region"
        },
        blame: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/blame/:region"
        },
        edit_tree: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/edit/:region"
        },
        new_tree: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/new/:region"
        },
        delete_tree: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/delete/:region"
        },
        update_tree: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/edit/:region"
        },
        create_tree: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/new/:region"
        },
        do_delete_tree: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/delete/:region"
        },
        branches: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/branches"
        },
        delete_branch: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/branches/delete"
        },
        create_branch: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/branches/create"
        },
        branches_search: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/list_branches/?prefix=:prefix"
        },
        tags: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/tags"
        },
        delete_tag: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/tags/delete"
        },
        create_tag: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/tags/create"
        },
        tags_search: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/list_tags/?prefix=:prefix"
        },
        compare: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/compare/:region"
        },
        pull_request_create: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/pull/create"
        },
        pull_request_show: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/pull/:iid"
        },
        pull_request_submit: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/pull"
        },
        pull_request_merge: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/pull/:iid/merge"
        },
        pull_request_refuse: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/pull/:iid/refuse"
        },
        pull_request_cancel: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/pull/:iid/cancel"
        },
        pull_request_list: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/pulls/:region"
        },
        pull_request_comments_list: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/pull/:iid/comments"
        },
        pull_request_comment_create: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/pull/:iid/comment"
        },
        pull_request_comment_delete: {
            method: "DELETE",
            url: "/api/user/:username/project/:project_name/git/pull/:iid/comment/:id"
        },
        merge_request_create: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/merge/create"
        },
        merge_request_show: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/merge/:iid"
        },
        merge_request_update: {
            method: "PUT",
            url: "/api/user/:username/project/:project_name/git/merge/:iid"
        },
        merge_request_submit: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/merge"
        },
        merge_request_merge: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/merge/:iid/merge"
        },
        merge_request_refuse: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/merge/:iid/refuse"
        },
        merge_request_cancel: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/merge/:iid/cancel"
        },
        merge_request_squash: {
            method: "PUT",
            url: "/api/user/:username/project/:project_name/git/merge/:iid/squash"
        },
        merge_request_list: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/merges/list/:region"
        },
        merge_request_list_type: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/merges/list_type"
        },
        merge_request_comments_list: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/merge/:iid/comments"
        },
        merge_request_comment_create: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/merge/:iid/comment"
        },
        merge_request_comment_delete: {
            method: "DELETE",
            url: "/api/user/:username/project/:project_name/git/merge/:iid/comment/:id"
        },
        merge_request_reviewer_good: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/merge/:iid/review_good"
        },
        merge_request_reviewer_good_undo: {
            method: "DELETE",
            url: "/api/user/:username/project/:project_name/git/merge/:iid/review_good"
        },
        merge_request_grant: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/merge/:iid/grant"
        },
        merge_request_grant_undo: {
            method: "DELETE",
            url: "/api/user/:username/project/:project_name/git/merge/:iid/grant"
        },
        merge_request_activities_list: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/merge/:iid/activities"
        },
        getGraph: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/graph/:region"
        },
        key_create: {
            method: "POST",
            url: "/api/user/:username/keys"
        },
        key_list: {
            method: "GET",
            url: "/api/user/:username/keys",
            params: {
                withIDEKey: !1
            }
        },
        key_delete: {
            method: "POST",
            url: "/api/user/:username/key/:key_id/delete",
            params: {}
        },
        plot: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/plot/data"
        },
        fork: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/fork"
        },
        forks: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/forks"
        },
        webHooks: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/hooks"
        },
        webHookLogs: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/webhook_logs"
        },
        createWebHook: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/hook"
        },
        getWebHook: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/hook/:id"
        },
        editWebHook: {
            method: "PUT",
            url: "/api/user/:username/project/:project_name/git/hook/:id"
        },
        deleteWebHook: {
            method: "DELETE",
            url: "/api/user/:username/project/:project_name/git/hook/:id"
        },
        testWebHook: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/hook/:id/test"
        },
        queryDepolyKeys: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/deploy_keys"
        },
        saveDeployKey: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/deploy_key"
        },
        deleteDeployKey: {
            method: "DELETE",
            url: "/api/user/:username/project/:project_name/git/deploy_key/:id"
        },
        bindDeployKey: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/bind_deploy_key/:id"
        },
        unBindDeployKey: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/unbind_deploy_key/:id"
        },
        enableProtectedBranch: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/branches/protected_branch/enable",
            params: {}
        },
        disableProtectedBranch: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/branches/protected_branch/disable",
            params: {}
        },
        addProtectedBranchMember: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/branches/protected_branch/add_member",
            params: {}
        },
        removeProtectedBranchMember: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/branches/protected_branch/remove_member",
            params: {}
        },
        listProtectedBranchMember: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/branches/protected_branch/members",
            params: {}
        },
        listBranches: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/list_branches"
        },
        listTags: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/git/list_tags"
        },
        getLicense: {
            method: "GET",
            url: "/api/git/license",
            params: {}
        },
        getGitIgnore: {
            method: "GET",
            url: "/api/git/gitignore",
            params: {}
        },
        checkImport: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/check_import"
        },
        blobPreview: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/blob-preview/:region"
        },
        setDefaultBranch: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/branch/default"
        },
        initDepot: {
            method: "POST",
            url: "/api/user/:username/project/:project_name/git/init"
        }
    }
        , API = $resource("/api/user/:username/project/:project_name/git", {}, actions);
    return Reference.agentAll(API, null , actions)
}
]),
    angular.module("services").service("ElementResizeListener", function() {
        function resizeListener(e) {
            var win = e.target || e.srcElement;
            win.__resizeRAF__ && cancelFrame(win.__resizeRAF__),
                win.__resizeRAF__ = requestFrame(function() {
                    var trigger = win.__resizeTrigger__;
                    (trigger.__preWidth__ != trigger.offsetWidth || trigger.__preHeight__ != trigger.offsetHeight) && (trigger.__resizeListeners__.forEach(function(fn) {
                        fn.call(trigger, e)
                    }),
                        trigger.__preWidth__ = trigger.offsetWidth,
                        trigger.__preHeight__ = trigger.offsetHeight)
                })
        }
        function objectLoad() {
            this.contentDocument && this.contentDocument.defaultView && (this.contentDocument.defaultView.__resizeTrigger__ = this.__resizeElement__,
                this.contentDocument.defaultView.addEventListener("resize", resizeListener))
        }
        var attachEvent = document.attachEvent
            , isIE = navigator.userAgent.match(/Trident/)
            , requestFrame = function() {
                var raf = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function(fn) {
                            return window.setTimeout(fn, 20)
                        }
                    ;
                return function(fn) {
                    return raf(fn)
                }
            }()
            , cancelFrame = function() {
                var cancel = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.clearTimeout;
                return function(id) {
                    return cancel(id)
                }
            }()
            , addResizeListener = function(element, fn) {
                if (!element.__resizeListeners__)
                    if (element.__resizeListeners__ = [],
                            attachEvent)
                        element.__resizeTrigger__ = element,
                            element.attachEvent("onresize", resizeListener);
                    else {
                        "static" == getComputedStyle(element).position && (element.style.position = "relative");
                        var obj = element.__resizeTrigger__ = document.createElement("object");
                        obj.setAttribute("style", "display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;"),
                            obj.__resizeElement__ = element,
                            obj.onload = objectLoad,
                            obj.type = "text/html",
                        isIE && element.appendChild(obj),
                            obj.data = "about:blank",
                        isIE || element.appendChild(obj)
                    }
                element.__preWidth__ = 0,
                    element.__preHeight__ = 0,
                    element.__resizeListeners__.push(fn)
            }
            , removeResizeListener = function(element, fn) {
                element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1),
                element.__resizeListeners__.length || (attachEvent ? element.detachEvent("onresize", resizeListener) : element.__resizeTrigger__.contentDocument && element.__resizeTrigger__.contentDocument.defaultView && (element.__resizeTrigger__.contentDocument.defaultView.removeEventListener("resize", resizeListener),
                    element.__resizeTrigger__ = !element.removeChild(element.__resizeTrigger__)))
            }
            ;
        return {
            on: addResizeListener,
            off: removeResizeListener
        }
    }),
    angular.module("services").factory("Errors", ["ipCookie", "Flash", function(ipCookie, Flash) {
        var hanlder = {
                1e7: function() {
                    ipCookie("return_url", location.href)
                }
            }
            , print = function(msg) {
                if (msg) {
                    var err = [];
                    for (var i in msg) {
                        var m = msg[i];
                        err.push(m)
                    }
                    Flash.fail().send(err.join("<br/>"))
                }
            }
            ;
        return {
            handle: function(result, callback) {
                var code = result.code;
                if (0 != code) {
                    if (1 == code)
                        return void Flash.fail().send(result.msg || "操作失败！");
                    var fun = hanlder[code];
                    fun ? fun.call(this, result, callback) : result.msg && print(result.msg),
                    callback && callback(result)
                }
            }
        }
    }
    ]);
var HelpsResouces = angular.module("services");
HelpsResouces.factory("Helps", ["$resource", "Reference", function($resource, Reference) {
    var actions = {
        docs: {
            method: "GET",
            url: "api/help/doc/category/:code/docs"
        },
        root_category: {
            method: "GET",
            url: "api/help/doc/category/root"
        },
        search: {
            method: "GET",
            url: "api/help/doc/search"
        }
    }
        , API = $resource("", {}, actions);
    return Reference.agentAll(API, {}, actions)
}
]),
    angular.module("btford.modal", []).factory("btfModal", ["$animate", "$compile", "$injector", "$rootScope", "$controller", "$q", "$http", "$templateCache", function($animate, $compile, $injector, $rootScope, $controller, $q, $http, $templateCache) {
        return function(config) {
            function activate(locals) {
                return active() ? void 0 : html.then(function(html) {
                    element || attach(html, locals)
                })
            }
            function locals(locals) {
                if (scope && locals)
                    for (var prop in locals)
                        scope[prop] = locals[prop]
            }
            function attach(html, locals) {
                if (element = angular.element(html),
                    0 === element.length)
                    throw new Error("The template contains no elements; you need to wrap text nodes");
                if ($animate.enter(element, container),
                        scope = $rootScope.$new(),
                        locals)
                    for (var prop in locals)
                        scope[prop] = locals[prop];
                angular.forEach(resolve, function(value, key) {
                    resolve[key] = angular.isString(value) ? $injector.get(value) : angular.isFunction(value) ? $injector.invoke(value) : value
                });
                var doCompile = function() {
                        var ctrl = $controller(controller, {
                            $scope: scope
                        });
                        controllerAs && (scope[controllerAs] = ctrl),
                            $compile(element)(scope)
                    }
                    ;
                resolve ? $q.all(resolve).then(function() {
                    scope = angular.extend(scope, arguments[0]),
                        doCompile()
                }) : doCompile()
            }
            function deactivate() {
                var deferred = $q.defer();
                return element ? $animate.leave(element, function() {
                    scope.$destroy(),
                        element = null ,
                        deferred.resolve()
                }) : deferred.resolve(),
                    deferred.promise
            }
            function active() {
                return !!element
            }
            if (!(!config.template ^ !config.templateUrl))
                throw new Error("Expected modal to have exactly one of either `template` or `templateUrl`");
            var html, scope, controller = (config.template,
            config.controller || angular.noop), controllerAs = config.controllerAs, container = angular.element(config.container || document.body), resolve = config.resolve, element = null ;
            if (config.template) {
                var deferred = $q.defer();
                deferred.resolve(config.template),
                    html = deferred.promise
            } else
                html = $http.get(config.templateUrl, {
                    cache: $templateCache
                }).then(function(response) {
                    return response.data
                });
            return {
                activate: activate,
                deactivate: deactivate,
                active: active,
                locals: locals
            }
        }
    }
    ]),
    angular.module("services").factory("Paas", ["$resource", "Flash", function($resource, Flash) {
        var actions = {
                servers: {
                    mthod: "GET",
                    url: "/api/paas/servers"
                },
                get: {
                    method: "GET"
                },
                "delete": {
                    method: "DELETE"
                },
                update: {
                    method: "PUT"
                },
                detect: {
                    method: "POST",
                    url: "/api/paas/:username/:project_name/detect"
                },
                check: {
                    method: "POST",
                    url: "/api/paas/:username/:project_name/check"
                },
                health: {
                    method: "GET",
                    url: "/api/paas/:username/:project_name/cf_app/health"
                },
                stats: {
                    method: "GET",
                    url: "/api/paas/:username/:project_name/cf_app/stats",
                    isArray: !0
                },
                start: {
                    method: "POST",
                    url: "/api/paas/:username/:project_name/cf_app/start"
                },
                stop: {
                    method: "POST",
                    url: "/api/paas/:username/:project_name/cf_app/stop"
                },
                restart: {
                    method: "POST",
                    url: "/api/paas/:username/:project_name/cf_app/restart"
                },
                deploy: {
                    method: "POST",
                    url: "/api/paas/:username/:project_name/cf_app/deploy"
                },
                scale: {
                    method: "POST",
                    url: "/api/paas/:username/:project_name/cf_app/scale"
                },
                logs: {
                    method: "GET",
                    url: "/api/paas/:username/:project_name/cf_app/logs",
                    isArray: !0
                },
                files: {
                    method: "GET",
                    url: "/api/paas/:username/:project_name/cf_app/files"
                },
                vars: {
                    method: "GET",
                    url: "/api/paas/:username/:project_name/cf_app/vars"
                },
                set_var: {
                    method: "POST",
                    url: "/api/paas/:username/:project_name/cf_app/vars"
                },
                del_var: {
                    method: "DELETE",
                    url: "/api/paas/:username/:project_name/cf_app/vars/:key"
                },
                avaliable_services: {
                    method: "GET",
                    url: "/api/paas/:username/:project_name/cf_services/avaliable",
                    isArray: !0
                },
                service_bindings: {
                    method: "GET",
                    url: "/api/paas/:username/:project_name/cf_services/:service_id/bindings",
                    isArray: !0
                },
                app_services: {
                    method: "GET",
                    url: "/api/paas/:username/:project_name/cf_services",
                    isArray: !0
                },
                bind_service: {
                    method: "POST",
                    url: "/api/paas/:username/:project_name/cf_services/:service_id/bind",
                    isArray: !0
                },
                unbind_service: {
                    method: "POST",
                    url: "/api/paas/:username/:project_name/cf_services/:service_id/unbind",
                    isArray: !0
                },
                marketplace: {
                    method: "GET",
                    url: "/api/paas/:username/:project_name/marketplace",
                    isArray: !0
                },
                add_service: {
                    method: "POST",
                    url: "/api/paas/:username/:project_name/cf_services"
                },
                del_service: {
                    method: "DELETE",
                    url: "/api/paas/:username/:project_name/cf_services/:service_id"
                },
                service_info: {
                    method: "GET",
                    url: "/api/paas/:username/:project_name/cf_services/:service_id"
                },
                console_cmd: {
                    method: "POST",
                    url: "/api/paas/:username/:project_name/cf_services/:service_id/console"
                },
                service_credentials: {
                    method: "GET",
                    url: "/api/paas/:username/:project_name/cf_services/:service_id/credentials"
                }
            }
            , errorInterceptor = function(response) {
                return response.data && response.data.message && Flash.fail().send(response.data.message),
                    response
            }
            ;
        return angular.forEach(actions, function(config, action) {
            "get" !== action && (config.interceptor = {
                responseError: errorInterceptor
            })
        }),
            $resource("/api/paas/:username/:project_name/cf_app", {}, actions)
    }
    ]),
    angular.module("services").service("PageTitle", ["$window", function($window) {
        this.set = function() {
            var parts, value = arguments.length > 0 ? Array.prototype.slice.call(arguments, 0) : arguments[0];
            parts = null  === value || void 0 === value || value === !1 ? ["Coding"] : "string" == typeof value ? [value] : value.slice(0);
            var title = parts.join(" - ");
            title = title.replace(/&lt;/g, "<").replace(/&gt;/g, ">"),
                $window.document.title = title
        }
    }
    ]),
    angular.module("services").factory("Payment", ["$resource", "Reference", function($resource, Reference) {
        var actions = {
            charge: {
                method: "POST",
                url: "/api/payment/charge"
            },
            charge_log: {
                method: "GET",
                url: "/api/payment/charge"
            },
            pay_log: {
                method: "GET",
                url: "/api/payment/consume"
            },
            close: {
                method: "PUT",
                url: "/api/payment/charge/:id/close"
            },
            url: {
                method: "POST",
                url: "/api/payment/charge/:id/url"
            },
            get: {
                method: "GET",
                url: "/api/payment/charge/:id"
            },
            balance: {
                method: "GET",
                url: "/api/payment/balance"
            },
            upgrade: {
                method: "POST",
                url: "/api/user/:username/project/:project_name/upgrade"
            },
            upgradePro: {
                method: "POST",
                url: "/api/user/:username/project/:project_name/dev_upgrade_premium"
            },
            upgradePrice: {
                method: "GET",
                url: "/api/user/:username/project/:project_name/dev_upgrade_premium",
                params: {
                    month: "1,6,12"
                }
            },
            projectPlan: {
                method: "GET",
                url: "/api/user/:username/project/:project_name/project_plan"
            },
            updateRenewal: {
                method: "PUT",
                url: "/api/user/:username/project/:project_name/project_plan"
            },
            projects: {
                method: "GET",
                url: "/api/payment/project"
            },
            summary: {
                method: "GET",
                url: "/api/user/service_info"
            },
            invoice_price: {
                method: "GET",
                url: "/api/invoice/price"
            },
            invoices: {
                method: "GET",
                url: "/api/invoice"
            },
            invoice: {
                method: "POST",
                url: "/api/invoice"
            },
            update_invoice: {
                method: "PUT",
                url: "/api/invoice"
            },
            remove_invoice: {
                method: "DELETE",
                url: "/api/invoice/:id"
            },
            sign_invoice: {
                method: "POST",
                url: "/api/invoice/sign_for_express/:id"
            },
            project_summary: {
                method: "GET",
                url: "/api/user/:username/project/:project_name/service_info"
            },
            tickets: {
                method: "GET",
                url: "/api/user/:username/project/:project_name/agent/request_list"
            },
            ticket: {
                method: "POST",
                url: "/api/user/:username/project/:project_name/agent/requests"
            },
            get_ticket: {
                method: "POST",
                url: "/api/user/:username/project/:project_name/agent?url=requests/:id.json",
                params: {
                    method: "GET"
                }
            },
            ticket_comments: {
                method: "POST",
                url: "/api/user/:username/project/:project_name/agent?url=requests/:id/comments.json",
                params: {
                    method: "GET"
                }
            },
            ticket_comment: {
                method: "POST",
                url: "/api/user/:username/project/:project_name/agent/requests/:id",
                params: {
                    method: "PUT"
                }
            },
            ticket_fields: {
                method: "GET",
                url: "/api/user/:username/project/:project_name/agent/ticket_fields/active"
            },
            users: {
                method: "GET",
                url: "/api/user/:username/project/:project_name/agent/users/show_many"
            },
            "export": {
                method: "GET",
                url: "/api/user/:username/project/:project_name/export"
            },
            exports: {
                method: "POST",
                url: "/api/user/:username/project/:project_name/export"
            },
            renewal_plan: {
                method: "GET",
                url: "/api/user/:username/project/:project_name/renew"
            },
            renew: {
                method: "POST",
                url: "/api/user/:username/project/:project_name/renew"
            },
            exchange_balance: {
                method: "GET",
                url: "/api/point/balance"
            },
            exchange_point: {
                method: "POST",
                url: "/api/point/point_exchange"
            },
            generate_weixin_qr: {
                method: "POST",
                url: "/api/payment/generate_weixin_qr"
            },
            get_weixin_qr: {
                method: "GET",
                url: "/api/payment/charge/:charge_id/qr"
            }
        }
            , API = $resource("", {}, actions);
        return Reference.agentAll(API, {}, actions)
    }
    ]),
    angular.module("services").factory("Point", ["$resource", "Reference", function($resource, Reference) {
        var actions = {
            record: {
                method: "GET",
                url: "/api/point/records",
                params: {
                    page: 1,
                    pageSize: 10
                }
            },
            points: {
                method: "GET",
                url: "/api/point/points"
            },
            gifts: {
                method: "GET",
                url: "/api/gifts"
            },
            exchange: {
                method: "POST",
                url: "/api/point/exchange"
            }
        }
            , API = $resource("", {}, actions);
        return Reference.agentAll(API, {}, actions)
    }
    ]);
var qcServices = angular.module("services");
qcServices.factory("QcService", ["$q", "hljsService", "Reference", "$resource", function($q, hljs, Reference, $resource) {
    var task_actions_config = {
        tasks: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/qc/task/list"
        },
        last_task: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/qc/task/last"
        },
        get_task: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/qc/task/get/:ref"
        },
        delete_task: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/qc/task/delete/:id"
        }
    }
        , qc_actions_config = {
        resources: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/qc/resources"
        },
        violations: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/qc/violations"
        },
        sources: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/qc/sources"
        },
        duplications: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/qc/duplications"
        },
        issues: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/qc/issues"
        },
        rules: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/qc/rules"
        },
        timemachine: {
            method: "GET",
            url: "/api/user/:username/project/:project_name/qc/timemachine"
        }
    }
        , api = {};
    return api.qcActions = $resource("", {}, qc_actions_config),
        api.taskActions = $resource("", {}, task_actions_config),
        api.taskActions = Reference.agentAll(api.taskActions, {}, task_actions_config),
        api.issuesMetrics = ["violations", "sqale_index", "severity", "blocker_violations", "critical_violations", "major_violations", "minor_violations", "info_violations"],
        api.duplicateMetrics = ["duplicated_blocks", "duplicated_files", "duplicated_lines", "duplicated_lines_density"],
        api.complexityMetrics = ["function_complexity", "complexity", "class_complexity", "file_complexity", "function_complexity_distribution", "file_complexity_distribution"],
        api.coverageMetrics = ["coverage", "line_coverage", "branch_coverage", "tests", "test_failures", "test_errors", "tests", "test_execution_time", "test_success_density"],
        api.documentMetrics = ["comment_lines", "comment_lines_density", "public_documented_api_density", "public_undocumented_api", "public_api"],
        api.sizeMetrics = ["ncloc", "lines", "statements", "files", "classes", "packages", "functions", "accessors"],
        api.dashboardMetrics = [],
        api.dashboardMetrics = api.dashboardMetrics.concat(api.issuesMetrics, api.duplicateMetrics, api.complexityMetrics, api.coverageMetrics, api.documentMetrics, api.sizeMetrics),
        api.helps = {
            size: {
                title: "大小指标说明",
                html: ["<div class='qc-help'>", "<strong class='title'>大小指标说明</strong>", "<p><span class='intro'>代码行数：</span><span class='content'>不包括空格、注释的代码行数。</span></p>", "<p><span class='intro'>总行数：</span><span class='content'>包括空格、注释的代码行数。</span></p>", "</div>"].join(""),
                content: "代码行数：不包括空格、注释的代码行数。<br/>总行数:包括空格、注释的代码行数。"
            },
            issues: {
                title: "违反规则说明",
                html: ["<div class='qc-help'>", "<strong class='title'>违反规则说明</strong>", "<p><span class='intro'>阻断错误：</span><span class='content'>阻断程序进程的问题。</span></p>", "<p><span class='intro'>严重错误：</span><span class='content'>需立即修复的问题。</span></p>", "<p><span class='intro'>主要问题：</span><span class='content'>需要迅速修复的问题。</span></p>", "<p><span class='intro'>次要问题：</span><span class='content'>违反编码最佳实践等，大多为编码规范问题。</span></p>", "<p><span class='intro'>提示信息：</span><span class='content'>如：TODO，FIXME之类信息。</span></p>", "</div>"].join(""),
                content: "阻断错误：阻断程序进程的问题<br/>严重错误：需立即修复的问题<br/>主要问题：需要迅速修复的问题。<br/>次要问题：违反编码最佳实践等，大多为编码规范问题。<br/>提示信息：如：TODO，FIXME之类信息。"
            },
            complexity: {
                title: "复杂度说明",
                html: ["<div class='qc-help'>", "<strong class='title'>复杂度说明</strong>", "<p><span class='intro'>计算方法：</span><span class='content'>例如Java中if, for, while, case, catch, throw, return, &&, ||, ! 可使复杂度+1。</span></p>", "<p><span class='intro'>复杂度：</span><span class='content'>1~10：较简单，低风险<br/>11~20：有些复杂，有些风险<br/>21~50：很复杂，高风险<br/>50：太复杂了。<br/></span></p>", "<p><span class='intro'>方法均值：</span><span class='content'>所有文件复杂度/总方法数。</span></p>", "<p><span class='intro'>类均值：</span><span class='content'>所有文件复杂度/总类数。</span></p>", "<p><span class='intro'>文件均值：</span><span class='content'>所有文件复杂度/总文件数。</span></p>", "<p><span class='intro'>整体复杂度：</span><span class='content'>所有文件复杂度之和。</span></p>", "<p><span class='intro'>方法分布/复杂度：</span><span class='content'>复杂度为x的方法有y个。</span></p>", "<p><span class='intro'>文件分布/复杂度：</span><span class='content'>复杂度为x的文件有y个。</span></p>", , "</div>"].join(""),
                content: "例如Java中if, for, while, case, catch, throw, return, &&, ||, ! 可使复杂度+1。<br/>复杂度：1~10：较简单，低风险<br/>11~20：有些复杂，有些风险<br/>21~50：很复杂，高风险<br/>50：太复杂了。<br/>方法均值：所有文件复杂度/总方法数。<br/>类均值：所有文件复杂度/总类数。<br/>文件均值:所有文件复杂度/总文件数。<br/>整体复杂度：所有文件复杂度之和。<br/>方法分布/复杂度：复杂度为x的方法/文件有y个。<br/>文件分布/复杂度：复杂度为x的文件/方法有y个。<br/>"
            },
            coverage: {
                title: "测试覆盖率说明",
                html: ["<div class='qc-help'>", "<strong class='title'>测试覆盖率说明</strong>", "<p><span class='intro'>行覆盖率：</span><span class='content'>100行代码，有95行被测到，就算95%。</span></p>", "<p><span class='intro'>分支覆盖率：</span><span class='content'>例如：<br/>if - elseif - else<br/>若只测到if內的code就只有33%，<br/>若测到 if - elseif 就是66%，<br/>若if - elseif - else全測到就是100%。<br/></span></p>", "<p><span class='intro'>成功率：</span><span class='content'>测试总数 - (失败数+错误数) / 测试总数。</span></p>", "<p><span class='intro'>失败数：</span><span class='content'>断言失败数。</span></p>", "<p><span class='intro'>错误数：</span><span class='content'>带有错误的测试数。</span></p>", "<p><span class='intro'>运行测试总数：</span><span class='content'>分析运行的测试数。</span></p>", "<p><span class='intro'>运行测试耗时：</span><span class='content'>分析运行所有测试耗时。</span></p>", "</div>"].join(""),
                content: "行覆盖率：100行代码，有95行被测到，就算95%。<br/>分支覆盖率：例如：<br/>if - elseif - else<br/>若只测到if內的code就只有33%，<br/>若测到 if - elseif 就是66%，<br/>若if - elseif - else全測到就是100%。<br/>成功率：测试总数 - (失败数+错误数) / 测试总数。<br/>失败数：断言失败数。<br/>错误数：带有错误的测试数。<br/>运行测试总数：最新一次项目分析运行的测试数。<br/>运行测试耗时：最新一次项目分析运行所有测试耗时。<br/>"
            },
            document: {
                title: "文档和注释说明",
                html: ["<div class='qc-help'>", "<strong class='title'>文档和注释说明</strong>", "<p><span class='intro'>注释行数：</span><span class='content'>Javadoc、多行注释、单行注释的总数。空注释行、头文件中的注释（主要用于定义许可证）以及commented-out行均不会包括在内。</span></p>", "<p><span class='intro'>注释率：</span><span class='content'>注释行数/(注释行数+有效代码行数)。</span></p>", "<p><span class='intro'>添加注释的公有API数 / 公有API数：</span><span class='content'>添加注释的公有API数 / 公有API数。</span></p>", "</div>"].join(""),
                content: "注释行数：Javadoc、多行注释、单行注释的总数。空注释行、头文件中的注释（主要用于定义许可证）以及commented-out行均不会包括在内。<br/>注释率：注释行数/(注释行数+有效代码行数)。<br/>已注释公共API比率：添加注释的公有API数 / 公有API数。<br/>"
            },
            duplication: {
                title: "重复率说明",
                html: ["<div class='qc-help'>", "<strong class='title'>重复率说明</strong>", "<p><span class='intro'>重复率：</span><span class='content'>重复代码行 / 代码总行数（包含空格和注释）。</span></p>", "<p><span class='intro'>重复行数：</span><span class='content'>涉及至少一次重复的源码行数。</span></p>", "<p><span class='intro'>重复块数：</span><span class='content'>包含重复行的代码块数。</span></p>", "<p><span class='intro'>重复文件数：</span><span class='content'>包含重复行的文件数。</span></p>", "</div>"].join(""),
                content: "重复率：重复代码行 / 代码总行数（包含空格和注释）。<br/>重复行数：涉及至少一次重复的源码行数。<br/>重复块数：包含重复行的代码块数。<br/>重复文件数：包含重复行的文件数。<br/>"
            }
        },
        api.severities = {
            violations: {
                index: 1,
                key: "violations",
                name: "所有问题",
                intro: "所有的问题",
                icon: "green filter circle icon",
                violation: "violations",
                rule_violation: ["violations", "blocker_violations", "critical_violations", "major_violations", "minor_violations", "info_violations"]
            },
            blocker: {
                index: 2,
                key: "blocker",
                name: "阻断错误",
                intro: "阻断程序进程的问题",
                icon: "red ban circle icon",
                violation: "blocker_violations",
                rule_violation: ["blocker_violations"]
            },
            critical: {
                index: 3,
                key: "critical",
                name: "严重错误",
                intro: "需要立即修复的问题",
                icon: "red frown icon",
                violation: "critical_violations",
                rule_violation: ["critical_violations"]
            },
            major: {
                index: 4,
                key: "major",
                name: "主要问题",
                intro: "需要迅速修复的问题",
                icon: "green attention icon",
                violation: "major_violations",
                rule_violation: ["major_violations"]
            },
            minor: {
                index: 5,
                key: "minor",
                name: "次要问题",
                intro: "违反编码最佳实践等，大多为编码规范问题",
                icon: "gray exclamation icon",
                violation: "minor_violations",
                rule_violation: ["minor_violations"]
            },
            info: {
                index: 6,
                key: "info",
                name: "提示信息",
                intro: "如：TODO，FIXME之类信息",
                icon: "info icon",
                violation: "info_violations",
                rule_violation: ["info_violations"]
            }
        },
        api.getTask = function(arg) {
            var deferred = $q.defer();
            if (!arg.ref || arg.ref.length <= 0) {
                var taskPromise = api.taskActions.last_task({
                    username: arg.username,
                    project_name: arg.project_name
                });
                taskPromise.then(function(result) {
                    deferred.resolve(result)
                }),
                    taskPromise["catch"](function(error) {
                        deferred.reject(error)
                    })
            } else {
                var taskPromise = api.taskActions.get_task({
                    username: arg.username,
                    project_name: arg.project_name,
                    ref: arg.ref
                });
                taskPromise.then(function(result) {
                    deferred.resolve(result)
                }),
                    taskPromise["catch"](function(error) {
                        deferred.reject(error)
                    })
            }
            return deferred.promise
        }
        ,
        api.langExchange = {
            py: "pythone",
            flex: "actionscript"
        },
        api.formatMetric = function(metrics) {
            if (!metrics || metrics.length <= 0)
                return null ;
            var ret = {};
            return angular.forEach(metrics, function(metric, key) {
                this[metric.metricKey] = {
                    value: metric.value,
                    formatValue: metric.formattedValue,
                    data: metric.data
                }
            }, ret),
                ret
        }
        ,
        api.processMeasures = function(result) {
            return result && result[0] && result[0].measures || []
        }
        ,
        api.value = function(obj, value) {
            return obj ? obj.value || value : value
        }
        ,
        api.totalValue = function(values) {
            for (var max = 0, i = 0; i < values.length; i++)
                max += values[i];
            return max
        }
        ,
        api.percentage = function(value, total) {
            var val = Math.floor(value / total * 100 * 10) / 10;
            return {
                value: val,
                formatValue: val + "%"
            }
        }
        ,
        api.readyDashboard = function(result) {
            if (result) {
                result.issues_violation_max = api.totalValue([result.blocker_violations.value || 0, result.critical_violations.value || 0, result.major_violations.value || 0, result.minor_violations.value || 0, result.info_violations.value || 0]),
                    result.function_complexity_distribution = encodeURIComponent(result.function_complexity_distribution && result.function_complexity_distribution.data || 0),
                    result.file_complexity_distribution = encodeURIComponent(result.file_complexity_distribution && result.file_complexity_distribution.data || 0),
                    result.test_density_arc = null ;
                var test_fail = result.test_failures ? result.test_failures.value : 0
                    , tests = result.tests ? result.tests.value : 0;
                result.test_failures_density = api.percentage(test_fail, tests);
                var test_error_value = 100 - api.value(result.test_success_density, 0) - api.value(result.test_failures_density, 100);
                return result.test_errors_density = {
                    value: test_error_value,
                    formatValue: test_error_value + "%"
                },
                result.test_success_density && result.test_success_density.value > 0 && (result.test_density_arc = result.test_density_arc || [],
                    result.test_density_arc.push({
                        label: "成功率",
                        value: result.test_success_density.value,
                        formatValue: result.test_success_density.formatValue,
                        color: "#ABB8B1",
                        showComment: !0
                    })),
                result.test_failures_density && result.test_failures_density.value > 0 && (result.test_density_arc = result.test_density_arc || [],
                    result.test_density_arc.push({
                        label: "失败率",
                        value: result.test_failures_density.value,
                        formatValue: result.test_failures_density.formatValue,
                        color: "#D08C57",
                        showComment: !0
                    })),
                result.test_errors_density && result.test_errors_density.value > 0 && (result.test_density_arc = result.test_density_arc || [],
                    result.test_density_arc.push({
                        label: "错误率",
                        value: result.test_errors_density.value,
                        formatValue: result.test_errors_density.formatValue,
                        color: "#AB0300",
                        showComment: !0
                    })),
                result.branch_coverage && result.branch_coverage.value > 0 && (result.branch_coverage_arc = [{
                    label: "分支覆盖率",
                    value: result.branch_coverage ? result.branch_coverage.value : 0,
                    formatValue: result.branch_coverage ? result.branch_coverage.formatValue : "0.0%",
                    color: "#56b2d7",
                    showComment: !0
                }, {
                    label: "无",
                    value: 100 - (result.branch_coverage ? result.branch_coverage.value : 0),
                    formatValue: 100 - (result.branch_coverage ? result.branch_coverage.value : 0) + "%",
                    color: "#5CD3EB",
                    showComment: !1
                }]),
                result.line_coverage && result.line_coverage.value > 0 && (result.line_coverage_arc = [{
                    label: "行覆盖率",
                    value: result.line_coverage ? result.line_coverage.value : 0,
                    formatValue: result.line_coverage ? result.line_coverage.formatValue : "0.0%",
                    color: "#D98652",
                    showComment: !0
                }, {
                    label: "无",
                    value: 100 - (result.line_coverage ? result.line_coverage.value : 0),
                    formatValue: 100 - (result.line_coverage ? result.line_coverage.value : 0) + "%",
                    color: "#EC935B",
                    showComment: !1
                }]),
                    result.comment_lines_density_arc = [{
                        label: "注释率",
                        value: api.value(result.comment_lines_density, 0),
                        formatValue: api.value(result.comment_lines_density, 0) + "%",
                        color: "#56b2d7",
                        showComment: !0
                    }, {
                        label: "无",
                        value: 100 - api.value(result.comment_lines_density, 0),
                        formatValue: 100 - api.value(result.comment_lines_density, 0) + "%",
                        color: "#5CD3EB",
                        showComment: !1
                    }],
                    result.public_documented_api_density_arc = [{
                        label: "公共Api注释率",
                        value: api.value(result.public_documented_api_density, 0),
                        formatValue: api.value(result.public_documented_api_density, 0) + "%",
                        color: "#D98652",
                        showComment: !0
                    }, {
                        label: "无",
                        value: 100 - api.value(result.public_documented_api_density, 0),
                        formatValue: 100 - api.value(result.public_documented_api_density, 0) + "%",
                        color: "#EC935B",
                        showComment: !1
                    }],
                    result
            }
        }
        ,
        api.formatRules = function(issues) {
            if (!issues || issues.length <= 0)
                return [];
            var ret = [];
            return angular.forEach(issues, function(issue, key) {
                this.push({
                    value: issue.formattedValue,
                    type: issue.ruleSeverity,
                    name: issue.ruleName,
                    key: issue.ruleKey
                })
            }, ret),
                ret
        }
        ,
        api.formatFolders = function(folders) {
            var ret = [];
            return angular.forEach(folders, function(folder, key) {
                var value = folder.measures && folder.measures[0] ? folder.measures[0].value || 0 : 0;
                value > 0 && ret.push({
                    key: folder.key,
                    name: folder.name,
                    longName: folder.longName,
                    formatValue: folder.measures && folder.measures[0] ? folder.measures[0].formattedValue || 0 : 0,
                    value: value
                })
            }, ret),
                ret
        }
        ,
        api.dashboard = function(arg, callback) {
            api.qcActions.resources({
                username: arg.username,
                project_name: arg.project_name,
                resource: arg.resourceKey,
                metrics: api.dashboardMetrics.join(","),
                format: "json"
            }, function(result) {
                callback && callback(api.readyDashboard(api.formatMetric(api.processMeasures(result.data)))),
                    result = null
            })
        }
        ,
        api.code_dashboard = function(arg, callback) {
            api.qcActions.resources({
                username: arg.username,
                project_name: arg.project_name,
                resource: arg.resourceKey,
                metrics: api.dashboardMetrics.join(","),
                format: "json"
            }, function(result) {
                callback && callback(api.formatMetric(api.processMeasures(result.data))),
                    result = null
            })
        }
        ,
        api.issues = function(arg, callback) {
            api.qcActions.resources({
                username: arg.username,
                project_name: arg.project_name,
                resource: arg.resourceKey,
                metrics: api.issuesMetrics.join(","),
                format: "json"
            }, function(result) {
                callback && callback(api.formatMetric(api.processMeasures(result.data))),
                    result = null
            })
        }
        ,
        api.duplicate = function(arg, callback) {
            api.qcActions.resources({
                username: arg.username,
                project_name: arg.project_name,
                resource: arg.resourceKey,
                metrics: api.duplicateMetrics.join(","),
                format: "json"
            }, function(result) {
                callback && callback(api.formatMetric(api.processMeasures(result.data))),
                    result = null
            })
        }
        ,
        api.complexity = function(arg, callback) {
            api.qcActions.resources({
                username: arg.username,
                project_name: arg.project_name,
                resource: arg.resourceKey,
                metrics: api.complexityMetrics.join(","),
                format: "json"
            }, function(result) {
                callback && callback(api.formatMetric(api.processMeasures(result.data))),
                    result = null
            })
        }
        ,
        api.coverage = function(arg, callback) {
            api.qcActions.resources({
                username: arg.username,
                project_name: arg.project_name,
                resource: arg.resourceKey,
                metrics: api.coverageMetrics.join(","),
                format: "json"
            }, function(result) {
                callback && callback(api.formatMetric(api.processMeasures(result.data))),
                    result = null
            })
        }
        ,
        api.document = function(arg, callback) {
            api.qcActions.resources({
                username: arg.username,
                project_name: arg.project_name,
                resource: arg.resourceKey,
                metrics: api.documentMetrics.join(","),
                format: "json"
            }, function(result) {
                callback && callback(api.formatMetric(api.processMeasures(result.data))),
                    result = null
            })
        }
        ,
        api.size = function(arg, callback) {
            api.qcActions.resources({
                username: arg.username,
                project_name: arg.project_name,
                resource: arg.resourceKey,
                metrics: api.sizeMetrics.join(","),
                format: "json"
            }, function(result) {
                callback && callback(api.formatMetric(api.processMeasures(result.data))),
                    result = null
            })
        }
        ,
        api.checkViolations = function(violations) {
            var nviolations = [];
            return nviolations = nviolations.concat(violations)
        }
        ,
        api.rules = function(arg, callback) {
            arg.violations = api.checkViolations(arg.violations),
                api.qcActions.resources({
                    username: arg.username,
                    project_name: arg.project_name,
                    resource: arg.resourceKey,
                    metrics: arg.violations.join(","),
                    rules: !0,
                    format: "json"
                }, function(result) {
                    callback && callback(api.formatRules(api.processMeasures(result.data))),
                        result = null
                })
        }
        ,
        api.files = function(arg, callback) {
            arg.metrics = api.checkViolations(arg.metrics);
            var args = {
                username: arg.username,
                project_name: arg.project_name,
                resource: arg.resourceKey,
                metrics: arg.metrics.join(","),
                depth: 1,
                format: "json"
            };
            arg.rules && arg.rules.length >= 0 && (args.rules = arg.rules),
                api.qcActions.resources(args, function(result) {
                    callback && callback(api.formatFolders(result.data)),
                        result = null
                })
        }
        ,
        api.range = function(sources) {
            var range = [];
            for (var i in sources)
                range.push(+i);
            return range
        }
        ,
        api.sort = function(sorts, fn) {}
        ,
        api.highlightCodeLines = function(sources, lang) {
            var lines = {}
                , nums = [];
            angular.forEach(sources, function(v, k) {
                lang = api.langExchange[lang] || lang;
                var code = hljs.highlight(lang, v).value;
                this[k] = code,
                    nums.push(k)
            }, lines);
            var min, max;
            return min = max = nums[0] || 0,
                angular.forEach(nums, function(value, idx) {
                    min = Math.min(min, value),
                        max = Math.max(max, value)
                }),
            {
                start: min,
                end: max,
                lines: lines
            }
        }
        ,
        api.source = function(arg, callback) {
            api.qcActions.sources({
                username: arg.username,
                project_name: arg.project_name,
                resource: arg.resourceKey,
                from: arg.from || 0,
                lines: arg.lines || 1
            }, function(result) {
                return callback && callback({
                        html: api.highlightCodeLines(result && result.data ? result.data.lines : [], arg.lang),
                        range: api.range(result && result.data ? result.data.lines : []),
                        source: result && result.data ? result.data.lines : []
                    })
            })
        }
        ,
        api.formatSeverities = function(severities) {
            var ret = [];
            return angular.forEach(severities, function(severty, key) {
                ret.push(severty.toUpperCase())
            }, ret),
                ret
        }
        ,
        api.formatComponents = function(components) {
            var component = {};
            for (var key in components) {
                var cont = components[key];
                if (cont && "FIL" == cont.qualifier) {
                    component = {
                        key: cont.key,
                        name: cont.longName,
                        file: cont.name
                    };
                    break
                }
            }
            return component
        }
        ,
        api.formatIssues = function(result) {
            var rules = {};
            angular.forEach(result.rules || [], function(rule, key) {
                rules[rule.key] = rule
            }, rules);
            var linesIssues = {}
                , line = [];
            angular.forEach(result.issues || [], function(issue, key) {
                issue.line > 0 && line.push(issue.line);
                var lissue = linesIssues[issue.line] || [];
                lissue.push({
                    message: issue.message,
                    open: !1,
                    severity: issue.severity,
                    rule: rules[issue.rule] || {}
                }),
                    linesIssues[issue.line] = lissue
            }, linesIssues);
            var min, max;
            return min = max = line[0] || 0,
                angular.forEach(line, function(value, idx) {
                    min = Math.min(min, value),
                        max = Math.max(max, value)
                }),
                min = 1 > min - 5 ? 1 : min - 5,
                max += 5,
            {
                from: min,
                lines: max - min,
                issues: linesIssues
            }
        }
        ,
        api.issueDetail = function(arg, callback) {
            var nseverities = [];
            nseverities = nseverities.concat(arg.severities);
            var issuesPromise = api.qcActions.issues({
                username: arg.username,
                project_name: arg.project_name,
                componentRoots: arg.resourceKey,
                rules: arg.rules,
                severities: api.formatSeverities(nseverities).join(","),
                pageIndex: arg.pageIndex || 1,
                pageSize: arg.pageSize || 200
            });
            issuesPromise.$promise.then(function(result) {
                if (result.data) {
                    var code = api.formatIssues(result.data)
                        , file = api.formatComponents(result.data.components);
                    api.source({
                        username: arg.username,
                        project_name: arg.project_name,
                        resourceKey: arg.resourceKey,
                        from: code.from,
                        lines: code.lines,
                        lang: arg.lang
                    }, function(source) {
                        var ncode = [];
                        ncode.push({
                            num: 0,
                            issues: code.issues && code.issues[0]
                        });
                        for (var k = code.from; k < code.from + code.lines; k++)
                            "undefined" != source.html[k] && ncode.push({
                                num: k,
                                source: {
                                    html: source.html.lines[k],
                                    source: source.source[k]
                                },
                                issues: code.issues && code.issues[k]
                            });
                        code = null ,
                        callback && callback({
                            language: arg.lang,
                            file: file,
                            lines: ncode
                        }),
                            result = null ,
                            source = null
                    })
                }
            })
        }
        ,
        api.formatDuplicationResources = function(resources, language) {
            var getFileName = function(key) {
                    return !key || key.length <= 0 ? "" : key.substring(key.lastIndexOf("/") + 1, key.length)
                }
                , getFilePath = function(key) {
                    return !key || key.length <= 0 ? "" : key.substring(key.lastIndexOf(":") + 1, key.length)
                }
                ;
            if (!resources || resources.length <= 0)
                return [];
            var ret = [];
            return angular.forEach(resources, function(group, index) {
                angular.forEach(group, function(file, idx) {
                    file.show = 0 == idx,
                        file.name = getFileName(file.resource),
                        file.path = getFilePath(file.resource);
                    var html = api.highlightCodeLines(file && file.source ? file.source.lines : [], language);
                    file.html = [];
                    for (var i = html.start; i < html.end; i++)
                        file.html.push({
                            num: i,
                            html: html.lines[i]
                        })
                }),
                    ret.push(group)
            }, ret),
                ret
        }
        ,
        api.duplications = function(arg, callback) {
            api.qcActions.duplications({
                username: arg.username,
                project_name: arg.project_name,
                resource: arg.resourceKey,
                once: arg.once
            }, function(result) {
                callback && callback({
                    name: result.data.longName,
                    file: result.data.name,
                    language: result.data.language,
                    duplications: api.formatDuplicationResources(result.data.duplicationResources, result.data.language)
                }),
                    result = null
            })
        }
        ,
        api.createTask = function(data, func) {
            var url = "/api/user/" + (data.username || "") + "/project/" + (data.project_name || "") + "/qc/task/init"
                , actions = {
                save: {
                    method: "POST",
                    url: url
                }
            }
                , res = $resource("", {}, actions);
            res = Reference.agentAll(res, {}, actions),
                res.save(data, func)
        }
        ,
        api
}
]),
    angular.module("services").factory("Reference", ["$q", "$timeout", "Flash", "Errors", "Setting", function($q, $timeout, Flash, Errors, Setting) {
        var api_error_tips = {
                500: "服务器内部错误，有人要扣奖金了～",
                502: "服务器正在更新，请稍后再试。",
                504: "服务器正在更新，请稍候再试。",
                400: "服务器/页面接口请求不匹配，前端要扣工资了～",
                404: "请求的数据接口不存在"
            }
            , api_error_handlers = {
                502: function(error) {}
            }
            , handleBasicErrors = function(error) {
                var msg = ["[", error.status, "]", error.statusText, " - <em>", error.config && error.config.url || "", "</em>"].join("");
                0 != error.status && $timeout(function() {
                    Flash.fail().timeout(5e3).send(api_error_tips[error.status] || msg)
                }, 1e3);
                var handler = api_error_handlers[error.status];
                angular.isFunction(handler) && handler(error)
            }
            , handleErrors = function(error, errorCallback) {
                errorCallback && angular.isFunction(errorCallback) ? errorCallback.call(null , error) !== !1 && handleBasicErrors(error) : handleBasicErrors(error)
            }
            , removeReference = function(result, handlers, isArray) {
                var new_handlers = {};
                return result.data && angular.forEach(handlers || {}, function(handler, name) {
                    var item = result.data;
                    isArray && (item = angular.isArray(item) ? item[0] : result.data.list,
                        item = angular.isArray(item) ? item[0] : item),
                    item && angular.isUndefined(item[name]) && (new_handlers[name] = handler)
                }),
                    new_handlers
            }
            , agent = function(method, args, handlers, isArray) {
                if (!method)
                    return void console.error("[Reference] method to be agent does not exist!");
                var slice = Array.prototype.slice
                    , len = args ? args.length : 0
                    , arg = slice.call(args, 0, len - 1)
                    , callback = slice.call(args, len - 1, len)[0];
                angular.isFunction(callback) || (callback = void 0);
                var deferred = $q.defer()
                    , agent_promise = deferred.promise
                    , errorCallback = null
                    , finallyCallback = null
                    , defaultCallback = function(value) {
                        return value
                    }
                    ;
                agent_promise["catch"] = function(callback) {
                    return errorCallback = callback,
                        this.then(null , callback)
                }
                    ,
                    agent_promise["finally"] = function(callback) {
                        function makePromise(value, resolved) {
                            var result = $q.defer();
                            return resolved ? result.resolve(value) : result.reject(value),
                                result.promise
                        }
                        function handleCallback(value, isResolved) {
                            var callbackOutput = null ;
                            try {
                                callbackOutput = (callback || defaultCallback)()
                            } catch (e) {
                                return makePromise(e, !1)
                            }
                            return callbackOutput && isFunction(callbackOutput.then) ? callbackOutput.then(function() {
                                return makePromise(value, isResolved)
                            }, function(error) {
                                return makePromise(error, !1)
                            }) : makePromise(value, isResolved)
                        }
                        return finallyCallback = callback,
                            this.then(function(value) {
                                return handleCallback(value, !0)
                            }, function(error) {
                                return handleCallback(error, !1)
                            })
                    }
                ;
                var rtn = method.apply(this, angular.isFunction(callback) ? arg : args)
                    , promise = getPromise(rtn);
                return promise["catch"](function(error) {
                    return handleErrors(error, errorCallback)
                }),
                    promise.then(function(result) {
                        if (-1 !== result.code) {
                            if (0 != result.code && errorCallback && angular.isFunction(errorCallback))
                                return void (errorCallback(null , result) !== !1 && Errors.handle(result));
                            if (0 != result.code)
                                return Errors.handle(result),
                                    void (finallyCallback && finallyCallback(null , result));
                            if (handlers = removeReference(result, handlers, isArray),
                                    $.isEmptyObject(handlers))
                                return callback && callback(result),
                                    void deferred.resolve(result);
                            var success = function(r) {
                                result.data.list ? result.data.list = r : result.data = r,
                                callback && callback(result)
                            }
                                , inner_promise = isArray ? doArrayResolve(result.data.list || result.data, handlers, success) : doResolve(result.data.list || result.data, handlers, success);
                            inner_promise.then(function(r) {
                                result.data.list ? result.data.list = r : result.data = r,
                                    deferred.resolve(result)
                            })
                        }
                    }),
                    promise["finally"](function() {
                        finallyCallback && finallyCallback()
                    }),
                    agent_promise
            }
            , agentAll = function(API, methods, actions) {
                var API3 = {
                    methods: methods,
                    resolve: resolve
                }
                    , acts = angular.copy(actions);
                return $.isEmptyObject(methods) || angular.forEach(methods, function(hanlders, method_name) {
                    acts && acts[method_name] && delete acts[method_name];
                    var isArray = angular.copy(hanlders.isArray);
                    "undefined" != typeof isArray && delete hanlders.isArray;
                    var method = angular.copy(API[method_name]);
                    API3[method_name] = function() {
                        var promise = agent(method, arguments, hanlders, isArray);
                        return promise
                    }
                }),
                acts && angular.forEach(acts, function(opt, method_name) {
                    var method = angular.copy(API[method_name]);
                    API3[method_name] = function() {
                        return agent(method, arguments)
                    }
                }),
                    angular.extend(API, API3)
            }
            , resolve = function(method, data, callback) {
                var deferred = $q.defer()
                    , isArray = angular.isArray(data)
                    , handlers = this.methods[method]
                    , inner_promise = isArray ? doArrayResolve(data, handlers, callback) : doResolve(data, handlers, callback);
                return inner_promise.then(function(r) {
                    deferred.resolve(r)
                }),
                    deferred.promise
            }
            , getPromise = function($resouceOr$httpReturn) {
                var promise = {};
                try {
                    promise = $resouceOr$httpReturn.$promise || $resouceOr$httpReturn
                } catch (e) {
                    promise = $resouceOr$httpReturn
                }
                return promise || {}
            }
            , doResolve = function(item, handlers, callback) {
                var deferred = $q.defer()
                    , promises = []
                    , data = angular.copy(item);
                return item && !$.isEmptyObject(handlers) ? angular.forEach(handlers, function(handler, name) {
                    var promise = getPromise(handler.call(this, item))
                        , key = name.split("_")[0];
                    promise.then ? (promises.push(promise),
                        promise.then(function(result) {
                            ("undefined" == typeof result.code || 0 == result.code) && (data[key] = result.data || result)
                        })) : data[key] = promise
                }) : $timeout(function() {
                    deferred.resolve(data)
                }, 30),
                    $q.all(promises).then(function() {
                        callback && callback(data),
                            deferred.resolve(data)
                    }),
                    deferred.promise
            }
            , doArrayResolve = function(array, handlers, callback) {
                var deferred = $q.defer()
                    , promises = []
                    , data = [];
                return angular.forEach(array, function(item, i) {
                    var promise = doResolve(item, handlers);
                    promises.push(promise),
                        promise.then(function(result) {
                            data[i] = result
                        })
                }),
                    $q.all(promises).then(function() {
                        callback && callback(data),
                            deferred.resolve(data)
                    }),
                    deferred.promise
            }
            ;
        return {
            agent: agent,
            agentAll: agentAll,
            resolve: resolve,
            getPromise: getPromise
        }
    }
    ]),
    angular.module("services").service("TextService", ["TaskCommentService", function(TaskCommentService) {
        return {
            text: TaskCommentService.text
        }
    }
    ]),
    angular.module("services").factory("Time", function() {
        return {
            friendly: function(ms, suffix) {
                return moment(ms).fromNow(suffix)
            }
        }
    }),
    angular.module("constants").constant("Setting", {
        host: "https://coding.net",
        api_host: "https://coding.net"
    }),
    function() {
        angular.module("app").controller("CiController", ["$scope", "$routeParams", "$location", function($scope, $routeParams, $location) {
            $scope.inner_menu = "ci",
                $scope.tag_menu = "ci",
                $scope.loaded = !0,
            $scope.USER || $location.path($scope.PROJECT.project_path),
            $scope.USER.test && _.indexOf($scope.USER.test, "ci") < 0 && $location.path($scope.PROJECT.project_path)
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("CodeInsightIndexController", ["$scope", "$routeParams", "$route", "CodeInsight", "Flash", "$location", function($scope, $routeParams, $route, CodeInsight, Flash, $location) {
            return $scope.inner_menu = "codeInsight",
                $scope.tag_menu = "codeInsight",
                $scope.loaded = !1,
                CodeInsight.tasks({
                    username: $routeParams.username,
                    project_name: $routeParams.project_name
                }, function(result) {
                    return $scope.tasks = result.data.tasks,
                        $scope.loaded = !0
                }),
                $scope["delete"] = function(task) {
                    return CodeInsight["delete"]({
                        username: $routeParams.username,
                        project_name: $routeParams.project_name
                    }, {
                        id: task.id
                    }, function(result) {
                        return Flash.success().send("删除版本成功"),
                            $route.reload()
                    })
                }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("CodeInsightNewController", ["$scope", "$routeParams", "$route", "CodeInsight", "Flash", "$location", function($scope, $routeParams, $route, CodeInsight, Flash, $location) {
            var checkProgress, getStatusHuman, p;
            return $scope.inner_menu = "codeInsight",
                $scope.tag_menu = "codeInsight",
                $scope.loaded = !1,
                $scope.submit_loading = !1,
                $scope.showStatus = !1,
                $scope.newTaskCommitId = "",
                $scope.name = "",
            "owner" !== $scope.PROJECT.current_user_role && "member" !== $scope.PROJECT.current_user_role && $location.path($scope.PROJECT.project_path + "/codeInsight/index"),
                CodeInsight.lastTask({
                    username: $routeParams.username,
                    project_name: $routeParams.project_name
                }, function(result) {
                    angular.isUndefined(result.data) || ($scope.status = result.data.status,
                        $scope.statusHuman = getStatusHuman($scope.status),
                        $scope.commitId = result.data.commit_id.substring(0, 7),
                        $scope.task_id = result.data.id,
                    (0 === $scope.status || 1 === $scope.status) && ($scope.showStatus = !0)),
                        $scope.loaded = !0,
                        checkProgress()
                }),
                checkProgress = function() {
                    return $scope.USER && $scope.task_id && (0 === $scope.status || 1 === $scope.status) ? CodeInsight.checkProgress({
                        username: $routeParams.username,
                        project_name: $routeParams.project_name,
                        task_id: $scope.task_id
                    }).then(function(result) {
                        var progress, show, total;
                        return total = result.data.total,
                            progress = result.data.progress,
                            show = progress / total,
                        0 === show && (show = 1e-4),
                            $scope.showPercent = show,
                            show = (100 * show).toFixed(2),
                            $("#code-insight-loading").children(".bar").css("width", "" + show + "%"),
                            $scope.status = result.data.status,
                            $scope.statusHuman = getStatusHuman($scope.status),
                            3 === $scope.status ? $location.path($scope.PROJECT.project_path + "/codeInsight/index") : void 0
                    }) : void 0
                }
                ,
                getStatusHuman = function(status) {
                    return 0 === status ? "排队中" : 1 === status ? "分析中" : 2 === status ? "分析失败" : 3 === status ? "已完成" : void 0
                }
                ,
                p = setInterval(function() {
                    return checkProgress()
                }, 5e3),
                $scope.create_task = function(commitId, name) {
                    return commitId ? ($scope.submit_loading = !0,
                        CodeInsight.create_task({
                            username: $routeParams.username,
                            project_name: $routeParams.project_name
                        }, {
                            ref: commitId,
                            name: name
                        }, function(result) {
                            return result.data && $location.path($scope.PROJECT.project_path + "/codeInsight/index"),
                                $scope.submit_loading = !1,
                                $scope.showStatus = !0,
                                Flash.success().send("开始扫描代码，稍后即可阅读"),
                                $route.reload()
                        })["catch"](function(result, error) {
                            $scope.submit_loading = !1
                        })) : void 0
                }
                ,
                $scope.$on("$destroy", function() {
                    return clearInterval(p)
                })
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").service("CodeInsightService", ["CodeInsight", "$rootScope", "$routeParams", function(CodeInsight, $rootScope, $routeParams) {
            var checkProgress, component, getCommitId, getDefine, getFile, getTree, htmlEncode, register, safeApply, setBreadCrumb, setStructure, showDefine;
            return getTree = function(username, project_name, commit_id, path) {
                return CodeInsight.tree({
                    username: username,
                    project_name: project_name,
                    commit_id: commit_id,
                    path: path
                })
            }
                ,
                getFile = function(username, project_name, commit_id, path) {
                    return CodeInsight.file({
                        username: username,
                        project_name: project_name,
                        commit_id: commit_id,
                        path: path
                    })
                }
                ,
                getCommitId = function(username, project_name) {
                    return CodeInsight.commitId({
                        username: username,
                        project_name: project_name
                    })
                }
                ,
                getDefine = function(username, project_name, commit_id, pid, fid, stid, etid) {
                    return CodeInsight.define({
                        username: username,
                        project_name: project_name,
                        commit_id: commit_id,
                        pid: pid,
                        fid: fid,
                        stid: stid,
                        etid: etid
                    })
                }
                ,
                checkProgress = function(task_id) {
                    return CodeInsight.checkProgress({
                        task_id: task_id
                    })
                }
                ,
                safeApply = function(scope, fn) {
                    var e, phase;
                    phase = null ;
                    try {
                        phase = scope.$root.$$phase
                    } catch (_error) {
                        return void (e = _error)
                    }
                    "$apply" === phase || "$digest" === phase ? fn && "function" == typeof fn && fn() : scope.$apply(fn)
                }
                ,
                register = function(id, component) {
                    var components, exists;
                    components = $rootScope.components,
                    components || (components = $rootScope.components = []),
                        exists = _.find(components, {
                            cid: id
                        }),
                    exists || (component.cid = id,
                        $rootScope.components.push(component))
                }
                ,
                component = function(id) {
                    var exists;
                    return exists = _.find($rootScope.components, {
                        cid: id
                    })
                }
                ,
                showDefine = function() {
                    angular.element("#define").addClass("hidden"),
                        angular.element("span[decl]").on("click", function() {
                            var etid, fid, params, pid, stid;
                            return params = $(this).attr("decl").split("&"),
                                pid = params[0].split("=")[1],
                                fid = params[1].split("=")[1],
                                stid = params[2].split("=")[1],
                                etid = params[3].split("=")[1],
                                getCommitId($routeParams.username, $routeParams.project_name).then(function(result) {
                                    return $scope.commitId = result.data.commitId,
                                        getDefine($routeParams.username, $routeParams.project_name, $scope.commitId, pid, fid, stid, etid).then(function(result) {
                                            var full_name, position, project_name;
                                            return full_name = result.data.full_name.split("/"),
                                                2 === full_name.length ? (project_name = '<a href="/u/' + full_name[0] + "/p/" + full_name[1] + '/git">' + full_name[1] + "</a>",
                                                    angular.element("#define").html('<div class="definebar"><span class="definebar path">' + project_name + "/" + htmlEncode(result.data.path) + '</span><i class="remove icon"></i></div><div class="define-content">' + htmlEncode(result.data.content) + "</div>"),
                                                    angular.element("#define").removeClass("hidden"),
                                                    position = angular.element("#define span[id=T" + stid + "]").position(),
                                                    angular.element(".define-content").scrollTop(position.top - 60),
                                                    angular.element(angular.element("#define span[id=T" + stid + "]")).parent().attr("style", "background:yellow"),
                                                    angular.element(angular.element("#define span[id=T" + etid + "]")).parent().attr("style", "background:yellow"),
                                                    angular.element("i.remove.icon").on("click", function() {
                                                        return $(this).parent().parent().addClass("hidden")
                                                    })) : void 0
                                        })
                                })
                        })
                }
                ,
                setBreadCrumb = function(url, path) {
                    var breadcrumbHtml, commitId, paths, project_name, urlReg, urls, username;
                    return urlReg = new RegExp("^/u/([^/]+)/p/([^/]+)/codeInsight/show/([^/]+)/(.+)$"),
                        urls = urlReg.exec(url),
                        urls && 5 === urls.length ? (username = urls[1],
                            project_name = urls[2],
                            commitId = urls[3],
                            paths = path.split("/"),
                            breadcrumbHtml = [],
                            breadcrumbHtml.push('<ol class="breadcrumb">'),
                            breadcrumbHtml.push("<li><a>" + project_name + "</a></li>"),
                            $(paths).each(function(index, path) {
                                return breadcrumbHtml.push("<li><a>" + htmlEncode(path) + "</a></li>")
                            }),
                            breadcrumbHtml.push("</ol>"),
                            $(".codeInsight-breadcrumb").html(breadcrumbHtml.join(""))) : void 0
                }
                ,
                setStructure = function(html) {
                    var fontSize, isWin, structure;
                    return $(".left-structure").html(""),
                        structure = $(html)[$(html).length - 1],
                        $(structure).hasClass("skeleton") ? (isWin = -1 !== navigator.appVersion.indexOf("Windows"),
                            fontSize = isWin ? 14 : 12,
                            $(".left-structure").css("font-size", fontSize + "px"),
                            $(".left-structure").html(structure),
                            $(".left-structure").find(".member").on("click", function() {
                                $(".code-insight.showcode.active").scrollTop(0),
                                    $(".code-insight.showcode.active").scrollTop($(".code-insight.showcode.active").find("#L" + $(this).attr("lno")).position().top + 18)
                            })) : void 0
                }
                ,
                htmlEncode = function(str) {
                    var div;
                    return div = document.createElement("div"),
                        div.appendChild(document.createTextNode(str)),
                        div.innerHTML
                }
                ,
            {
                getTree: getTree,
                getFile: getFile,
                getCommitId: getCommitId,
                getDefine: getDefine,
                safeApply: safeApply,
                register: register,
                component: component,
                showDefine: showDefine,
                setBreadCrumb: setBreadCrumb,
                setStructure: setStructure,
                htmlEncode: htmlEncode
            }
        }
        ]),
            angular.module("app").controller("CodeInsightController", ["$scope", "$routeParams", "$location", "CodeInsightService", "CodeInsight", function($scope, $routeParams, $location, CodeInsightService, CodeInsight) {
                return $location.path($scope.PROJECT.project_path + "/codeInsight/index").replace()
            }
            ])
    }
        .call(this),
    function() {
        angular.module("app").controller("CodeInsightShowController", ["$scope", "$routeParams", "$location", "CodeInsightService", "CodeInsight", "ipCookie", "QcService", function($scope, $routeParams, $location, CodeInsightService, CodeInsight, ipCookie, QcService) {
            return $scope.path = "",
                $scope.treePath = "",
                $scope.parent = !1,
                $scope.tasks = [],
                "" === $scope.ref ? ($scope.loaded = !0,
                    void ($scope.empty = !0)) : ($scope.showQcInfo = ipCookie("showQcInfo") || !1,
                        $scope.commitId = $routeParams.commit_id,
                        $scope.path = $routeParams.path || "",
                        CodeInsight.tasks({
                            username: $routeParams.username,
                            project_name: $routeParams.project_name
                        }, function(result) {
                            var empty, item;
                            return $scope.tasks = result.data.tasks,
                                empty = !1,
                                $($scope.tasks).each(function(i, v) {
                                    return v.commit_id === $scope.commitId ? empty = !0 : void 0
                                }),
                                item = {
                                    commit_id: $scope.commitId
                                },
                                empty ? void 0 : $scope.tasks.unshift(item)
                        }),
                        $scope.qcHelps = {
                            title: "违反规则说明",
                            html: ["<div class='qc-help'>", "<strong class='title'>需要在项目代码中创建相同版本的质量管理才有效果，显示代码诊断信息会导致读取文件变慢</strong>", "<p><span class='intro'>违反规则说明</span></p>", "<p><span class='intro'><i class='red ban circle icon'></i>阻断错误：</span><span class='content'>阻断程序进程的问题。</span></p>", "<p><span class='intro'><i class='red frown icon'></i>严重错误：</span><span class='content'>需立即修复的问题。</span></p>", "<p><span class='intro'><i class='green attention icon'></i>主要问题：</span><span class='content'>需要迅速修复的问题。</span></p>", "<p><span class='intro'><i class='gray exclamation icon'></i>次要问题：</span><span class='content'>违反编码最佳实践等，大多为编码规范问题。</span></p>", "<p><span class='intro'><i class='info icon'></i>提示信息：</span><span class='content'>如：TODO，FIXME之类信息。</span></p>", "</div>"].join(""),
                            content: "阻断错误：阻断程序进程的问题<br/>严重错误：需立即修复的问题<br/>主要问题：需要迅速修复的问题。<br/>次要问题：违反编码最佳实践等，大多为编码规范问题。<br/>提示信息：如：TODO，FIXME之类信息。"
                        },
                        $scope.changeShowQcInfo = function() {
                            ipCookie("showQcInfo", $scope.showQcInfo)
                        }
                        ,
                        $scope.changeCommitId = function(commitId) {
                            return location.href = "/u/" + $routeParams.username + "/p/" + $routeParams.project_name + "/codeInsight/show/" + commitId
                        }
                )
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("CodeInsightTabsController", ["$scope", "$routeParams", "$location", "CodeInsightService", "Tabs", function($scope, $routeParams, $location, CodeInsightService, Tabs) {
            var tab;
            return tab = new Tabs($scope,[]),
                CodeInsightService.register("CodeTabs", tab),
                $scope.panes = tab.panes
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("BlameController", ["$scope", "$rootScope", "$routeParams", "Depot", "$location", "Errors", "PageTitle", function($scope, $rootScope, $routeParams, Depot, $location, Errors, PageTitle) {
            var region, url;
            return $scope.type = "blame",
                $scope.inner_menu = "basic",
                $scope.tag_menu = "basic",
                $scope.loaded = !1,
                $scope.empty = !1,
                $scope.blame = {},
                $scope.path = [],
                $scope.ref = $scope.DEPOT.default_branch || "master",
                url = $location.path(),
                region = url.substring(url.search("/git/blame/") + 11, url.length),
                $scope.DEPOT === !1 ? void ($scope.empty = !0) : (Depot.blame({
                        username: $routeParams.username,
                        project_name: $routeParams.project_name,
                        region: encodeURIComponent(region)
                    }, function(result) {
                        return $scope.blame = result.data,
                            $scope.path = encodeURIComponent(result.data.file.path).replace(/%2F/g, "/"),
                            $scope.ref = encodeURIComponent(result.data.ref).replace(/%2F/g, "/"),
                            $scope.blob_url = $scope.PROJECT.project_path + "/git/blob/" + $scope.ref + "/" + $scope.path,
                            $scope.raw_url = $scope.PROJECT.project_path + "/git/raw/" + $scope.ref + "/" + $scope.path,
                            $scope.commits_url = $scope.PROJECT.project_path + "/git/commits/" + $scope.ref + "/" + $scope.path,
                            $scope.blame_url = $scope.PROJECT.project_path + "/git/blame/" + $scope.ref + "/" + $scope.path,
                            PageTitle.set("按行查看 " + result.data.file.path, $scope.PROJECT.owner.global_key, $scope.PROJECT.name, "Coding.net"),
                            $scope.loaded = !0
                    }),
                        $scope.isSame = function(line1, line2, index) {
                            var last_index;
                            return last_index = index - 1,
                            last_index >= 0 && line2.commitId === line1.commitId
                        }
                )
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("BlobController", ["$scope", "$routeParams", "$location", "Depot", "Errors", "PageTitle", "Flash", "CodeInsight", function($scope, $routeParams, $location, Depot, Errors, PageTitle, Flash, CodeInsight) {
            var region, url;
            return $scope.inner_menu = "basic",
                $scope.tag_menu = "basic",
                $scope.type = "blob",
                $scope.isHead = !1,
                $scope.can_edit = !1,
                $scope.loaded = !1,
                $scope.empty = !1,
                $scope.blob = [],
                $scope.ref = [],
                $scope.path = [],
                $scope.CodingUrl = $location.path(),
                $scope.DEPOT === !1 ? void ($scope.empty = !0) : (url = $location.path(),
                        region = url.substring(url.search("/git/blob/") + 10, url.length),
                        Depot.blob({
                            username: $routeParams.username,
                            project_name: $routeParams.project_name,
                            region: encodeURIComponent(region)
                        }, function(result) {
                            return result.data.file ? ($scope.blob = result.data,
                                $scope.ref = encodeURIComponent(result.data.ref).replace(/%2F/g, "/"),
                                $scope.path = encodeURIComponent(result.data.file.path).replace(/%2F/g, "/"),
                                $scope.raw_url = ($scope.PROJECT.project_path + "/git/raw/" + $scope.ref + "/" + $scope.path).replace(/%2F/g, "/"),
                                $scope.isHead = result.data.isHead,
                                $scope.can_edit = result.data.can_edit,
                                $scope.loaded = !0,
                                PageTitle.set(result.data.file.path, $scope.PROJECT.owner.global_key, $scope.PROJECT.name, "Coding.net"),
                                $scope.PROJECT.plan > 1 && result.data.ref === $scope.DEPOT.default_branch && result.data.isHead ? CodeInsight.task({
                                    username: $routeParams.username,
                                    project_name: $routeParams.project_name,
                                    commit_id: result.data.headCommit.commitId
                                }, function(result) {
                                    return result.data ? $scope.codeInsightTask = result.data : $scope.codeInsightTask = {
                                        status: -1
                                    },
                                        $scope.codeInsightTask.link = "/u/" + $routeParams.username + "/p/" + $routeParams.project_name + "/codeInsight/show/" + $scope.blob.headCommit.commitId + "/" + $scope.path
                                }) : void 0) : (Flash.fail().send("路径不存在"),
                                $location.path("/u/" + $routeParams.username + "/p/" + $routeParams.project_name + "/git/tree/" + encodeURIComponent(result.data.ref)).replace(/%2F/g, "/"))
                        }),
                        $scope.copyCommit = function() {
                            $scope.showCopyIcon = !0,
                                setTimeout(function() {
                                    $scope.showCopyIcon = !1,
                                        $scope.$digest()
                                }, 1e3)
                        }
                )
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("ChangeDefaultBranchModalCtrl", ["$scope", "Depot", "$routeParams", function($scope, Depot, $routeParams) {
            var branchesPromise;
            if ($scope.DEPOT.hasCommits)
                return $scope.default_branch = $scope.DEPOT.default_branch,
                    $scope.form = {
                        default_branch: $scope.default_branch
                    },
                    $scope.submiting = !1,
                    branchesPromise = Depot.listBranches({
                        username: $routeParams.username,
                        project_name: $scope.PROJECT.name
                    }),
                    branchesPromise.then(function(result) {
                        return $scope.branches = result.data
                    }),
                    $scope.submit = function() {
                        var promise;
                        if ($scope.form.default_branch !== $scope.DEPOT.default_branch)
                            return $scope.submiting = !0,
                                promise = Depot.setDefaultBranch({
                                    username: $routeParams.username,
                                    project_name: $scope.PROJECT.name
                                }, $scope.form),
                                promise.then(function() {
                                    var default_branch_index, pre_default_branch_index;
                                    return pre_default_branch_index = _.findIndex($scope.$parent.branches, function(branch) {
                                        return branch.name === $scope.DEPOT.default_branch
                                    }),
                                    pre_default_branch_index > -1 && ($scope.$parent.branches[pre_default_branch_index].is_default_branch = !1),
                                        default_branch_index = _.findIndex($scope.$parent.branches, function(branch) {
                                            return branch.name === $scope.form.default_branch
                                        }),
                                    default_branch_index > -1 && ($scope.$parent.branches[default_branch_index].is_default_branch = !0),
                                        $scope.DEPOT.default_branch = $scope.form.default_branch
                                }),
                                promise["finally"](function() {
                                    $scope.submiting = !1
                                })
                    }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("BranchIndexController", ["$scope", "$routeParams", "$location", "Depot", "Errors", "PageTitle", "Pager", "Flash", "ModalService", function($scope, $routeParams, $location, Depot, Errors, PageTitle, Pager, Flash, ModalService) {
            var CPager, changeDefaultBranchModal, loadBranches, loadProtectedBranchMembers, pager_id;
            return $scope.inner_menu = "branch",
                $scope.tag_menu = "branch",
                $scope.loaded = !1,
                $scope.branches = [],
                $scope.branchMembers = [],
                changeDefaultBranchModal = $scope.changeDefaultBranchModal = ModalService.instance("change-default-branch-modal"),
                pager_id = $scope.pager_id = (new Date).getTime(),
                CPager = Pager.instance(pager_id, $scope),
                loadBranches = function(page) {
                    return Depot.branches({
                        page: page,
                        username: $routeParams.username,
                        project_name: $routeParams.project_name
                    }, function(result) {
                        0 === result.code && result.data && ($scope.branches = result.data.list,
                            CPager.optionsReady(result.data)),
                            PageTitle.set("分支", $scope.PROJECT.owner.global_key, $scope.PROJECT.name, "Coding.net"),
                            $scope.loaded = !0
                    })
                }
                ,
                CPager.onChange(function(page) {
                    loadBranches(page)
                }),
                loadBranches(1),
                loadProtectedBranchMembers = function(branch_name) {
                    return Depot.listProtectedBranchMember({
                        username: $routeParams.username,
                        project_name: $routeParams.project_name,
                        branch_name: branch_name
                    }, function(result) {
                        0 === result.code ? $scope.branchMembers = result.data : Errors.handle(result)
                    })
                }
                ,
                $scope.delete_branch = function(branch) {
                    return confirm("确定要删除该分支(" + branch.name + ")么？") ? Depot.delete_branch({
                        username: $routeParams.username,
                        project_name: $routeParams.project_name
                    }, {
                        branch_name: branch.name
                    }, function(result) {
                        return Flash.success().send("删除成功"),
                            $scope.branches = $.map($scope.branches, function(b) {
                                return b.name !== branch.name ? b : void 0
                            })
                    }) : void 0
                }
                ,
                $scope.protected_branch = function(branch) {
                    $(".ui.checkbox").checkbox(),
                        branch.show_protected_branch_setting ? branch.show_protected_branch_setting = !1 : (loadProtectedBranchMembers(branch.name),
                            $($scope.branches).each(function(i, a) {
                                a.show_protected_branch_setting = a.name === branch.name
                            }))
                }
                ,
                $scope.toggleProtectedBranch = function(branch) {
                    return branch.is_protected ? Depot.enableProtectedBranch({
                        username: $routeParams.username,
                        project_name: $routeParams.project_name
                    }, {
                        branch_name: branch.name
                    }, function(result) {
                        return Flash.success().send("启用保护分支(" + branch.name + ")成功！"),
                            loadProtectedBranchMembers(branch.name)
                    })["catch"](function(error, result) {
                        member.has_update_access = !1
                    }) : Depot.disableProtectedBranch({
                        username: $routeParams.username,
                        project_name: $routeParams.project_name
                    }, {
                        branch_name: branch.name
                    }, function(result) {
                        return Flash.success().send("关闭保护分支(" + branch.name + ")成功！"),
                            loadProtectedBranchMembers(branch.name)
                    })["catch"](function(error, result) {
                        branch.is_protected = !0
                    })
                }
                ,
                $scope.toggleMember = function(branch, member) {
                    return member.has_update_access ? Depot.addProtectedBranchMember({
                        username: $routeParams.username,
                        project_name: $routeParams.project_name
                    }, {
                        branch_name: branch.name,
                        target_global_key: member.user.global_key
                    }, function(result) {
                        return Flash.success().send("添加保护分支成员(" + member.user.name + ")成功！")
                    })["catch"](function(error, result) {
                        member.has_update_access = !1
                    }) : Depot.removeProtectedBranchMember({
                        username: $routeParams.username,
                        project_name: $routeParams.project_name
                    }, {
                        branch_name: branch.name,
                        target_global_key: member.user.global_key
                    }, function(result) {
                        return Flash.success().send("移除保护分支成员(" + member.user.name + ")成功！")
                    })["catch"](function(error, result) {
                        member.has_update_access = !0
                    })
                }
                ,
                $scope.changeDefaultBranch = function() {
                    return changeDefaultBranchModal.toggle()
                }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("BranchNewController", ["$scope", "$routeParams", "$location", "Depot", "PageTitle", "Pager", "Flash", function($scope, $routeParams, $location, Depot, PageTitle, Pager, Flash) {
            return $scope.inner_menu = "branch",
                $scope.tag_menu = "branch",
                $scope.loaded = !1,
                $scope.new_branch = {},
                $scope.create_branch = function(branch) {
                    return Depot.create_branch({
                        username: $routeParams.username,
                        project_name: $routeParams.project_name
                    }, {
                        branch_name: branch.name,
                        start_point: branch.start_point
                    }, function(result) {
                        return Flash.success().send("创建成功"),
                            $location.path($scope.PROJECT.project_path + "/git/branches")
                    })
                }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("CommitController", ["$scope", "$rootScope", "$routeParams", "Depot", "location", "ipCookie", "Errors", "PageTitle", function($scope, $rootScope, $routeParams, Depot, $location, ipCookie, Errors, PageTitle) {
            var region, url;
            return $scope.inner_menu = "basic",
                $scope.tag_menu = "basic",
                $scope.location = $location,
                $scope.loaded = !1,
                $scope.diffHtml = "",
                $scope.diffStat = {},
                $scope.commit = {},
                $scope.href = $location.path(),
                $scope.diffMode = $routeParams.diff || ipCookie("diff_mode") || "",
            "" !== $scope.diffMode && ipCookie("diff_mode", $scope.diffMode, {
                path: "/"
            }),
                $scope.ignoreWhitespace = "1" === $routeParams.w,
                $scope.enableWhitespace = !0,
                url = $location.path(),
                region = url.substring(url.search("/git/commit/") + 12, url.length),
                Depot.commit({
                    username: $routeParams.username,
                    project_name: $routeParams.project_name,
                    region: encodeURIComponent(region),
                    diff: $scope.diffMode,
                    w: $scope.ignoreWhitespace ? "1" : ""
                }, function(result) {
                    var diffComments, inlineComments;
                    return result.data.commitDetail ? ($scope.commit = result.data.commitDetail,
                        $scope.diffStat = $scope.commit.diffStat,
                        $scope.diffHtml = $scope.commit.diffHtml) : ($scope.commit = result.data.commit,
                        $scope.diffStat = result.data.diffStat,
                        $scope.diffTooLong = result.data.message),
                        $scope.shortMessage = $scope.commit.shortMessage,
                        $scope.fullMessage = $scope.commit.fullMessage,
                        $scope.allMessage = $scope.commit.allMessage,
                        PageTitle.set("Commit", $scope.commit.commitId, $scope.PROJECT.owner.global_key, $scope.PROJECT.name, "Coding.net"),
                        $scope.loaded = !0,
                        inlineComments = [],
                        diffComments = [],
                        angular.forEach(result.data.commitComments, function(comment) {
                            return 0 === comment.position ? diffComments.push(comment) : inlineComments.push(comment)
                        }),
                        $scope.commitId = $scope.commit.commitId,
                        $scope.noteable_type = "Commit",
                        $scope.diffComments = diffComments,
                        $scope.showForm = !0,
                        $scope.atConfig = {
                            target: $rootScope.PROJECT,
                            type: "project_topic"
                        },
                        $scope.notes_params = {
                            commitId: $scope.commitId,
                            comments: inlineComments,
                            noteable_type: $scope.noteable_type,
                            atConfig: $scope.atConfig
                        }
                }),
                $scope.replacePath = function(path) {
                    return path.replace(/[./]/g, "_")
                }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("CommitsController", ["$scope", "$routeParams", "Depot", "$location", "Pager", "PageTitle", "GitService", function($scope, $routeParams, Depot, $location, Pager, PageTitle, GitService) {
            var loadCommits, region, url;
            return $scope.type = "commits",
                $scope.inner_menu = "basic",
                $scope.tag_menu = "basic",
                $scope.loaded = !1,
                $scope.commits = {},
                $scope.current_page = $routeParams.page || 1,
                $scope.cur_path = $location.path(),
                $scope.page_size = 10,
                url = $location.path(),
                region = url.substring(url.search("/git/commits/") + 13, url.length),
                loadCommits = function(url, page) {
                    return Depot.commits({
                        username: $routeParams.username,
                        project_name: $routeParams.project_name,
                        region: encodeURIComponent(region),
                        page: page
                    }, function(result) {
                        $scope.commits = result.data.commits.list,
                            $scope.commitsWithDate = GitService.commitsGroupByDate($scope.commits),
                            $scope.current_page = result.data.commits.page,
                            $scope.page_size = result.data.commits.pageSize,
                            $scope.path = encodeURIComponent(result.data.path).replace(/%2F/g, "/"),
                            $scope.ref = encodeURIComponent(result.data.ref).replace(/%2F/g, "/"),
                            $scope.path && $scope.path.length > 0 ? PageTitle.set(result.data.path + " 提交历史", $scope.PROJECT.owner.global_key, $scope.PROJECT.name, "Coding.net") : PageTitle.set("提交历史", $scope.PROJECT.owner.global_key, $scope.PROJECT.name, "Coding.net"),
                            $scope.loaded = !0
                    })
                }
                ,
                loadCommits(url, $scope.current_page),
                $scope.copyCommit = function(commit) {
                    commit.showCopyIcon = !0,
                        setTimeout(function() {
                            commit.showCopyIcon = !1,
                                $scope.$digest()
                        }, 1e3)
                }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("CompareController", ["$scope", "$routeParams", "Depot", "location", "ipCookie", "Errors", "PageTitle", "GitService", function($scope, $routeParams, Depot, $location, ipCookie, Errors, PageTitle, GitService) {
            var region, url;
            return $scope.inner_menu = "compare",
                $scope.tag_menu = "basic",
                $scope.location = $location,
                $scope.commits = null ,
                $scope.ref1 = "",
                $scope.ref2 = "",
                $scope.diff = null ,
                $scope.diffStat = null ,
                $scope.diffMode = $routeParams.diff || ipCookie("diff_mode") || "",
            "" !== $scope.diffMode && ipCookie("diff_mode", $scope.diffMode, {
                path: "/"
            }),
                $scope.ignoreWhitespace = "1" === $routeParams.w,
                $scope.enableWhitespace = !0,
                url = $location.path(),
                region = url.substring(url.search("/git/compare/") + 13, url.length),
            url.indexOf("...") > 0 && Depot.compare({
                username: $routeParams.username,
                project_name: $routeParams.project_name,
                region: encodeURIComponent(region),
                diff: $scope.diffMode,
                w: $scope.ignoreWhitespace ? "1" : ""
            }, function(result) {
                var _ref;
                return $scope.commits = result.data.commits,
                    $scope.commitsWithDate = GitService.commitsGroupByDate($scope.commits),
                    $scope.commitId = null  != (_ref = $scope.commits[0]) ? _ref.commitId : void 0,
                    $scope.diff = result.data.diff,
                    $scope.diffStat = result.data.diff ? result.data.diff.diffStat : result.data.diffStat,
                    $scope.diffHtml = result.data.diff.htmlDiff,
                    $scope.ref1 = result.data.ref1,
                    $scope.ref2 = result.data.ref2,
                    $scope.nocommits = result.data.nocommits,
                    PageTitle.set("对比", "" + result.data.ref1 + "..." + result.data.ref2, $scope.PROJECT.owner.global_key, $scope.PROJECT.name, "Coding.net"),
                    $scope.switchTab(parseInt($routeParams.tab) || 1)
            }),
                $scope.submitCompare = function(ref1, ref2) {
                    $location.path($scope.PROJECT.project_path + "/git/compare/" + ref1 + "..." + ref2)
                }
                ,
                $scope.replacePath = function(path) {
                    return path.replace(/[./]/g, "_")
                }
                ,
                $scope.subMessage = function(commit, length) {
                    var isLen;
                    return isLen = length >= commit.shortMessage.length,
                        length = isLen ? commit.shortMessage.length : length,
                    commit.shortMessage.substring(0, length) + (isLen ? "" : "...")
                }
                ,
                $scope.populateCommits = function(commits) {
                    var arr, commit, commitDateFormat, i;
                    for (i in commits)
                        commit = commits[i],
                            commitDateFormat = $scope.dateFormat(commit.commitTime),
                            $scope.commits = $scope.commits || {},
                            arr = $scope.commits[commitDateFormat] || [],
                            arr.push(commit),
                            $scope.commits[commitDateFormat] = arr
                }
                ,
                $scope.dateFormat = function(time) {
                    var d;
                    return d = new Date(time),
                        Number.prototype.padLeft = function(base, chr) {
                            var len;
                            return len = String(base || 10).length - String(this).length + 1,
                                len > 0 ? new Array(len).join(chr || "0") + this : this
                        }
                        ,
                        [d.getFullYear(), (d.getMonth() + 1).padLeft(), d.getDate().padLeft()].join(".");
                }
                ,
                $scope.switchTab = function(index) {
                    $scope.switchTabValue = index,
                    1 === index && (index = void 0),
                        $location.skipReload().search("tab", index)
                }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("DeleteFileInGitController", ["$scope", "$routeParams", "$location", "Depot", "PageTitle", "Flash", "Errors", function($scope, $routeParams, $location, Depot, PageTitle, Flash, Errors) {
            var region, url;
            return $scope.inner_menu = "basic",
                $scope.tag_menu = "basic",
                $scope.type = "blob",
                $scope.checkEdited = !0,
                $scope.message = "",
                $scope.tree_url = $location.$$path.replace("/delete/", "/blob/"),
                url = $location.path(),
                region = url.substring(url.search("/git/delete/") + 12, url.length),
                $scope.DEPOT === !1 ? void ($scope.empty = !0) : (Depot.delete_tree({
                        username: $routeParams.username,
                        project_name: $routeParams.project_name,
                        region: encodeURIComponent(region)
                    }, function(result) {
                        return $scope.file = result.data.file,
                            $scope.blob = $scope.file.data,
                            $scope.path = encodeURIComponent($scope.file.path).replace(/%2F/g, "/"),
                            $scope.lastCommit = result.data.lastCommit,
                            $scope.ref = encodeURIComponent(result.data.ref).replace(/%2F/g, "/"),
                            PageTitle.set("删除文件 " + $scope.file.path, $scope.PROJECT.owner.global_key, $scope.PROJECT.name, "Coding.net"),
                            $scope.loaded = !0
                    })["catch"](function(error, result) {
                        $scope.loaded = !0
                    }),
                        $scope.checkMessage = function() {
                            $scope.edited = 0 === $scope.message.length
                        }
                        ,
                        $scope.submit = function(msg) {
                            return $scope.checkEdited = !1,
                                0 !== msg.length ? Depot.do_delete_tree({
                                    username: $routeParams.username,
                                    project_name: $routeParams.project_name,
                                    region: encodeURIComponent(region)
                                }, {
                                    message: msg,
                                    lastCommitSha: $scope.lastCommit
                                }, function(result) {
                                    return $location.path($scope.DEPOT.depot_path),
                                        Flash.success().send("删除成功")
                                }) : void 0
                        }
                )
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("EditFileInGitController", ["$scope", "$routeParams", "$sce", "Depot", "$location", "PageTitle", "Flash", function($scope, $routeParams, $sce, Depot, $location, PageTitle, Flash) {
            var bindDirtyCheck, modelist, region, url;
            return $scope.inner_menu = "basic",
                $scope.tag_menu = "basic",
                $scope.type = "edit",
                $scope.checkEdited = !0,
                $scope.previewed = !1,
                $scope.previewed_data = "",
                modelist = ace.require("ace/ext/modelist"),
                url = $location.path(),
                region = url.substring(url.search("/git/edit/") + 10, url.length),
                $scope.DEPOT === !1 ? void ($scope.empty = !0) : (bindDirtyCheck = function() {
                        var prompt, promptMessage;
                        return promptMessage = "确定要离开页面，将丢失所做更改？",
                            prompt = function() {
                                return $scope.checkEdited && $scope.edited ? promptMessage : void 0
                            }
                            ,
                            $(window).on("beforeunload", prompt),
                            $scope.$on("$locationChangeStart", function(event) {
                                $scope.checkEdited && $scope.edited && !window.confirm(promptMessage) && event.preventDefault()
                            }),
                            $scope.$on("$routeChangeStart", function(event) {
                                $(window).off("beforeunload", prompt)
                            })
                    }
                        ,
                        $scope.aceSettings = {
                            useWrapMode: !0,
                            theme: "tomorrow",
                            showGutter: !0,
                            onLoad: function(_editor) {
                                _editor.getSession().setOption("useWorker", !1)
                            },
                            onChange: function(e) {
                                var editor;
                                editor = e[1],
                                    $scope.data = editor.getValue(),
                                    $scope.edited = !!$scope.file && $scope.data !== $scope.file.data
                            }
                        },
                        Depot.edit_tree({
                            username: $routeParams.username,
                            project_name: $routeParams.project_name,
                            region: encodeURIComponent(region)
                        }, function(result) {
                            $scope.file = result.data.file,
                                $scope.blob = $scope.file.data,
                                $scope.data = $scope.blob,
                                $scope.path = encodeURIComponent($scope.file.path).replace(/%2F/g, "/"),
                                $scope.lastCommit = result.data.lastCommit,
                                $scope.message = "update " + result.data.filename,
                                $scope.ref = result.data.ref,
                                $scope.blob_url = $scope.PROJECT.project_path + "/git/blob/" + $scope.ref + "/" + $scope.path,
                                PageTitle.set("编辑 " + $scope.file.path, $scope.PROJECT.owner.global_key, $scope.PROJECT.name, "Coding.net"),
                                $scope.loaded = !0,
                                bindDirtyCheck(),
                                $scope.aceSettings.mode = modelist.getModeForPath($scope.path).mode.replace("ace/mode/", "")
                        }),
                        $scope.preview_md = function() {
                            return Depot.blobPreview({
                                username: $routeParams.username,
                                project_name: $routeParams.project_name,
                                region: encodeURIComponent(region)
                            }, {
                                data: $scope.data
                            }, function(result) {
                                var html;
                                return 0 === result.code ? (html = result.data.replace(/{{CodingUrl}}/g, $location.path()),
                                    $scope.previewed_data = $sce.trustAsHtml(html),
                                    $scope.previewed = !0) : void 0
                            })
                        }
                        ,
                        $scope.close_preview = function() {
                            return $scope.previewed = !1
                        }
                        ,
                        $scope.is_markdown = function(str) {
                            return new RegExp(/.*(md|mdown|mkdown|markdown|mkdn)$/i).test(str)
                        }
                        ,
                        $scope.applyEdit = function(msg) {
                            return $scope.checkEdited = !1,
                                Depot.update_tree({
                                    username: $routeParams.username,
                                    project_name: $routeParams.project_name,
                                    region: encodeURIComponent(region)
                                }, {
                                    content: $scope.data,
                                    message: msg,
                                    lastCommitSha: $scope.lastCommit
                                }, function(result) {
                                    return $location.path(decodeURIComponent($scope.blob_url)),
                                        Flash.success().send("修改成功")
                                })
                        }
                )
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("NewFileInGitController", ["$scope", "$routeParams", "$location", "Depot", "PageTitle", "Flash", function($scope, $routeParams, $location, Depot, PageTitle, Flash) {
            var bindDirtyCheck, is_markdown, modelist, region, url;
            return $scope.inner_menu = "basic",
                $scope.tag_menu = "basic",
                $scope.type = "new",
                $scope.edited = !0,
                $scope.showLicense = !1,
                $scope.showGitIgnore = !1,
                $scope.gitLicense = "no",
                $scope.gitIgnore = "no",
                $scope.checkEdited = !0,
                $scope.previewed = !1,
                $scope.previewed_data = "",
                $scope.is_markdown = !1,
                $scope.message = "",
                $scope.tree_url = $location.$$path.replace("/new/", "/tree/"),
                $scope.file = {
                    title: $location.search().filename || "",
                    content: ""
                },
                url = $location.path(),
                region = url.substring(url.search("/git/new/") + 9, url.length),
                modelist = ace.require("ace/ext/modelist"),
                $scope.DEPOT === !1 ? void ($scope.empty = !0) : ("README.md" === $scope.file.title ? $scope.file.content = "#" + $scope.PROJECT.name + "\n" : "license" === $scope.file.title.toLowerCase() ? ($scope.showLicense = !0,
                        $scope.showGitIgnore = !1) : ".gitignore" === $scope.file.title ? ($scope.showLicense = !1,
                        $scope.showGitIgnore = !0) : ($scope.showLicense = !1,
                        $scope.showGitIgnore = !1),
                        Depot.new_tree({
                            username: $routeParams.username,
                            project_name: $routeParams.project_name,
                            region: encodeURIComponent(region)
                        }, function(result) {
                            $scope.path = encodeURIComponent(result.data.path).replace(/%2F/g, "/"),
                                $scope.ref = result.data.ref,
                                $scope.lastCommit = result.data.lastCommit,
                                $scope.render_url = $scope.PROJECT.project_path + "/git/blob/" + $scope.ref + "/" + decodeURIComponent($scope.path),
                                PageTitle.set("新建文件 " + result.data.path, $scope.PROJECT.owner.global_key, $scope.PROJECT.name, "Coding.net"),
                                $scope.loaded = !0,
                                bindDirtyCheck()
                        }),
                        bindDirtyCheck = function() {
                            var prompt, promptMessage;
                            return promptMessage = "确定要离开页面，将丢失所做更改？",
                                prompt = function() {
                                    return $scope.checkEdited && $scope.edited ? promptMessage : void 0
                                }
                                ,
                                $(window).on("beforeunload", prompt),
                                $scope.$on("$locationChangeStart", function(event) {
                                    $scope.checkEdited && $scope.edited && !window.confirm(promptMessage) && event.preventDefault()
                                }),
                                $scope.$on("$routeChangeStart", function(event) {
                                    $(window).off("beforeunload", prompt)
                                })
                        }
                        ,
                        $scope.preview_md = function() {
                            return Depot.blobPreview({
                                username: $routeParams.username,
                                project_name: $routeParams.project_name,
                                region: encodeURIComponent(region)
                            }, {
                                data: $scope.data
                            }, function(result) {
                                return 0 === result.code ? ($scope.previewed_data = result.data.replace(/{{CodingUrl}}/g, $location.path()),
                                    $scope.previewed = !0) : void 0
                            })
                        }
                        ,
                        $scope.close_preview = function() {
                            return $scope.previewed = !1
                        }
                        ,
                        is_markdown = function(str) {
                            return new RegExp(/.*(md|mdown|mkdown|markdown|mkdn)$/i).test(str)
                        }
                        ,
                        $scope.changeLicense = function(filename) {
                            return "no" === filename ? void ($scope.file.content = "") : void Depot.getLicense({
                                filename: filename
                            }, function(result) {
                                $scope.file.content = result.data
                            })
                        }
                        ,
                        $scope.changeGitIgnore = function(filename) {
                            return "no" === filename ? void ($scope.file.content = "") : Depot.getGitIgnore({
                                filename: filename
                            }, function(result) {
                                return $scope.file.content = result.data
                            })
                        }
                        ,
                        $scope.aceSettings = {
                            useWrapMode: !0,
                            theme: "tomorrow",
                            showGutter: !0,
                            onLoad: function(_editor) {
                                _editor.getSession().setOption("useWorker", !1)
                            },
                            onChange: function(e) {
                                var editor;
                                editor = e[1],
                                    $scope.data = editor.getValue()
                            }
                        },
                        $scope.checkTitle = function() {
                            "license" === $scope.file.title.toLowerCase() ? ($scope.showLicense = !0,
                                $scope.showGitIgnore = !1) : ".gitignore" === $scope.file.title ? ($scope.showLicense = !1,
                                $scope.showGitIgnore = !0) : ($scope.showLicense = !1,
                                $scope.showGitIgnore = !1),
                                $scope.edited = 0 !== $scope.file.title.length && 0 !== $scope.file.content.length,
                                $scope.is_markdown = is_markdown($scope.file.title)
                        }
                        ,
                        $scope.submit = function(msg) {
                            return $scope.checkEdited = !1,
                                0 !== $scope.file.title.length ? /^[a-zA-Z0-9\u4e00-\u9fa5\.\/_-]+$/.test($scope.file.title) ? $scope.file.title.match(/(?:^[.\/]+[\/])|(\/{2,})|(\.{2,}\/*)|(\/\.\/)|(\/$)/) ? void Flash.fail().send("文件名中含特殊符号！") : (0 === msg.length ? $scope.message = "new file " + $scope.file.title : $scope.message = msg,
                                    Depot.create_tree({
                                        username: $routeParams.username,
                                        project_name: $routeParams.project_name,
                                        region: encodeURIComponent(region)
                                    }, {
                                        title: $scope.file.title,
                                        content: $scope.file.content,
                                        message: $scope.message,
                                        lastCommitSha: $scope.lastCommit
                                    }, function(result) {
                                        return $scope.render_url.lastIndexOf("/") + 1 === $scope.render_url.length ? $scope.render_url = $scope.render_url + $scope.file.title : $scope.render_url = $scope.render_url + "/" + $scope.file.title,
                                            $location.path($scope.render_url),
                                            Flash.success().send("修改成功")
                                    })) : void Flash.fail().send("文件名中含特殊符号！") : void 0
                        }
                )
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("UserKeysSettingController", ["$rootScope", "$scope", "Depot", "Common", "Flash", "PasswordValidateService", function($rootScope, $scope, Depot, Common, Flash, PasswordValidateService) {
            var createKey, deleteKey, vp_modal;
            return vp_modal = $rootScope.ValidatePassword,
                vp_modal.activate(),
                $scope.key_id = "",
                $scope.key_title = "",
                $scope.key_content = "",
                Depot.key_list({
                    username: $scope.USER.global_key,
                    withIDEKey: !0
                }, function(result) {
                    return $scope.keys = result.data
                }),
                $scope.showPasswordWithCreateKey = function(key_title, key_content) {
                    var words;
                    return $scope.key_title = key_title,
                        $scope.key_content = key_content,
                        words = "这个操作很关键，需要进行身份验证",
                        PasswordValidateService.require(words, PasswordValidateService.TYPES.ADD_SSH_KEY)
                }
                ,
                $scope.showPasswordWithDeleteKey = function(key) {
                    var words;
                    return $scope.key_id = key.id,
                        words = "这个操作很关键，需要进行身份验证",
                        PasswordValidateService.require(words, PasswordValidateService.TYPES.DELETE_SSH_KEY)
                }
                ,
                $scope.split = function(content) {
                    var contents;
                    return null  === content || null  !== $scope.key_title && "" !== $scope.key_title || (contents = content.split(" "),
                    3 !== contents.length) ? void 0 : $scope.key_title = contents[2]
                }
                ,
                createKey = function(key_title, key_content, code) {
                    return Depot.key_create({
                        username: $scope.USER.global_key
                    }, {
                        title: key_title,
                        content: key_content,
                        two_factor_code: code
                    }, function(result) {
                        return Flash.success().send("添加成功"),
                            $scope.keys.push(result.data),
                            $scope.key_title = "",
                            $scope.key_content = ""
                    })["catch"](function(error, result) {
                        1401 === result.code && $scope.showPasswordWithCreateKey($scope.key_title, $scope.key_content)
                    })
                }
                ,
                deleteKey = function(key_id, code) {
                    return Depot.key_delete({
                        username: $scope.USER.global_key,
                        key_id: key_id
                    }, {
                        two_factor_code: code
                    }, function(result) {
                        return Flash.success().send("删除成功"),
                            $scope.keys = Common.removeOfId($scope.keys, key_id),
                            $scope.key_id = ""
                    })["catch"](function(error, result) {
                        1401 === result.code && $scope.showPasswordWithDeleteKey($scope.key_id)
                    })
                }
                ,
                PasswordValidateService.onPasswordReady(function(event, password, confirmed, type) {
                    return PasswordValidateService.TYPES.ADD_SSH_KEY === type && confirmed && password ? createKey($scope.key_title, $scope.key_content, password) : PasswordValidateService.TYPES.DELETE_SSH_KEY === type && confirmed && password ? deleteKey($scope.key_id, password) : void 0
                })
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("MergeRequestEditController", ["$scope", "$routeParams", "Depot", "$rootScope", "location", "ipCookie", "PageTitle", "MergeRequestService", "Project", "Common", "Search", function($scope, $routeParams, Depot, $rootScope, $location, ipCookie, PageTitle, MergeRequestService, Project, Common, Search) {
            var memberPromise, taskResultFormat;
            return $scope.inner_menu = "merge",
                $scope.tag_menu = "merge",
                $scope.loaded = !0,
                $scope.members = [],
                memberPromise = Project.membersWithType({
                    project_id: $scope.PROJECT.id,
                    type: $scope.MEMBER
                }),
                memberPromise.then(function(result) {
                    return 0 === result.code ? $scope.members = result.data : void 0
                }),
                Depot.merge_request_show({
                    username: $routeParams.username,
                    project_name: $routeParams.project_name,
                    iid: $routeParams.iid
                }, function(result) {
                    return $scope.merge_request = result.data.merge_request,
                        $scope.reviewers = result.data.reviewers,
                        $scope.reviewers = _.map($scope.reviewers, "reviewer"),
                        $scope.tasks = result.data.tasks,
                        $scope.atConfig = {
                            target: $scope.merge_request,
                            type: "merge_request_comment",
                            extra: $rootScope.PROJECT
                        },
                        $scope.loaded = !1
                }),
                $scope.submiting = !1,
                $scope.submitMergeRequest = function(merge_request) {
                    var reviewers, tasks;
                    return $scope.submiting = !0,
                        tasks = _.map($scope.tasks, "code"),
                        tasks = tasks.join(","),
                        reviewers = _.map($scope.reviewers, "global_key"),
                        reviewers = reviewers.join(","),
                        Depot.merge_request_update({
                            username: $routeParams.username,
                            project_name: $routeParams.project_name,
                            iid: $routeParams.iid
                        }, {
                            title: merge_request.title,
                            tasks: tasks,
                            reviewers: reviewers
                        }, function() {
                            return $location.path($scope.PROJECT.project_path + "/git/merge/" + $routeParams.iid)
                        })["finally"](function() {
                            return $scope.submiting = !1
                        })
                }
                ,
                $scope.cancel = function() {
                    return $location.path($scope.PROJECT.project_path + "/git/merge/" + $routeParams.iid)
                }
                ,
                $scope.task_select = "",
                $("#mr-task-select").select2({
                    placeholder: "请选择",
                    width: "250px",
                    minimumInputLength: 1,
                    ajax: {
                        url: "/api/user/" + $routeParams.username + "/project/" + $routeParams.project_name + "/resource/search",
                        dataType: "json",
                        delay: 250,
                        data: function(query) {
                            return {
                                q: query,
                                type: "Task",
                                pageSize: 6
                            }
                        },
                        results: function(result) {
                            return {
                                results: taskResultFormat(result.data.list)
                            }
                        },
                        cache: !0
                    },
                    formatResult: function(item) {
                        var html;
                        return html = [],
                            html.push("<div class='mr-task-select2-item'><i class='icon tasks'>"),
                            html.push("</i><span style='color: #666'>#" + item.code + "</span>"),
                            html.push("<span style='padding-left: 10px;font-weight: bold;'>" + item.title + "</span></div>"),
                            html.join("")
                    },
                    formatSelection: function(item) {
                        var html;
                        return html = [],
                            html.push("<div class='mr-task-select2-item'><i class='icon tasks'>"),
                            html.push("</i><span style='color: #666'>#" + item.code + "</span>"),
                            html.push("<span style='padding-left: 10px;font-weight: bold;'>" + item.title + "</span></div>"),
                            html.join("")
                    },
                    dropdownCssClass: "bigdrop",
                    escapeMarkup: function(m) {
                        return m
                    }
                }),
                $("#mr-task-select").on("change", function() {
                    return $scope.task_select = $(this).select2("val"),
                        $(this).select2("val", ""),
                        Search.resourceByCode({
                            username: $routeParams.username,
                            project_name: $routeParams.project_name,
                            code: $scope.task_select
                        }, function(result) {
                            var t;
                            return (t = _.find($scope.tasks, function(task) {
                                return task.code === result.data.code
                            })) ? void 0 : $scope.tasks.push(result.data)
                        })
                }),
                $scope.task_remove = function(task) {
                    return _.remove($scope.tasks, task)
                }
                ,
                taskResultFormat = function(tasks) {
                    return tasks instanceof Array ? $.each(tasks, function(index, item) {
                        return item.id = item.code
                    }) : void 0
                }
                ,
                $scope.$on("$destroy", function() {
                    return $("#mr-task-select").select2("destroy"),
                        $("#mr-reviewer-select").select2("destroy")
                })
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("MergeRequestIndexController", ["$scope", "$routeParams", "Depot", "Pager", "MergeRequestService", "$location", function($scope, $routeParams, Depot, Pager, MergeRequestService, $location) {
            var CPager, loadMergeRequests, pager_id;
            return $scope.inner_menu = "merge",
                $scope.tag_menu = "merge",
                $scope.loaded = !1,
                angular.isUndefined($routeParams.region) ? ($scope.tab = "review",
                    Depot.merge_request_list_type({
                        username: $routeParams.username,
                        project_name: $routeParams.project_name
                    }, function(result) {
                        var type;
                        return type = result.data,
                            $routeParams.region = type,
                            $scope.tab = $routeParams.region,
                            $location.path($scope.PROJECT.depot_path + "/merges/" + type).replace(),
                            loadMergeRequests(1)
                    })) : ("review" !== $routeParams.region && "mine" !== $routeParams.region && "with_me" !== $routeParams.region && "other" !== $routeParams.region && ($routeParams.region = "review"),
                    $scope.tab = $routeParams.region,
                    $location.path($scope.PROJECT.depot_path + "/merges/" + $routeParams.region).replace()),
                pager_id = $scope.pager_id = (new Date).getTime(),
                CPager = Pager.instance(pager_id, $scope),
                loadMergeRequests = function(page) {
                    return Depot.merge_request_list({
                        username: $routeParams.username,
                        project_name: $routeParams.project_name,
                        region: $routeParams.region || "review",
                        status: $location.search().status || "open",
                        page: page
                    }, function(result) {
                        return $scope.merges = result.data,
                            CPager.optionsReady(result.data),
                            $scope.loaded = !0
                    })
                }
                ,
                CPager.onChange(function(page) {
                    loadMergeRequests(page)
                }),
                loadMergeRequests(1),
                $scope.getMergeStatusClass = function(merge_status) {
                    return MergeRequestService.getMergeStatusClass(merge_status)
                }
                ,
                $scope.getMergeStatusHuman = function(merge_status) {
                    return MergeRequestService.getMergeStatusHuman(merge_status)
                }
                ,
                $scope.status = $location.$$search.status || "open",
                $scope.getFilterByCenter = function() {
                    var fileter, filter;
                    return "open" === $scope.status ? fileter = "未处理的" : "closed" === $scope.status ? filter = "已处理的" : void 0
                }
                ,
                $scope.getFilter = function() {
                    var fileter, filter;
                    return "open" === $scope.status ? fileter = "未处理" : "closed" === $scope.status ? filter = "已处理" : void 0
                }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("MergeRequestMergeModalCtrl", ["$scope", "Depot", "$routeParams", "$route", function($scope, Depot, $routeParams, $route) {
            return $scope.merge = function(merge_request) {
                return $scope.loaded = !1,
                    Depot.merge_request_merge({
                        username: $routeParams.username,
                        project_name: $routeParams.project_name,
                        iid: $routeParams.iid,
                        message: merge_request.commit_message,
                        del_source_branch: merge_request.delSourceBranch
                    }, {}, function(result) {
                        return $scope.$parent.mergeRequestMergeModal.action("hide"),
                            $route.reload()
                    })["catch"](function(error, result) {
                        $scope.loaded = !0
                    })
            }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("MergeRequestNewController", ["$scope", "$routeParams", "location", "ipCookie", "PageTitle", "MergeRequestService", "Project", "Common", "Search", "GitService", function($scope, $routeParams, $location, ipCookie, PageTitle, MergeRequestService, Project, Common, Search, GitService) {
            var branchesPromise, memberPromise, mrcPromise, taskResultFormat;
            return $scope.location = $location,
                $scope.inner_menu = "merge",
                $scope.tag_menu = "merge",
                $scope.reviewers = [],
                $scope.showDiff = !1,
                $scope.can_merge = !0,
                $scope.loaded = !1,
                $scope.submiting = !1,
                $scope.diffMode = $routeParams.diff || ipCookie("diff_mode") || "",
            "" !== $scope.diffMode && ipCookie("diff_mode", $scope.diffMode, {
                path: "/"
            }),
                $scope.mr_create = {
                    srcBranch: $routeParams.startWith || "",
                    desBranch: $routeParams.endWith || "",
                    title: "",
                    content: ""
                },
                PageTitle.set("创建 Merge Request", $scope.PROJECT.owner.global_key, $scope.PROJECT.name, "Coding.net"),
                $scope.members = [],
                memberPromise = Project.membersWithType({
                    project_id: $scope.PROJECT.id,
                    type: $scope.MEMBER
                }),
                memberPromise.then(function(result) {
                    return 0 === result.code ? $scope.members = result.data : void 0
                }),
                branchesPromise = MergeRequestService.branches($routeParams.username, $routeParams.project_name),
                branchesPromise.then(function(result) {
                    return $scope.branches = result.data
                }),
            "" !== $scope.mr_create.srcBranch && "" !== $scope.mr_create.desBranch && ($scope.showDiff = !1,
                $scope.loaded = !0,
                $scope.diffStat = "",
                $scope.diffHtml = "",
                $scope.commits = "",
                mrcPromise = MergeRequestService.mergeRequestCreate($routeParams.username, $routeParams.project_name, $scope.mr_create.srcBranch, $scope.mr_create.desBranch, $scope.diffMode, $routeParams.w),
                mrcPromise.then(function(result) {
                    var _ref;
                    return $scope.diffStat = result.data.merge_request.diffStat,
                        $scope.diffHtml = result.data.merge_request.htmlDiff,
                        $scope.commits = result.data.merge_request.commits,
                        $scope.commitsWithDate = GitService.commitsGroupByDate($scope.commits),
                        $scope.commitId = null  != (_ref = $scope.commits[0]) ? _ref.commitId : void 0,
                        $scope.showDiff = !0,
                        $scope.loaded = !1,
                        $scope.can_merge = !0,
                        $scope.mr_create.content = "",
                    $scope.commits.length <= 0 && ($scope.can_merge = !1,
                        $scope.showDiff = !1),
                        $scope.switchTab($routeParams.tab || "commits")
                })),
                $scope.createMergeRequest = function(srcBranch, desBranch) {
                    return "" !== srcBranch && "" !== desBranch ? $location.search({
                        startWith: srcBranch,
                        endWith: desBranch
                    }) : void 0
                }
                ,
                $scope.submitMergeRequest = function(merge_request) {
                    var mrsPromise, reviewers, tasks, _ref, _ref1;
                    return $scope.submiting = !0,
                    (null  != (_ref = $scope.reviewers) ? _ref.length : void 0) > 0 && (reviewers = _.map($scope.reviewers, "global_key"),
                        reviewers = reviewers.join(","),
                        $.extend(merge_request, {
                            reviewers: reviewers
                        })),
                    (null  != (_ref1 = $scope.tasks) ? _ref1.length : void 0) > 0 && (tasks = _.map($scope.tasks, "code"),
                        tasks = tasks.join(","),
                        $.extend(merge_request, {
                            tasks: tasks
                        })),
                        mrsPromise = MergeRequestService.mergeRequestSubmit($routeParams.username, $routeParams.project_name, merge_request),
                        mrsPromise.then(function(result) {
                            return $location.url(result.data.merge_request.path),
                                $scope.submiting = !1
                        }),
                        mrsPromise["catch"](function(error, result) {
                            $scope.submiting = !1
                        })
                }
                ,
                $scope.contentUpdate = function($content) {
                    $scope.mr_create.content = $content
                }
                ,
                $scope.switchTab = function(tab) {
                    return $scope.show_diff = tab,
                    "commits" === tab && (tab = void 0),
                        $location.skipReload().search("tab", tab)
                }
                ,
                $scope.task_select = "",
                $scope.tasks = [],
                $("#mr-task-select").select2({
                    placeholder: "请选择",
                    width: "250px",
                    minimumInputLength: 1,
                    ajax: {
                        url: "/api/user/" + $routeParams.username + "/project/" + $routeParams.project_name + "/resource/search",
                        dataType: "json",
                        delay: 250,
                        data: function(query) {
                            return {
                                q: query,
                                type: "Task",
                                pageSize: 6
                            }
                        },
                        results: function(result) {
                            return {
                                results: taskResultFormat(result.data.list)
                            }
                        },
                        cache: !0
                    },
                    formatResult: function(item) {
                        var html;
                        return html = [],
                            html.push("<div class='mr-task-select2-item'><i class='icon tasks'>"),
                            html.push("</i><span style='color: #666'>#" + item.code + "</span>"),
                            html.push("<span style='padding-left: 10px;font-weight: bold;'>" + item.title + "</span></div>"),
                            html.join("")
                    },
                    formatSelection: function(item) {
                        var html;
                        return html = [],
                            html.push("<div class='mr-task-select2-item'><i class='icon tasks'>"),
                            html.push("</i><span style='color: #666'>#" + item.code + "</span>"),
                            html.push("<span style='padding-left: 10px;font-weight: bold;'>" + item.title + "</span></div>"),
                            html.join("")
                    },
                    dropdownCssClass: "bigdrop",
                    escapeMarkup: function(m) {
                        return m
                    }
                }),
                $("#mr-task-select").on("change", function() {
                    return $scope.task_select = $(this).select2("val"),
                        $(this).select2("val", ""),
                        Search.resourceByCode({
                            username: $routeParams.username,
                            project_name: $routeParams.project_name,
                            code: $scope.task_select
                        }, function(result) {
                            var t;
                            return (t = _.find($scope.tasks, function(task) {
                                return task.code === result.data.code
                            })) ? void 0 : $scope.tasks.push(result.data)
                        })
                }),
                $scope.task_remove = function(task) {
                    return _.remove($scope.tasks, task)
                }
                ,
                taskResultFormat = function(tasks) {
                    return tasks instanceof Array ? $.each(tasks, function(index, item) {
                        return item.id = item.code
                    }) : void 0
                }
                ,
                $scope.$on("$destroy", function() {
                    return $("#mr-task-select").select2("destroy"),
                        $("#mr-reviewer-select").select2("destroy")
                })
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("MergeRequestQueryFilterController", ["$location", "$scope", function($location, $scope) {
            return $("#merge-request-filter").dropdown(),
                $scope.change_tab = function(tab) {
                    return $scope.tab = tab,
                        $location.path($scope.PROJECT.depot_path + "/merges/" + tab)
                }
                ,
                $scope.change_status = function(status) {
                    return $scope.status = status,
                        $location.search("status", status)
                }
        }
        ]),
            angular.module("app").service("MergeRequestService", ["Depot", function(Depot) {
                var branches, getMergeStatusClass, getMergeStatusHuman, mergeRequestCreate, mergeRequestSubmit;
                return getMergeStatusHuman = function(merge_status) {
                    return "ACCEPTED" === merge_status ? "已合并" : "REFUSED" === merge_status ? "已拒绝" : "CANMERGE" === merge_status ? "可合并" : "CANNOTMERGE" === merge_status ? "不可自动合并" : "CANCEL" === merge_status ? "已取消" : void 0
                }
                    ,
                    getMergeStatusClass = function(merge_status) {
                        return "pull-right pr-status " + merge_status.toLowerCase()
                    }
                    ,
                    branches = function(username, project_name) {
                        return Depot.listBranches({
                            username: username,
                            project_name: project_name
                        })
                    }
                    ,
                    mergeRequestCreate = function(username, project_name, src_branch, des_branch, diffMode, w) {
                        return Depot.merge_request_create({
                            username: username,
                            project_name: project_name,
                            src_branch: src_branch,
                            des_branch: des_branch,
                            diff: diffMode,
                            w: w
                        })
                    }
                    ,
                    mergeRequestSubmit = function(username, project_name, form) {
                        return Depot.merge_request_submit({
                            username: username,
                            project_name: project_name
                        }, form)
                    }
                    ,
                {
                    getMergeStatusHuman: getMergeStatusHuman,
                    getMergeStatusClass: getMergeStatusClass,
                    branches: branches,
                    mergeRequestCreate: mergeRequestCreate,
                    mergeRequestSubmit: mergeRequestSubmit
                }
            }
            ])
    }
        .call(this),
    function() {
        angular.module("app").controller("MergeRequestShowController", ["$scope", "$rootScope", "$routeParams", "Depot", "$route", "location", "Common", "Project", "MergeRequestService", "LightMdEditorService", "$localStorage", "ipCookie", "ModalService", "Flash", "GitService", function($scope, $rootScope, $routeParams, Depot, $route, $location, Common, Project, MergeRequestService, LightMdEditorService, $localStorage, ipCookie, ModalService, Flash, GitService) {
            var cache_id, commitMessage, loadComments, mergeRequestMergeModal, mergeRequestSquashModal, removeComment, removeMergeRequestWatcher;
            return $scope.location = $location,
                $scope.inner_menu = "merge",
                $scope.tag_menu = "merge",
                $scope.loaded = !1,
                $scope.show_diff = "comment",
                $scope.comments_loaded = !1,
                $scope.squashing = !1,
                $scope.showMergeRequestActivity = !0,
                $scope.merge_request = {},
                $scope.comment = {
                    content: ""
                },
                $scope.comments = [],
                $scope.reloadComments = !1,
                $scope.diffMode = $routeParams.diff || ipCookie("diff_mode") || "",
            "" !== $scope.diffMode && ipCookie("diff_mode", $scope.diffMode, {
                path: "/"
            }),
                cache_id = null ,
                removeMergeRequestWatcher = $scope.$watch("merge_request", function(merge_request) {
                    angular.isDefined(merge_request) && (cache_id = "merge_request_" + merge_request.iid,
                        $scope.comment.content = $localStorage[cache_id],
                    removeMergeRequestWatcher && removeMergeRequestWatcher())
                }),
                removeComment = function(commentId) {
                    var discussions, found;
                    return discussions = [],
                        found = !1,
                        angular.forEach($scope.comments, function(discussion) {
                            return found ? discussions.push(discussion) : (angular.forEach(discussion, function(item) {
                                return item.id === commentId ? found = !0 : void 0
                            }),
                                found ? void 0 : discussions.push(discussion))
                        }),
                        $scope.comments = discussions,
                        $scope.commentCount -= 1
                }
                ,
                loadComments = function() {
                    return $scope.comments_loaded = !1,
                        Depot.merge_request_comments_list({
                            username: $routeParams.username,
                            project_name: $routeParams.project_name,
                            iid: $routeParams.iid
                        }, function(result) {
                            return $scope.comments = result.data,
                                Depot.merge_request_activities_list({
                                    username: $routeParams.username,
                                    project_name: $routeParams.project_name,
                                    iid: $routeParams.iid
                                }, function(result) {
                                    var count;
                                    return $scope.activities = result.data,
                                        count = 0,
                                        angular.forEach($scope.comments, function(discussion) {
                                            return count += discussion.length
                                        }),
                                        angular.forEach($scope.activities, function(activity) {
                                            return $scope.comments.push(new Array(activity))
                                        }),
                                        $scope.comments = _.sortBy($scope.comments, function(item) {
                                            return item[0].created_at
                                        }),
                                        $scope.commentCount = count,
                                        $scope.comments_loaded = !0,
                                        $scope.reloadComments = !1
                                })
                        })
                }
                ,
                $scope.$watch($scope.comment.content, function(newValue, oldValue) {
                    return newValue !== oldValue && cache_id && "" !== newValue ? $localStorage[cache_id] = newValue : void 0
                }),
                Depot.merge_request_show({
                    username: $routeParams.username,
                    project_name: $routeParams.project_name,
                    iid: $routeParams.iid,
                    diff: $scope.diffMode
                }, function(result) {
                    var _ref;
                    return $scope.merge_request = result.data.merge_request,
                        $scope.commits = result.data.merge_request.commits,
                        $scope.commitsWithDate = GitService.commitsGroupByDate($scope.commits),
                        $scope.can_edit = result.data.can_edit,
                        $scope.can_edit_src_branch = result.data.can_edit_src_branch,
                        $scope.author_can_edit = result.data.author_can_edit,
                        $scope.diffStat = $scope.merge_request.diffStat,
                        $scope.diffHtml = $scope.merge_request.htmlDiff,
                        $scope.atConfig = {
                            target: $scope.merge_request,
                            type: "merge_request_comment",
                            extra: $rootScope.PROJECT
                        },
                        $scope.notes_params = {
                            commitId: null  != (_ref = $scope.commits[0]) ? _ref.commitId : void 0,
                            comments: result.data.line_notes,
                            noteable_type: "MergeRequestBean",
                            noteable_id: $scope.merge_request.id,
                            atConfig: $scope.atConfig
                        },
                        $scope.can_edit_src_branch ? $scope.merge_request.delSourceBranch = !0 : $scope.merge_request.delSourceBranch = !1,
                        $scope.showContent($routeParams.tab || "comments"),
                        $scope.reviewers = result.data.reviewers,
                        $scope.volunteerReviewers = result.data.volunteer_reviewers,
                        $scope.current_reviewer = _.find($scope.reviewers, function(reviewer) {
                            return reviewer.reviewer.global_key === $scope.USER.global_key
                        }),
                    angular.isUndefined($scope.current_reviewer) && ($scope.current_reviewer = _.find($scope.volunteerReviewers, function(reviewer) {
                        return reviewer.reviewer.global_key === $scope.USER.global_key
                    })),
                    angular.isUndefined($scope.current_reviewer) && ($scope.current_reviewer = {
                        reviewer: $scope.USER,
                        value: 0,
                        volunteer: "volunteer"
                    }),
                        $scope.tasks = result.data.tasks,
                        commitMessage(),
                        $scope.loaded = !0
                }),
                loadComments(),
                $scope.$watchCollection("current_reviewer", function() {
                    return $scope.merge_request.id ? commitMessage() : void 0
                }),
                commitMessage = function() {
                    var commit_message, has_reviewed, reviewed_message, _ref;
                    return commit_message = [],
                        commit_message.push("Accept Merge Request #" + $routeParams.iid + " " + $scope.merge_request.title + " : "),
                        commit_message.push("(" + $scope.merge_request.srcBranch + " -> " + $scope.merge_request.desBranch + ")\n\n"),
                        commit_message.push("Merge Request: " + $scope.merge_request.title + "\n"),
                        commit_message.push("Created By: @" + $scope.merge_request.author.name + "\n"),
                    (null  != (_ref = $scope.reviewers) ? _ref.length : void 0) > 0 && (reviewed_message = [],
                        reviewed_message.push("Reviewed By: "),
                        has_reviewed = !1,
                        $.each($scope.reviewers, function(index, reviewer) {
                            return 100 === reviewer.value ? (reviewed_message.push("@" + reviewer.reviewer.name + " "),
                                has_reviewed = !0) : void 0
                        }),
                        reviewed_message.push("\n"),
                    has_reviewed && commit_message.push(reviewed_message.join(""))),
                    1 === $scope.merge_request.granted && $scope.merge_request.granted_by && commit_message.push("Approved By: @" + $scope.merge_request.granted_by.name + "\n"),
                        commit_message.push("Accepted By: @" + $scope.USER.name + "\n"),
                        commit_message.push("URL: " + ($location.protocol() + "://" + $location.host() + $location.path())),
                        $scope.merge_request.commit_message = commit_message.join("")
                }
                ,
                $scope.edit = function() {
                    return $location.path($scope.PROJECT.project_path + "/git/merge/" + $routeParams.iid + "/edit")
                }
                ,
                mergeRequestMergeModal = $scope.mergeRequestMergeModal = ModalService.instance("merge-request-merge-modal"),
                mergeRequestSquashModal = $scope.mergeRequestSquashModal = ModalService.instance("merge-request-squash-modal"),
                $scope.toggleMergeModal = function() {
                    return "CANMERGE" === $scope.merge_request.merge_status ? mergeRequestMergeModal.toggle() : void 0
                }
                ,
                $scope.toggleSquashModal = function() {
                    return mergeRequestSquashModal.toggle()
                }
                ,
                $scope.refuse = function(merge_request) {
                    return confirm("确定要拒绝这个 Merge Request 么？") ? ($scope.loaded = !1,
                        Depot.merge_request_refuse({
                            username: $routeParams.username,
                            project_name: $routeParams.project_name,
                            iid: $routeParams.iid
                        }, {}, function(result) {
                            return $route.reload()
                        })["catch"](function(error, result) {
                            $scope.loaded = !0
                        })) : void 0
                }
                ,
                $scope.cancel = function(merge_request) {
                    return confirm("确定要取消这个 Merge Request 么?") ? ($scope.loaded = !1,
                        Depot.merge_request_cancel({
                            username: $routeParams.username,
                            project_name: $routeParams.project_name,
                            iid: $routeParams.iid
                        }, {}, function(result) {
                            return Flash.success().send("取消成功"),
                                $location.path($scope.PROJECT.project_path + "/git/merges")
                        })["catch"](function(error, result) {
                            $scope.loaded = !0
                        })) : void 0
                }
                ,
                $scope.getMergeStatusClass = function(merge_status) {
                    return MergeRequestService.getMergeStatusClass(merge_status)
                }
                ,
                $scope.getMergeStatusHuman = function(merge_status) {
                    return MergeRequestService.getMergeStatusHuman(merge_status)
                }
                ,
                $scope.addComment = function(content) {
                    return $scope.USER ? content.length > 0 ? Depot.add_line_note({
                        username: $routeParams.username,
                        project_name: $routeParams.project_name
                    }, {
                        noteable_type: "MergeRequestBean",
                        noteable_id: $scope.merge_request.id,
                        content: content
                    }, function(result) {
                        return $scope.comments.push([result.data]),
                            $scope.commentCount += 1,
                            delete $localStorage[cache_id]
                    }) : void 0 : void Flash.send("请登录后再评论")
                }
                ,
                $scope.delComment = function(comment) {
                    return comment && confirm("请确认删除该评论") ? Depot.del_line_note({
                        username: $routeParams.username,
                        project_name: $routeParams.project_name,
                        id: comment.id
                    }, function(result) {
                        return removeComment(comment.id)
                    }) : void 0
                }
                ,
                $scope.replyMerges = function(comment) {
                    return comment && comment.author ? LightMdEditorService.atPerson(comment.author.name, "merges-comment-editor") : void 0
                }
                ,
                $scope.showContent = function(item) {
                    return $scope.show_diff = item,
                    "comments" === item && (item = void 0),
                        $location.skipReload().search("tab", item),
                        !item && $scope.reloadComments ? loadComments() : void 0
                }
                ,
                $scope.onCommentChange = function(content) {
                    return $scope.comment.content = content;
                }
                ,
                $rootScope.$on("line-notes.add", function(event, note, lastCount) {
                    return 0 === lastCount ? $scope.reloadComments = !0 : $scope.commentCount += 1
                }),
                $rootScope.$on("line-notes.del", function(event, comment, lastCount) {
                    return 1 !== lastCount ? $scope.commentCount -= 1 : ($scope.reloadComments = !0,
                        $routeParams.tab && "comments" !== $routeParams.tab ? void 0 : loadComments())
                }),
                $scope.review_submitting = !1,
                $scope.reviewGood = function() {
                    return $scope.review_submitting = !0,
                        Depot.merge_request_reviewer_good({
                            username: $routeParams.username,
                            project_name: $routeParams.project_name,
                            iid: $routeParams.iid
                        }, {}, function() {
                            var activity;
                            return $scope.current_reviewer.value = 100,
                            "volunteer" === $scope.current_reviewer.volunteer && $scope.volunteerReviewers.push($scope.current_reviewer),
                                activity = {
                                    action: "review",
                                    created_at: Date.now(),
                                    author: $scope.USER
                                },
                                $scope.comments.push([activity])
                        })["finally"](function() {
                            return $scope.review_submitting = !1
                        })
                }
                ,
                $scope.reviewGoodUndo = function() {
                    return $scope.review_submitting = !0,
                        Depot.merge_request_reviewer_good_undo({
                            username: $routeParams.username,
                            project_name: $routeParams.project_name,
                            iid: $routeParams.iid
                        }, {}, function() {
                            var activity;
                            return $scope.current_reviewer.value = 0,
                            "volunteer" === $scope.current_reviewer.volunteer && _.remove($scope.volunteerReviewers, $scope.current_reviewer),
                                activity = {
                                    action: "review_undo",
                                    created_at: Date.now(),
                                    author: $scope.USER
                                },
                                $scope.comments.push([activity])
                        })["finally"](function() {
                            return $scope.review_submitting = !1
                        })
                }
                ,
                $scope.grant_submitting = !1,
                $scope.grant = function() {
                    return $scope.grant_submitting = !0,
                        Depot.merge_request_grant({
                            username: $routeParams.username,
                            project_name: $routeParams.project_name,
                            iid: $routeParams.iid
                        }, {}, function() {
                            var activity;
                            return $scope.merge_request.granted = 1,
                                activity = {
                                    action: "grant",
                                    created_at: Date.now(),
                                    author: $scope.USER
                                },
                                $scope.comments.push([activity]),
                                commitMessage()
                        })["finally"](function() {
                            return $scope.grant_submitting = !1
                        })
                }
                ,
                $scope.grantUndo = function() {
                    return $scope.grant_submitting = !0,
                        Depot.merge_request_grant_undo({
                            username: $routeParams.username,
                            project_name: $routeParams.project_name,
                            iid: $routeParams.iid
                        }, {}, function() {
                            var activity;
                            return $scope.merge_request.granted = 0,
                                activity = {
                                    action: "grant_undo",
                                    created_at: Date.now(),
                                    author: $scope.USER
                                },
                                $scope.comments.push([activity]),
                                commitMessage()
                        })["finally"](function() {
                            return $scope.grant_submitting = !1
                        })
                }
                ,
                $scope.toggleMergeRequestActivity = function() {
                    return $scope.showMergeRequestActivity = !$scope.showMergeRequestActivity
                }
                ,
                $scope.getShowMergeRequestActivityIcon = function(show) {
                    return show ? "icon check-icon empty checkbox processing" : "icon check-icon checkmark sign done"
                }
                ,
                $scope.getActivityHuman = function(action) {
                    var actions;
                    return actions = {
                        create: function() {
                            return "创建了合并请求"
                        },
                        merge: function() {
                            return "合并了合并请求"
                        },
                        refuse: function() {
                            return "拒绝了合并请求"
                        },
                        cancel: function() {
                            return "取消了合并请求"
                        },
                        update: function() {
                            return "编辑合并请求"
                        },
                        review: function() {
                            return "对此合并请求评审 +1"
                        },
                        review_undo: function() {
                            return "撤消了对此合并请求评审 +1"
                        },
                        grant: function() {
                            return "给此合并请求授权了合并权限"
                        },
                        grant_undo: function() {
                            return "撤消了给此合并请求授权了合并权限"
                        },
                        push: function() {
                            return "推送了新的提交，更新了合并请求"
                        }
                    },
                        Common.smartSwitch(actions, action, action)
                }
                ,
                $scope.getActivityIcon = function(action) {
                    var actions;
                    return actions = {
                        create: function() {
                            return "add"
                        },
                        merge: function() {
                            return "merge-request coding"
                        },
                        refuse: function() {
                            return "exclamation"
                        },
                        cancel: function() {
                            return "close"
                        },
                        update: function() {
                            return "rotate180 align right"
                        },
                        review: function() {
                            return "thumbs up"
                        },
                        review_undo: function() {
                            return "thumbs down"
                        },
                        grant: function() {
                            return "unlock"
                        },
                        grant_undo: function() {
                            return "lock"
                        },
                        push: function() {
                            return "coding-commit coding"
                        }
                    },
                        Common.smartSwitch(actions, action, action)
                }
                ,
                $scope.showSquash = function() {
                    return $scope.commits.length > 1 && $scope.merge_request.author.id === $rootScope.USER.id
                }
                ,
                $scope.beforeSquash = function() {
                    return $scope.toggleSquashModal()
                }
                ,
                $scope.$on("$destroy", function() {
                    return mergeRequestMergeModal.remove(),
                        mergeRequestSquashModal.remove()
                })
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("BreadcrumbController", ["$scope", "$rootScope", "$routeParams", "$location", "Depot", function($scope, $rootScope, $routeParams, $location, Depot) {
            var branchesPromise;
            return $scope.tree = [],
                $scope.branches = [],
                $scope.tags = [],
                branchesPromise = Depot.listBranches({
                    username: $routeParams.username,
                    project_name: $scope.PROJECT.name
                }),
                branchesPromise.then(function(result) {
                    return $scope.empty = !1,
                        $scope.branches = result.data,
                        Depot.listTags({
                            username: $routeParams.username,
                            project_name: $scope.PROJECT.name
                        }, function(result) {
                            return $scope.empty = !1,
                                $scope.tags = result.data,
                                $scope.tab = $scope.branches && $scope.inRefs($scope.branches.list, $scope.ref) ? 1 : 2,
                                $scope.tab = $scope.tags && $scope.inRefs($scope.tags.list, $scope.ref) ? 2 : 1
                        })["catch"](function(error, result) {
                            $scope.empty = !0
                        })
                }),
                branchesPromise["catch"](function(error, result) {
                    $scope.empty = !0
                }),
                $scope.inRefs = function(refs, ref) {
                    var i;
                    for (i in refs)
                        if (ref === refs[i].name)
                            return !0;
                    return !1
                }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("ProjectTitleController", ["$scope", "$routeParams", "Project", "Depot", "$location", "$timeout", function($scope, $routeParams, Project, Depot, $location, $timeout) {
            var login, q;
            return $scope.cur_clone_type = "https",
                $scope.copied = !1,
                $scope.stared_msg = "已收藏",
                $scope.watched_msg = "已关注",
                $scope.PROJECT.cur_push_url = $scope.PROJECT.https_url,
                $scope.cur_clone_url = $scope.PROJECT.https_url,
                $scope.createDepotType = "new",
            $scope.USER && Project.members({
                id: $scope.PROJECT.id
            }, function(result) {
                return $(result.data).each(function(i, a) {
                    a.user_id === $scope.USER.id && ($scope.is_project_member = !0)
                })
            }),
                login = function() {
                    $location.search("return_url", $location.path()),
                        $location.path("login")
                }
                ,
                $("#project-clone-url").dropdown(),
                $scope.changeCloneUrl = function(pro) {
                    "ssh" === pro ? ($scope.cur_clone_url = $scope.PROJECT.ssh_url,
                        $scope.PROJECT.cur_push_url = $scope.PROJECT.ssh_url,
                        $scope.cur_clone_type = "ssh") : "git" === pro ? ($scope.cur_clone_url = $scope.PROJECT.git_url,
                        $scope.cur_clone_type = "git") : ($scope.cur_clone_url = $scope.PROJECT.https_url,
                        $scope.PROJECT.cur_push_url = $scope.PROJECT.https_url,
                        $scope.cur_clone_type = "https")
                }
                ,
                $scope.star = function() {
                    return $scope.USER ? $scope.PROJECT.stared_loading ? void 0 : ($scope.PROJECT.stared_loading = !0,
                        Project.star({
                            username: $scope.PROJECT.owner_user_name,
                            project_name: $scope.PROJECT.name
                        }, {}, function(result) {
                            return $scope.PROJECT.star_count += 1,
                                $scope.PROJECT.stared = !0,
                                $scope.PROJECT.stared_loading = !1
                        })) : login()
                }
                ,
                $scope.unstar = function() {
                    return $scope.PROJECT.stared_loading ? void 0 : ($scope.PROJECT.stared_loading = !0,
                        Project.unstar({
                            username: $scope.PROJECT.owner_user_name,
                            project_name: $scope.PROJECT.name
                        }, {}, function(result) {
                            return $scope.PROJECT.star_count -= 1,
                                $scope.PROJECT.stared = !1,
                                $scope.PROJECT.stared_loading = !1
                        }))
                }
                ,
                $scope.watch = function() {
                    return $scope.USER ? $scope.PROJECT.watched_loading ? void 0 : ($scope.PROJECT.watched_loading = !0,
                        Project.watch({
                            username: $scope.PROJECT.owner_user_name,
                            project_name: $scope.PROJECT.name
                        }, {}, function(result) {
                            return $scope.PROJECT.watch_count += 1,
                                $scope.PROJECT.watched = !0,
                                $scope.PROJECT.watched_loading = !1
                        })) : login()
                }
                ,
                $scope.unwatch = function() {
                    return $scope.PROJECT.watched_loading ? void 0 : ($scope.PROJECT.watched_loading = !0,
                        Project.unwatch({
                            username: $scope.PROJECT.owner_user_name,
                            project_name: $scope.PROJECT.name
                        }, {}, function(result) {
                            return $scope.PROJECT.watch_count -= 1,
                                $scope.PROJECT.watched = !1,
                                $scope.PROJECT.watched_loading = !1
                        }))
                }
                ,
                $scope.fork = function() {
                    return $scope.USER ? confirm("fork将会将此项目复制到您的个人空间，确定要fork吗?") ? ($(".public-project-view").hide(),
                        $(".wrapper").append('<div class="ui public-project-view forking coding aligned center"><i class="loading icon" style="font-size:50px;"></i><p>正在 Fork 稍后会自动跳转</p></div>'),
                        Depot.fork({
                            username: $routeParams.username,
                            project_name: $routeParams.project_name
                        }, {}, function(result) {
                            return $location.path(result.data.depot_path)
                        })["catch"](function(error, result) {
                            $(".forking").remove(),
                                $(".public-project-view").show()
                        })) : void 0 : login()
                }
                ,
                $scope.$watch("cur_clone_url", function(cur_clone_url) {
                    return $scope.newDepotCommondLine = "mkdir " + $scope.PROJECT.name + "\n" + ("cd " + $scope.PROJECT.name + "\n") + "git init\n" + ('echo "# ' + $scope.PROJECT.name + '" >> README.md\ngit add README.md\n') + 'git commit -m "first commit"\n' + ("git remote add origin " + cur_clone_url + "\n") + "git push -u origin master",
                        $scope.existingDepotCommondLine = "git remote add origin " + cur_clone_url + "\ngit push -u origin master"
                }),
                $scope.changeCreateDepotType = function(type) {
                    return $scope.createDepotType = type
                }
                ,
                $scope.copyCommondLine = function() {
                    return "new" === $scope.createDepotType ? $scope.newDepotCommondLine : "existing" === $scope.createDepotType ? $scope.existingDepotCommondLine : ""
                }
                ,
                $scope.copiedCopyCommondLine = !1,
                $scope.doClickCopyCommondLine = function() {
                    return $scope.copiedCopyCommondLine = !0,
                        $timeout(function() {
                            return $scope.copiedCopyCommondLine = !1
                        }, 2e3)
                }
                ,
                q = 0,
                $scope.do_click = function() {
                    return $scope.copied = !0,
                        $timeout.cancel(q),
                        q = $timeout(function() {
                            return $scope.copied = !1
                        }, 2e3)
                }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("ImportStatusController", ["$scope", "$rootScope", "$routeParams", "$location", "Depot", "Flash", "$route", function($scope, $rootScope, $routeParams, $location, Depot, Flash, $route) {
            var autoCheckImportStatus, startedCheck;
            startedCheck = !1,
                $scope.import_status = 1,
                (autoCheckImportStatus = function() {
                        startedCheck ? Depot.checkImport({
                            username: $scope.PROJECT.owner_user_name,
                            project_name: $scope.PROJECT.name
                        }, {}, function(result) {
                            0 === result.code && (2 === result.data.status ? $scope.load_auto_refresh = setTimeout(function() {
                                autoCheckImportStatus()
                            }, 5e3) : 3 === result.data.status ? (Flash.success().send("导入成功"),
                                $scope.DEPOT.status = 3,
                                location.reload()) : 1 === result.data.status && (Flash.fail().send("导入失败，请查看通知"),
                                $scope.DEPOT.status = 1,
                                $route.reload()))
                        }) : ($scope.load_auto_refresh = setTimeout(function() {
                            autoCheckImportStatus()
                        }, 5e3),
                            startedCheck = !0)
                    }
                )()
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("InitDepotController", ["$scope", "$rootScope", "$routeParams", "$location", "Depot", "Flash", "$route", function($scope, $rootScope, $routeParams, $location, Depot, Flash, $route) {
            return $scope.showScaffoldForm = !1,
                $scope.initDepotForm = {
                    type: "init",
                    gitReadmeEnabled: !1,
                    gitIgnore: "no",
                    gitLicense: "no",
                    vcsType: "git",
                    importFrom: ""
                },
                $scope.canSubmit = !1,
                $scope.$watchCollection("initDepotForm", function(initDepotForm) {
                    return "init" === initDepotForm.type && (initDepotForm.gitReadmeEnabled === !1 && "no" === initDepotForm.gitIgnore && "no" === initDepotForm.gitLicense ? $scope.canSubmit = !1 : $scope.canSubmit = !0),
                        "import" === initDepotForm.type ? initDepotForm.importFrom ? $scope.canSubmit = !0 : $scope.canSubmit = !1 : void 0
                }),
                $scope.initDepot = function() {
                    return $scope.canSubmit === !0 ? Depot.initDepot({
                        username: $scope.PROJECT.owner_user_name,
                        project_name: $scope.PROJECT.name
                    }, $scope.initDepotForm, function(result) {
                        return $route.reload()
                    }) : void 0
                }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("PlotController", ["$scope", "$routeParams", "PageTitle", "Depot", "$location", function($scope, $routeParams, PageTitle, Depot, $location) {
            return $scope.inner_menu = "plot",
                $scope.tag_menu = "plot",
                $routeParams.region = "plot",
                $scope.branches = [],
                $scope.routeParams = $routeParams,
                $scope.current_branch = $routeParams.branch || $scope.DEPOT.default_branch,
                PageTitle.set("项目网络", $scope.PROJECT.owner.global_key, $scope.PROJECT.name, "Coding.net"),
                Depot.listBranches({
                    username: $routeParams.username,
                    project_name: $routeParams.project_name
                }, function(result) {
                    return $scope.branches = result.data
                }),
                $scope.changeCurrentBranch = function(branch) {
                    return $location.path("" + $scope.PROJECT.project_path + "/git/plot/" + branch)
                }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("ForksController", ["$scope", "$routeParams", "Depot", "PageTitle", function($scope, $routeParams, Depot, PageTitle) {
            return $scope.public_view = !1,
            $scope.PROJECT.is_public && ($scope.public_view = !0),
                $scope.loaded = !1,
                $scope.list = {},
                PageTitle.set("Forks 列表", $scope.PROJECT.owner.global_key, $scope.PROJECT.name, "Coding.net"),
                Depot.forks({
                    username: $routeParams.username,
                    project_name: $routeParams.project_name
                }, function(result) {
                    return $scope.list = result.data,
                        $scope.loaded = !0
                })
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("publicProjectViewController", ["$scope", "USER", function($scope, USER) {
            return $scope.showClonePanel = !1,
                $scope.showClone = function() {
                    return $scope.showClonePanel = !$scope.showClonePanel
                }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("StargazersController", ["$scope", "Project", "User", "PageTitle", function($scope, Project, User, PageTitle) {
            return $scope.tag_menu = "basic",
                $scope.loaded = !1,
                $scope.stargazers = [],
                PageTitle.set("收藏者", $scope.PROJECT.owner.global_key, $scope.PROJECT.name, "Coding.net"),
                Project.stargazers({
                    username: $scope.PROJECT.owner_user_name,
                    project_name: $scope.PROJECT.name
                }, function(result) {
                    return $scope.stargazers = result.data,
                        $scope.loaded = !0
                }),
                $scope.follow = function(user) {
                    return user ? User.follow({
                        users: user.global_key
                    }, {}, function(result) {
                        return user.followed = !0
                    }) : void 0
                }
                ,
                $scope.unfollow = function(user) {
                    return user ? User.unfollow({
                        users: user.global_key
                    }, {}, function(result) {
                        return user.followed = !1
                    }) : void 0
                }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("WatchersController", ["$scope", "Project", "User", "PageTitle", function($scope, Project, User, PageTitle) {
            return $scope.tag_menu = "basic",
                $scope.loaded = !1,
                $scope.watchers = [],
                PageTitle.set("关注者", $scope.PROJECT.owner.global_key, $scope.PROJECT.name, "Coding.net"),
                Project.watchers({
                    username: $scope.PROJECT.owner_user_name,
                    project_name: $scope.PROJECT.name
                }, function(result) {
                    return $scope.watchers = result.data,
                        $scope.loaded = !0
                }),
                $scope.follow = function(user) {
                    return !user.followed_loading && (user.followed_loading = !0,
                        user) ? User.follow({
                        users: user.global_key
                    }, {}, function(result) {
                        return user.followed = !0,
                            user.followed_loading = !0
                    })["catch"](function(error, result) {
                        user.followed_loading = !0
                    }) : void 0
                }
                ,
                $scope.unfollow = function(user) {
                    return !user.followed_loading && (user.followed_loading = !0,
                        user) ? User.unfollow({
                        users: user.global_key
                    }, {}, function(result) {
                        return user.followed = !1,
                            user.followed_loading = !0
                    })["catch"](function(error, result) {
                        user.followed_loading = !0
                    }) : void 0
                }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("PullRequestIndexController", ["$scope", "$rootScope", "$routeParams", "$location", "Depot", "Pager", function($scope, $rootScope, $routeParams, $location, Depot, Pager) {
            var CPager, loadPullRequests, pager_id;
            return $scope.inner_menu = "pulls",
                $scope.tag_menu = "pulls",
                $scope.loaded = !1,
                angular.isUndefined($routeParams.region) ? $location.path($scope.PROJECT.depot_path + "/pulls/open").replace() : "open" !== $routeParams.region && "closed" !== $routeParams.region && "all" !== $routeParams.region && $location.path($scope.PROJECT.depot_path + "/pulls/open"),
                $scope.status = $routeParams.region,
                $scope.data = {},
                pager_id = $scope.pager_id = (new Date).getTime(),
                CPager = Pager.instance(pager_id, $scope),
                loadPullRequests = function(page) {
                    return Depot.pull_request_list({
                        username: $routeParams.username,
                        project_name: $routeParams.project_name,
                        region: $routeParams.region || "open",
                        page: page
                    }, function(result) {
                        return $scope.data = result.data,
                            CPager.optionsReady(result.data),
                            $scope.loaded = !0
                    })["catch"](function(error, result) {
                        $scope.loaded = !0
                    })
                }
                ,
                CPager.onChange(function(page) {
                    loadPullRequests(page)
                }),
                loadPullRequests(1),
                $scope.getMergeStatusClass = function(merge_status) {
                    return "pull-right pr-status " + merge_status.toLowerCase()
                }
                ,
                $scope.getMergeStatusHuman = function(merge_status) {
                    return "ACCEPTED" === merge_status ? "已合并" : "REFUSED" === merge_status ? "已拒绝" : "CANMERGE" === merge_status ? "可合并" : "CANNOTMERGE" === merge_status ? "不可合并" : "CANCEL" === merge_status ? "已取消" : void 0
                }
                ,
                $scope.getFilterByCenter = function() {
                    var fileter, filter;
                    return "open" === $scope.status ? fileter = "未处理的" : "closed" === $scope.status ? filter = "已处理的" : "all" === $scope.status ? filter = "" : void 0
                }
                ,
                $scope.getFilter = function() {
                    var fileter, filter;
                    return "open" === $scope.status ? fileter = "未处理" : "closed" === $scope.status ? filter = "已处理" : "all" === $scope.status ? filter = "全部" : void 0
                }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("PullRequestNewController", ["$scope", "$routeParams", "location", "ipCookie", "Depot", "PageTitle", "GitService", function($scope, $routeParams, $location, ipCookie, Depot, PageTitle, GitService) {
            return $scope.location = $location,
                $scope.inner_menu = "pulls",
                $scope.tag_menu = "pulls",
                $scope.pr_create = {},
                $scope.branches = [],
                $scope.diffMode = $routeParams.diff || ipCookie("diff_mode") || "",
            "" !== $scope.diffMode && ipCookie("diff_mode", $scope.diffMode, {
                path: "/"
            }),
                PageTitle.set("创建 Pull Request", $scope.PROJECT.owner.global_key, $scope.PROJECT.name, "Coding.net"),
                Depot.listBranches({
                    username: $routeParams.username,
                    project_name: $routeParams.project_name
                }, function(result) {
                    return $scope.branches = result.data
                }),
                $scope.loading = !0,
                Depot.pull_request_create({
                    username: $routeParams.username,
                    project_name: $routeParams.project_name,
                    src_branch: $routeParams.src_branch,
                    des_user_name: $routeParams.des_user_name,
                    des_project_name: $routeParams.des_project_name,
                    des_branch: $routeParams.des_branch,
                    diff: $scope.diffMode,
                    w: $routeParams.w
                }, function(result) {
                    return $scope.pr_create = result.data,
                        $scope.diffStat = $scope.pr_create.pull_request.diffStat,
                        $scope.diffHtml = $scope.pr_create.pull_request.htmlDiff,
                        $scope.commits = $scope.pr_create.pull_request.commits,
                        $scope.commitsWithDate = GitService.commitsGroupByDate($scope.commits),
                        $scope.pr_create.pull_request.des_path = result.data.target_project.owner_user_name + "/" + result.data.target_project.name,
                        $scope.switchTab($routeParams.tab || "commits")
                })["finally"](function() {
                    return $scope.loading = !1
                }),
                $scope.changeDepot = function(pull_request) {
                    var strs;
                    return pull_request.srcBranch && pull_request.des_path && pull_request.desBranch ? (strs = pull_request.des_path.split("/"),
                        $location.search({
                            src_branch: pull_request.srcBranch,
                            des_branch: pull_request.desBranch,
                            des_user_name: strs[0],
                            des_project_name: strs[1]
                        })) : void 0
                }
                ,
                $scope.submitPullRequest = function(pull_request) {
                    return pull_request.des_user_name = pull_request.des_path.split("/")[0] || "",
                        pull_request.des_project_name = pull_request.des_path.split("/")[1] || "",
                        Depot.pull_request_submit({
                            username: $routeParams.username,
                            project_name: $routeParams.project_name
                        }, {
                            src_branch: pull_request.srcBranch,
                            des_user_name: pull_request.des_user_name,
                            des_project_name: pull_request.des_project_name,
                            des_branch: pull_request.desBranch,
                            title: pull_request.title || "",
                            content: pull_request.content || ""
                        }, function(result) {
                            return $location.url(result.data.path)
                        })
                }
                ,
                $scope.contentUpdate = function($content) {
                    $scope.pr_create.pull_request.content = $content
                }
                ,
                $scope.switchTab = function(tab) {
                    return $scope.show_diff = tab,
                    "commits" === tab && (tab = void 0),
                        $location.skipReload().search("tab", tab)
                }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("PullRequestQueryFilterController", ["$location", "$scope", function($location, $scope) {
            return $("#pull-request-filter").dropdown(),
                $scope.change_status = function(status) {
                    return $scope.status = status,
                        $location.path($scope.PROJECT.depot_path + "/pulls/" + status)
                }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("PullRequestShowController", ["$scope", "$rootScope", "$routeParams", "$route", "location", "Depot", "Project", "Errors", "Common", "LightMdEditorService", "$localStorage", "ipCookie", "Flash", "GitService", function($scope, $rootScope, $routeParams, $route, $location, Depot, Project, Errors, Common, LightMdEditorService, $localStorage, ipCookie, Flash, GitService) {
            var cache_id, loadComments, removeComment, removeMergeRequestWatcher;
            return $scope.location = $location,
                $scope.inner_menu = "pulls",
                $scope.tag_menu = "pulls",
                $scope.comments_loaded = !1,
                $scope.loaded = !1,
                $scope.pull_request = [],
                $scope.comment = {
                    content: ""
                },
                $scope.comments = [],
                $scope.is_project_member = !1,
                $scope.showMergeForm = !1,
                $scope.reloadComments = !1,
                $scope.diffMode = $routeParams.diff || ipCookie("diff_mode") || "",
            "" !== $scope.diffMode && ipCookie("diff_mode", $scope.diffMode, {
                path: "/"
            }),
                cache_id = null ,
                removeMergeRequestWatcher = $scope.$watch("pull_request", function(pull_request) {
                    angular.isDefined(pull_request) && (cache_id = "pull_request_" + pull_request.iid,
                        $scope.comment.content = $localStorage[cache_id],
                    removeMergeRequestWatcher && removeMergeRequestWatcher())
                }),
                removeComment = function(commentId) {
                    var discussions, found;
                    return discussions = [],
                        found = !1,
                        angular.forEach($scope.comments, function(discussion) {
                            return found ? discussions.push(discussion) : (angular.forEach(discussion, function(item) {
                                return item.id === commentId ? found = !0 : void 0
                            }),
                                found ? void 0 : discussions.push(discussion))
                        }),
                        $scope.comments = discussions,
                        $scope.commentCount -= 1
                }
                ,
                loadComments = function() {
                    return $scope.comments_loaded = !1,
                        Depot.pull_request_comments_list({
                            username: $routeParams.username,
                            project_name: $routeParams.project_name,
                            iid: $routeParams.iid
                        }, function(result) {
                            var count;
                            0 === result.code ? ($scope.comments = result.data,
                                count = 0,
                                angular.forEach($scope.comments, function(discussion) {
                                    return count += discussion.length
                                }),
                                $scope.commentCount = count) : Errors.handle(result),
                                $scope.comments_loaded = !0,
                                $scope.reloadComments = !1
                        })
                }
                ,
                $scope.$watch($scope.comment.content, function(newValue, oldValue) {
                    return newValue !== oldValue && cache_id && "" !== newValue ? $localStorage[cache_id] = newValue : void 0
                }),
                Depot.pull_request_show({
                    username: $routeParams.username,
                    project_name: $routeParams.project_name,
                    iid: $routeParams.iid,
                    diff: $scope.diffMode
                }, function(result) {
                    var _ref;
                    return $scope.pull_request = result.data.pull_request,
                        $scope.diffStat = $scope.pull_request.diffStat,
                        $scope.diffHtml = $scope.pull_request.htmlDiff,
                        $scope.commits = $scope.pull_request.commits,
                        $scope.commitsWithDate = GitService.commitsGroupByDate($scope.commits),
                        $scope.can_edit = result.data.can_edit,
                        $scope.atConfig = {
                            target: $scope.pull_request,
                            type: "pull_request_comment",
                            extra: $rootScope.PROJECT
                        },
                        $scope.notes_params = {
                            commitId: null  != (_ref = $scope.commits[0]) ? _ref.commitId : void 0,
                            comments: result.data.line_notes,
                            noteable_type: "PullRequestBean",
                            noteable_id: $scope.pull_request.id,
                            atConfig: $scope.atConfig
                        },
                        $scope.pull_request.commit_message = "Accept Pull Request #" + $routeParams.iid + " : (" + $scope.pull_request.src_owner_name + ":" + $scope.pull_request.srcBranch + " -> " + $scope.PROJECT.owner_user_name + ":" + $scope.pull_request.desBranch + ")\n\nPull Request: " + $scope.pull_request.title + "\nCreated By: @" + $scope.pull_request.author.name + "\nAccepted By: @" + $scope.USER.name + "\nURL: " + $location.$$absUrl,
                        $scope.showContent($routeParams.tab || "comments"),
                        $scope.loaded = !0
                })["catch"](function(error, result) {
                    $scope.loaded = !0
                }),
                loadComments(),
            $scope.USER && Project.members({
                id: $scope.PROJECT.id
            }, function(result) {
                return $(result.data.list).each(function(i, a) {
                    return a.user_id === $scope.USER.id ? $scope.is_project_member = !0 : void 0
                })
            }),
                $scope.toggleShowMergeForm = function(showMergeForm) {
                    $scope.showMergeForm = !showMergeForm
                }
                ,
                $scope.merge = function(pull_request) {
                    return $scope.loaded = !1,
                        Depot.pull_request_merge({
                            username: $routeParams.username,
                            project_name: $routeParams.project_name,
                            iid: $routeParams.iid,
                            message: pull_request.commit_message
                        }, {}, function(result) {
                            return $route.reload()
                        })["catch"](function(error, result) {
                            $scope.loaded = !0
                        })
                }
                ,
                $scope.refuse = function(pull_request) {
                    return confirm("确定要拒绝这个Pull Request么？") ? ($scope.loaded = !1,
                        Depot.pull_request_refuse({
                            username: $routeParams.username,
                            project_name: $routeParams.project_name,
                            iid: $routeParams.iid
                        }, {}, function(result) {
                            return $route.reload()
                        })["catch"](function(error, result) {
                            $scope.loaded = !0
                        })) : void 0
                }
                ,
                $scope.cancel = function(pull_request) {
                    return confirm("确定要取消这个 Pull Request 么?") ? ($scope.loaded = !1,
                        Depot.pull_request_cancel({
                            username: $routeParams.username,
                            project_name: $routeParams.project_name,
                            iid: $routeParams.iid
                        }, {}, function(result) {
                            return Flash.success().send("取消成功"),
                                $location.path($scope.PROJECT.project_path + "/git/pulls")
                        })["catch"](function(error, result) {
                            $scope.loaded = !0
                        })) : void 0
                }
                ,
                $scope.getMergeStatusClass = function(merge_status) {
                    return merge_status ? "pull-right pr-status " + merge_status.toLowerCase() : ""
                }
                ,
                $scope.getMergeStatusHuman = function(merge_status) {
                    return "ACCEPTED" === merge_status ? "已合并" : "REFUSED" === merge_status ? "已拒绝" : "CANMERGE" === merge_status ? "可自动合并" : "CANNOTMERGE" === merge_status ? "不可自动合并" : "CANCEL" === merge_status ? "已取消" : void 0
                }
                ,
                $scope.addComment = function(content) {
                    return $rootScope.USER ? content.length > 0 ? Depot.add_line_note({
                        username: $routeParams.username,
                        project_name: $routeParams.project_name
                    }, {
                        noteable_type: "PullRequestBean",
                        noteable_id: $scope.pull_request.id,
                        content: content
                    }, function(result) {
                        return $scope.comments.push([result.data]),
                            $scope.commentCount += 1,
                            delete $localStorage[cache_id]
                    }) : void 0 : void Flash.send("请登录后再评论")
                }
                ,
                $scope.delComment = function(comment) {
                    return comment && confirm("确认删除该评论？") && comment && confirm("请确认删除该评论") ? Depot.del_line_note({
                        username: $routeParams.username,
                        project_name: $routeParams.project_name,
                        id: comment.id
                    }, function(result) {
                        return removeComment(comment.id)
                    }) : void 0
                }
                ,
                $scope.replyMerges = function(comment) {
                    return comment && comment.author ? LightMdEditorService.atPerson(comment.author.name, "merges-comment-editor") : void 0
                }
                ,
                $scope.showContent = function(item) {
                    return $scope.show_diff = item,
                    "comments" === item && (item = void 0),
                        $location.skipReload().search("tab", item),
                        !item && $scope.reloadComments ? loadComments() : void 0
                }
                ,
                $scope.onCommentChange = function(content) {
                    return $scope.comment.content = content
                }
                ,
                $rootScope.$on("line-notes.add", function(event, note, lastCount) {
                    return 0 === lastCount ? $scope.reloadComments = !0 : $scope.commentCount += 1
                }),
                $rootScope.$on("line-notes.del", function(event, comment, lastCount) {
                    return 1 !== lastCount ? $scope.commentCount -= 1 : ($scope.reloadComments = !0,
                        $routeParams.tab && "comments" !== $routeParams.tab ? void 0 : loadComments())
                })
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").service("GitService", ["$rootScope", "$routeParams", function($rootScope, $routeParams) {
            var activityCommitLink, commitsGroupByDate, htmlEncode;
            return htmlEncode = function(str) {
                var div;
                return div = document.createElement("div"),
                    div.appendChild(document.createTextNode(str)),
                    div.innerHTML
            }
                ,
                activityCommitLink = function(activity) {
                    var _ref, _ref1, _ref2;
                    return "commit_refer" !== activity.action ? "" : "" + (null  != (_ref = activity.commit) && null  != (_ref1 = _ref.depot) ? _ref1.depot_path : void 0) + "/commit/" + (null  != (_ref2 = activity.commit) ? _ref2.sha : void 0)
                }
                ,
                commitsGroupByDate = function(commits) {
                    return _.groupBy(commits, function(commit) {
                        return moment(commit.commitTime).format("ll")
                    })
                }
                ,
            {
                htmlEncode: htmlEncode,
                activityCommitLink: activityCommitLink,
                commitsGroupByDate: commitsGroupByDate
            }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("GraphGitController", ["$scope", "$routeParams", "$location", "Depot", function($scope, $routeParams, $location, Depot) {
            return $scope.inner_menu = "stat",
                $scope.tag_menu = "stat",
                $scope.type = "stat",
                $scope.isHead = !1,
                $scope.loaded = !1,
                $scope.empty = !1,
                $scope.blob = [],
                $scope.ref = [],
                $scope.path = [],
                $scope.current_branch = $routeParams.region || $scope.DEPOT.default_branch,
                $scope.DEPOT === !1 ? void ($scope.empty = !0) : (Depot.listBranches({
                        username: $routeParams.username,
                        project_name: $routeParams.project_name
                    }, function(result) {
                        return $scope.branches = result.data
                    }),
                        Depot.getGraph({
                            username: $routeParams.username,
                            project_name: $routeParams.project_name,
                            region: encodeURIComponent($scope.current_branch)
                        }, function(result) {
                            var data, graph;
                            return $scope.data = result.data,
                                data = $scope.data,
                                graph = new ContributorsStatGraph,
                                graph.init(data),
                                $("#brush_change").change(function() {
                                    return graph.change_date_header(),
                                        graph.redraw_authors()
                                }),
                                $scope.loaded = !0
                        })["catch"](function(error, result) {
                            return $location.path($scope.PROJECT.project_path + "/git")
                        }),
                        $scope.changeCurrentBranch = function(branch) {
                            return $location.path("" + $scope.PROJECT.project_path + "/git/graph/" + branch)
                        }
                )
        }
        ])
    }
        .call(this),
    function() {
        this.StatGraph = function() {
            function StatGraph() {}
            return StatGraph.log = {},
                StatGraph.get_log = function() {
                    return this.log
                }
                ,
                StatGraph.set_log = function(data) {
                    return this.log = data
                }
                ,
                StatGraph
        }()
    }
        .call(this),
    function() {
        this.ContributorsStatGraph = function() {
            function ContributorsStatGraph() {}
            return ContributorsStatGraph.prototype.init = function(log) {
                var author_commits, total_commits;
                return this.parsed_log = ContributorsStatGraphUtil.parse_log(log),
                    this.set_current_field("commits"),
                    total_commits = ContributorsStatGraphUtil.get_total_data(this.parsed_log, this.field),
                    author_commits = ContributorsStatGraphUtil.get_author_data(this.parsed_log, this.field),
                    this.add_master_graph(total_commits),
                    this.add_authors_graph(author_commits),
                    this.change_date_header()
            }
                ,
                ContributorsStatGraph.prototype.add_master_graph = function(total_data) {
                    return this.master_graph = new ContributorsMasterGraph(total_data),
                        this.master_graph.draw()
                }
                ,
                ContributorsStatGraph.prototype.add_authors_graph = function(author_data) {
                    var limited_author_data;
                    return this.authors = [],
                        limited_author_data = author_data.slice(0, 100),
                        _.each(limited_author_data, function(_this) {
                            return function(d) {
                                var author_graph, author_header;
                                return author_header = _this.create_author_header(d),
                                    $(".contributors-list").append(author_header),
                                    _this.authors[d.author_name] = author_graph = new ContributorsAuthorGraph(d.dates),
                                    author_graph.draw()
                            }
                        }(this))
                }
                ,
                ContributorsStatGraph.prototype.format_author_commit_info = function(author) {
                    var commits;
                    return commits = $("<span/>", {
                        "class": "graph-author-commits-count"
                    }),
                        commits.text(author.commits + " commits"),
                        $("<span/>").append(commits)
                }
                ,
                ContributorsStatGraph.prototype.create_author_header = function(author) {
                    var author_commit_info, author_commit_info_span, author_name, list_item;
                    return list_item = $("<li/>", {
                        "class": "person",
                        style: "display: block;"
                    }),
                        author_name = $("<h4>" + author.author_name + "</h4>"),
                        author_commit_info_span = $("<span/>", {
                            "class": "commits"
                        }),
                        author_commit_info = this.format_author_commit_info(author),
                        author_commit_info_span.html(author_commit_info),
                        list_item.append(author_name),
                        list_item.append(author_commit_info_span),
                        list_item
                }
                ,
                ContributorsStatGraph.prototype.redraw_master = function() {
                    var total_data;
                    return total_data = ContributorsStatGraphUtil.get_total_data(this.parsed_log, this.field),
                        this.master_graph.set_data(total_data),
                        this.master_graph.redraw()
                }
                ,
                ContributorsStatGraph.prototype.redraw_authors = function() {
                    var author_commits, x_domain;
                    return $("ol").html(""),
                        x_domain = ContributorsGraph.prototype.x_domain,
                        author_commits = ContributorsStatGraphUtil.get_author_data(this.parsed_log, this.field, x_domain),
                        _.each(author_commits, function(_this) {
                            return function(d) {
                                return _this.redraw_author_commit_info(d),
                                    $(_this.authors[d.author_name].list_item).appendTo("ol"),
                                    _this.authors[d.author_name].set_data(d.dates),
                                    _this.authors[d.author_name].redraw()
                            }
                        }(this))
                }
                ,
                ContributorsStatGraph.prototype.set_current_field = function(field) {
                    return this.field = field
                }
                ,
                ContributorsStatGraph.prototype.change_date_header = function() {
                    var print, x_domain;
                    return x_domain = ContributorsGraph.prototype.x_domain,
                        print = moment(x_domain[0]).format("LL") + " - " + moment(x_domain[1]).format("LL"),
                        $("#date_header").text(print)
                }
                ,
                ContributorsStatGraph.prototype.redraw_author_commit_info = function(author) {
                    var author_commit_info, author_list_item;
                    return author_list_item = $(this.authors[author.author_name].list_item),
                        author_commit_info = this.format_author_commit_info(author),
                        author_list_item.find("span").html(author_commit_info)
                }
                ,
                ContributorsStatGraph
        }()
    }
        .call(this),
    function() {
        var __bind = function(fn, me) {
                return function() {
                    return fn.apply(me, arguments)
                }
            }
            , __hasProp = {}.hasOwnProperty
            , __extends = function(child, parent) {
                function ctor() {
                    this.constructor = child
                }
                for (var key in parent)
                    __hasProp.call(parent, key) && (child[key] = parent[key]);
                return ctor.prototype = parent.prototype,
                    child.prototype = new ctor,
                    child.__super__ = parent.prototype,
                    child
            }
            ;
        this.ContributorsGraph = function() {
            function ContributorsGraph() {}
            return ContributorsGraph.prototype.MARGIN = {
                top: 20,
                right: 20,
                bottom: 30,
                left: 50
            },
                ContributorsGraph.prototype.x_domain = null ,
                ContributorsGraph.prototype.y_domain = null ,
                ContributorsGraph.prototype.dates = [],
                ContributorsGraph.set_x_domain = function(data) {
                    return ContributorsGraph.prototype.x_domain = data
                }
                ,
                ContributorsGraph.set_y_domain = function(data) {
                    return ContributorsGraph.prototype.y_domain = [0, d3.max(data, function(d) {
                        var _ref, _ref1;
                        return d.commits = null  != (_ref = null  != (_ref1 = d.commits) ? _ref1 : d.additions) ? _ref : d.deletions
                    })]
                }
                ,
                ContributorsGraph.init_x_domain = function(data) {
                    return ContributorsGraph.prototype.x_domain = d3.extent(data, function(d) {
                        return d.date
                    })
                }
                ,
                ContributorsGraph.init_y_domain = function(data) {
                    return ContributorsGraph.prototype.y_domain = [0, d3.max(data, function(d) {
                        var _ref, _ref1;
                        return d.commits = null  != (_ref = null  != (_ref1 = d.commits) ? _ref1 : d.additions) ? _ref : d.deletions;
                    })]
                }
                ,
                ContributorsGraph.init_domain = function(data) {
                    return ContributorsGraph.init_x_domain(data),
                        ContributorsGraph.init_y_domain(data)
                }
                ,
                ContributorsGraph.set_dates = function(data) {
                    return ContributorsGraph.prototype.dates = data
                }
                ,
                ContributorsGraph.prototype.set_x_domain = function() {
                    return this.x.domain(this.x_domain)
                }
                ,
                ContributorsGraph.prototype.set_y_domain = function() {
                    return this.y.domain(this.y_domain)
                }
                ,
                ContributorsGraph.prototype.set_domain = function() {
                    return this.set_x_domain(),
                        this.set_y_domain()
                }
                ,
                ContributorsGraph.prototype.create_scale = function(width, height) {
                    return this.x = d3.time.scale().range([0, width]).clamp(!0),
                        this.y = d3.scale.linear().range([height, 0]).nice()
                }
                ,
                ContributorsGraph.prototype.draw_x_axis = function() {
                    return this.svg.append("g").attr("class", "x axis").attr("transform", "translate(0, " + this.height + ")").call(this.x_axis)
                }
                ,
                ContributorsGraph.prototype.draw_y_axis = function() {
                    return this.svg.append("g").attr("class", "y axis").call(this.y_axis)
                }
                ,
                ContributorsGraph.prototype.set_data = function(data) {
                    return this.data = data
                }
                ,
                ContributorsGraph
        }(),
            this.ContributorsMasterGraph = function(_super) {
                function ContributorsMasterGraph(data) {
                    this.data = data,
                        this.update_content = __bind(this.update_content, this),
                        this.width = $(".graph.container").width() - 70,
                        this.height = 200,
                        this.x = null ,
                        this.y = null ,
                        this.x_axis = null ,
                        this.y_axis = null ,
                        this.area = null ,
                        this.svg = null ,
                        this.brush = null ,
                        this.x_max_domain = null
                }
                return __extends(ContributorsMasterGraph, _super),
                    ContributorsMasterGraph.prototype.process_dates = function(data) {
                        var dates;
                        return dates = this.get_dates(data),
                            this.parse_dates(data),
                            ContributorsGraph.set_dates(dates)
                    }
                    ,
                    ContributorsMasterGraph.prototype.get_dates = function(data) {
                        return _.pluck(data, "date")
                    }
                    ,
                    ContributorsMasterGraph.prototype.parse_dates = function(data) {
                        var parseDate;
                        return parseDate = d3.time.format("%Y-%m-%d").parse,
                            data.forEach(function(d) {
                                return d.date = parseDate(d.date)
                            })
                    }
                    ,
                    ContributorsMasterGraph.prototype.create_scale = function() {
                        return ContributorsMasterGraph.__super__.create_scale.call(this, this.width, this.height)
                    }
                    ,
                    ContributorsMasterGraph.prototype.create_axes = function() {
                        return this.x_axis = d3.svg.axis().scale(this.x).orient("bottom"),
                            this.y_axis = d3.svg.axis().scale(this.y).orient("left").ticks(5)
                    }
                    ,
                    ContributorsMasterGraph.prototype.create_svg = function() {
                        return this.svg = d3.select("#contributors-master").append("svg").attr("width", this.width + this.MARGIN.left + this.MARGIN.right).attr("height", this.height + this.MARGIN.top + this.MARGIN.bottom).attr("class", "tint-box").append("g").attr("transform", "translate(" + this.MARGIN.left + "," + this.MARGIN.top + ")")
                    }
                    ,
                    ContributorsMasterGraph.prototype.create_area = function(x, y) {
                        return this.area = d3.svg.area().x(function(d) {
                            return x(d.date)
                        }).y0(this.height).y1(function(d) {
                            var xa, _ref, _ref1;
                            return xa = d.commits = null  != (_ref = null  != (_ref1 = d.commits) ? _ref1 : d.additions) ? _ref : d.deletions,
                                y(xa)
                        }).interpolate("basis")
                    }
                    ,
                    ContributorsMasterGraph.prototype.create_brush = function() {
                        return this.brush = d3.svg.brush().x(this.x).on("brushend", this.update_content)
                    }
                    ,
                    ContributorsMasterGraph.prototype.draw_path = function(data) {
                        return this.svg.append("path").datum(data).attr("class", "area").attr("d", this.area)
                    }
                    ,
                    ContributorsMasterGraph.prototype.add_brush = function() {
                        return this.svg.append("g").attr("class", "selection").call(this.brush).selectAll("rect").attr("height", this.height)
                    }
                    ,
                    ContributorsMasterGraph.prototype.update_content = function() {
                        return ContributorsGraph.set_x_domain(this.brush.empty() ? this.x_max_domain : this.brush.extent()),
                            $("#brush_change").trigger("change")
                    }
                    ,
                    ContributorsMasterGraph.prototype.draw = function() {
                        return this.process_dates(this.data),
                            this.create_scale(),
                            this.create_axes(),
                            ContributorsGraph.init_domain(this.data),
                            this.x_max_domain = this.x_domain,
                            this.set_domain(),
                            this.create_area(this.x, this.y),
                            this.create_svg(),
                            this.create_brush(),
                            this.draw_path(this.data),
                            this.draw_x_axis(),
                            this.draw_y_axis(),
                            this.add_brush()
                    }
                    ,
                    ContributorsMasterGraph.prototype.redraw = function() {
                        return this.process_dates(this.data),
                            ContributorsGraph.set_y_domain(this.data),
                            this.set_y_domain(),
                            this.svg.select("path").datum(this.data),
                            this.svg.select("path").attr("d", this.area),
                            this.svg.select(".y.axis").call(this.y_axis)
                    }
                    ,
                    ContributorsMasterGraph
            }(ContributorsGraph),
            this.ContributorsAuthorGraph = function(_super) {
                function ContributorsAuthorGraph(data) {
                    this.data = data,
                        this.width = $(".graph.container").width() / 2 - 100,
                        this.height = 200,
                        this.x = null ,
                        this.y = null ,
                        this.x_axis = null ,
                        this.y_axis = null ,
                        this.area = null ,
                        this.svg = null ,
                        this.list_item = null
                }
                return __extends(ContributorsAuthorGraph, _super),
                    ContributorsAuthorGraph.prototype.create_scale = function() {
                        return ContributorsAuthorGraph.__super__.create_scale.call(this, this.width, this.height)
                    }
                    ,
                    ContributorsAuthorGraph.prototype.create_axes = function() {
                        return this.x_axis = d3.svg.axis().scale(this.x).orient("bottom").ticks(8),
                            this.y_axis = d3.svg.axis().scale(this.y).orient("left").ticks(5)
                    }
                    ,
                    ContributorsAuthorGraph.prototype.create_area = function(x, y) {
                        return this.area = d3.svg.area().x(function(d) {
                            var parseDate;
                            return parseDate = d3.time.format("%Y-%m-%d").parse,
                                x(parseDate(d))
                        }).y0(this.height).y1(function(_this) {
                            return function(d) {
                                return y(null  != _this.data[d] ? _this.data[d] : 0)
                            }
                        }(this)).interpolate("basis")
                    }
                    ,
                    ContributorsAuthorGraph.prototype.create_svg = function() {
                        return this.list_item = d3.selectAll(".person")[0].pop(),
                            this.svg = d3.select(this.list_item).append("svg").attr("width", this.width + this.MARGIN.left + this.MARGIN.right).attr("height", this.height + this.MARGIN.top + this.MARGIN.bottom).attr("class", "spark").append("g").attr("transform", "translate(" + this.MARGIN.left + "," + this.MARGIN.top + ")")
                    }
                    ,
                    ContributorsAuthorGraph.prototype.draw_path = function(data) {
                        return this.svg.append("path").datum(data).attr("class", "area-contributor").attr("d", this.area)
                    }
                    ,
                    ContributorsAuthorGraph.prototype.draw = function() {
                        return this.create_scale(),
                            this.create_axes(),
                            this.set_domain(),
                            this.create_area(this.x, this.y),
                            this.create_svg(),
                            this.draw_path(this.dates),
                            this.draw_x_axis(),
                            this.draw_y_axis()
                    }
                    ,
                    ContributorsAuthorGraph.prototype.redraw = function() {
                        return this.set_domain(),
                            this.svg.select("path").datum(this.dates),
                            this.svg.select("path").attr("d", this.area),
                            this.svg.select(".x.axis").call(this.x_axis),
                            this.svg.select(".y.axis").call(this.y_axis)
                    }
                    ,
                    ContributorsAuthorGraph
            }(ContributorsGraph)
    }
        .call(this),
    function() {
        window.ContributorsStatGraphUtil = {
            parse_log: function(log) {
                var by_author, entry, total, _i, _len;
                for (total = {},
                         by_author = {},
                         _i = 0,
                         _len = log.length; _len > _i; _i++)
                    entry = log[_i],
                    null  == total[entry.date] && this.add_date(entry.date, total),
                    null  == by_author[entry.author_name] && this.add_author(entry, by_author),
                    by_author[entry.author_name][entry.date] || this.add_date(entry.date, by_author[entry.author_name]),
                        this.store_data(entry, total[entry.date], by_author[entry.author_name][entry.date]);
                return total = _.toArray(total),
                    by_author = _.toArray(by_author),
                {
                    total: total,
                    by_author: by_author
                }
            },
            add_date: function(date, collection) {
                return collection[date] = {},
                    collection[date].date = date
            },
            add_author: function(author, by_author) {
                return by_author[author.author_name] = {},
                    by_author[author.author_name].author_name = author.author_name,
                    by_author[author.author_name].author_email = author.author_email
            },
            store_data: function(entry, total, by_author) {
                return this.store_commits(total, by_author),
                    this.store_additions(entry, total, by_author),
                    this.store_deletions(entry, total, by_author)
            },
            store_commits: function(total, by_author) {
                return this.add(total, "commits", 1),
                    this.add(by_author, "commits", 1)
            },
            add: function(collection, field, value) {
                return null  == collection[field] && (collection[field] = 0),
                    collection[field] += value
            },
            store_additions: function(entry, total, by_author) {
                return null  == entry.additions && (entry.additions = 0),
                    this.add(total, "additions", entry.additions),
                    this.add(by_author, "additions", entry.additions)
            },
            store_deletions: function(entry, total, by_author) {
                return null  == entry.deletions && (entry.deletions = 0),
                    this.add(total, "deletions", entry.deletions),
                    this.add(by_author, "deletions", entry.deletions)
            },
            get_total_data: function(parsed_log, field) {
                var log, total_data;
                return log = parsed_log.total,
                    total_data = this.pick_field(log, field),
                    _.sortBy(total_data, function(d) {
                        return d.date
                    })
            },
            pick_field: function(log, field) {
                var total_data;
                return total_data = [],
                    _.each(log, function(d) {
                        return total_data.push(_.pick(d, [field, "date"]))
                    }),
                    total_data
            },
            get_author_data: function(parsed_log, field, date_range) {
                var author_data, log;
                return null  == date_range && (date_range = null ),
                    log = parsed_log.by_author,
                    author_data = [],
                    _.each(log, function(_this) {
                        return function(log_entry) {
                            var parsed_log_entry;
                            return parsed_log_entry = _this.parse_log_entry(log_entry, field, date_range),
                                _.isEmpty(parsed_log_entry.dates) ? void 0 : author_data.push(parsed_log_entry)
                        }
                    }(this)),
                    _.sortBy(author_data, function(d) {
                        return d[field]
                    }).reverse()
            },
            parse_log_entry: function(log_entry, field, date_range) {
                var parsed_entry;
                return parsed_entry = {},
                    parsed_entry.author_name = log_entry.author_name,
                    parsed_entry.author_email = log_entry.author_email,
                    parsed_entry.dates = {},
                    parsed_entry.commits = parsed_entry.additions = parsed_entry.deletions = 0,
                    _.each(_.omit(log_entry, "author_name", "author_email"), function(_this) {
                        return function(value, key) {
                            return _this.in_range(value.date, date_range) ? (parsed_entry.dates[value.date] = value[field],
                                parsed_entry.commits += value.commits,
                                parsed_entry.additions += value.additions,
                                parsed_entry.deletions += value.deletions) : void 0
                        }
                    }(this)),
                    parsed_entry
            },
            in_range: function(date, date_range) {
                var _ref;
                return null  === date_range || date_range[0] <= (_ref = new Date(date)) && _ref <= date_range[1] ? !0 : !1
            }
        }
    }
        .call(this),
    function() {
        angular.module("app").controller("TagIndexController", ["$scope", "$routeParams", "Depot", "PageTitle", "Pager", "Flash", function($scope, $routeParams, Depot, PageTitle, Pager, Flash) {
            var CPager, loadTags, pager_id;
            return $scope.inner_menu = "tag",
                $scope.tag_menu = "tag",
                $scope.loaded = !1,
                $scope.tags = [],
                pager_id = $scope.pager_id = (new Date).getTime(),
                CPager = Pager.instance(pager_id, $scope),
                loadTags = function(page) {
                    return Depot.tags({
                        page: page,
                        username: $routeParams.username,
                        project_name: $routeParams.project_name
                    }, function(result) {
                        result.data && ($scope.tags = result.data.list,
                            CPager.optionsReady(result.data)),
                            PageTitle.set("标签", $scope.PROJECT.owner.global_key, $scope.PROJECT.name, "Coding.net"),
                            $scope.loaded = !0
                    })
                }
                ,
                CPager.onChange(function(page) {
                    loadTags(page)
                }),
                loadTags(1),
                $scope.delete_tag = function(tag) {
                    return confirm("确定要删除该标签(" + tag.name + ")么？") ? Depot.delete_tag({
                        username: $routeParams.username,
                        project_name: $routeParams.project_name
                    }, {
                        tag_name: tag.name
                    }, function(result) {
                        return Flash.success().send("删除成功"),
                            $scope.tags = $.map($scope.tags, function(b) {
                                return b.name !== tag.name ? b : void 0
                            })
                    }) : void 0
                }
                ,
                $scope.isSameDay = function(tags, index) {
                    return 0 === index ? !1 : new Date(tags[index].created_at).getDate() === new Date(tags[index - 1].created_at).getDate()
                }
                ,
                $scope.isSameYear = function(tags, index) {
                    return 0 === index ? !1 : new Date(tags[index].created_at).getYear() === new Date(tags[index - 1].created_at).getYear()
                }
                ,
                $scope.isToday = function(time) {
                    return moment(new Date(time)).format("YYYY-MM-DD") === moment(new Date).format("YYYY-MM-DD")
                }
                ,
                $scope.showMessage = function(tag) {
                    return tag.showMessage = !tag.showMessage
                }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("TagNewController", ["$scope", "$routeParams", "$location", "Depot", "Flash", function($scope, $routeParams, $location, Depot, Flash) {
            return $scope.inner_menu = "tag",
                $scope.tag_menu = "tag",
                $scope.loaded = !1,
                $scope.submitting = !1,
                $scope.new_tag = {
                    name: "",
                    tag_point: $location.search().startWith || "",
                    message: ""
                },
                $scope.create_tag = function(tag) {
                    return $scope.submitting = !0,
                        Depot.create_tag({
                            username: $routeParams.username,
                            project_name: $routeParams.project_name
                        }, {
                            message: tag.message,
                            tag_name: tag.name,
                            tag_point: tag.tag_point
                        }, function(result) {
                            return $scope.submitting = !0,
                                Flash.success().send("创建成功"),
                                $location.path($scope.PROJECT.project_path + "/git/tags")
                        })["catch"](function(error, result) {
                            $scope.submitting = !1
                        })
                }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("TreeController", ["$scope", "$routeParams", "$location", "Depot", "Errors", "PageTitle", "Flash", "md5", "$rootScope", "CodeInsight", function($scope, $routeParams, $location, Depot, Errors, PageTitle, Flash, md5, $rootScope, CodeInsight) {
            var dPromise, reg, region, url;
            return $scope.inner_menu = "basic",
                $scope.tag_menu = "basic",
                $scope.type = "tree",
                $scope.can_edit = !1,
                $scope.empty = !1,
                $scope.isHead = !1,
                $scope.loaded = !1,
                $scope.too_many_files = !1,
                $scope.parentLink = [],
                $scope.tree = [],
                $scope.infos = {},
                $scope.path = [],
                $scope.ref = $scope.DEPOT.default_branch || "",
                $scope.CodingUrl = $location.path(),
                $scope.md5 = md5,
                $scope.DEPOT === !1 ? ($scope.empty = !0,
                    void ($scope.loaded = !0)) : ($scope.DEPOT === !1 || "" === $scope.ref ? (dPromise = Depot.depot({
                        username: $routeParams.username,
                        project_name: $routeParams.project_name
                    }),
                        dPromise.then(function(result) {
                            var reg, region, url;
                            return $scope.DEPOT = result.data.depot,
                                $rootScope.DEPOT = $scope.DEPOT,
                                $scope.ref = $scope.DEPOT.default_branch || "",
                                $scope.DEPOT === !1 ? ($scope.empty = !0,
                                    void ($scope.loaded = !0)) : "" === $scope.ref ? ($scope.loaded = !0,
                                    void ($scope.empty = !0)) : (reg = /^\/u\/[^\/]+\/p\/[^\/]+\/git[\/]?$/,
                                    url = $location.path(),
                                reg.test(url) && (url = url + "/tree/" + $scope.DEPOT.default_branch),
                                    region = url.substring(url.search("/git/tree/") + 10, url.length),
                                    $scope.tree_url = url.replace(/\/u\/[^\/]+\/p\/[^\/]+[\/]/, "/api/user/" + $routeParams.username + "/project/" + $routeParams.project_name + "/"),
                                    Depot.tree({
                                        username: $routeParams.username,
                                        project_name: $routeParams.project_name,
                                        region: encodeURIComponent(region)
                                    }, function(result) {
                                        return result.data.files && ($scope.loaded = !0,
                                            $scope.tree = result.data,
                                            $scope.ref = encodeURIComponent(result.data.ref).replace(/%2F/g, "/"),
                                            $scope.path = result.data.path ? encodeURIComponent(result.data.path).replace(/%2F/g, "/") : "",
                                            $scope.readme = result.data.readme,
                                            $scope.isHead = result.data.isHead,
                                            $scope.can_edit = result.data.can_edit,
                                            $scope.too_many_files = result.data.too_many_files,
                                        $scope.path && ($scope.parentLink = $scope.PROJECT.project_path + "/git/tree/" + $scope.ref + "/" + $scope.path.substring(0, $scope.path.lastIndexOf("/"))),
                                            $scope.path && $scope.path.length > 0 ? PageTitle.set(result.data.path, $scope.PROJECT.owner.global_key, $scope.PROJECT.name, "Coding.net") : PageTitle.set($scope.PROJECT.owner.global_key, $scope.PROJECT.name, "Coding.net"),
                                            $scope.shortMessage = $scope.tree.lastCommit.shortMessage,
                                            $scope.fullMessage = $scope.tree.lastCommit.fullMessage,
                                            $scope.allMessage = $scope.tree.lastCommit.allMessage,
                                            $scope.showAllMessage = !1,
                                        $scope.PROJECT.plan > 1 && result.data.ref === $scope.DEPOT.default_branch && result.data.isHead) ? CodeInsight.task({
                                            username: $routeParams.username,
                                            project_name: $routeParams.project_name,
                                            commit_id: result.data.headCommit.commitId
                                        }, function(result) {
                                            return result.data ? $scope.codeInsightTask = result.data : $scope.codeInsightTask = {
                                                status: -1
                                            },
                                                $scope.codeInsightTask.link = "/u/" + $routeParams.username + "/p/" + $routeParams.project_name + "/codeInsight/show/" + $scope.tree.headCommit.commitId
                                        }) : void 0
                                    }))
                        })) : (reg = /^\/u\/[^\/]+\/p\/[^\/]+\/git[\/]?$/,
                        url = $location.path(),
                    reg.test(url) && (url = url + "/tree/" + $scope.DEPOT.default_branch),
                        region = url.substring(url.search("/git/tree/") + 10, url.length),
                        $scope.tree_url = url.replace(/\/u\/[^\/]+\/p\/[^\/]+[\/]/, "/api/user/" + $routeParams.username + "/project/" + $routeParams.project_name + "/"),
                        Depot.tree({
                            username: $routeParams.username,
                            project_name: $routeParams.project_name,
                            region: encodeURIComponent(region)
                        }, function(result) {
                            return result.data.files ? ($scope.loaded = !0,
                                $scope.tree = result.data,
                                $scope.ref = encodeURIComponent(result.data.ref).replace(/%2F/g, "/"),
                                $scope.path = result.data.path ? encodeURIComponent(result.data.path).replace(/%2F/g, "/") : "",
                                $scope.readme = result.data.readme,
                                $scope.isHead = result.data.isHead,
                                $scope.can_edit = result.data.can_edit,
                                $scope.too_many_files = result.data.too_many_files,
                            $scope.path && ($scope.parentLink = $scope.PROJECT.project_path + "/git/tree/" + $scope.ref + "/" + $scope.path.substring(0, $scope.path.lastIndexOf("/"))),
                                $scope.path && $scope.path.length > 0 ? PageTitle.set(result.data.path, $scope.PROJECT.owner.global_key, $scope.PROJECT.name, "Coding.net") : PageTitle.set($scope.PROJECT.owner.global_key, $scope.PROJECT.name, "Coding.net"),
                                $scope.shortMessage = $scope.tree.lastCommit.shortMessage,
                                $scope.fullMessage = $scope.tree.lastCommit.fullMessage,
                                $scope.allMessage = $scope.tree.lastCommit.allMessage,
                                $scope.showAllMessage = !1,
                                $scope.PROJECT.plan > 1 && result.data.ref === $scope.DEPOT.default_branch && result.data.isHead ? CodeInsight.task({
                                    username: $routeParams.username,
                                    project_name: $routeParams.project_name,
                                    commit_id: result.data.headCommit.commitId
                                }, function(result) {
                                    return result.data ? $scope.codeInsightTask = result.data : $scope.codeInsightTask = {
                                        status: -1
                                    },
                                        $scope.codeInsightTask.link = "/u/" + $routeParams.username + "/p/" + $routeParams.project_name + "/codeInsight/show/" + $scope.tree.headCommit.commitId
                                }) : void 0) : ($location.path($scope.PROJECT.project_path + "/git"),
                                Flash.fail().send("路径不存在"))
                        })),
                        $scope.toggleShowAllMessage = function(showAllMessage) {
                            $scope.showAllMessage = !showAllMessage
                        }
                        ,
                        $scope.copyCommit = function() {
                            $scope.showCopyIcon = !0,
                                setTimeout(function() {
                                    $scope.showCopyIcon = !1,
                                        $scope.$digest()
                                }, 1e3)
                        }
                )
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("IdeController", ["$scope", "$routeParams", "$location", function($scope, $routeParams, $location) {
            var setScreenshotPreview;
            $scope.inner_menu = "ide",
                $scope.tag_menu = "ide",
                $scope.loaded = !0,
                $scope.ide_link = "https://ide.coding.net/ws/?ownerName=" + $routeParams.username + "&projectName=" + $routeParams.project_name,
            $scope.USER || $location.path($scope.PROJECT.project_path),
                (setScreenshotPreview = function() {
                        var li;
                        return li = $("ul.small-image li"),
                            li.on("click", function() {
                                var preview;
                                return preview = $(".screenshot.background"),
                                    preview.addClass("show"),
                                    preview.find("img").attr("src", $(this).find("img").attr("src")).attr("width", "900"),
                                    preview.find(".preview-title").text($(this).find("img").attr("alt")),
                                    0 === _.indexOf(li, this) ? $(".next-preview").addClass("show") : $(".prev-preview").addClass("show")
                            }),
                            $(".screenshot.preview").on("click", function() {
                                return $(".screenshot.background").removeClass("show"),
                                    $(".prev-preview").removeClass("show"),
                                    $(".next-preview").removeClass("show")
                            }),
                            $(".prev-preview").on("click", function() {
                                var preview;
                                return $(this).removeClass("show"),
                                    $(".next-preview").addClass("show"),
                                    li = $("ul.small-image li"),
                                    preview = $(".screenshot.background"),
                                    preview.find("img").attr("src", $(li[0]).find("img").attr("src")).attr("width", "900"),
                                    preview.find(".preview-title").text($(li[0]).find("img").attr("alt"))
                            }),
                            $(".next-preview").on("click", function() {
                                var preview;
                                return $(this).removeClass("show"),
                                    $(".prev-preview").addClass("show"),
                                    li = $("ul.small-image li"),
                                    preview = $(".screenshot.background"),
                                    preview.find("img").attr("src", $(li[1]).find("img").attr("src")).attr("width", "900"),
                                    preview.find(".preview-title").text($(li[1]).find("img").attr("alt"))
                            })
                    }
                )()
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("PaasEmptyController", ["$scope", "$route", "$routeParams", "$timeout", "Depot", "Paas", "PageTitle", function($scope, $route, $routeParams, $timeout, Depot, Paas, PageTitle) {
            var PROJECT, params;
            return PROJECT = $scope.PROJECT,
                params = {
                    username: $routeParams.username,
                    project_name: $routeParams.project_name
                },
                $scope.empty_repo = !1,
                $scope.canEnable = !1,
                $scope.detected = !1,
                $scope.enabled = !1,
                $scope.tag_menu = "pass",
                PageTitle.set("演示平台", PROJECT.owner.global_key, PROJECT.name, "Coding.net"),
                Depot.depot(params, function(result) {
                    return 1 === result.code ? $scope.empty_repo = !0 : ($scope.depot = result.data.depot,
                    "" === $scope.depot.default_branch && ($scope.empty_repo = !0)),
                        $scope.empty_repo ? void 0 : Paas.servers({}, function(result) {
                            return $scope.servers = result.regions,
                                $scope.endpoint = result["default"]
                        })
                }),
                $scope.showInvite = function(index) {
                    var invite;
                    return invite = !1,
                        angular.forEach($scope.servers, function(server) {
                            return server.index === index && server.invite ? invite = !0 : void 0
                        }),
                        invite
                }
                ,
                $scope.detect = function() {
                    return $scope.detectLoading = !0,
                        Paas.detect(params, {
                            ref: $scope.depot.default_branch
                        }, function(result) {
                            return $scope.detectLoading = !1,
                                $scope.detected = !0,
                                $scope.language = result.lang,
                                result.lang ? $scope.canEnable = !0 : void 0
                        }, function(result) {
                            return $scope.detectLoading = !1,
                                $scope.detected = !0
                        })
                }
                ,
                $scope.enable = function(endpoint, invite_code, readed) {
                    return readed ? ($scope.message = !1,
                        $scope.enableLoading = !0,
                        Paas.save(params, {
                            endpoint: endpoint,
                            invite_code: invite_code
                        }, function(cf_app) {
                            return $scope.enableLoading = !1,
                                cf_app ? ($scope.enabled = !0,
                                    $timeout(function() {
                                        return $route.reload()
                                    }, 1e3)) : void 0
                        }, function(result) {
                            return $scope.enableLoading = !1,
                                result.data && result.data.message ? $scope.message = result.data.message : void 0
                        })) : $scope.show_warn = !0
                }
                ,
                $scope.showHongKong = function(server) {
                    return 0 === server.index ? !0 : PROJECT.plan > 1
                }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("PaasFilesController", ["$scope", "$rootScope", "$routeParams", "$location", "$timeout", "Paas", "Pager", function($scope, $rootScope, $routeParams, $location, $timeout, Paas, Pager) {
            var file_path, formatBreadcrumbs, formatFiles, initPath, pagePromise, pager_id, params, req_path, splitPath, updateLocation;
            return $scope.inner_menu = "files",
                $scope.tag_menu = "paas",
                params = {
                    username: $routeParams.username,
                    project_name: $routeParams.project_name
                },
                pager_id = $scope.pager_id = (new Date).getTime(),
                Pager = Pager.instance(pager_id, $scope),
                pagePromise = Pager.onChange(),
                formatFiles = function(files) {
                    var ffiles, i, line, matchCount, matches, name, re, size, _i, _ref;
                    for (ffiles = [],
                             re = /([^ ]+) +([0-9\.]+[B|K|M|G|T]|-)$/,
                             matchCount = 0,
                             i = _i = 0,
                             _ref = files.length; _ref > _i; i = _i += 1)
                        if (line = files[i],
                                matches = line.match(re),
                            matches && (size = matches[2],
                                name = line.substring(0, line.length - size.length).replace(/^\s+|\s+$/g, ""),
                                ffiles.push({
                                    name: name,
                                    size: size,
                                    dir: "/" === name.charAt(name.length - 1)
                                })),
                            20 === i && ffiles.length < 20)
                            return $scope.dir = !1,
                                void ($scope.files = files.join("\r\n"));
                    return ffiles.length === files.length ? ($scope.dir = !0,
                        $scope.files = ffiles) : ($scope.dir = !1,
                        $scope.files = files.join("\r\n"))
                }
                ,
                splitPath = function(path) {
                    var i, names, _i, _names, _ref;
                    for (_names = path.split("/"),
                             names = [],
                             i = _i = 0,
                             _ref = _names.length; _ref > _i; i = _i += 1)
                        _names[i] && names.push(_names[i]);
                    return names
                }
                ,
                formatBreadcrumbs = function(path) {
                    var i, names, paths, _i, _ref;
                    if (!path || "/" === path)
                        return [];
                    for (names = splitPath(path),
                             names.pop(),
                             paths = [],
                             i = _i = 0,
                             _ref = names.length; _ref > _i; i = _i += 1)
                        paths.push({
                            name: names[i],
                            path: names.slice(0, i + 1).join("/")
                        });
                    return paths
                }
                ,
                updateLocation = function(path) {
                    var base_path, req_path;
                    return req_path = $location.path(),
                        base_path = req_path.substring(0, req_path.search("/paas/files") + 11),
                        path && "" !== path && "/" !== path ? $location.skipReload().path("" + base_path + "/" + path) : $location.skipReload().path(base_path)
                }
                ,
                $scope.changePath = function(path, name, page) {
                    var full_path, names;
                    return null  == name && (name = ""),
                    null  == page && (page = 1),
                        $scope.loading ? void 0 : ($scope.files = !1,
                            full_path = path,
                        name && "" !== name && (full_path += "/" + name),
                        full_path && "" !== full_path || (full_path = "/"),
                            names = splitPath(full_path),
                            $scope.name = names[names.length - 1],
                            $scope.path = names.join("/"),
                            $scope.breadcrumbs = formatBreadcrumbs($scope.path),
                            updateLocation($scope.path),
                            $scope.loading = !0,
                            Paas.files(angular.extend({
                                path: $scope.path,
                                page: page
                            }, params), function(result) {
                                return $scope.total_pages = result.total_pages,
                                    formatFiles(result.content),
                                    Pager.optionsReady({
                                        list: result.content,
                                        page: page,
                                        pageSize: 1,
                                        totalPage: result.total_pages,
                                        totalRow: result.total_pages
                                    }),
                                    $scope.loading = !1
                            }, function(result) {
                                return $scope.loading = !1
                            }))
                }
                ,
                $scope.goToPrev = function(path) {
                    var names;
                    return names = splitPath(path),
                        names.pop(),
                        $scope.changePath(names.join("/") + "/")
                }
                ,
                $scope.goToPage = function(page) {
                    return page && page > 0 ? $scope.changePath($scope.path, "", page) : void 0
                }
                ,
                $scope.refreshPage = function() {
                    return $scope.changePath($scope.path, "", Pager.currentPage())
                }
                ,
                pagePromise.then(null , null , function(page) {
                    return $scope.changePath($scope.path, "", page)
                }),
                req_path = $location.path(),
                initPath = req_path.substring(req_path.search("/paas/files") + 11, req_path.length),
                file_path = $rootScope.paas_files_path,
            file_path && file_path.project === params.username + "@" + params.project_name && (initPath = file_path.path),
                $rootScope.paas_files_path = void 0,
                $scope.changePath(initPath, "", Pager.currentPage())
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("PaasLogsController", ["$scope", "$rootScope", "$document", "$routeParams", "$timeout", "Paas", "Setting", "Flash", function($scope, $rootScope, $document, $routeParams, $timeout, Paas, Setting, Flash) {
            var API_BASE_PATH, dump_url, initTopCtrl, params, processMessage, scrollToLastLog, tail_url, ws_tail;
            return $scope.inner_menu = "logs",
                $scope.tag_menu = "paas",
                $scope.log_filters = {
                    all: "所有",
                    sys: "系统",
                    stg: "部署",
                    rtr: "访问",
                    app: "应用"
                },
                $scope.filter = "all",
                API_BASE_PATH = "/api/paas/" + $routeParams.username + "/" + $routeParams.project_name + "/cf_app",
                params = {
                    username: $routeParams.username,
                    project_name: $routeParams.project_name
                },
                dump_url = "" + Setting.api_host.replace(/^http/, "ws") + API_BASE_PATH + "/logs",
                tail_url = "" + dump_url + "?tail=true",
                ws_tail = null ,
            window.MozWebSocket && (window.WebSocket = window.MozWebSocket),
                $scope.ws_support = !!window.WebSocket,
                scrollToLastLog = function() {
                    return $(".logs p").length > 0 ? $document.scrollToElement(angular.element(".logs p:last")) : void 0
                }
                ,
                processMessage = function(message) {
                    return $scope.logs.push(JSON.parse(message.data)),
                        $scope.$digest(),
                        $scope.autoScroll ? scrollToLastLog() : void 0
                }
                ,
                initTopCtrl = function() {
                    var margin_top, topMenuHeight;
                    return margin_top = angular.element(".logs").offset().top,
                        topMenuHeight = angular.element("#top-menu").height(),
                        $document.on("scroll", function() {
                            var offset, scrollTop;
                            return scrollTop = $document.scrollTop(),
                                offset = scrollTop - margin_top + topMenuHeight,
                                offset > 0 ? angular.element("#tail").css("top", offset) : angular.element("#tail").css("top", 0)
                        })
                }
                ,
                $scope.isLogShow = function(filter, type) {
                    return "all" === filter ? !0 : "sys" === filter && ["api", "dea"].indexOf(type) >= 0 ? !0 : filter === type
                }
                ,
                $scope.refreshLogs = function(toggleScroll) {
                    var ws_dump;
                    return null  == toggleScroll && (toggleScroll = !1),
                        $scope.logs = [],
                        $scope.loading = !0,
                        ws_dump = new WebSocket(dump_url),
                        ws_dump.onopen = function() {
                            return $scope.loading = !1,
                                $scope.$digest(),
                                initTopCtrl()
                        }
                        ,
                        ws_dump.onmessage = processMessage,
                        ws_dump.onclose = function() {
                            return $scope.loading = !1,
                                $scope.$digest(),
                                toggleScroll ? $scope.toggleScroll() : void 0
                        }
                        ,
                        ws_dump.onerror = function() {
                            return $scope.loading = !1,
                                $scope.$digest(),
                                Flash.fail().send("WebSocket 连接出错，请刷新页面重试！")
                        }
                }
                ,
                $scope.toggleScroll = function() {
                    return $scope.autoScroll = !$scope.autoScroll,
                        $scope.autoScroll ? (scrollToLastLog(),
                            ws_tail = new WebSocket(tail_url),
                            ws_tail.onmessage = processMessage,
                            ws_tail.onopen = function() {
                                return $scope.$digest(),
                                    Flash.success().send("温馨提示：WebSocket 连接已建立：）")
                            }
                            ,
                            ws_tail.onclose = function() {
                                return $scope.autoScroll = !1,
                                    $scope.$digest(),
                                    Flash.warn().send("温馨提示：WebSocket 连接已断开：）")
                            }
                            ,
                            ws_tail.onerror = function() {
                                return $scope.autoScroll = !1,
                                    $scope.$digest(),
                                    Flash.fail().send("WebSocket 连接出错，请刷新页面重试！")
                            }
                            ,
                            $rootScope.$on("$routeChangeStart", function(event, current) {
                                return ws_tail.close()
                            })) : ws_tail ? ws_tail.close() : void 0
                }
                ,
                $scope.ws_support ? $scope.refreshLogs(!0) : void 0
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("PaasAddServiceController", ["$rootScope", "$scope", "$route", "Paas", function($rootScope, $scope, $route, Paas) {
            var PROJECT, USER, loadMarketplace, params, serviceLogos;
            return USER = $rootScope.USER,
                PROJECT = $rootScope.PROJECT,
                params = {
                    username: PROJECT.owner.global_key,
                    project_name: PROJECT.name
                },
                serviceLogos = {
                    mysql: "/static/543511d709b9ec4567db43750abcaeee.png",
                    redis: "/static/df5991d0a55d38143bb663aa71ace558.gif",
                    mongodb: "/static/ade5489f58b5cb017273aee5837eed04.gif",
                    postgresql: "/static/65b29314ba4a15a9eea705890b1f3130.png",
                    filesystem: "/static/23886465363cb39b0d5bb71ecde85b6e.png"
                },
                loadMarketplace = function() {
                    return $scope.marketplace = [],
                        $scope.service = {},
                        Paas.marketplace(params, {}, function(result) {
                            return angular.forEach(result, function(service) {
                                var keepGoing;
                                return keepGoing = !0,
                                    angular.forEach(serviceLogos, function(val, key) {
                                        var reg;
                                        return keepGoing && (reg = new RegExp(key),
                                            reg.test(service.label)) ? (keepGoing = !1,
                                            service.logo = val) : void 0
                                    })
                            }),
                                $scope.marketplace = result
                        })
                }
                ,
                $scope.selService = function(guid, event) {
                    var elem;
                    return elem = angular.element(event.currentTarget),
                        elem.siblings().removeClass("active"),
                        elem.toggleClass("active"),
                        elem.hasClass("active") ? ($scope.service.guid = guid,
                            $scope.form_error = !1) : $scope.service.guid = null
                }
                ,
                $scope.createService = function(service) {
                    return service.guid && "" !== service.guid ? ($scope.add_loading = !0,
                        Paas.add_service(params, service, function(result) {
                            var reloadPage;
                            return reloadPage = function() {
                                return $scope.add_loading = !1,
                                    $scope.createBind = !1,
                                    angular.element(".ui.modal.marketplace .ui.list .item").removeClass("active"),
                                    $("#pass-add-service-modal").modal("hide"),
                                    $route.reload()
                            }
                                ,
                                $scope.createBind && result && result.id ? Paas.bind_service(angular.extend({
                                    service_id: result.id
                                }, params), {}, function() {
                                    return reloadPage()
                                }, function(result) {
                                    return $scope.add_loading = !1
                                }) : reloadPage()
                        }, function(result) {
                            return $scope.add_loading = !1
                        })) : ($scope.form_error = !0,
                        !1)
                }
                ,
                $rootScope.$on("paas.service.modal.open", function(event, data) {
                    return data ? loadMarketplace() : void 0
                })
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("PaasServiceConsoleController", ["$scope", "$rootScope", "location", "$routeParams", "Paas", "PageTitle", "Flash", "Setting", function($scope, $rootScope, $location, $routeParams, Paas, PageTitle, Flash, Setting) {
            var API_BASE, params, serviceResource, service_id;
            return $scope.inner_menu = "services",
                $scope.tag_menu = "paas",
                $scope.fullscreen = !1,
                $scope.filesystem = !1,
                service_id = $routeParams.service_id,
                API_BASE = "" + Setting.api_host + "/api/paas/" + $routeParams.username + "/" + $routeParams.project_name + "/cf_services",
                params = {
                    username: $routeParams.username,
                    project_name: $routeParams.project_name
                },
                $scope.browseFs = function() {
                    return $scope.filesystem ? ($scope.loading = !0,
                        Paas.service_credentials(angular.extend({
                            service_id: service_id
                        }, params), {}, function(result) {
                            return $scope.loading = !1,
                                $rootScope.paas_files_path = {
                                    project: params.username + "@" + params.project_name,
                                    path: result.host_path.replace("/home/vcap", "") + "/"
                                },
                                $location.path("" + $rootScope.PROJECT.project_path + "/paas/files")
                        }, function(result) {
                            return $scope.loading = !1
                        })) : void 0
                }
                ,
                serviceResource = Paas.service_info(angular.extend({
                    service_id: service_id
                }, params)),
                serviceResource.$promise.then(function(cf_service) {
                    var consoleMessage, service_console;
                    return PageTitle.set(cf_service.name, "服务控制台 - 演示平台", $routeParams.project_name, "Coding.net"),
                        $scope.importable = !/redis/.test(cf_service.label),
                        $scope.export_url = "" + API_BASE + "/" + service_id + "/console/export",
                        $scope.filesystem = /filesystem/.test(cf_service.label),
                        service_console = $("#service-console").console({
                            autofocus: !0,
                            promptLabel: "" + cf_service.name + " > ",
                            commandHandle: function(line, report) {
                                return "" === line ? report() : "clear" === line ? service_console.reset() : $.ajax({
                                    type: "POST",
                                    url: "" + API_BASE + "/" + service_id + "/console",
                                    data: {
                                        cmd: line
                                    },
                                    dataType: "JSON",
                                    beforeSend: function() {
                                        return report([{
                                            msg: "=> 请求已发出，请稍等..",
                                            className: "jquery-console-message-type"
                                        }]),
                                            $("#service-console .jquery-console-inner .jquery-console-prompt-box:last").remove()
                                    },
                                    error: function(xhr) {
                                        return report([{
                                            msg: "=> 请求失败，错误码：" + xhr.status + ", 请稍后重试！",
                                            className: "jquery-console-message-error"
                                        }])
                                    },
                                    success: function(json) {
                                        return report(0 === json.error ? [{
                                            msg: "=> 执行成功!",
                                            className: "jquery-console-message-success"
                                        }, {
                                            msg: json.msg,
                                            className: "jquery-console-message-value"
                                        }] : [{
                                            msg: "=> 执行失败!",
                                            className: "jquery-console-message-success"
                                        }, {
                                            msg: json.msg,
                                            className: "jquery-console-message-error"
                                        }])
                                    },
                                    xhrFields: {
                                        withCredentials: !0
                                    }
                                })
                            },
                            animateScroll: !0,
                            promptHistory: !0,
                            welcomeMessage: "这是一个简单的 Web Console，你可以在此执行服务相关的控制语句并查看结果，输入 clear 可以清除屏幕。"
                        }),
                        $scope.consoleReady = !0,
                        consoleMessage = function(msg, className) {
                            var mesg;
                            return mesg = $('<div class="jquery-console-message"></div>'),
                            className && mesg.addClass(className),
                                mesg.filledText(msg).hide(),
                                service_console.inner.find(".jquery-console-prompt-box:last").before(mesg),
                                mesg.show()
                        }
                        ,
                        $scope.uploadSettings = {
                            url: "" + API_BASE + "/" + service_id + "/console/import",
                            add: function(e, data) {
                                return confirm("注意：此操作不可恢复！请确定已备份现有数据。\n\n确定执行导入操作？") ? (angular.forEach(data.files, function(file) {
                                    return consoleMessage("=> 文件：" + file.name, "jquery-console-message-type")
                                }),
                                    data.submit()) : !1
                            },
                            send: function(e, data) {
                                return consoleMessage("=> 正在导入，请稍等..", "jquery-console-message-type")
                            },
                            done: function(e, data) {
                                var result;
                                return result = data.result,
                                    0 === result.error ? consoleMessage("=> " + result.msg, "jquery-console-message-success") : consoleMessage("=> " + result.msg, "jquery-console-message-error");
                            },
                            fail: function(e, data) {
                                return Flash.error().send("无法完成请求，请刷新页面重试")
                            }
                        }
                })
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("PaasServicesController", ["$scope", "$rootScope", "$routeParams", "Paas", "PasswordValidateService", function($scope, $rootScope, $routeParams, Paas, PasswordValidateService) {
            var USER, appConsoles, delService, loadAppService, loadAvaliableService, params, reloadService, vpModal;
            return $scope.inner_menu = "services",
                $scope.tag_menu = "paas",
                USER = $rootScope.USER,
                $rootScope.paasAddServiceModal.activate(),
                params = {
                    username: $routeParams.username,
                    project_name: $routeParams.project_name
                },
                appConsoles = ["mysql", "redis", "mongodb", "postgresql", "filesystem"],
                loadAppService = function() {
                    return Paas.app_services(params, {}, function(result) {
                        return angular.forEach(result, function(service) {
                            var i, reg, _i, _ref, _results;
                            for (_results = [],
                                     i = _i = 0,
                                     _ref = appConsoles.length; _ref > _i; i = _i += 1) {
                                if (reg = new RegExp(appConsoles[i]),
                                        reg.test(service.label)) {
                                    service.console = !0;
                                    break
                                }
                                _results.push(void 0)
                            }
                            return _results
                        }),
                            $scope.app_services = result
                    })
                }
                ,
                loadAvaliableService = function() {
                    return Paas.avaliable_services(params, {}, function(result) {
                        return $scope.user_services = result
                    })
                }
                ,
                reloadService = function() {
                    return $scope.app_services = null ,
                        $scope.user_services = null ,
                        loadAppService(),
                        loadAvaliableService()
                }
                ,
                Paas.get(params, function(cf_app) {
                    return $scope.cf_app = cf_app,
                        loadAppService(),
                        cf_app.project.owner.id === USER.id ? loadAvaliableService() : void 0
                }),
                vpModal = $rootScope.ValidatePassword,
                vpModal.activate(),
                $scope.requirePassword = function(service_id) {
                    var words;
                    return $scope.service_id = service_id,
                        words = "若要继续删除服务，需要进行身份确认！",
                        PasswordValidateService.require(words, PasswordValidateService.TYPES.DELETE_PAAS_SERVICE)
                }
                ,
                $scope.listEmpty = function(list) {
                    return !!list && list.$resolved && 0 === list.length
                }
                ,
                $scope.listLoading = function(list) {
                    return !list || !list.$resolved
                }
                ,
                $scope.bindService = function(service_id) {
                    return $scope.loading = !0,
                        Paas.bind_service(angular.extend({
                            service_id: service_id
                        }, params), {}, function(result) {
                            return $scope.loading = !1,
                                $scope.app_services = result,
                                reloadService()
                        }, function(result) {
                            return $scope.loading = !1
                        })
                }
                ,
                $scope.unBindService = function(service_id) {
                    return $scope.loading = !0,
                        Paas.unbind_service(angular.extend({
                            service_id: service_id
                        }, params), {}, function(result) {
                            return $scope.loading = !1,
                                $scope.app_services = result,
                                reloadService()
                        }, function(result) {
                            return $scope.loading = !1
                        })
                }
                ,
                $scope.showMarketplace = function() {
                    var modal_setting;
                    modal_setting = {
                        duration: 100,
                        onShow: function() {
                            return $rootScope.$broadcast("paas.service.modal.open", !0)
                        },
                        onApprove: function() {
                            return !1
                        }
                    },
                        $("#pass-add-service-modal").modal("setting", modal_setting).modal("show")
                }
                ,
                delService = function(service_id, code) {
                    return $scope.loading = !0,
                        Paas.del_service(angular.extend({
                            service_id: service_id,
                            two_factor_code: code
                        }, params), {}, function() {
                            return $scope.loading = !1,
                                reloadService(),
                                $scope.service_id = null
                        }, function(result) {
                            return $scope.loading = !1,
                                401 === result.status && 1104 === result.data.error ? $scope.requirePassword() : void 0
                        })
                }
                ,
                $scope.showCredentials = function(service_id) {
                    return $scope.loading = !0,
                        Paas.service_credentials(angular.extend({
                            service_id: service_id
                        }, params), {}, function(result) {
                            return $scope.loading = !1,
                                $scope.service_credentials = result
                        }, function(result) {
                            return $scope.loading = !1
                        })
                }
                ,
                $scope.hideCredentials = function() {
                    return $scope.service_credentials = !1
                }
                ,
                PasswordValidateService.onPasswordReady(function(event, password, confirmed, type) {
                    return $scope.password = password,
                        PasswordValidateService.TYPES.DELETE_PAAS_SERVICE === type && confirmed && password ? delService($scope.service_id, $scope.password) : void 0
                })
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("PaasShowController", ["$rootScope", "$scope", "$route", "$routeParams", "$interval", "$timeout", "$http", "Paas", "Flash", "PasswordValidateService", function($rootScope, $scope, $route, $routeParams, $interval, $timeout, $http, Paas, Flash, PasswordValidateService) {
            var HealthChecker, deletePaas, endsWith, healthChecker, params, updateMems, vpModal;
            return $scope.inner_menu = "basic",
                $scope.tag_menu = "paas",
                $scope.unknown_state = !1,
                $scope.paas_enabled = !0,
                $scope.healthy = !1,
                $scope.routeExist = !0,
                $scope.loading = !1,
                $scope.show_expert_option = !1,
                $scope.mems = [64, 128, 256, 512],
                $scope.runtimes = {
                    HTML: "coding_static",
                    Java: "coding_java",
                    Ruby: "coding_ruby",
                    "Node.js": "coding_nodejs",
                    Go: "coding_go",
                    PHP: "coding_php",
                    Python: "coding_python",
                    Play: "coding_play",
                    Scala: "coding_scala"
                },
                $scope.runtime = "auto",
                endsWith = function(str, suffix) {
                    return str ? -1 !== str.indexOf(suffix, str.length - suffix.length) : !1
                }
                ,
                updateMems = function(current_plan, payment, memory) {
                    if (payment.expire) {
                        if (-1 === $scope.mems.indexOf(memory) && (2 === payment.plan && $scope.mems.push(1024),
                            3 === payment.plan))
                            return $scope.mems = $scope.mems.push(2048)
                    } else if (2 === current_plan && $scope.mems.push(1024),
                        3 === current_plan)
                        return $scope.mems = $scope.mems.concat(1024, 2048)
                }
                ,
                $scope.formatUptime = function(seconds) {
                    return moment.durations(seconds, "seconds").humanize()
                }
                ,
                $scope.formatRef = function(ref) {
                    return /\b([a-f0-9]{40})\b/.test(ref) ? ref.substring(0, 9) : ref
                }
                ,
                $scope.formatMem = function(mem) {
                    return 1024 > mem ? "" + mem + "M" : "" + mem / 1024 + "G"
                }
                ,
                $scope.requirePassword = function() {
                    var words;
                    return words = "若要继续删除演示，需要进行身份确认！",
                        PasswordValidateService.require(words, PasswordValidateService.TYPES.DELETE_PAAS)
                }
                ,
                HealthChecker = function() {
                    function HealthChecker(stopCode, checkCount, retryCount, interval) {
                        this.stopCode = null  != stopCode ? stopCode : "RUNNING",
                            this.checkCount = null  != checkCount ? checkCount : 50,
                            this.retryCount = null  != retryCount ? retryCount : 5,
                            this.interval = null  != interval ? interval : 6e3
                    }
                    return HealthChecker.prototype.reset = function(stopCode) {
                        var self;
                        return this.stopCode = null  != stopCode ? stopCode : "RUNNING",
                            self = this,
                            self.cancelTimer(),
                            $scope.healthy = !1,
                            $scope.health = null ,
                            $scope.stats = null ,
                            this.checkHealth(self).then(function(health) {
                                return self.checkCount--,
                                    self.timer ? void 0 : (self.timer = $interval(function() {
                                        return self.checkHealth(self)
                                    }, self.interval, self.checkCount),
                                        $rootScope.$on("$routeChangeSuccess", function(event, current) {
                                            return self.timer ? $interval.cancel(self.timer) : void 0
                                        }))
                            })
                    }
                        ,
                        HealthChecker.prototype.checkHealth = function(self) {
                            var resource;
                            return null  == self && (self = this),
                                resource = Paas.health(params, function(health) {
                                    return $scope.health = health,
                                    health.code === self.stopCode && (self.retryCount--,
                                    0 === self.retryCount && self.cancelTimer()),
                                        "STARTED" !== health.code && "RUNNING" !== health.code ? ("STOPPED" === health.code && ($scope.stopped = !0),
                                            $scope.healthy = !1) : ($scope.stopped = !1,
                                            $scope.healthy = !0,
                                            self.updateStats(),
                                            $scope.update_app ? Paas.get(params, function(cf_app) {
                                                return $scope.cf_app = cf_app,
                                                    $scope.update_app = !1
                                            }) : void 0)
                                }),
                                resource.$promise
                        }
                        ,
                        HealthChecker.prototype.updateStats = function() {
                            return Paas.stats(params, function(result) {
                                return $scope.stats = result
                            })
                        }
                        ,
                        HealthChecker.prototype.cancelTimer = function() {
                            return $interval.cancel(this.timer),
                                this.timer = null
                        }
                        ,
                        HealthChecker
                }(),
                params = {
                    username: $routeParams.username,
                    project_name: $routeParams.project_name
                },
                healthChecker = new HealthChecker,
                vpModal = $rootScope.ValidatePassword,
            vpModal && vpModal.activate(),
                Paas.get(params, function(cf_app) {
                    return $scope.cf_app = cf_app,
                        $scope.ref = cf_app.version,
                        $scope.host = cf_app.host,
                        $scope.can_change_domain = cf_app.custom_domain,
                        $scope.url = cf_app.url,
                        $scope.memory = cf_app.memory,
                        $scope.command = cf_app.command,
                        $scope.path = cf_app.path,
                        $scope.buildpack = cf_app.buildpack,
                        $scope.payment = cf_app.project.payment,
                    $scope.payment && updateMems(cf_app.project.plan, $scope.payment, cf_app.memory),
                    cf_app.domain && "" !== cf_app.domain && !endsWith(cf_app.domain, cf_app.sys_domain) && ($scope.domain = cf_app.domain,
                        $scope.custom_domain = !0),
                        angular.forEach($scope.runtimes, function(value, key) {
                            return cf_app.buildpack === value ? $scope.runtime = value : void 0
                        }),
                        healthChecker.reset()
                }, function(response) {
                    return $scope.paas_enabled = !1,
                        404 !== response.status ? $scope.unknown_state = !0 : void 0
                }),
                $scope.start = function() {
                    return $scope.loading = !0,
                        Paas.start(params, {}, function() {
                            return $scope.loading = !1,
                                healthChecker.reset()
                        }, function(response) {
                            return $scope.loading = !1
                        })
                }
                ,
                $scope.stop = function() {
                    return confirm("确定停止应用？") ? ($scope.loading = !0,
                        Paas.stop(params, {}, function() {
                            return $scope.loading = !1,
                                healthChecker.reset("STOPPED")
                        }, function(response) {
                            return $scope.loading = !1
                        })) : void 0
                }
                ,
                $scope.restart = function() {
                    return confirm("确定重启应用？") ? ($scope.loading = !0,
                        Paas.restart(params, {}, function() {
                            return $scope.loading = !1,
                                healthChecker.reset()
                        }, function(response) {
                            return $scope.loading = !1
                        })) : void 0
                }
                ,
                deletePaas = function(code) {
                    return $scope.loading = !0,
                        healthChecker.cancelTimer(),
                        Paas["delete"](angular.extend({
                            two_factor_code: code
                        }, params), {}, function() {
                            return $scope.loading = !1,
                                $route.reload()
                        }, function(response) {
                            return $scope.loading = !1,
                                401 === response.status && 1104 === response.data.error ? $scope.requirePassword() : void 0
                        })
                }
                ,
                $scope.deploy = function(ref, path, command, buildpack) {
                    var commit_url;
                    return null  == ref && (ref = "master"),
                        confirm("确定执行部署操作？") ? ($scope.loading = !0,
                            commit_url = "/api/user/" + $routeParams.username + "/project/" + $routeParams.project_name + "/git/commit/" + ref,
                            $http.get(commit_url).then(function(result) {
                                return 0 === result.data.code ? Paas.deploy(params, {
                                    ref: ref,
                                    path: path,
                                    cmd: command,
                                    buildpack: buildpack
                                }, function() {
                                    return $scope.loading = !1,
                                        $timeout(function() {
                                            return $scope.update_app = !0,
                                                healthChecker.reset()
                                        }, 5e3),
                                        Flash.success().send("项目已经在部署，请稍等，状态会自动更新。")
                                }, function(response) {
                                    return $scope.loading = !1
                                }) : ($scope.loading = !1,
                                    Flash.warn().send("未执行部署，请检查输入的分支、标签或 commit 是否存在!"))
                            })) : void 0
                }
                ,
                $scope.validateRoute = function(host, domain, custom_domain) {
                    return custom_domain ? domain && "" !== domain : host && "" !== host
                }
                ,
                $scope.updateRoute = function(host, domain, custom_domain) {
                    return $scope.validateRoute(host, domain, custom_domain) ? ($scope.loading = !0,
                        custom_domain ? host = "" : domain = "",
                        Paas.update(params, {
                            host: host,
                            domain: domain
                        }, function(result) {
                            return $scope.loading = !1,
                                $scope.url = result.url,
                                Flash.success().send("修改成功!")
                        }, function(response) {
                            return $scope.loading = !1
                        })) : !1
                }
                ,
                $scope.toggleDomainHelp = function() {
                    return $scope.domain_help = !$scope.domain_help
                }
                ,
                $scope.updateMemory = function(memory) {
                    return confirm("修改内存需要重启应用，确定修改？\n\n 注意：过少的内存设置可能会导致应用无法正常启动！") ? ($scope.loading = !0,
                        Paas.scale(params, {
                            memory: memory
                        }, function() {
                            return $scope.loading = !1,
                                $timeout(function() {
                                    return $scope.update_app = !0,
                                        healthChecker.reset()
                                }, 1e3),
                                Flash.success().send("修改成功!")
                        }, function(response) {
                            return $scope.loading = !1
                        })) : void 0
                }
                ,
                PasswordValidateService.onPasswordReady(function(event, password, confirmed, type) {
                    return $scope.password = password,
                        PasswordValidateService.TYPES.DELETE_PAAS === type && confirmed && password ? deletePaas($scope.password) : void 0
                })
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("PaasVarsController", ["$scope", "$routeParams", "Paas", "Flash", function($scope, $routeParams, Paas, Flash) {
            var envs, params;
            return $scope.inner_menu = "vars",
                $scope.tag_menu = "paas",
                $scope.loading = !1,
                params = {
                    username: $routeParams.username,
                    project_name: $routeParams.project_name
                },
                envs = Paas.vars(params, {}, function() {
                    return $scope.envs = envs
                }),
                $scope.setEnv = function(env) {
                    return $scope.loading = !0,
                        Paas.set_var(params, {
                            key: env.key,
                            value: env.value
                        }, function(result) {
                            return $scope.loading = !1,
                                $scope.env = null ,
                                $scope.envs = result
                        }, function(result) {
                            return $scope.loading = !1
                        })
                }
                ,
                $scope.delEnv = function(key) {
                    return $scope.loading = !0,
                        Paas.del_var(angular.extend({
                            key: key
                        }, params), {}, function(result) {
                            return $scope.loading = !1,
                                $scope.envs = result
                        }, function(result) {
                            return $scope.loading = !1
                        })
                }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("EditProjectIconController", ["$scope", "$rootScope", "Project", "ProjectResolver", "Errors", "Flash", "Setting", "$http", "$location", "$q", function($scope, $rootScope, Project, ProjectResolver, Errors, Flash, Setting, $http, $location, $q) {
            var PROJECT, USER, upload_url;
            USER = $rootScope.USER,
                PROJECT = $rootScope.PROJECT,
                $("#edit-project-icon-modal").modal("setting", {
                    closable: !1
                }),
                $scope.project_icon = {},
                Project.get_project_icon({
                    id: PROJECT.id
                }, function(result) {
                    return 0 === result.code ? $scope.project_icon = result.data : void 0
                }),
                upload_url = [Setting.api_host, "/api/project/" + PROJECT.id + "/project_icon"].join(""),
                $scope.uploadSetting = {
                    xhrFields: {
                        withCredentials: !0
                    },
                    url: upload_url,
                    dropZone: null ,
                    add: function(e, data) {
                        data.submit(),
                            $scope.uploading = !0
                    },
                    done: function(e, data) {
                        0 === data.result.code ? ($scope.PROJECT = data.result.data,
                            $rootScope.PROJECT = $scope.PROJECT,
                            $scope.project_icon = data.result.data.icon,
                            $rootScope.$broadcast("project.icon.update", data.result.data.icon),
                            Flash.success().send("上传成功!")) : Errors.handle(data.result)
                    },
                    fail: function() {
                        Flash.fail().send("上传失败!")
                    }
                }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("ResetPasswordController", ["$rootScope", "$scope", "$location", "User", "Flash", function($rootScope, $scope, $location, User, Flash) {
            var brPromise, submit_form;
            return $rootScope.$watch("USER", function(user) {
                return $scope.USER ? $location.path("/user") : void 0
            }),
                $location.search().email,
                $location.search().key,
                $scope.msg = {},
                $scope.form = {
                    email: $location.search().email,
                    key: $location.search().key,
                    password: "",
                    confirm_password: ""
                },
                submit_form = {
                    email: "",
                    key: "",
                    password: "",
                    confirm_password: ""
                },
                $scope.canPassword = !0,
                $scope.canConfirm = !0,
                $scope.canSubmit = !1,
                brPromise = User.beforeResetPassword($scope.form),
                brPromise["catch"](function(error, result) {
                    return 1024 === result.code ? (Flash.fail().send("重置密码链接失效，请选择<a href='/resetPassword'>重发重置邮件</a>"),
                        !1) : ($location.search(""),
                        $location.path("/"))
                }),
                $scope.checkPassword = function(password) {
                    return password.length >= 6 && password.length <= 64 ? ($scope.canPassword = !0,
                        $scope.canSubmit = $scope.canConfirm && $scope.canPassword) : ($scope.canPassword = !1,
                        $scope.canSubmit = $scope.canConfirm && $scope.canPassword,
                        $scope.passwordError = "密码太短")
                }
                ,
                $scope.checkConfirm = function(password, confirm_password) {
                    return password !== confirm_password ? ($scope.canConfirm = !1,
                        $scope.canSubmit = $scope.canConfirm && $scope.canPassword,
                        $scope.confirmError = "两次输入密码不一致") : ($scope.canConfirm = !0,
                        $scope.canSubmit = $scope.canConfirm && $scope.canPassword)
                }
                ,
                $scope.doreset = function(form) {
                    return form.email && form.key && form.password && form.confirm_password && form.password === form.confirm_password && $scope.canPassword && $scope.canSubmit ? (submit_form.email = form.email,
                        submit_form.key = form.key,
                        submit_form.password = SHA1(form.password),
                        submit_form.confirm_password = SHA1(form.confirm_password),
                        User.reset_pwd(submit_form, function(result) {
                            return 0 === result.code ? (Flash.success().send("密码已经重置"),
                                $location.search(""),
                                $location.path("/login"),
                                $rootScope.USER = result.data) : Flash.fail().send("失败")
                        })) : void 0
                }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("EditAvatarController", ["$scope", "$rootScope", "User", "Errors", "Flash", "Setting", "$http", function($scope, $rootScope, User, Errors, Flash, Setting, $http) {
            var USER, upload_url;
            USER = $rootScope.USER,
                $("#edit-avatar-modal").modal("setting", {
                    closable: !1
                }),
                $scope.avatar = !1,
                $scope.img = {
                    src: "",
                    top: "",
                    left: "",
                    size: ""
                },
                upload_url = [Setting.api_host, "/api/user/avatar"].join(""),
                $scope.uploadSetting = {
                    xhrFields: {
                        withCredentials: !0
                    },
                    url: upload_url,
                    dropZone: $("#avatar-upload-zone"),
                    add: function(e, data) {
                        data.submit()
                    },
                    done: function(e, data) {
                        0 === data.result.code ? ($scope.avatar = data.result.data,
                            $scope.img.src = data.result.data,
                            Flash.success().send("上传成功!")) : Errors.handle(data.result)
                    },
                    fail: function() {
                        Flash.fail().send("上传失败!")
                    }
                },
                $scope.doImageCrop = function(img) {
                    $http.get("/api/user/avatarCrop?url=" + img.src + "&top=" + img.top + "&left=" + img.left + "&size=" + img.size).success(function(result) {
                        return 0 === result.code ? Flash.success().send("OK") : void 0
                    })
                }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("app").controller("UserNotificationSettingController", ["$scope", "$rootScope", "User", "Errors", "Flash", "$http", function($scope, $rootScope, User, Errors, Flash, $http) {
            var rebuidSettings;
            $scope.settings = {},
                $scope.showMore = !1,
                rebuidSettings = function(settings) {
                    var nsettings;
                    return nsettings = {},
                        $.each(settings, function(key, setting) {
                            nsettings[setting.email_key] = "true" === setting.email_value,
                                nsettings[setting.notification_key] = "true" === setting.notification_value
                        }),
                        nsettings
                }
                ,
                User.get_notification(function(result) {
                    var set;
                    set = result.data,
                        $scope.settings = rebuidSettings(set),
                        $scope.sets = set
                }),
                $scope.submit = function(key, value) {
                    User.set_notification({
                        settingType: key,
                        settingContent: value
                    }, function(result) {
                        return 0 === result.code ? Flash.success().send("修改成功") : Flash.fail().send("修改失败")
                    })
                }
                ,
                $scope.changeShowMore = function() {
                    $scope.showMore = !$scope.showMore
                }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("directives").directive("cgCodeShow", ["CodeInsightService", "$http", "$routeParams", "Depot", "location", "ipCookie", function(CodeInsightService, $http, $routeParams, Depot, location, ipCookie) {
            return {
                priority: 10,
                scope: {
                    setting: "=cgCodeShow"
                },
                link: function($scope, element, attrs) {
                    var blameCommitId, blamePath, blameProjectName, blameUrl, blameUrlReg, blameUrls, blameUsername, currentPane, html, loadDefine, qcLevel, scroll;
                    return html = $scope.setting.code,
                        element.html(html),
                        element.parent().addClass("active"),
                    $scope.setting.scroll && (scroll = $scope.setting.scroll,
                        currentPane = $(".code-insight.showcode.active"),
                        currentPane.scrollTop(currentPane.find("#" + scroll).position().top)),
                        CodeInsightService.setBreadCrumb(location.path(), $scope.setting.path),
                        CodeInsightService.setStructure(html),
                        blameUrl = location.path(),
                        blameUrlReg = /^\/u\/([^\/]+)\/p\/([^\/]+)\/codeInsight\/show\/([^\/]+)\/(.+)$/,
                        blameUrls = blameUrl.match(blameUrlReg),
                        blameUsername = blameUrls[1],
                        blameProjectName = blameUrls[2],
                        blameCommitId = blameUrls[3],
                        blamePath = blameUrls[4],
                        Depot.blame({
                            username: blameUsername,
                            project_name: blameProjectName,
                            region: encodeURIComponent(blameCommitId + "/" + $(".code-insight.tab-bar li.active .tab-title").attr("title"))
                        }, function(result) {
                            var currentTab, htmls, lines;
                            return lines = result.data.lines,
                                htmls = [],
                                htmls.push('<div class="code-insight blame">'),
                                lines.forEach(function(v, i) {
                                    return htmls.push('<div class="code-insight blame-line">'),
                                        htmls.push('<a class="commitId" target="_blank" href="/u/' + $routeParams.username + "/p/" + $routeParams.project_name + "/git/commit/" + v.commitId + '">' + v.commitId.substring(0, 7) + "</a>"),
                                        htmls.push('<span class="when" href="javascript:void(0);">' + moment(v.when).format("YY/MM/DD") + "</span>"),
                                        htmls.push('<span class="who" href="javascript:void(0);">' + v.committer.name + "</span>"),
                                        htmls.push('<div class="code-insight blame-info">'),
                                        htmls.push('<div class="committer"><img class="avatar" width="56" src="' + v.committer.avatar + '"><div class="committer-info"><div class="name">' + v.committer.name + '</div><div class="email">' + v.committer.email + "</div></div></div>"),
                                        htmls.push('<div class="commit-info"><div class="commit-sha">' + v.commitId + '</div><div class="commit-when">' + moment(v.when).format("YYYY/MM/DD a HH:mm:ss") + '</div><div class="commit-msg">' + v.shortMessage + "</div></div>"),
                                        htmls.push("</div>"),
                                        htmls.push("</div>")
                                }),
                                htmls.push("</div>"),
                                currentTab = $(".code-insight.showcode.active"),
                                currentTab.find(".code").before(htmls.join("")),
                                currentTab.find(".code-insight.blame").hide(),
                                currentTab.find(".lineno").on("dblclick", function() {
                                    currentTab.find(".code-insight.blame").toggle("hide")
                                })
                        })["catch"](function(error, result) {
                            return !1
                        }),
                        blamePath = encodeURIComponent(blamePath),
                        qcLevel = {
                            BLOCKER: {
                                "class": "red ban circle icon",
                                level: 1
                            },
                            CRITICAL: {
                                "class": "red frown icon",
                                level: 2
                            },
                            MAJOR: {
                                "class": "green attention icon",
                                level: 3
                            },
                            MINOR: {
                                "class": "gray exclamation icon",
                                level: 4
                            },
                            INFO: {
                                "class": "info icon",
                                level: 5
                            }
                        },
                    ipCookie("showQcInfo") && $http.get("/api/user/" + blameUsername + "/project/" + blameProjectName + "/qc/issues?componentRoots=" + blameUsername + "-" + blameProjectName + "-" + blameCommitId + ":" + blamePath).success(function(result) {
                        var issues;
                        return issues = result.data.issues,
                            issues.length ? issues.forEach(function(v, i) {
                                var currentActiveTab, currentLine, oldItem;
                                return currentActiveTab = $(".code-insight.showcode.active"),
                                    oldItem = currentActiveTab.find("#L" + v.line).find(".qc").find("i"),
                                    oldItem.length ? (oldItem.next().html(oldItem.next().html() + "<br />" + ('<i class="' + qcLevel[v.severity]["class"] + '"></i>') + v.message),
                                        void (qcLevel[v.severity].level < oldItem.attr("data-qc-level") && (oldItem.attr("class", qcLevel[v.severity]["class"]),
                                            oldItem.attr("data-qc-level", qcLevel[v.severity].level)))) : (currentLine = $(".code-insight.showcode.active").find("#L" + v.line).find(".lineno"),
                                        void currentLine.before('<span class="qc"><i class="' + qcLevel[v.severity]["class"] + '" data-qc-level="' + qcLevel[v.severity].level + '"></i><span class="qc-info"><i class="' + qcLevel[v.severity]["class"] + '"></i>' + v.message + "</span></span>"))
                            }) : void 0
                    }),
                        $("#codeInsight .right").css("height", "100%"),
                        $("span[decl]").on("click", function() {
                            var etid, fid, params, pid, stid;
                            return params = $(this).attr("decl").split("&"),
                                pid = params[0].split("=")[1],
                                fid = params[1].split("=")[1],
                                stid = params[2].split("=")[1],
                                etid = params[3].split("=")[1],
                                loadDefine(pid, fid, stid, etid, this)
                        }),
                        $("span[def]").on("click", function() {
                            var etid, fid, params, pid, stid;
                            return params = $(this).attr("def").split("&"),
                                pid = params[0].split("=")[1],
                                fid = params[1].split("=")[1],
                                stid = params[2].split("=")[1],
                                etid = params[3].split("=")[1],
                                loadDefine(pid, fid, stid, etid, this)
                        }),
                        loadDefine = function(pid, fid, stid, etid, click_item) {
                            return CodeInsightService.getDefine($routeParams.username, $routeParams.project_name, $routeParams.commit_id, pid, fid, stid, etid).then(function(result) {
                                var end, fontSize, full_name, htmlContents, isWin, position, project_name, start, window_height;
                                if (full_name = result.data.full_name.split("/"),
                                    2 === full_name.length) {
                                    for (isWin = -1 !== navigator.appVersion.indexOf("Windows"),
                                             fontSize = isWin ? 14 : 12,
                                             project_name = '<a href="/u/' + full_name[0] + "/p/" + full_name[1] + "/git\" target='_blank'>" + full_name[1] + "</a>",
                                             htmlContents = [],
                                             htmlContents.push('<div class="definebar"><div class="path" title='),
                                             htmlContents.push(CodeInsightService.htmlEncode(result.data.path) + ">"),
                                             htmlContents.push(project_name + "/" + CodeInsightService.htmlEncode(result.data.path)),
                                             htmlContents.push('</div><i class="remove icon"></i><i class="move icon"></i></div><div class="define-content code" id="code-insight-define-code" style="font-size:' + fontSize + 'px">'),
                                             htmlContents.push(result.data.content + "</div>"),
                                             $("#code-insight-define").html(htmlContents.join("")),
                                             $("#codeInsight .right").css("height", ""),
                                             window_height = $(window).height() - 120,
                                         $(click_item).position().top > window_height / 2 && ($(".code-insight.showcode.active").scrollTop(0),
                                             $(".code-insight.showcode.active").scrollTop($(click_item).position().top - window_height / 4)),
                                             start = $("#code-insight-define-code span[id=T" + stid + "]").parent(),
                                             end = $("#code-insight-define-code span[id=T" + etid + "]").parent(),
                                             end.addClass("highlight"); ; ) {
                                        if (start.addClass("highlight"),
                                            start.attr("id") === end.attr("id"))
                                            break;
                                        start = start.next()
                                    }
                                    return $("#code-insight-define-code").scrollTop(0),
                                        position = $("#code-insight-define-code span[id=T" + stid + "]").position(),
                                        $("#code-insight-define-code").scrollTop(position.top),
                                        $("i.remove.icon").on("click", function() {
                                            return $("#codeInsight .right").css("height", "100%")
                                        }),
                                        $("i.move.icon").on("click", function() {
                                            var name, path, paths, tree;
                                            return tree || (tree = $.fn.zTree.getZTreeObj("ztree")),
                                                path = result.data.path,
                                                $(".tab-bar li").each(function(index, item) {
                                                    $(item).hasClass("active") && $(item).attr("data-pane-path") === path && ($("#code-insight-code.showcode.active").scrollTop(0),
                                                        $("#code-insight-code.showcode.active").scrollTop($("#code-insight-code.showcode.active span[id=T" + stid + "]").position().top))
                                                }),
                                                paths = path.split("/"),
                                                name = paths[paths.length - 1],
                                                $http.get("/api/user/" + full_name[0] + "/project/" + full_name[1] + "/code-insight/file?commit_id=" + result.data.commitId + "&path=" + result.data.path).success(function(file) {
                                                    var CodeTabs, content, url;
                                                    content = "",
                                                        scroll = $("#code-insight-define-code span[id=T" + stid + "]").parent().attr("id"),
                                                    angular.isUndefined(file.data.content) || (content = file.data.content),
                                                    angular.isUndefined(file.data.blob) || (file.data.blob.previewed ? content = file.data.blob.preview : "image" === file.data.blob.mode ? content = '<img src="/u/' + full_name[0] + "/p/" + full_name[1] + "/git/raw/" + file.data.blob.lastCommitId + "/" + file.data.blob.path + '"></img>' : "file" === file.data.blob.mode ? content = file.data.blob.data : "file" !== file.data.blob.mode && "image" !== file.data.blob.mode && (content = '<a target="_self" href="/u/' + full_name[0] + "/p/" + full_name[1] + "/git/raw/" + file.data.blob.lastCommitId + "/" + file.data.blob.path + '">不支持预览此文件</a>')),
                                                        url = "/u/" + full_name[0] + "/p/" + full_name[1] + "/codeInsight/show/" + result.data.commitId + "/" + result.data.path,
                                                        location.skipReload().path(url),
                                                        CodeTabs = CodeInsightService.component("CodeTabs"),
                                                        CodeTabs.add(path, name, url, {
                                                            templateUrl: "common/directives/codeInsight/codeShow/codeShow.html",
                                                            setting: {
                                                                code: content,
                                                                path: path,
                                                                scroll: scroll
                                                            },
                                                            onSelect: function() {
                                                                var selected;
                                                                return selected = tree.getSelectedNodes(),
                                                                    angular.forEach(selected, function(node) {
                                                                        tree.cancelSelectedNode(node)
                                                                    }),
                                                                    tree.selectNode(tree.getNodeByParam("path", path))
                                                            }
                                                        }),
                                                        tree.selectNode(tree.getNodeByParam("path", path))
                                                })
                                        })
                                }
                            })
                        }
                }
            }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("directives").directive("cgPane", function() {
            return {
                templateUrl: "common/directives/codeInsight/pane/tpl/pane.html",
                restrict: "E",
                transclude: !0,
                replace: !0,
                scope: {
                    title: "@",
                    selected: "&"
                }
            }
        })
    }
        .call(this),
    function() {
        angular.module("directives").directive("cgTabs", ["CodeInsightService", "$routeParams", function(CodeInsightService, $routeParams) {
            return {
                templateUrl: "common/directives/codeInsight/tabs/tpl/tabs.html",
                restrict: "E",
                transclude: !0,
                scope: {
                    panes: "=",
                    path: "="
                },
                controller: "cgTabs",
                replace: !0
            }
        }
        ]).controller("cgTabs", ["$scope", "Tabs", "CodeInsightService", "$routeParams", "location", "$http", "hljsService", function($scope, Tabs, CodeInsightService, $routeParams, location, $http, hljsService) {
            var panes, path, removeWatcher;
            panes = $scope.panes,
                path = $scope.path,
                removeWatcher = $scope.$watch("panes", function(panes) {
                    panes && panes.length > 0 && (panes[0].selected = !0,
                        removeWatcher())
                }),
                $scope.replacePath = function(path) {
                    return path.replace(/[./]/g, "-")
                }
                ,
                $scope.select = function(pane) {
                    var url;
                    angular.isUndefined(pane) || (angular.forEach(panes, function(pane) {
                        pane.selected = !1
                    }),
                        pane.selected = !0,
                        Tabs.select(pane),
                        path = pane.id,
                        url = pane.url,
                        location.skipReload().path(url))
                }
                ,
                $scope.close = function(pane) {
                    var index, url;
                    index = panes.indexOf(pane),
                        panes.splice(index, 1),
                    0 === $scope.selectedIndex() && (index < panes.length ? $scope.select(panes[index]) : 0 === index ? (CodeInsightService.setBreadCrumb(location.path(), ""),
                        CodeInsightService.setStructure(""),
                        url = "/u/" + $routeParams.username + "/p/" + $routeParams.project_name + "/codeInsight/show/" + $routeParams.commit_id,
                        location.skipReload().path(url)) : $scope.select(panes[index - 1]))
                }
                ,
                $scope.selectedIndex = function() {
                    var index;
                    return index = 0,
                        angular.forEach(panes, function(pane, i) {
                            pane.selected && (index = i)
                        }),
                        index
                }
                ,
            "" !== path && $http.get("/api/user/" + $routeParams.username + "/project/" + $routeParams.project_name + "/code-insight/file?commit_id=" + $routeParams.commit_id + "&path=" + path).success(function(file) {
                var CodeTabs, content, content_dom, content_html, contents, name, paths, tree, url;
                content = "",
                angular.isUndefined(file.data.content) || (content = file.data.content),
                angular.isUndefined(file.data.blob) || (file.data.blob.previewed ? content = file.data.blob.preview : "image" === file.data.blob.mode ? content = '<img src="/u/' + $routeParams.username + "/p/" + $routeParams.project_name + "/git/raw/" + file.data.blob.lastCommitId + "/" + file.data.blob.path + '"></img>' : "file" === file.data.blob.mode ? (content = file.data.blob.data,
                    content_dom = $('<code class="' + file.data.blob.lang + '">' + CodeInsightService.htmlEncode(content) + "</code>"),
                    hljsService.highlightBlock(content_dom[0]),
                    content = content_dom.html(),
                    content_html = [],
                content && (contents = content.split("\n"),
                    contents.forEach(function(v, i) {
                        return content_html.push('<div id="L' + (i + 1) + '"><span class="lineno">' + (i + 1) + "</span>" + v + "</div>")
                    })),
                    content = content_html.join("")) : "file" !== file.data.blob.mode && "image" !== file.data.blob.mode && (content = '<a target="_self" href="/u/' + $routeParams.username + "/p/" + $routeParams.project_name + "/git/raw/" + file.data.blob.lastCommitId + "/" + file.data.blob.path + '">不支持预览此文件</a>')),
                tree || (tree = $.fn.zTree.getZTreeObj("ztree")),
                    paths = path.split("/"),
                    name = paths[paths.length - 1],
                    url = "/u/" + $routeParams.username + "/p/" + $routeParams.project_name + "/codeInsight/show/" + $routeParams.commit_id + "/" + path,
                    CodeTabs = CodeInsightService.component("CodeTabs"),
                    CodeTabs.add(path, name, url, {
                        templateUrl: "common/directives/codeInsight/codeShow/codeShow.html",
                        setting: {
                            code: content,
                            path: path
                        },
                        onSelect: function() {
                            var selected;
                            return selected = tree.getSelectedNodes(),
                                angular.forEach(selected, function(node) {
                                    tree.cancelSelectedNode(node)
                                }),
                                tree.selectNode(tree.getNodeByParam("path", path))
                        }
                    }),
                    tree.selectNode(tree.getNodeByParam("path", path))
            })
        }
        ]).service("Tabs", ["CodeInsightService", "$location", function(CodeInsightService, $location) {
            return this.Tabs = function() {
                function Tabs(scope, panes) {
                    this.panes = panes || [],
                        this.$scope = scope
                }
                return Tabs.prototype.add = function(id, pane_title, url, inner_component) {
                    var exists, fontSize, isWin, pane, self;
                    return self = this,
                        inner_component = inner_component || {},
                        pane = _.find(self.panes, {
                            id: id
                        }),
                        exists = !1,
                        pane ? exists = !0 : pane = {
                            id: id,
                            title: pane_title,
                            component: inner_component,
                            url: url
                        },
                        isWin = -1 !== navigator.appVersion.indexOf("Windows"),
                        fontSize = isWin ? 14 : 12,
                        pane.component.setting.fontSize = fontSize,
                        CodeInsightService.safeApply(self.$scope, function() {
                            self.select(pane),
                            exists || self.panes.push(pane)
                        }),
                        pane
                }
                    ,
                    Tabs.prototype.select = function(pane) {
                        var self;
                        self = this,
                            angular.forEach(self.panes, function(pane) {
                                pane.selected = !1
                            }),
                            pane.selected = !0
                    }
                    ,
                    Tabs.select = function(pane) {
                        pane.component.onSelect && pane.component.onSelect(pane.selected),
                            CodeInsightService.setBreadCrumb($location.path(), pane.id),
                            CodeInsightService.setStructure(pane.component.setting.code)
                    }
                    ,
                    Tabs
            }()
        }
        ])
    }
        .call(this),
    function() {
        angular.module("directives").directive("cgZtree", ["$routeParams", "$http", "CodeInsightService", "location", "hljsService", function($routeParams, $http, CodeInsightService, location, hljsService) {
            return {
                templateUrl: "common/directives/codeInsight/ztree/tpl/ztree.html",
                restrict: "EA",
                link: function(scope, element, attrs) {
                    var async_setting, commitId, filter, getUrl, getZtree, loadFile, openFile, setting, showIconForTree, target, tree;
                    return commitId = scope.$eval(attrs.cgCommitId),
                        tree = null ,
                        getZtree = function(id) {
                            return tree || (tree = $.fn.zTree.getZTreeObj(id)),
                                tree
                        }
                        ,
                        getUrl = function() {
                            return "/api/user/" + $routeParams.username + "/project/" + $routeParams.project_name + "/code-insight/tree"
                        }
                        ,
                        filter = function(treeId, parentNode, childNodes) {
                            return childNodes ? childNodes = childNodes.data : null
                        }
                        ,
                        showIconForTree = function(treeId, treeNode) {
                            return !treeNode.isParent
                        }
                        ,
                        openFile = function(event, treeId, treeNode) {
                            var name, path;
                            return treeNode.isParent || ($("#" + treeNode.tId + "_ico").removeClass("ico_docu"),
                                $("#" + treeNode.tId + "_ico").addClass("loading_ico_docu")),
                                tree = getZtree(treeId),
                                treeNode.isParent ? void tree.expandNode(treeNode) : (path = treeNode.path,
                                    name = treeNode.name,
                                    CodeInsightService.setBreadCrumb(location.path(), path),
                                    loadFile(path, function(file) {
                                        var CodeTabs, content, content_dom, content_html, contents, url;
                                        content = "",
                                        angular.isUndefined(file.data.content) || (content = file.data.content),
                                        angular.isUndefined(file.data.blob) || (file.data.blob.previewed ? content = file.data.blob.preview : "image" === file.data.blob.mode ? content = '<img src="/u/' + $routeParams.username + "/p/" + $routeParams.project_name + "/git/raw/" + file.data.blob.lastCommitId + "/" + file.data.blob.path + '"></img>' : "file" === file.data.blob.mode ? (content = file.data.blob.data,
                                            content_dom = $('<code class="' + file.data.blob.lang + '">' + CodeInsightService.htmlEncode(content) + "</code>"),
                                            hljsService.highlightBlock(content_dom[0]),
                                            content = content_dom.html(),
                                            content_html = [],
                                        content && (contents = content.split("\n"),
                                            contents.forEach(function(v, i) {
                                                return content_html.push('<div id="L' + (i + 1) + '"><span class="lineno">' + (i + 1) + "</span>" + v + "</div>")
                                            })),
                                            content = content_html.join("")) : "file" !== file.data.blob.mode && "image" !== file.data.blob.mode && (content = '<a target="_self" href="/u/' + $routeParams.username + "/p/" + $routeParams.project_name + "/git/raw/" + file.data.blob.lastCommitId + "/" + file.data.blob.path + '">不支持预览此文件</a>')),
                                            url = "/u/" + $routeParams.username + "/p/" + $routeParams.project_name + "/codeInsight/show/" + $routeParams.commit_id + "/" + path,
                                            location.skipReload().path(url),
                                            CodeTabs = CodeInsightService.component("CodeTabs"),
                                            CodeTabs.add(path, name, url, {
                                                templateUrl: "common/directives/codeInsight/codeShow/codeShow.html",
                                                setting: {
                                                    code: content,
                                                    path: path
                                                },
                                                onSelect: function() {
                                                    var selected;
                                                    selected = tree.getSelectedNodes(),
                                                        angular.forEach(selected, function(node) {
                                                            tree.cancelSelectedNode(node)
                                                        }),
                                                        tree.selectNode(treeNode)
                                                }
                                            }),
                                        treeNode.isParent || ($("#" + treeNode.tId + "_ico").removeClass("loading_ico_docu"),
                                            $("#" + treeNode.tId + "_ico").addClass("ico_docu"))
                                    }))
                        }
                        ,
                        loadFile = function(path, callback) {
                            return $http.get("/api/user/" + $routeParams.username + "/project/" + $routeParams.project_name + "/code-insight/file?commit_id=" + commitId + "&path=" + path).success(callback)
                        }
                        ,
                        async_setting = {
                            async: {
                                enable: !0,
                                url: getUrl,
                                autoParam: ["path"],
                                otherParam: {
                                    commit_id: commitId
                                },
                                dataFilter: filter,
                                type: "POST"
                            },
                            callback: {
                                onClick: openFile
                            }
                        },
                        setting = angular.extend({
                            view: {
                                dblClickExpand: !1,
                                showLine: !1,
                                fontCss: {
                                    color: "#000"
                                }
                            }
                        }, async_setting),
                        target = $(element).find(".ztree"),
                        scope.init = function() {
                            return scope.zTree = $.fn.zTree.init(target, setting)
                        }
                        ,
                        scope.init(),
                        $(".code-insight-v-bar-project").on("click", function() {
                            return 0 === $("#codeInsight .stretch.ui-splitbar").next().position().left && ($(".file-tree").removeClass("hidden"),
                                $(".left-structure").addClass("hidden"),
                                $(this).addClass("active"),
                                $(".code-insight-v-bar-structure").removeClass("active")),
                                $(".file-tree").hasClass("hidden") ? ($(".file-tree").removeClass("hidden"),
                                    $(".left-structure").addClass("hidden"),
                                    $(this).addClass("active"),
                                    $(".code-insight-v-bar-structure").removeClass("active")) : 0 === $("#codeInsight > .stretch.ui-splitbar").next().position().left ? ($("#codeInsight > .stretch.ui-splitbar").prev().css("right", "80%"),
                                    $("#codeInsight > .stretch.ui-splitbar").css("left", "20%"),
                                    $("#codeInsight > .stretch.ui-splitbar").next().css("left", "20%"),
                                    $(".file-tree").removeClass("hidden"),
                                    $(".left-structure").addClass("hidden"),
                                    $(this).addClass("active"),
                                    $(".code-insight-v-bar-structure").removeClass("active")) : ($("#codeInsight > .stretch.ui-splitbar").prev().css("right", "100%"),
                                    $("#codeInsight > .stretch.ui-splitbar").css("left", "0"),
                                    $("#codeInsight > .stretch.ui-splitbar").next().css("left", "0"),
                                    $(this).removeClass("active"))
                        }),
                        $(".code-insight-v-bar-structure").on("click", function() {
                            return 0 === $("#codeInsight > .stretch.ui-splitbar").next().position().left && ($(".left-structure").removeClass("hidden"),
                                $(".file-tree").addClass("hidden"),
                                $(this).addClass("active"),
                                $(".code-insight-v-bar-project").removeClass("active")),
                                $(".left-structure").hasClass("hidden") ? ($(".left-structure").removeClass("hidden"),
                                    $(".file-tree").addClass("hidden"),
                                    $(this).addClass("active"),
                                    $(".code-insight-v-bar-project").removeClass("active")) : 0 === $("#codeInsight > .stretch.ui-splitbar").next().position().left ? ($("#codeInsight > .stretch.ui-splitbar").prev().css("right", "80%"),
                                    $("#codeInsight > .stretch.ui-splitbar").css("left", "20%"),
                                    $("#codeInsight > .stretch.ui-splitbar").next().css("left", "20%"),
                                    $(".left-structure").removeClass("hidden"),
                                    $(".file-tree").addClass("hidden"),
                                    $(this).addClass("active"),
                                    $(".code-insight-v-bar-project").removeClass("active")) : ($("#codeInsight > .stretch.ui-splitbar").prev().css("right", "100%"),
                                    $("#codeInsight > .stretch.ui-splitbar").css("left", "0"),
                                    $("#codeInsight > .stretch.ui-splitbar").next().css("left", "0"),
                                    $(this).removeClass("active"))
                        })
                },
                controller: "cgZtreeDirectiveController"
            }
        }
        ]).controller("cgZtreeDirectiveController", ["$scope", function($scope) {}
        ])
    }
        .call(this),
    function() {
        angular.module("directives").directive("cgAnchor", [function() {
            return {
                link: function(scope, element, attrs) {
                    return element.bind("click", function(e) {
                        var scrollToElement;
                        e.stopPropagation(),
                            scrollToElement = angular.element("[name=" + attrs.cgAnchor + "],[id=" + attrs.cgAnchor + "]"),
                        scrollToElement.length > 0 && window.scrollTo(0, scrollToElement.offset().top - 80)
                    })
                }
            }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("directives").directive("cgBindHtml", [function() {
            return {
                priority: 10,
                link: function(scope, element, attrs) {
                    var $el, html;
                    html = scope.$eval(attrs.cgBindHtml),
                        $el = $("<span>" + html + "</span>"),
                        element.is("a") && $el.find("a").length > 0 ? ($el.contents().filter(function() {
                            return 3 === this.nodeType
                        }).wrap('<a href="' + attrs.ngHref + '"></a>'),
                            element.replaceWith($el)) : element.html(html)
                }
            }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("directives").directive("cgBlameHighlight", ["hljsService", "$location", "location", "$window", function(hljs, $location, location, $window) {
            var preLine;
            return preLine = -1,
                $.fn.blameHighlight = function(options) {
                    var anchor, defaults, getLang, html, initAnchor, lang, thiz, thtml, top;
                    defaults = {
                        lang: "java",
                        anchor: !0
                    },
                        options = $.extend(options, defaults),
                        thiz = $(this),
                        html = [],
                        thiz.each(function() {
                            html.push($(this).text())
                        }),
                        html = html.join(""),
                        thtml = html,
                        lang = options.lang,
                        getLang = function() {
                            var lcode;
                            return lang = hljs.getLanguage(lang) ? lang : defaults.lang,
                                lcode = void 0,
                            lang && 0 !== lang.length || (lcode = hljs.highlightAuto(thtml)),
                                lang = lang || lcode.language || defaults.lang
                        }
                        ,
                        top = null ,
                        thiz.each(function() {
                            var rline, v;
                            v = $(this).text(),
                                rline = hljs.highlight(lang, v, !0, top),
                                $(this).html(rline.value)
                        }),
                        anchor = function() {
                            $(".line-num").on("click", function() {
                                var codeLine, end, id, max, min, num, start;
                                if (num = $(this),
                                        id = num.attr("num"),
                                        codeLine = $("#CL" + id),
                                        $(".line-data").css({
                                            "background-color": "rgb(255, 255, 255)"
                                        }),
                                    0 > preLine && (preLine = id),
                                        event.shiftKey) {
                                    if (preLine > 0) {
                                        for (start = 0,
                                                 end = 0,
                                                 min = start = Math.min(preLine, id),
                                                 max = end = Math.max(preLine, id); end >= start; )
                                            codeLine = $("#CL" + start),
                                                start++,
                                                codeLine.css({
                                                    "background-color": "rgb(255, 255, 204)"
                                                });
                                        $location.hash("L" + min + "-L" + max),
                                            location.skipReload().path($location.$$path),
                                            preLine = Math.min(id, preLine)
                                    }
                                } else
                                    $location.hash("L" + id),
                                        location.skipReload().path($location.$$path),
                                        codeLine.css({
                                            "background-color": "rgb(255, 255, 204)"
                                        }),
                                        preLine = id
                            })
                        }
                        ,
                        initAnchor = function() {
                            var a, b, codeLine, max, min, result, s;
                            if (s = window.location.hash,
                                s && (result = /\#L(\d+)(?:\-L?(\d+))?/g.exec(s),
                                result && 3 === result.length))
                                for (a = result[1] || -1,
                                         b = result[3] || a,
                                         min = Math.min(a, b),
                                         max = Math.max(a, b); max >= min; )
                                    codeLine = $("#CL" + min),
                                        codeLine.css({
                                            "background-color": "rgb(255, 255, 204)"
                                        }),
                                        min++
                        }
                        ,
                    options.anchor && (initAnchor(),
                        anchor())
                }
                ,
            {
                link: function(scope, element, attrs) {
                    var data, index, lang, length;
                    lang = scope.$eval(attrs.cgBlameLang),
                        data = scope.$eval(attrs.cgBlameHighlight),
                        length = scope.$eval(attrs.cgLineLength) || 0,
                        index = scope.$eval(attrs.cgLineIndex) || 0,
                        element.text(data),
                    index === length - 1 && element.closest("table").find("pre").blameHighlight({
                        lang: lang
                    })
                }
            }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("directives").directive("cgBlobMarkdown", ["$http", function($http) {
            var link;
            return link = function(scope, element, attrs) {
                var readme, url;
                return readme = scope.$eval(attrs.cgBlobMarkdown),
                    "markdown" !== readme.lang ? void element.html(readme.data) : (url = "/api/markdown/preview",
                        $http.post(url, readme.data).success(function(html) {
                            return element.html(html)
                        }))
            }
                ,
            {
                link: link
            }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("directives").directive("cgBreadCrumb", ["GitService", function(GitService) {
            var link;
            return link = function(scope, element, attrs) {
                var html, parts, path, ref;
                ref = decodeURIComponent(scope.$eval(attrs.cgBreadCrumb)),
                    path = scope.$eval(attrs.cgPath),
                path && (path = decodeURIComponent(path)),
                null  != path && (parts = path.split("/"),
                    html = [],
                    html.push('<span class="active section">'),
                    $(parts).each(function(part) {
                        var prefix, url;
                        parseInt(part) + 1 === parts.length ? html.push('<span class="active section">' + GitService.htmlEncode(parts[part]) + "</span>") : (prefix = scope.PROJECT.project_path + "/git",
                            url = parts.slice(0, parseInt(part) + 1).join("/"),
                            html.push('<a class="section" href="' + prefix + "/tree/" + ref + "/" + url + '">' + GitService.htmlEncode(parts[part]) + "</a>"),
                            html.push('<div class="divider"> /</div>'))
                    }),
                    html.push("</span>"),
                    element.html(html.join("")),
                    element.removeAttr("cg-bread-crumb"),
                    element.removeAttr("cg-path"))
            }
                ,
            {
                link: link
            }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("directives").directive("cgCodeView", ["hljsService", "$location", "location", function(hljs, $location, location) {
            var defaults, getLang, highlightBlobLines, htmlDecode, htmlEncode, initHighLight, link, preLine;
            return defaults = {
                lang: "java",
                anchor: !0
            },
                preLine = -1,
                htmlEncode = function(str) {
                    var div;
                    return div = document.createElement("div"),
                        div.appendChild(document.createTextNode(str)),
                        div.innerHTML
                }
                ,
                htmlDecode = function(str) {
                    var div;
                    return div = document.createElement("div"),
                        div.innerHTML = str,
                        div.innerHTML
                }
                ,
                getLang = function(html, language) {
                    var lang, lcode;
                    return lang = hljs.getLanguage(language) ? language : defaults.lang,
                        lcode = void 0,
                    lang && 0 !== lang.length || (lcode = hljs.highlightAuto(html)),
                        lang = lang || lcode.language || defaults.lang
                }
                ,
                initHighLight = function() {
                    var codeLine, codeNum, first_line, last_line, matches, max, min;
                    if ("" !== window.location.hash && (matches = window.location.hash.match(/\#L(\d+)(?:\-L?(\d+))?/),
                            first_line = parseInt(null  != matches ? matches[1] : void 0),
                            last_line = parseInt(null  != matches ? matches[2] : void 0),
                            !isNaN(first_line))) {
                        for (isNaN(last_line) && (last_line = first_line),
                                 max = Math.max(last_line, first_line),
                                 codeNum = min = Math.min(last_line, first_line); max >= min; )
                            codeLine = $("#CL" + min),
                                codeLine.css({
                                    "background-color": "rgb(255, 255, 204)"
                                }),
                                min++;
                        codeLine = $("#CL" + codeNum),
                            window.scroll(0, codeLine.offset().top - 60 + 36)
                    }
                }
                ,
                highlightBlobLines = function(options) {
                    return options.find("span.num").on("click", function() {
                        var codeLine, end, id, max, min, num, start;
                        if (num = $(this),
                                id = num.attr("num"),
                                codeLine = $("#CL" + id),
                                $(".line").css({
                                    "background-color": "rgb(255, 255, 255)"
                                }),
                            0 > preLine && (preLine = id),
                                event.shiftKey) {
                            if (preLine > 0) {
                                for (start = 0,
                                         end = 0,
                                         min = start = Math.min(preLine, id),
                                         max = end = Math.max(preLine, id); end >= start; )
                                    $("#CL" + start).css({
                                        "background-color": "rgb(255, 255, 204)"
                                    }),
                                        start++;
                                $location.hash("L" + min + "-L" + max),
                                    location.skipReload().path($location.$$path),
                                    preLine = Math.min(id, preLine),
                                    window.scroll(0, $("#CL" + preLine).offset().top - 60)
                            }
                        } else
                            $location.hash("L" + id),
                                location.skipReload().path($location.$$path),
                                codeLine.css({
                                    "background-color": "rgb(255, 255, 204)"
                                }),
                                window.scroll(0, codeLine.offset().top - 60),
                                preLine = id
                    })
                }
                ,
                link = function(scope, element, attrs) {
                    var chtml, code_str, html, html_dom, language, lhtml, lines, ohtml, top;
                    code_str = scope.$eval(attrs.cgCodeView),
                        element.removeAttr("cg-code-view"),
                        language = scope.$eval(attrs.cgCodeLang),
                        element.removeAttr("cg-code-lang"),
                        top = null ,
                        html_dom = $('<code class="' + language + '">' + htmlEncode(code_str) + "</code>"),
                        hljs.highlightBlock(html_dom[0]),
                        html = html_dom.html(),
                        lines = html.split("\n"),
                        lhtml = [],
                        chtml = [],
                        lines.forEach(function(v, i) {
                            var k;
                            k = i + 1,
                                lhtml.push('<span class="num" num="' + k + '">' + k + "</span>"),
                                chtml.push('<div class="line" id="CL' + k + '">' + v + "</div>")
                        }),
                        ohtml = [],
                        ohtml.push('<table class="blob-code-view blob-code-diff">'),
                        ohtml.push('<tbody><tr class="blob-line">'),
                        ohtml.push('<td class="blob-nums">'),
                        ohtml.push(lhtml.join("")),
                        ohtml.push('</td><td class="blob-code">'),
                        ohtml.push('<div class="blob-code-body"><div class="blob-body highlight"><pre>'),
                        ohtml.push(chtml.join("")),
                        ohtml.push("</pre></div></div>"),
                        ohtml.push("</td></tr>"),
                        ohtml.push("</tbody>"),
                        ohtml.push("</table>"),
                        element.html(ohtml.join("")),
                        initHighLight(),
                        highlightBlobLines(element)
                }
                ,
            {
                link: link
            }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("directives").directive("cgDiff", ["$rootScope", "$routeParams", "$timeout", "Depot", function($rootScope, $routeParams, $timeout, Depot) {
            return {
                restrict: "A",
                link: function(scope, element, attrs) {
                    var commentMap;
                    return element.html(scope.diffHtml),
                        $timeout(function() {
                            return angular.forEach(element.find(".diff"), function(diff) {
                                var $diff, language, pre, _i, _len, _ref, _results;
                                for ($diff = angular.element(diff),
                                         language = $diff.attr("lang"),
                                         _ref = $diff.find(".diff-line-code:not(.hunk-header) pre"),
                                         _results = [],
                                         _i = 0,
                                         _len = _ref.length; _len > _i; _i++)
                                    pre = _ref[_i],
                                        _results.push(scope.highlight(pre, language));
                                return _results
                            }),
                                scope.scrollToAnchor()
                        }),
                        element.on("click", ".btn-expand", function() {
                            var el;
                            return el = angular.element(this),
                                Depot.blob_expand({
                                    username: $routeParams.username,
                                    project_name: $routeParams.project_name,
                                    region: scope.commitId || scope.notes_params.commitId,
                                    path: el.attr("path"),
                                    prev_line_no_left: el.attr("pleft"),
                                    prev_line_no_right: el.attr("pright"),
                                    next_line_no_left: el.attr("nleft"),
                                    next_line_no_right: el.attr("nright"),
                                    left_hunk_size: el.attr("lhunk"),
                                    right_hunk_size: el.attr("rhunk"),
                                    diff: el.attr("diff")
                                }, function(result) {
                                    var $wrapper, language, pre, _i, _len, _ref;
                                    for (language = el.parents(".diff").attr("lang"),
                                             $wrapper = angular.element("<tbody>" + result.data + "</tbody>"),
                                             _ref = $wrapper.find(".diff-line-code:not(.hunk-header) pre"),
                                             _i = 0,
                                             _len = _ref.length; _len > _i; _i++)
                                        pre = _ref[_i],
                                            scope.highlight(pre, language);
                                    return el.parent().replaceWith($wrapper.html())
                                })
                        }),
                        scope.notes_params ? (commentMap = {},
                            angular.forEach(scope.notes_params.comments, function(comment, index) {
                                return commentMap[comment.position] || (commentMap[comment.position] = []),
                                    commentMap[comment.position].push(comment)
                            }),
                            scope.inlineComments = commentMap,
                            angular.forEach(element.find(".add-line-note"), function(el) {
                                var comments, position;
                                return el = angular.element(el),
                                    position = parseInt(el.attr("position")),
                                scope.inlineComments && (comments = scope.inlineComments[position],
                                comments && comments.length > 0 && scope.initComments(el, comments)),
                                    $rootScope.USER ? el.on("click", function() {
                                        var diffEl, toggleButton;
                                        return diffEl = el.parents(".diff"),
                                            toggleButton = diffEl.prev().find(".diff-header .toggle-notes"),
                                            toggleButton.show(),
                                            toggleButton.find("input[type=checkbox]")[0].checked = !0,
                                            diffEl.find(".inline-comments").show(),
                                            scope.addLineComment(el)
                                    }) : el.remove()
                            }),
                            angular.forEach(element.find(".diff"), function(el) {
                                var toggleButton;
                                return el = angular.element(el),
                                    toggleButton = el.prev().find(".diff-header .toggle-notes"),
                                    toggleButton.find("input[type=checkbox]").on("change", function() {
                                        return el.find(".inline-comments").toggle(this.checked)
                                    }),
                                    el.find(".inline-comments").length > 0 ? toggleButton.show() : void 0
                            })) : void element.find(".add-line-note").remove()
                },
                controller: ["$scope", "$compile", "hljsService", function($scope, $compile, hljsService) {
                    return $scope.highlight = function(pre, language) {
                        var html;
                        return html = pre.textContent,
                            html = html.replace(/\\ No newline at end of file$/, ""),
                            html = hljsService.getLanguage(language) ? hljsService.highlight(language, html, !0).value : hljsService.highlightAuto(html).value,
                            pre.innerHTML = html.replace(/\u0001\u0003/g, "<span class='x'>").replace(/\u0003\u0001/g, "</span>").replace(/\t/g, "<span class='t'>	</span>").replace(/\u0001\u0001$/, "<span class='no-newline'><i class='coding icon no-newline'></i></span>"),
                            angular.element(pre).find("span.no-newline").popup({
                                on: "hover",
                                variation: "inverted",
                                content: "文件末尾无换行符"
                            })
                    }
                        ,
                        $scope.scrollToAnchor = function() {
                            var anchor, hash, scrollToElement;
                            return hash = window.location.hash,
                                "" !== hash && hash.match(/^#(commit|mr|pr)-comment-\d+$/) ? (anchor = window.location.hash.substring(1),
                                    scrollToElement = angular.element("[name=" + anchor + "]"),
                                    scrollToElement.length > 0 ? (scrollToElement.parents(".diff-notes-wrapper").removeClass("outdated"),
                                        window.scrollTo(0, scrollToElement.offset().top - 80),
                                        scrollToElement.parent().css("background-color", "#F2C61F").animate({
                                            backgroundColor: "transparent"
                                        }, 1500)) : void 0) : void 0
                        }
                        ,
                        $scope.initComments = function(element, comments) {
                            var compileNode, curLine, handleAddLine, handleContextLine, handleRemoveLine, nextLine, parentNode;
                            return null  == comments && (comments = []),
                                parentNode = element.parent(),
                                curLine = parentNode.parent(),
                                nextLine = curLine.next(),
                                compileNode = function(inlineNode) {
                                    var iscope;
                                    return iscope = $rootScope.$new(),
                                        iscope.diffComments = comments,
                                        iscope.commitId = $scope.notes_params.commitId,
                                        iscope.noteable_type = $scope.notes_params.noteable_type,
                                        iscope.noteable_id = $scope.notes_params.noteable_id,
                                        iscope.atConfig = $scope.notes_params.atConfig,
                                        iscope.path = element.attr("path"),
                                        iscope.position = element.attr("position"),
                                        iscope.line = element.attr("line"),
                                        iscope.anchor = element.attr("anchor"),
                                        iscope.inline = !0,
                                        iscope.showForm = 0 === comments.length,
                                        iscope.element = inlineNode,
                                        $compile(inlineNode.contents())(iscope),
                                        $timeout(function() {
                                            return inlineNode.find("textarea").focus()
                                        })
                                }
                                ,
                                handleContextLine = function() {
                                    var existNode, inlineNode;
                                    return existNode = nextLine.find(".line-comments"),
                                        existNode.length > 0 ? existNode.find(".add-comment").triggerHandler("click") : (inlineNode = angular.element("<tr class='inline-comments'> <td class='line-comments' colspan='4'> <div cg-diff-notes></div> </td> </tr>"),
                                            curLine.after(inlineNode),
                                            compileNode(inlineNode))
                                }
                                ,
                                handleRemoveLine = function() {
                                    var existNode, inlineNode;
                                    return nextLine.hasClass("inline-comments") ? (existNode = nextLine.find(".line-comments.left"),
                                        existNode.length > 0 ? existNode.find(".add-comment").triggerHandler("click") : (nextLine.find(".diff-line-num.empty").hide(),
                                            nextLine.find(".diff-line-code.empty").hide(),
                                            inlineNode = angular.element("<td class='line-comments left' colspan='2'> <div cg-diff-notes></div> </td>"),
                                            nextLine.prepend(inlineNode),
                                            compileNode(inlineNode))) : (inlineNode = angular.element("<tr class='inline-comments'> <td class='line-comments left' colspan='2'> <div cg-diff-notes></div> </td> <th class='diff-line-num empty'></th> <td class='diff-line-code empty'></td> </tr>"),
                                        curLine.after(inlineNode),
                                        compileNode(inlineNode))
                                }
                                ,
                                handleAddLine = function() {
                                    var existNode, inlineNode;
                                    return nextLine.hasClass("inline-comments") ? (existNode = nextLine.find(".line-comments.right"),
                                        existNode.length > 0 ? existNode.find(".add-comment").triggerHandler("click") : (nextLine.find(".diff-line-num.empty").hide(),
                                            nextLine.find(".diff-line-code.empty").hide(),
                                            inlineNode = angular.element("<td class='line-comments right' colspan='2'> <div cg-diff-notes></div> </td>"),
                                            nextLine.append(inlineNode),
                                            compileNode(inlineNode))) : (inlineNode = angular.element("<tr class='inline-comments'> <th class='diff-line-num empty'></th> <td class='diff-line-code empty'></td> <td class='line-comments right' colspan='2'> <div cg-diff-notes></div> </td> </tr>"),
                                        curLine.after(inlineNode),
                                        compileNode(inlineNode))
                                }
                                ,
                                4 !== curLine.children().length ? handleContextLine() : parentNode.hasClass("ge") ? handleContextLine() : parentNode.hasClass("gd") ? handleRemoveLine() : parentNode.hasClass("gi") ? handleAddLine() : void 0
                        }
                        ,
                        $scope.addLineComment = function(element) {
                            return $scope.initComments(element)
                        }
                }
                ]
            }
        }
        ]).directive("cgDiffNotes", function() {
            return {
                restrict: "A",
                replace: !0,
                templateUrl: "common/directives/gitDirectives/diff/tpl/comments.html",
                link: function(scope, element, attrs) {
                    return scope.element ? void 0 : scope.element = element
                },
                controller: ["$rootScope", "$scope", "$routeParams", "$interval", "$timeout", "Depot", "Common", "LightMdEditorService", function($rootScope, $scope, $routeParams, $interval, $timeout, Depot, Common, LightMdEditorService) {
                    var destorySelf;
                    return $scope.commentContent = "",
                        $scope.showLineNote = !1,
                    angular.isNumber($scope.position) || ($scope.position = parseInt($scope.position) || 0),
                    angular.isNumber($scope.line) || ($scope.line = parseInt($scope.line) || 0),
                        destorySelf = function() {
                            return $scope.$destroy(),
                                $timeout(function() {
                                    var diffNode;
                                    return $scope.element.parent().find(".diff-line-num.empty,.diff-line-code.empty").show(),
                                        diffNode = $scope.element.parents(".diff"),
                                        $scope.element.remove(),
                                        0 === diffNode.find(".inline-comments").length ? diffNode.prev().find(".diff-header .toggle-notes").hide() : void 0
                                })
                        }
                        ,
                        $scope.isShow = function(comment) {
                            return $scope.inline || 0 === comment.position ? !0 : $scope.showLineNote
                        }
                        ,
                        $scope.showCommentForm = function() {
                            return $scope.showForm = !0,
                                $timeout(function() {
                                    return $scope.element.find("textarea").focus()
                                })
                        }
                        ,
                        $scope.cancelComment = function() {
                            return $scope.diffComments.length > 0 ? $scope.showForm = !1 : destorySelf()
                        }
                        ,
                        $scope.replyComment = function(comment) {
                            return $scope.inline && $timeout(function() {
                                return $scope.element.find(".add-comment").triggerHandler("click")
                            }),
                                comment && comment.author ? LightMdEditorService.atPerson(comment.author.name, "diff-comment-editor" + ($scope.position || "")) : void 0
                        }
                        ,
                        $scope.commentDiff = function(content) {
                            return "" !== content ? Depot.add_line_note({
                                username: $routeParams.username,
                                project_name: $routeParams.project_name
                            }, {
                                commitId: $scope.commitId,
                                noteable_type: $scope.noteable_type,
                                noteable_id: $scope.noteable_id,
                                content: content,
                                path: $scope.path,
                                position: $scope.position || 0,
                                line: $scope.line || 0,
                                anchor: $scope.anchor
                            }, function(result) {
                                return $rootScope.$broadcast("line-notes.add", result.data, $scope.diffComments.length),
                                    $scope.inline ? $scope.cancelComment() : void 0
                            }) : void 0
                        }
                        ,
                        $scope.deleteComment = function(comment) {
                            return confirm("确定删除此评论？") ? Depot.del_line_note({
                                username: $routeParams.username,
                                project_name: $routeParams.project_name,
                                id: comment.id
                            }, function(result) {
                                return $rootScope.$broadcast("line-notes.del", comment, $scope.diffComments.length)
                            }) : void 0
                        }
                        ,
                        $rootScope.$on("line-notes.add", function(event, note) {
                            return note && note.position === $scope.position ? $scope.diffComments.push(note) : void 0
                        }),
                        $rootScope.$on("line-notes.del", function(event, note) {
                            return note && note.position === $scope.position && ($scope.diffComments = Common.removeOfId($scope.diffComments, note.id),
                            $scope.inline && 0 === $scope.diffComments.length) ? destorySelf() : void 0
                        })
                }
                ]
            }
        })
    }
        .call(this),
    function() {
        angular.module("directives").directive("cgFilePath", [function() {
            var htmlEncode, link;
            return link = function(scope, element, attrs) {
                var file, last, mode, path, ps, ref, strs;
                file = scope.$eval(attrs.cgFilePath),
                    path = scope.PROJECT.project_path,
                    ref = scope.$eval(attrs.cgRef),
                    mode = "",
                    "tree" === file.mode ? (mode = "tree",
                        file.flatten_path && file.flatten_path !== file.name ? -1 === file.path.indexOf("/") ? element.attr("href", "" + path + "/git/" + mode + "/" + ref + "/" + encodeURIComponent(file.flatten_path).replace(/%2F/g, "/")) : (ps = file.path.split("/"),
                            ps.pop(),
                            element.attr("href", "" + path + "/git/" + mode + "/" + ref + "/" + encodeURIComponent(ps.join("/") + "/" + file.flatten_path).replace(/%2F/g, "/"))) : element.attr("href", "" + path + "/git/" + mode + "/" + ref + "/" + encodeURIComponent(file.path))) : "git_link" === file.mode ? element.attr("href", "") : (mode = "blob",
                        element.attr("href", "" + path + "/git/" + mode + "/" + ref + "/" + encodeURIComponent(file.path))),
                    element.removeAttr("cg-file-path"),
                    element.removeAttr("cg-path"),
                    file.flatten_path && file.flatten_path !== file.name ? (strs = file.flatten_path.split("/"),
                        last = strs.pop(),
                        element.append('<span class="flatten-path">' + htmlEncode(strs.join("/")) + "/</span>" + htmlEncode(last)),
                        element.attr("title", file.flatten_path)) : (element.append(document.createTextNode(file.name)),
                        element.attr("title", file.name))
            }
                ,
                htmlEncode = function(str) {
                    var div;
                    return div = document.createElement("div"),
                        div.appendChild(document.createTextNode(str)),
                        div.innerHTML
                }
                ,
            {
                link: link
            }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("directives").directive("cgPlotView", ["Depot", "$location", function(Depot, $location) {
            var link;
            return link = function(scope, element, attrs) {
                var length, plot;
                return length = scope.$eval(attrs.cgPlotViewLoadLength),
                    length = length || 50,
                    plot = new Plot({
                        selector: "#network .svg",
                        commits: [],
                        w: 25,
                        h: 30,
                        paddingTop: 10,
                        paddingLeft: 10,
                        paddingBottom: 10,
                        paddingRight: 10,
                        project_path: scope.PROJECT.project_path
                    }),
                    scope.commits = [],
                    scope.hasPlotData = !0,
                    scope.loadMoreing = !1,
                    scope.loadPlot = 1,
                    scope.loadPlotMore = function() {
                        return scope.loadPlot = scope.loadPlot + 1,
                            scope.loadMoreing = !0
                    }
                    ,
                    scope.$watch(attrs.cgPlotView, function() {
                        var plotPromise;
                        return plotPromise = Depot.plot({
                            username: scope.routeParams.username,
                            project_name: scope.PROJECT.name,
                            length: scope.commits.length + length,
                            commitId: scope.current_branch
                        }),
                            plotPromise["catch"](function(error, result) {
                                $location.path("/u/" + scope.routeParams.username + "/p/" + scope.PROJECT.name + "/git")
                            }),
                            plotPromise.then(function(result) {
                                return scope.loadMoreing = !1,
                                    0 !== result.code ? (scope.$parent.loaded = !0,
                                        $(".ui.active.dimmer").remove(),
                                        void $location.path("/u/" + scope.routeParams.username + "/p/" + scope.PROJECT.name + "/git")) : (scope.commits.length === result.data.commits.length && result.data.commits && (scope.hasPlotData = !1),
                                        plot.render(scope.commits = result.data.commits),
                                        $(".ui.active.dimmer").remove(),
                                        $(".ui[data-content],.ui[data-html]").popup({
                                            className: {
                                                popup: "ignored ui popup plot"
                                            },
                                            position: "right center",
                                            offset: 10,
                                            distanceAway: 20,
                                            closable: !1
                                        }),
                                        scope.$parent.loaded = !0)
                            })
                    })
            }
                ,
            {
                link: link
            }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("directives").directive("cgRefSelectorDropdown", [function() {
            return {
                link: function(scope, element, attrs) {
                    var cgRefSelectorDropdown, cgSearchFocus;
                    return cgRefSelectorDropdown = attrs.cgRefSelectorDropdown,
                        cgSearchFocus = attrs.cgSearchFocus,
                        element.on("click", function() {
                            $(cgRefSelectorDropdown).dropdown("toggle"),
                                $(cgSearchFocus).focus(),
                                event.stopImmediatePropagation()
                        })
                }
            }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("directives").directive("cgRefsSearch", ["$routeParams", "Project", "location", "Depot", function($routeParams, Project, location, Depot) {
            return {
                link: function(scope, element, attrs) {
                    var PROJECT;
                    return PROJECT = scope.PROJECT,
                        element.on("keyup", function() {
                            var promise, tab, thiz, val;
                            return thiz = $(this),
                                val = thiz.val(),
                                tab = scope.tab,
                                1 === tab ? (promise = Depot.branches_search({
                                    username: $routeParams.username,
                                    project_name: PROJECT.name,
                                    prefix: val
                                }),
                                    promise.then(function(result) {
                                        scope.branches = result.data
                                    })) : (promise = Depot.tags_search({
                                    username: $routeParams.username,
                                    project_name: PROJECT.name,
                                    prefix: val
                                }),
                                    promise.then(function(result) {
                                        scope.tags = result.data
                                    }))
                        })
                }
            }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("directives").directive("cgShowStat", [function() {
            return {
                link: function(scope, element, attrs) {
                    var target;
                    target = attrs.cgShowStat,
                        element.on("click", function() {
                            var isShow;
                            isShow = element.attr("is-show") || "false",
                                "false" !== isShow && isShow ? ($("." + target).slideUp(),
                                    element.attr("is-show", "false")) : ($("." + target).slideDown(),
                                    element.attr("is-show", "true"))
                        })
                }
            }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("directives").directive("cgTimeAgo", [function() {
            var link;
            return link = function(scope, element, attrs) {
                var day, now, result, threeDay, time;
                return time = new Date(scope.$eval(attrs.cgTimeAgo)),
                    now = new Date,
                    day = 864e5,
                    threeDay = now.getTime() - 3 * day,
                    result = time > threeDay ? moment(time).fromNow() : moment(time).format("YYYY年M月D日 h时mm分"),
                    element.text(result),
                    element.attr("title", moment(time).format("YYYY-M-D h:mm:ss"))
            }
                ,
            {
                link: link
            }
        }
        ]),
            angular.module("directives").directive("cgTimeAgoDay", [function() {
                return {
                    scope: {
                        time: "=cgTimeAgoDay",
                        showYear: "=cgTimeAgoDayWithYear"
                    },
                    link: function(scope, element, attrs) {
                        var day, now, oneDay, result, time, today;
                        if (time = new Date(scope.time),
                                now = new Date,
                                today = now.setHours(0, 0, 0, 0),
                                day = 864e5,
                                oneDay = now.getTime() - day,
                            time > today)
                            result = "NOW";
                        else if (time > oneDay)
                            result = "昨天";
                        else {
                            if (scope.showYear)
                                return result = moment(time).format("YYYY年<br/>M月D日"),
                                    void element.html(result);
                            result = moment(time).format("M月D日")
                        }
                        return element.text(result)
                    }
                }
            }
            ])
    }
        .call(this),
    function() {
        angular.module("directives").directive("cgToggleMoreCommitMessage", [function() {
            return {
                link: function(scope, element, attrs) {
                    element.click(function() {
                        var id, isShow;
                        id = element.attr("cg-toggle-more-commit-message"),
                            isShow = element.attr("is-show"),
                            "false" === isShow ? ($("#" + id).removeClass("hide").addClass("show"),
                                element.attr("is-show", "true")) : ($("#" + id).removeClass("show").addClass("hide"),
                                element.attr("is-show", "false"))
                    })
                }
            }
        }
        ])
    }
        .call(this),
    function() {
        angular.module("directives").directive("cgTreeInfo", ["md5", "Depot", "$routeParams", function(md5, Depot, $routeParams) {
            return {
                link: function(scope, element, attrs) {
                    var region, url;
                    return scope.tree_url = scope.$eval(attrs.cgTreeInfo),
                        scope.treeinfo_url = scope.tree_url.replace("/tree/", "/treeinfo/"),
                        url = scope.treeinfo_url,
                        region = url.substring(url.search("/git/treeinfo/") + 14, url.length),
                        Depot.treeInfo({
                            username: $routeParams.username,
                            project_name: $routeParams.project_name,
                            region: encodeURIComponent(region)
                        }, function(result) {
                            return angular.forEach(result.data.infos, function(info) {
                                var commit, hash, msgHref, msgLink, name, time, tr, userLink;
                                hash = md5.createHash(info.path),
                                    tr = $("#tr_" + hash),
                                    info.lastCommitter ? (time = tr.find(".age span"),
                                        time.text(moment(new Date(info.lastCommitDate)).fromNow()),
                                        time.attr("datetime", info.lastCommitDate),
                                        time.attr("title", moment(new Date(info.lastCommitDate)).format("YYYY-M-D h:mm:ss")),
                                        userLink = tr.find(".committer span a"),
                                        userLink.attr("href", info.lastCommitter.link),
                                        userLink.html('<img class="author-gravatar" src="' + info.lastCommitter.avatar + '" title="' + info.lastCommitter.name + '" width="20" height="20" />'),
                                        msgLink = tr.find(".message span a"),
                                        name = tr.find(".name span a"),
                                        name.attr("href", info.lastCommitter.link),
                                        name.html(info.lastCommitter.name),
                                        msgHref = scope.$parent.$parent.PROJECT.project_path + "/git/commit/" + info.lastCommitId,
                                        msgLink.attr("href", msgHref),
                                        msgLink.html(info.lastCommitMessage),
                                    msgLink.find("a").length > 0 && (msgLink.contents().filter(function() {
                                        return 3 === this.nodeType
                                    }).wrap('<a href="' + msgLink.attr("href") + '"></a>'),
                                        msgLink.parent().html(msgLink.html())),
                                        tr.find(".committer i").remove()) : (0 === info.submoduleUrl.length ? (tr.find(".content span a").remove(),
                                        tr.find(".content span").html('<i class="folder icon"></i>' + info.name)) : tr.find(".content .truncate a").attr("href", info.submoduleLink),
                                        commit = tr.find(".committer"),
                                    0 !== info.lastCommitId.length && commit.html("<code>" + info.lastCommitId.substring(0, 7) + "</code>"),
                                        tr.find(".message span a").text(info.submoduleUrl),
                                        tr.find(".committer span i").remove())
                            })
                        })
                }
            }
        }
        ])
    }
        .call(this),
    angular.module("app").run(["$templateCache", function($templateCache) {
        $templateCache.put("app/about/about.html", '<div id="about_us">\n    <div class="content">\n        <section class="intro">\n            <p>Coding.net 是深圳市扣钉网络科技有限公司打造的国内最大的一站式云端开发平台，提供包括代码托管，项目管理，产品演示，WebIDE 等工具。Coding 立志于帮助软件开发者提高生产效率，实现\n                “Coding Anytime Anywhere”。目前已经积累了 15 万开发者，20 万项目，并且获得了 IDG 和光速的两轮投资共计 1500 万美元。</p>\n\n            <p>2015年8月，Coding 推出码市平台（ mart.coding.net ），旨在通过云端众包的方式提高软件交付的效率，帮助软件开发行业实现高效的资源匹配。</p>\n\n\n            <p>Coding, 让开发更简单！</p>\n        </section>\n        <section class="contact">\n            <div class="title">\n                <span>联系我们</span>\n            </div>\n            <div>\n                <div class="link">\n                    <p><label>公司：</label>深圳市扣钉网络科技有限公司</p>\n\n                    <p><label>电话：</label>0755-23985255</p>\n\n                    <p><label>E-mail：</label><img src="/static/22ca3ff299956d20b419d50ec7c29614.png" style="height: 20px;vertical-align: middle;opacity: 0.89"></p>\n\n                    <p><label>地址：</label>深圳 · 福田 彩田路新浩ｅ都 A 座 2101</p>\n\n                    <p><label>微博：</label><a href="http://weibo.com/p/1006065153943878/home?from=page_100606&mod=TAB#place" target="_blank">Coding</a></p>\n\n                    <p><label>微信：</label><span title="扫一扫右侧二维码，关注 Coding 微信公众号">扣钉Coding</span></p>\n                </div>\n                <div class="qrcode">\n                    <img src="/static/fcdf6ecd90f6022d143a5e06fbe391b8.jpg">\n\n                    <p>扫一扫，关注 Coding 微信公众号</p>\n                </div>\n            </div>\n        </section>\n        <section class="icons">\n            <div class="title">\n                <span>Logo & 墙纸下载</span>\n            </div>\n            <div>\n                <div class="items" ng-init="show_log = 0">\n                    <div class="thumb-box">\n                        <img src="/static/d257631f59976b1fa0845c5aac413147.png" ng-mouseenter="show_log = 1" ng-mouseleave="show_log = 0" class="thumb">\n\n                        <div class="ui popup logo show box right center transition" ng-class="{visible:show_log==1}">\n                            <img src="/static/d257631f59976b1fa0845c5aac413147.png">\n                        </div>\n                    </div>\n                    <p class="dlink">\n                        <span><a href="/static/161a7eb09df0fad36b19e63c95f98f4b.jpg" target="_blank">jpg</a></span>\n                        <span><a href="/static/d257631f59976b1fa0845c5aac413147.png" target="_blank">png</a></span>\n                        <span><a href="/static/b15c8d25d3974704bc9d372019c48e21.svg" target="_blank">svg</a></span>\n                    </p>\n                </div>\n                <div class="items">\n                    <div class="thumb-box">\n                        <img src="/static/ffc14b7be26b20b829b5c51985b07d8d.png" ng-mouseenter="show_log = 2" ng-mouseleave="show_log = 0" class="thumb">\n\n                        <div class="ui popup logo show box right center transition" ng-class="{visible:show_log==2}">\n                            <img src="/static/ffc14b7be26b20b829b5c51985b07d8d.png">\n                        </div>\n                    </div>\n                    <p class="dlink">\n                        <span><a href="/static/d0aa9dd75e2500930b9e6ef61d9bcfa0.jpg" target="_blank">jpg</a></span>\n                        <span><a href="/static/ffc14b7be26b20b829b5c51985b07d8d.png" target="_blank">png</a></span>\n                        <span><a href="/static/3d2b36ddcba9a90cf96e49e650bb1f26.svg" target="_blank">svg</a></span>\n                    </p>\n                </div>\n                <div class="items">\n                    <div class="thumb-box">\n                        <img src="/static/7a51352fa766f4176d7c4543339e0e98.png" ng-mouseenter="show_log = 3" ng-mouseleave="show_log = 0" class="thumb">\n\n                        <div class="ui popup logo show box right center transition" ng-class="{visible:show_log==3}">\n                            <img src="/static/7a51352fa766f4176d7c4543339e0e98.png">\n                        </div>\n                    </div>\n                    <p class="dlink">\n                        <span><a href="/static/a3b9e4a7672c20f29e664f41ee8e5c71.jpg" target="_blank">jpg</a></span>\n                        <span><a href="/static/7a51352fa766f4176d7c4543339e0e98.png" target="_blank">png</a></span>\n                        <span><a href="/static/cb75498a0ffd36e2c694da62f1bdb86c.svg" target="_blank">svg</a></span>\n                    </p>\n                </div>\n                <div class="items">\n                    <div class="thumb-box">\n                        <img src="/static/adddcfb37896b41779bc0976326cd798.png" ng-mouseenter="show_log = 4" ng-mouseleave="show_log = 0" class="thumb">\n\n                        <div class="ui popup logo show box right center transition" ng-class="{visible:show_log==4}">\n                            <img src="/static/adddcfb37896b41779bc0976326cd798.png">\n                        </div>\n                    </div>\n                    <p class="dlink">\n                        <span><a href="/static/adddcfb37896b41779bc0976326cd798.png" target="_blank">png</a></span>\n                    </p>\n                </div>\n                <div class="items">\n                    <div class="thumb-box">\n                        <img ng-src="/static/459df4064623519470d2d898c2c4bc11.jpg" ng-mouseenter="show_log = 16" ng-mouseleave="show_log = 0" class="thumb">\n\n                        <div class="ui popup logo show box right center transition" ng-class="{visible:show_log == 16}">\n                            <img ng-src="/static/459df4064623519470d2d898c2c4bc11.jpg">\n                        </div>\n                    </div>\n                    <p class="dlink">\n                        <span><a ng-href="/static/d6c0b7dda1419858a04dc6637cdcba99.jpg" target="_blank">2560*1600</a></span>\n                        <span><a ng-href="/static/2af094a6ecc19e0577febb3537209b8e.jpg" target="_blank">2560*1440</a></span>\n                        <span><a ng-href="/static/343c8c11c3ce2add194a915130e4c3e2.jpg" target="_blank">1920*1200</a></span>\n                        <span><a ng-href="/static/bb765c69f17f318bf6d66463a243888f.jpg" target="_blank">1920*1080</a></span>\n                        <span><a ng-href="/static/001a685c42cb06e0c0dba7b214a05814.jpg" target="_blank">1366*768</a></span>\n                        <span><a ng-href="/static/459df4064623519470d2d898c2c4bc11.jpg" target="_blank">1280*800</a></span>\n                    </p>\n                </div>\n\n                <div class="items">\n                    <div class="thumb-box">\n                        <img ng-src="/static/d579bb9f67109e915795df7bb7dcb5ee.jpg" ng-mouseenter="show_log = 17" ng-mouseleave="show_log = 0" class="thumb">\n\n                        <div class="ui popup logo show box right center transition" ng-class="{visible:show_log == 17}">\n                            <img ng-src="/static/d579bb9f67109e915795df7bb7dcb5ee.jpg">\n                        </div>\n                    </div>\n                    <p class="dlink">\n                        <span><a ng-href="/static/1dda49c12324744df9ee1984abacf66b.jpg" target="_blank">2560*1600</a></span>\n                        <span><a ng-href="/static/6dc8cb7de502b9cffefb75f2efa3db07.jpg" target="_blank">2560*1440</a></span>\n                        <span><a ng-href="/static/966a2634854051aab1e3997b51600bf1.jpg" target="_blank">1920*1200</a></span>\n                        <span><a ng-href="/static/d028449d191ee865bf6f173ca10c332e.jpg" target="_blank">1920*1080</a></span>\n                        <span><a ng-href="/static/0949c8544b691f5d807e015d85e31d0a.jpg" target="_blank">1366*768</a></span>\n                        <span><a ng-href="/static/d579bb9f67109e915795df7bb7dcb5ee.jpg" target="_blank">1280*800</a></span>\n                    </p>\n                </div>\n\n                <div class="items">\n                    <div class="thumb-box">\n                        <img ng-src="/static/f832083fc2615145cf9dd98390b2b003.jpg" ng-mouseenter="show_log = 18" ng-mouseleave="show_log = 0" class="thumb">\n\n                        <div class="ui popup logo show box right center transition" ng-class="{visible:show_log == 18}">\n                            <img ng-src="/static/f832083fc2615145cf9dd98390b2b003.jpg">\n                        </div>\n                    </div>\n                    <p class="dlink">\n                        <span><a ng-href="/static/ad1e558142f8d91e522208dbe967ac70.jpg" target="_blank">2560*1600</a></span>\n                        <span><a ng-href="/static/abf28bf979b974e2cf2e8ac62a0757e5.jpg" target="_blank">2560*1440</a></span>\n                        <span><a ng-href="/static/cebc577118617649d4eb724b743342a7.jpg" target="_blank">1920*1200</a></span>\n                        <span><a ng-href="/static/06788eb756e0436e9f64fa2546be86b1.jpg" target="_blank">1920*1080</a></span>\n                        <span><a ng-href="/static/50f483057e9e51c74e85119ac69fd3a9.jpg" target="_blank">1366*768</a></span>\n                        <span><a ng-href="/static/f832083fc2615145cf9dd98390b2b003.jpg" target="_blank">1280*800</a></span>\n                    </p>\n                </div>\n\n                <div class="items">\n                    <div class="thumb-box">\n                        <img ng-src="/static/122994249dec6a64db0ec9a2559247be.jpg" ng-mouseenter="show_log = 19" ng-mouseleave="show_log = 0" class="thumb">\n\n                        <div class="ui popup logo show box right center transition" ng-class="{visible:show_log == 19}">\n                            <img ng-src="/static/122994249dec6a64db0ec9a2559247be.jpg">\n                        </div>\n                    </div>\n                    <p class="dlink">\n                        <span><a ng-href="/static/2539b335cbfe58bbcc19322564ec6636.jpg" target="_blank">2560*1600</a></span>\n                        <span><a ng-href="/static/33ae7ec37010871fc30d779fe9038199.jpg" target="_blank">2560*1440</a></span>\n                        <span><a ng-href="/static/46570ad58ffe713ba4e0ecac858e9821.jpg" target="_blank">1920*1200</a></span>\n                        <span><a ng-href="/static/4a052565ff8dc48b58446dbb777a71b9.jpg" target="_blank">1920*1080</a></span>\n                        <span><a ng-href="/static/4fd1b272163e577dff6b59475267f06c.jpg" target="_blank">1366*768</a></span>\n                        <span><a ng-href="/static/122994249dec6a64db0ec9a2559247be.jpg" target="_blank">1280*800</a></span>\n                    </p>\n                </div>\n\n                <div class="items">\n                    <div class="thumb-box">\n                        <img ng-src="/static/b299625a87f31f35b9c7a2c581ba1d4c.jpg" ng-mouseenter="show_log = 20" ng-mouseleave="show_log = 0" class="thumb">\n\n                        <div class="ui popup logo show box right center transition" ng-class="{visible:show_log == 20}">\n                            <img ng-src="/static/b299625a87f31f35b9c7a2c581ba1d4c.jpg">\n                        </div>\n                    </div>\n                    <p class="dlink">\n                        <span><a ng-href="/static/5c348ee8b733fde963d946c60f39c10b.jpg" target="_blank">2560*1600</a></span>\n                        <span><a ng-href="/static/5b16fd92d840ade30c8baab9a7ba0ed3.jpg" target="_blank">2560*1440</a></span>\n                        <span><a ng-href="/static/f850ad4268b8f3c48fe6acde66c4aab4.jpg" target="_blank">1920*1200</a></span>\n                        <span><a ng-href="/static/fdc2eaeceea6bc0c57df9ab715cdf96f.jpg" target="_blank">1920*1080</a></span>\n                        <span><a ng-href="/static/a214023622e24c918ee912926682e4b5.jpg" target="_blank">1366*768</a></span>\n                        <span><a ng-href="/static/b299625a87f31f35b9c7a2c581ba1d4c.jpg" target="_blank">1280*800</a></span>\n                    </p>\n                </div>\n            </div>\n        </section>\n        <cg-partner-link></cg-partner-link>\n        <section class="partners">\n            <div class="title">\n                <span>合作孵化器</span>\n            </div>\n            <div class="wrapper">\n                <span class="partner">\n                    <a href="http://www.people-squared.com/" target="_blank">\n                        <img ng-src="https://dn-coding-net-production-pp.qbox.me/210be33a-870b-4dbc-8add-b06f9e503ba8.png" alt="联合创业办公社">\n                    </a>\n                </span>\n                 <span class="partner">\n                    <a href="http://www.juzilab.com/" target="_blank">\n                        <img ng-src="https://dn-coding-net-production-pp.qbox.me/d4b7e695-59f5-45a4-b90b-ec5255ffff0d.jpg" alt="橘子空间">\n                    </a>\n                </span>\n            </div>\n        </section>\n    </div>\n</div>\n<div ng-include="\'app/layout/footer.html\'"></div>'),
            $templateCache.put("app/about/gitsla.html", '<div id="gitsla">\n    <h1>Git 代码托管服务等级协议（SLA）</h1>\n    <hr>\n    <ol>\n        <li>\n            <strong>服务范围</strong>\n            <p>\n                Coding.net 网站（以下简称 Coding ）是由深圳市希云科技有限公司（以下简称“本公司”）\n            </p>\n            <p>\n                向付费合约期内的用户提供的 Git 代码托管业务遵从以下服务等级协议（以下简称 SLA ）：\n            </p>\n        </li>\n        <li>\n            <strong>服务等级定义</strong>\n            <ol>\n                <li>\n                    <strong>服务可用性</strong>\n                    <p>\n                        服务可用性按照服务周期统计，一个服务周期为一个自然月，如不满一个月则按一个月计算。\n                    </p>\n                    <p>\n                        可用性计算公式为：每服务周期服务的所有可用时间 /（每服务周期服务的所有可用时间＋每服务周期服务的所有不可用时间）。\n                    </p>\n                    <p>\n                        不可用时间，连续 5 分钟或更长时间不可使用服务方记为不可用时间，不可用实际低于 5 分钟的不计入不可用时间。\n                    </p>\n                    <p>\n                        Coding 承诺购买高级版的用户将提供不低于 99.9% 的服务可用性。\n                    </p>\n                </li>\n                <li>\n                    <strong>数据私密性</strong>\n                    <p>\n                        用户使用 Git 托管在 Coding 上的代码，文档数据，均需用户直接授权（ 密码，Oauth等 ) 方可访问，最大程度保障用户数据的私密性。Coding 运维和技术人员有权查看系统，文件操作日志，以进行异常错误的排查。 所有涉及用户隐私敏感信息的操作都会记录日志供审查。\n                    </p>\n                </li>\n                <li>\n                    <strong>数据可销毁性</strong>\n                    <p>\n                        在用户主动删除数据或用户服务期满后需要销毁数据的，Coding 将会自动清除对应服务器上的磁盘和内存数据，使得数据无法恢复。\n                    </p>\n                </li>\n                <li>\n                    <strong>数据可审查性</strong>\n                    <p>\n                        Coding 存储的数据遵守当地法律法规，用户对此有知情权。\n                    </p>\n                    <p>\n                        依据现行法律法规或政府监管部门监管、安全合规、审计或取证调查等原因需要，在符合流程和手续完备的情况下，Coding 可以提供用户所使用的服务相关信息，包括关键组件的运行日志，运维人员操作记录、用户操作记录等信息。\n                    </p>\n                </li>\n                <li>\n                    <strong>数据可靠性</strong>\n                    <p>\n                        Coding 托管的代码文件，保证每个文件都有 2 份以上的副本存储在北京、香港机房的不同服务器上，保障用户数据的可靠。\n                    </p>\n                </li>\n                <li>\n                    <strong>服务故障恢复能力</strong>\n                    <p>\n                        向购买高级版服务的付费用户承诺 9×6 小时的运行维护。\n                    </p>\n                    <p>\n                        向购买开发版服务的付费用户承诺 8×5 小时的运行维护。\n                    </p>\n                    <p>\n                        并以在线工单和电话报障等方式提供技术支持，具备完善的故障监控、自动告警、快速定位、快速恢复等一系列故障应急响应机制。\n                    </p>\n                </li>\n                <li>\n                    <strong>其它相关说明</strong>\n                    <p>\n                        其它相关说明请参照 Coding.net 主站<a href="/terms" target="_blank">《服务条款》</a>\n                    </p>\n                </li>\n            </ol>\n        </li>\n        <li>\n            <strong>服务赔偿</strong>\n            <ol>\n                <li>\n                    <strong>赔偿范围</strong>\n                    <p>\n                        若因 Coding 设计缺陷或操作不当导致用户所购买的服务无法正常使用，未能达到所承诺的服务可用性，用户有权获得赔付。\n                    </p>\n                    <p>\n                        但不包括以下原因所导致的服务不可用：\n                    </p>\n                    <article>\n                        <ul>\n                            <li>1）Coding 预先通知用户后进行的维护所引起的，包括割接、维修升级和模拟故障演练；</li>\n                            <li>2）所依赖的第三方电脑软件、系统、硬件和通讯线路出现故障；</li>\n                            <li>3）不受 Coding 直接控制的网络问题，如 DNS 服务；</li>\n                            <li>4）受到计算机病毒、木马、黑客攻击；</li>\n                            <li>5）用户或由用户授权的不当、疏忽操作所引起的；</li>\n                            <li>6）不可抗力、战争、罢工、电讯不可以用，无法得到 SLA 所提供的服务；</li>\n                            <li>7）其它非 Coding 过错、无法控制或合理预见的情况；</li>\n                        </ul>\n                    </article>\n                </li>\n                <li>\n                    <strong>赔偿方案</strong>\n                    <p>\n                        每个代码仓库按照不可用时间 100 倍赔偿，赔偿仅限服务时长的补偿，且赔偿总额不超过用户支付的单个代码仓库的费用总额。\n                    </p>\n                    <article>\n                        <ul>\n                            <li>a）Coding 将按照服务不可用时间的 100 倍赔偿，即 赔付的金额 ＝ 发生故障前一个自然日的平均每 5 分钟费用 × 服务不可用时间（每 5 分钟为一个单位）× 100 倍。</li>\n                            <li>b）服务不可用时间 ＝ 故障开始时间 - 故障结束时间，不可用时间按照每 5 分钟为单位计算，不足 5 分钟的以 5 分钟计算。</li>\n                            <li>c）赔偿只针对已购买 Coding 的付费服务并且在合约期内用的用户。</li>\n                            <li>d）赔偿方式 Coding 将以充值到用户账户和抵用券形式赔偿。</li>\n                            <li>e）如果用户没有使用到 24 小时，按照实际使用时长计算平均每 5 分钟的费用。</li>\n                        </ul>\n                    </article>\n                </li>\n            </ol>\n        </li>\n        <li>\n            <strong>其他</strong>\n            <p>Coding 有权根据变化适时对本服务等级协议部分服务指标作出调整，并及时在 Coding 官网发布公告或发送邮件或书面通知向用户提示修改内容。</p>\n        </li>\n    </ol>\n    <hr>\n    <p class="bottom">最后更新：2015 年 6 月 26 日</p>\n</div>\n<div ng-include="\'app/layout/footer.html\'"></div>'),
            $templateCache.put("app/about/jobs.html", '<div id="join_us">\n    <div class="content">\n        <div class="title">Hello Coding! Hello World!</div>\n        <section>\n            <div class="describtion">\n                <p>\n                    Coding 简称“猴厂”！哦，不！其实我们是 anytime、anywhere 都抱着猴子敲代码的团队啦！\n                </p>\n\n                <p>\n                    既然你在这里发现我，那一定是 Coding.net 的忠实用户吧，先给你朵小红花，再让我向你娓娓道来我们需要怎样的你！\n                </p>\n            </div>\n        </section>\n\n        <section>\n            <img src="/static/ce5c8a52ebf3c1e5f929f55f4bce42bb.png" class="coding-emoji">\n        </section>\n\n        <section>\n            <div class="detail">\n                <div class="introduction">\n                    <img src="/static/433cf1d56f27d84e546e9d63903709db.png" class="coding-office">\n\n                    <p>\n                        首先，我们的团队人手一只小猴子，就是这么任性。<br>\n\n                        我们有宽阔、整洁、大气、上档次的办公室。<br>\n\n                        我们有芳香四溢的咖啡、酸甜可口的各式水果、甜甜脆脆的零食，没办法，养了那么多只猴子，粮食一定是要大大的充足的。<br>\n\n                        我们有平台、有空间，我们崇尚自由、开放，当然我们也崇尚分享，我们分享成果、分享快乐，当然还有 Money! Money! Money!<br>\n\n                        我们也会带着猴子一起去看世界。<br>\n\n                        我还想偷偷地告诉你，我们是男女比例最平衡的技术公司！<br>\n\n                        <a class="pink" href="http://mp.weixin.qq.com/s?__biz=MzA3ODUxMjMyMw==&mid=206269163&idx=1&sn=4510fb03ca3903349ebc70f0ff8b2ecf" target="_blank">「在\n                            Coding.net 工作是一番怎样的体验」</a><span class="author"> —— @wangziying</span>\n                    </p>\n\n                </div>\n\n                <div class="invite">\n                    <p class="invite-title">\n                        我们是有梦想的团队，我们是有情怀的团队，我们更是有技术的团队。\n                    </p>\n\n                    <p>\n                        猴子军团团长发话了！\n                    </p>\n\n                    <p>\n                        现招募大批小猴子！壮大队伍，一起走向 Global !\n                    </p>\n\n                    <p>\n                        表再犹豫，下面的职位总有一款适合你！\n                    </p>\n\n                    <p class="last-line">\n                        那就给她 <i class="pink">xiexiaodong@coding.net</i> 发个简历呗！\n                    </p>\n                </div>\n            </div>\n        </section>\n\n        <section>\n            <div class="hiring">\n                <p class="hiring-title">正在招募</p>\n\n                <div id="job-locations">\n\n                </div>\n            </div>\n        </section>\n\n\n        <section>\n            <div class="job-area">\n                <div id="job-kinds">\n\n                </div>\n\n                <div id="job-content">\n\n                </div>\n\n            </div>\n        </section>\n    </div>\n</div>\n<div ng-include="\'app/layout/footer.html\'"></div>\n\n<script type="text/javascript">\n"use strict";\n    var API = (function (window, $) {\n\n        var positions = [\n            {\n                key: \'tech\',\n                name: \'技术类岗位\'\n            },\n            {\n                key: \'market\',\n                name: \'市场类岗位\'\n            },\n            {\n                key: \'product\',\n                name: \'产品类岗位\'\n            },\n            {\n                key: \'design\',\n                name: \'设计类岗位\'\n            }\n        ];\n\n        var cities = [\n            {\n                key: \'shenzhen\',\n                name: \'深圳\',\n                positions: [\'tech\', \'market\', \'product\', \'design\']\n            },\n            {\n                key: \'shanghai\',\n                name: \'上海\',\n                positions: [\'tech\', \'product\']\n            },\n            {\n                key: \'beijing\',\n                name: \'北京\',\n                positions: [\'market\']\n            }\n        ];\n\n        var getPositionByCity = function (city) {\n            var c = _.find(cities, {key: city});\n            return c.positions;\n        };\n\n        var getPositionNameByKey = function (position) {\n            var domain = _.find(positions, {key: position});\n            return domain.name;\n        };\n\n        var buildCityTab = function (selectedCity) {\n            var items = $(\'<div></div>\');\n            $.each(cities, function (i, city) {\n                var clazz = \'hiring-locations-label\';\n                if(selectedCity === city.key) {\n                    clazz += \' selected\';\n                }\n                var html = [\n                    \'<div class="\' + clazz + \'">\',\n                        \'<label>\',\n                            city.name,\n                        \'</label>\',\n                    \'</div>\'\n                ].join(\'\\n\');\n                var item = $(html);\n                item.data(\'city\', city.key);\n                items.append(item);\n            });\n            return items.children();\n        };\n\n        var buildPositionsTab = function (city, currentPosition) {\n            var positions = getPositionByCity(city);\n            var items = $(\'<div></div>\');\n            $.each(positions, function (i, position) {\n                var name = getPositionNameByKey(position);\n                var clazz = \'job-kinds-label\';\n                if(position === currentPosition) {\n                    clazz += \' selected\';\n                }\n                var html = [\n                    \'<div class="\' + clazz + \'">\',\n                        \'<label>\',\n                            name,\n                        \'</label>\',\n                    \'</div>\'\n                ].join(\'\\n\');\n                var item = $(html);\n                item.data(\'position\', position);\n                items.append(item);\n            });\n            return items.children();\n        };\n\n        var generateJobContent = function (city, domain) {\n            return $(\'#\'+ city + \'-\' + domain).html();\n        };\n\n        var getCurrentPosition = function (city, currentPosition) {\n            var position = currentPosition;\n            var positions = getPositionByCity(city);\n            if(positions.indexOf(currentPosition) === -1) {\n                position = positions[0];\n            }\n            return position;\n        };\n\n        var api = {\n            buildCityTab: buildCityTab,\n            buildPositionsTab: buildPositionsTab,\n            generateJobContent: generateJobContent,\n            getCurrentPosition: getCurrentPosition\n        };\n\n        return api;\n    })(window, $);\n\n    $(function () {\n\n        var $locations = $(\'#job-locations\'),\n            $positions = $(\'#job-kinds\'),\n            $content = $(\'#job-content\');\n\n        var currentCity = \'shenzhen\',\n            currentPosition = \'tech\';\n\n        var renderCityTab = function () {\n            var cities = API.buildCityTab(currentCity);\n            $locations.html(cities);\n        };\n\n        var renderPositionTab = function () {\n            currentPosition = API.getCurrentPosition(currentCity, currentPosition);\n            var domains = API.buildPositionsTab(currentCity, currentPosition);\n            $positions.html(domains);\n            var content = API.generateJobContent(currentCity, currentPosition);\n            $content.html(content);\n        };\n\n        renderCityTab();\n        renderPositionTab();\n\n        //events handler\n        $locations.on(\'click\', \'.hiring-locations-label\', function () {\n            var self = $(this);\n            currentCity = self.data(\'city\');\n            renderCityTab();\n            renderPositionTab();\n        });\n\n        $positions.on(\'click\', \'.job-kinds-label\', function () {\n            var self = $(this);\n            currentPosition = self.data(\'position\');\n            renderPositionTab();\n        });\n    });\n</script>\n\n<!-- html templates begin-->\n\n<script type="text/tpl" id="shenzhen-tech">\n    <div>\n\n        <div>\n            <p class="job-title">\n                <span class="job-title-name">全栈工程师</span><span\n                class="job-title-salary">深圳 10k-20k</span>\n            </p>\n\n            <div class="job-describtion">\n                看这里！看这里！无论是 <a href="https://coding.net" target="_blank">Coding.net</a> 桌面版还是 <a href="https://m.coding.net" target="_blank">m.coding.net</a>\n                移动版都归你管啦！<br/>\n                <br/>从前端到后端，从云计算到 Docker，从旧识到新知，你觉得你能一手掌控吗？<br/>\n                你觉得你能事无巨细吗？你觉得你 hold 得住吗？ <br/>\n                <br/>你能，你就来！！\n            </div>\n            <div class="hr-email">\n                <br/>请发简历到： <span class="pink">xiexiaodong@coding.net</span>\n            </div>\n        </div>\n\n        <div>\n            <p class="job-title">\n                <span class="job-title-name">系统架构师 —— 开发 Coding.net 的后台核心组件</span><span\n                class="job-title-salary">深圳 15k-30k</span>\n            </p>\n\n            <div class="job-describtion">\n                我就是想知道你是打从心底里热爱计算机编程吗？<br/>\n                你是一个爱折腾、能折腾的小马达吗？<br/>\n                你是能够熟练掌握 Linux 操作系统吗？<br/>\n                你是有大规模分布式系统开发的经验吗？ <br/>\n                你是对新技术充满了求知欲和探索欲吗？<br/>\n                你是拥有良好的语言沟通能力吗？<br/>\n                </br>如果你是，你为什么还不来？！！！你不知道小猴子们一直在等你吗？！！\n            </div>\n            <div class="hr-email">\n                <br/>请发简历到： <span class="pink">xiexiaodong@coding.net</span>\n            </div>\n        </div>\n\n        <div>\n            <p class="job-title">\n                <span class="job-title-name">测试工程师</span><span\n                class="job-title-salary">深圳 10k-20k</span>\n            </p>\n\n            <div class="job-describtion">\n                亲！你是完美主义的化身吗？你是火眼金睛吗？你是“强迫症患者吗”？我们就稀罕这样的你为我们的开发人员找茬！！（开发人员不要恨我呀呀呀）<br/>\n                <br/>从分析到方案制定，从执行到跟踪，请开启“处女座”模式，一丝一毫都表放过的测试！测试！测试！！！做好产品上线最后一道关卡的守门人！！<br/>\n                看好你哟~\n            </div>\n            <div class="hr-email">\n                <br/>请发简历到： <span class="pink">xiexiaodong@coding.net</span>\n            </div>\n        </div>\n\n        <div>\n            <p class="job-title">\n                <span class="job-title-name">IT网管</span><span\n                class="job-title-salary">深圳 6k-10k</span>\n            </p>\n\n            <div class="job-describtion">\n                喜欢让全公司的小伙伴都离不开你吗？<br/>\n                喜欢鼓捣各种电子办公设备吗？<br/>\n                喜欢不厌其烦的的治愈电脑啦、无线啦、打印机啦这些个调皮的总是出小毛病的东东吗？<br/>\n                <br/>哦，要是还会编程、会制作网页什么的简直就是 perfect！那就别瞅了，就是你了，么么哒~\n            </div>\n            <div class="hr-email">\n                <br/>请发简历到： <span class="pink">xiexiaodong@coding.net</span>\n            </div>\n        </div>\n    </div>\n\n</script>\n\n<script type="text/tpl" id="shenzhen-market">\n    <div>\n        <div>\n            <p class="job-title">\n                <span class="job-title-name">移动端产品运营</span><span\n                class="job-title-salary">深圳  6k-12k</span>\n            </p>\n\n            <div class="job-describtion">\n                嘿！喜欢体验各种 app 并能够打破常规迸发新奇的 idea 吗？<br/>\n                喜欢与各式各样的人来打交道并建立友好的关系吗？<br/>\n                喜欢分析数据总结规律并能精准的定位产品方案吗？<br/>\n                喜欢在互联网的世界里冲浪并愿意投身其中吗？<br/>\n                <br/>你若喜欢，那你也一定会喜欢我们这个有爱有激情的大家庭哟~ Come on！Don’t be shy！\n            </div>\n            <div class="hr-email">\n                <br/>请发简历到： <span class="pink">xiexiaodong@coding.net</span>\n            </div>\n        </div>\n    </div>\n\n</script>\n\n<script type="text/tpl" id="shenzhen-product">\n    <div>\n        <div>\n            <p class="job-title">\n                <span class="job-title-name">项目经理</span><span\n                class="job-title-salary">深圳  8k-16k</span>\n            </p>\n\n            <div class="job-describtion">\n                悬赏（Coding 码市 <a href="https://mart.coding.net" target="_blank">https://mart.coding.net</a>）任务来啦！快去沟通需求，快去编写文档，快去协调开发与设计，快去跟进项目进度！<br/>\n                <br/>只要你有一定的软件开发技术背景，只要你愿意尽心尽力、不厌其烦、雷厉风行、细致认真的满足客户的心愿！那你就是我们心仪的项目经理！\n            </div>\n            <div class="hr-email">\n                <br/>请发简历到： <span class="pink">xiexiaodong@coding.net</span>\n            </div>\n        </div>\n\n        <div>\n            <p class="job-title">\n                <span class="job-title-name">高级产品经理</span><span\n                class="job-title-salary">深圳 15k-30k</span>\n            </p>\n\n            <div class="job-describtion">\n                宏观掌控 or 细节处理，编程经验 or 市场嗅觉，文档编写 or 页面设计，决策大权 or 进度跟进，如果你以为这是一道选择题，那答案就是全选！<br/>\n                <br/> 对！我们就是要这样优秀的、全面的、有深度、有思想、有经验的你！Just You ！\n            </div>\n            <div class="hr-email">\n                <br/>请发简历到： <span class="pink">xiexiaodong@coding.net</span>\n            </div>\n        </div>\n    </div>\n\n</script>\n\n<script type="text/tpl" id="shenzhen-design">\n    <div>\n\n        <div>\n            <p class="job-title">\n                <span class="job-title-name">UI 设计师</span><span\n                class="job-title-salary">深圳 9k-18k</span>\n            </p>\n\n            <div class="job-describtion">\n                知道吗，我们不仅设计 Web 页面、app 页面，我们在周边产品界里面也是小有名气呢！所以无论你是激昂澎湃的酷炫风、还是侠骨柔情的温柔风，无论你是冰冷无情的幽暗风、还是天真无邪萌萌风，我们都照单全收！<br/>\n                <br/>只要你能玩转各种设计软件（Photoshop、Illustrator 等），只要你愿意跟我们一起发疯一起嗨！那就赶紧行动起来发简历吧！\n            </div>\n            <div class="hr-email">\n                <br/>请发简历到： <span class="pink">xiexiaodong@coding.net</span>\n            </div>\n        </div>\n\n        <div>\n            <p class="job-title">\n                <span class="job-title-name">平面设计师</span><span\n                class="job-title-salary">深圳 8k-15k</span>\n            </p>\n\n            <div class="job-describtion">\n                基础分 10 分！对海报、易拉宝、纪念品设计、VI 设计有独到的设计感 +10 分！熟练使用 Axure、Photoshop 等工具 +10 分！良好的语言沟通和文字表达能力 +10 分！拥有良好的审美 +100 分！！<br/>\n                <br/>够 100 分就来我们这里做一只幸福的小猴子吧！\n            </div>\n            <div class="hr-email">\n                <br/>请发简历到：<span class="pink">xiexiaodong@coding.net</span>\n            </div>\n        </div>\n    </div>\n\n</script>\n\n<script type="text/tpl" id="shanghai-tech">\n    <div>\n        <div>\n            <p class="job-title">\n                <span class="job-title-name">全栈工程师</span><span\n                class="job-title-salary">上海 10k-20k</span>\n            </p>\n\n            <div class="job-describtion">\n                戳这里！戳这里！ <a href="https://coding.net/webide" target="_blank">Coding.net Web IDE (https://coding.net/webide)</a>\n                。这就是你要负责的产品！<br/>\n                从前端到后端，从云计算到 Docker，从旧识到新知，你觉得你能一手掌控吗？<br/>\n                你觉得你能事无巨细吗？你觉得你 hold 得住吗？ <br/>\n                你能，你就来！！\n            </div>\n            <div class="hr-email">\n                <br/>请发简历到： <span class="pink">xiexiaodong@coding.net</span>\n            </div>\n        </div>\n\n        <div>\n            <p class="job-title">\n                <span class="job-title-name">系统架构师——开发 Coding.net WebIDE</span><span\n                class="job-title-salary">上海 15k-30k</span>\n            </p>\n\n            <div class="job-describtion">\n                我就是想知道你是打从心底里热爱计算机编程吗？<br/>\n                你是一个爱折腾、能折腾的小马达吗？<br/>\n                你是能够熟练掌握 Linux 操作系统吗？<br/>\n                你是有大规模分布式系统开发的经验吗？ <br/>\n                你是对新技术充满了求知欲和探索欲吗？<br/>\n                你是拥有良好的语言沟通能力吗？<br/>\n                </br>如果你是，你为什么还不来？！！！你不知道小猴子们一直在等你吗？！！\n            </div>\n            <div class="hr-email">\n                <br/>请发简历到： <span class="pink">xiexiaodong@coding.net</span>\n            </div>\n        </div>\n    </div>\n</script>\n\n<script type="text/tpl" id="shanghai-product">\n    <div>\n        <div>\n            <p class="job-title">\n                <span class="job-title-name">项目经理</span><span\n                class="job-title-salary">上海  8k-16k</span>\n            </p>\n\n            <div class="job-describtion">\n                悬赏（Coding 码市 <a href="https://mart.coding.net" target="_blank">https://mart.coding.net</a>）任务来啦！快去沟通需求，快去编写文档，快去协调开发与设计，快去跟进项目进度！<br/>\n                <br/>只要你有一定的软件开发技术背景，只要你愿意尽心尽力、不厌其烦、雷厉风行、细致认真的满足客户的心愿！那你就是我们心仪的项目经理！\n            </div>\n            <div class="hr-email">\n                <br/>请发简历到： <span class="pink">xiexiaodong@coding.net</span>\n            </div>\n        </div>\n    </div>\n\n</script>\n\n<script type="text/tpl" id="beijing-market">\n    <div>\n        <div>\n            <p class="job-title">\n                <span class="job-title-name">市场推广</span><span\n                class="job-title-salary">北京  6k-10k</span>\n            </p>\n\n            <div class="job-describtion">\n                Hi，知道吗，我们北京区也招“小猴子”啦。<br/>\n                如果你卖的了萌、犯得了二，做起事情来还一丝不苟<br/>\n                如果你玩儿的了游戏、撑得起 party，还能一本正经的做深入沟通<br/>\n                如果你想得出点子、写得了一手好文案，还能雷厉风行的落实<br/>\n                <br/>那么，I Want You!Just You!<br/>\n                来跟我们一起嗨翻全场吧！\n            </div>\n            <div class="hr-email">\n                <br/>请发简历到： <span class="pink">xiexiaodong@coding.net</span>\n            </div>\n        </div>\n    </div>\n\n</script>\n\n<!-- html teplates end-->'),
            $templateCache.put("app/about/privacy.html", '<style>\n  #piracy {\n    padding: 0 40px;\n    line-height: 200%;\n    background-color: #fff;\n    width: 70%;\n    margin: 0 auto;\n  }\n  #piracy .bottom {\n    padding-bottom: 20px;\n  }\n  #piracy hr {\n    border:none;border-top:1px solid #ccc;\n  }\n  #piracy h3 {\n    text-align: center;\n    margin: 0 auto;\n    padding: 20px 0;\n    font-size: 24px;\n    line-height: 36px;\n    margin-top: 20px;\n  }\n  #piracy .first {\n    padding: 0 20px;\n  }\n  #piracy p {\n    margin: 12px 0;\n    text-indent:35px;\n    font-size: 14px;\n  }\n  #piracy ol > li {\n    font-size: 18px;\n  }\n  #piracy strong {\n    font-size: 18px;\n  }\n  #piracy ol > li > ul {\n    background-color: #f8f6f2;\n    list-style-type: none;\n    padding: 10px;\n    margin: 20px 40px;\n  }\n  #piracy ol > li > .small > li {\n    font-weight: normal;\n  }\n  #piracy ol > li > ul > li {\n    font-size: 12px;\n    font-weight: bold;\n  }\n  #piracy ol > li > ul > li > p {\n    font-size: 12px;\n    line-height: 18px;\n    font-weight: normal;\n  }\n</style>\n<div id="piracy">\n  <h3>隐私策略</h3>\n\n  <hr>\n\n  <p class="first">\n    欢迎使用 Coding —— 云端软件开发平台，包括代码托管，运行空间，质量控制，项目管理等等。Coding 由深圳市扣钉网络科技有限公司（以下简称“扣钉网络”）开发运营。\n  </p>\n\n  <p class="first">\n    我们非常重视您的隐私，专门制定了 Coding 隐私保护制度以保护您的隐私。此隐私策略适用于 Coding 所有显示此隐私策略的网站、移动应用、产品和服务收集的信息（包括可能由 Coding 离线提供的产品和服务）。此隐私策略适用于扣钉网络当前提供的所有 Coding 产品和服务。\n  </p>\n\n  <p class="first">\n    访问 Coding 的网站，或者使用或购买 Coding 提供的产品和服务，即表示您接受此隐私策略所述惯例，并同意 Coding 按照此隐私策略所述方式使用您的信息。在您使用 Coding 提供的服务前，请您仔细阅读以下声明：\n  </p>\n\n  <ol>\n    <li>\n      <strong>Coding收集的信息</strong>\n      <p>\n        Coding 可能向您收集有关您的身份、您在 Coding 上创建/加入的项目信息，以及您对 Coding 产品的个人喜好方面的信息。我们通常可能收集的身份信息包括：姓名、电子邮件地址、电话号码、IP 地址；项目信息包括：项目名称、Logo（或商标、企业标识）、项目介绍、项目相关文件、服务使用状态的相关信息，以及您在购买过程中可能会涉及到的账户信息。\n      </p>\n      <p>\n        Coding 可能会采用多种不同方式来接收和收集您的个人信息。这些方式可能包括：\n      </p>\n      <p>\n        <ul>\n          <li>\n            - 来自您的信件\n            <p>\n              您给我们发送电子邮件或写信时，可能会在邮件中提供您的项目信息、您的姓名、联系详细信息以及其他个人信息。\n            </p>\n          </li>\n          <li>\n            - 用户支持\n            <p>\n              您在打电话或发电子邮件给我们请求产品方面的技术帮助或索取有关我们产品的信息时，可能向我们提供项目和个人信息。\n            </p>\n          </li>\n          <li>\n            - 产品注册\n            <p>\n              注册 Coding 产品时，系统会要求您提供信息，以便我们将您记录为 Coding 产品的所有者，从而有助于我们为您提供服务和信息。\n            </p>\n          </li>\n          <li>\n            - 购买\n            <p>\n              如果您希望通过我们的在线支付系统订购 Coding 产品，我们将需要足够的信息才能完成您的订购，这些信息包括您企业/团队的银行账户信息，个人的信用卡信息，或者其他电子支付手段的信息。\n            </p>\n          </li>\n          <li>\n            - 简历\n            <p>\n              您为应聘 Coding 工作岗位并为此提交简历时，我们将获得您的个人信息，但我们只会将这些信息用于评估您是否有能力成为 Coding 的员工。\n            </p>\n          </li>\n        </ul>\n      </p>\n    </li>\n    <li>\n      <strong>Coding 收集信息的用途</strong>\n      <p>Coding 可能将您的个人信息用于以下用途：</p>\n      <p>\n        <ul>\n          <li>\n            - 产品注册\n            <p>\n              您注册时所提供的信息将用于创建您的 Coding 账户和项目，并且在您联系Coding 用户服务部门时， 这些信息还将协助 Coding 为您提供支持。Coding 还将使用这些信息来通知您有关您可能感兴趣的任何升级、新产品、促销或其他信息。\n            </p>\n          </li>\n          <li>\n            - 产品的使用\n            <p>\n              Coding 可能将产品使用中收集的信息用于：定期验证您对产品的使用权利；向您发送新产品/新功能升级的通知前，确认您是否正在使用该产品/功能的较早版本或者是否会对您使用 Coding 有所帮助；以及接收您从 Coding 请求获取的产品内部消息。\n            </p>\n          </li>\n          <li>\n            - 产品购买\n            <p>\n              如果您通过 Coding 的在线支付系统购买产品，Coding 将使用您的信息来处理付款并将产品购买信息发送给您。\n            </p>\n          </li>\n          <li>\n            - 内部分析\n            <p>\n              我们可能会使用您提供给我们的信息进行内部统计和分析，从而评估并增强您对Coding 网站的体验，包括通过识别您的喜好和购买意向，进行营销以及与运营和开发相关的活动。\n            </p>\n          </li>\n        </ul>\n      </p>\n    </li>\n    <li>\n      <strong>自动收集的信息</strong>\n      <p>\n        Coding 允许您存储、发送、接收、编辑、同步、共享或者以其他方式组织或管理文件和文件夹 （包括这些文件夹中存储的任何信息或数据）（以下统称“用户文件”）。 我们可能获得您在 Coding 上储存的所有用户文件的大小，因为我们需要了解您对 Coding 的实际使用情况， 但我们绝不会共享您的任何私有项目文件，也不会有针对性地备份/复制您的私有项目的任何信息和文件。\n      </p>\n    </li>\n    <li>\n      <strong>用户文件</strong>\n      <p>\n        Coding 允许您存储、发送、接收、编辑、同步、共享或者以其他方式组织或管理文件和文件夹 （包括这些文件夹中存储的任何信息或数据）（以下统称“用户文件”）。 我们可能获得您在 Coding 上储存的所有用户文件的大小，因为我们需要了解您对 Coding 的实际使用情况， 但我们绝不会共享您的任何私有项目文件，也不会有针对性地备份/复制您的私有项目的任何信息和文件。\n      </p>\n    </li>\n    <li>\n      <strong>与第三方共享信息</strong>\n      <p>\n        除非第 5 节、第 6 节另有特别规定，否则未经您同意，Coding 不会与第三方共享任何个人信息（例如，通过登录您的用户帐户并选择某选项）。\n      </p>\n      <p>\n        <ul>\n          <li>\n            - 内部运营\n            <p>\n              我们可能与独立审计师共享您向我们提供的信息，实现与我们的内部业务运营相关的收入审计目的，前提是此类审计公司必须遵守此隐私策略。\n            </p>\n          </li>\n          <li>\n            - 服务提供商\n            <p>\n              我们有时会雇用其他公司代表我们提供服务，比如处理交易、邮件的处理和寄送、提供用户支持、托管网站或者针对我们的产品或服务进行统计分析。我们有时需要将您企业/团队和个人的信息与其他公司共享，以便这些公司能够提供适用的服务。我们仅向这些公司提供其向您提供服务所需的信息，但未授权这些公司将您的信息用于Coding 之外的任何其他用途。\n            </p>\n          </li>\n        </ul>\n      </p>\n    </li>\n    <li>\n      <strong>法定披露</strong>\n      <p>\n        虽然我们会尽最大努力保护用户隐私，但当我们有理由相信只有公开个人信息才能遵循现行司法程序、法院指令或其他法律程序或者保护 Coding、Coding 用户或第三方的权利、财产或安全时，我们可能披露个人信息。\n      </p>\n    </li>\n    <li>\n      <strong>安全</strong>\n      <p>\n        我们会采取合理的实际及电子手段以及规程保障措施来保护您的企业/团队和个人信息。虽然通过因特网信息传输数据并非 100% 安全，但我们已经采取并将继续采取商业范畴内合理的努力来确保您的个人信息得到保护。\n      </p>\n    </li>\n    <li>\n      <strong>加密</strong>\n      <p>\n        Coding所有的数据都基于 SSL/HTTPS 传输，保证数据畅通且安全。严格的数据备份制度，保证每小时、每天和每周都会执行严格的数据备份工作。\n      </p>\n    </li>\n    <li>\n      <strong>COOKIE</strong>\n      <p>\n        Cookie是仅限文本的信息字符串，网站会将这些字符串传输到计算机硬盘上浏览器的 Cookie 文件中，以便网站能够记住您的身份信息以及其他详细信息。Cookie 可能由网站设置或来源自第三方，比如广告商。Cookie 本身不用于或意图用于从用户的计算机读取任何信息（Cookie 本身的内容除外）。Cookie 只是网站所使用的最初将其放置在您硬盘上的标识符。同一台服务器可以检索到 Cookie 信息的实际内容，从而标识计算机并进而根据主服务器上存储的信息自定义、跟踪或控制站点的使用情况。\n      </p>\n      <p>\n        我们可能会在 Coding 网站上使用 Cookie 。使用 Cookie，我们便能进行自动访问和使用我们网站的数据输入功能，以及在网站（如果有）上根据您的喜好或兴趣定制网站，或者自定义促销或营销活动时，关联您所进行的购买活动的在线订购信息。此外，我们还可以通过 Cookie 跟踪我们网站的使用情况，从而确定哪些功能有用或受欢迎，哪些功能并不能帮助我们有效地改进和更新我们的服务。大多数网络浏览器都会向您发出有关使用 Cookie 的提醒，或者完全拒绝接受 Cookie。您可以通过修改浏览器设置， 接受或拒绝 Cookie。但是，如果禁用 Cookie，您就不能使用此网站的各项交互功能。\n      </p>\n    </li>\n    <li>\n      <strong>链接</strong>\n      <p>\n        我们网站上可能会提供某些链接，这些链接可能指向我们选择的提供共同品牌产品的第三方或者我们认为有助于您更好地使用 Coding 服务的其他网站。 第三方网站不受此隐私策略的约束，Coding 不对这些网站处理您的个人信息的相关做法进行任何说明。建议您在开始访问这些网站之前查阅其隐私策略，确定其隐私保护惯例。\n      </p>\n    </li>\n    <li>\n      <strong>有害信息的过滤和删除</strong>\n      <p>Coding禁止用户创建和储存一切有害信息，包括：</p>\n      <ul class="small">\n        <li>（1） 违反中国宪法确定的基本原则的；</li>\n        <li>（2） 危害国家安全，泄露国家秘密，颠覆国家政权，破坏国家统一的；</li>\n        <li>（3） 损害国家荣誉和利益，攻击党和政府的；</li>\n        <li>（4） 煽动民族仇恨、民族歧视，破坏民族团结的；</li>\n        <li>（5） 破坏国家、地区间友好关系的；</li>\n        <li>（6） 违背中华民族传统美德、社会公德、论理道德、以及社会主义精神文明的；</li>\n        <li>（7） 破坏国家宗教政策，宣扬邪教和封建迷信的；</li>\n        <li>（8） 散布谣言或不实消息，扰乱社会秩序 ，破坏社会稳定的；</li>\n        <li>（9） 煽动、组织、教唆恐怖活动、非法集会、结社、游行、示威、聚众扰乱社会秩序的；</li>\n        <li>（10） 散布淫秽、色情、赌博、暴力、恐怖或者教唆犯罪的；</li>\n        <li>（11） 侮辱或诽谤他人，侵害他人合法权益的；</li>\n        <li>（12） 侵犯他人肖像权、姓名权、名誉权、隐私权或其他人身权利的；</li>\n        <li>（13） 使用漫骂、辱骂、中伤、恐吓、诅咒等不文明语言的；</li>\n        <li>（14） 以非法民间组织名义活动的；</li>\n        <li>（15） 侵犯他人著作权、信息网络传播权等合法权益的；</li>\n        <li>（16） 含有法律、行政法规禁止的其他内容的。</li>\n      </ul>\n      <p>\n        扣钉网络将针对以上信息制定过滤和屏蔽机制，如用户在 Coding 创建项目，发布信息或储存文件时不能履行和遵守协议中的规定，扣钉网络有权对违反协议的用户做出关闭账户处理，同时保留依法追究当事人法律责任的权利。此外，扣钉网络在采取移除等相应措施后不为此向原发布人承担违约责任或其他法律责任。扣钉网络依据本协议约定获得处理违法违规内容的权利，该权利不构成扣钉网络的义务或承诺，扣钉网络不能保证及时发现违法行为或进行相应处理。\n      </p>\n    </li>\n    <li>\n      <strong>信息的访问、修改和准确性</strong>\n      <p>\n        我们采取了一些合理步骤来确保我们从您那里收到的信息正确无误且始终为最新。您有权访问您的公司/团队和个人信息，来验证其准确性，并纠正不准确的信息。您可以使用电子邮件地址和密码通过Coding网站登录您的帐户并单击“个人设置”， 随时更改您的信息。您也可以通过 <img src="/static/c07397bfc519f4b688852ffb2df6e618.png" style="height: 16px;vertical-align: middle;opacity: 0.89"> 与我们联系，访问并纠正个人信息中的错误。如果您不想获得有关产品、服务或营销计划的信息，或者希望从任何直接营销计划、企业调查、电话营销、直邮或电子邮件列表中删除您的信息，或者想限制我们对您的个人信息的使用或披露，请通过 <img src="/static/c07397bfc519f4b688852ffb2df6e618.png" style="height: 16px;vertical-align: middle;opacity: 0.89"> 与我们联系。\n      </p>\n    </li>\n    <li>\n      <strong>业务转让</strong>\n      <p>\n        Coding收集的信息将被视作一项资产。如果 Coding、任何附属公司、部门或部分资产被另一家公司收购，则此类信息可能成为被转让资产之一。如果情况如此，收购方公司只能按照此隐私策略（或者向您收集信息时有效的任何后续策略）使用您的信息。 请注意，转让后提交或收集的信息可能必须遵守收购方公司所采用的新隐私策略。\n      </p>\n    </li>\n    <li>\n      <strong>国际传输</strong>\n      <p>\n        您的信息可能被传送到或存储在您所在国家/地区、省/市/自治区或其他政府管辖区域以外的地方，这些地方的隐私法律对您的个人信息的保护程度可能低于您所在的管辖区域。如果您位于中华人民共和国以外，您应知悉，Coding 可能将您的个人信息传输到中国并在中国进行处理。提交此类信息，即表示您同意此隐私策略，进而表示您同意进行此类传输。\n      </p>\n      <p>\n        我们始终致力于改善我们的业务和运营。因此，我们的策略将不断完善。鉴于此，Coding 保留不时修改此隐私策略的权利。对此策略的更改将发布在 Coding.net 网站上。我们欢迎您不时访问我们的隐私策略页面，来查看最新隐私策略。如果我们对此隐私策略进行实质性更改，扩展了我们使用您的公司/团队和个人信息的权利，我们将通过电子邮件或者在我们网站上的显著位置告知您并征求您的同意。\n      </p>\n    </li>\n    <li>\n      <strong>与我们联系</strong>\n      <p>\n        请将您对您的信息的任何访问请求、信息修改请求或有关此策略的问题发送至以下电子邮件地址：<img src="/static/c07397bfc519f4b688852ffb2df6e618.png" style="height: 16px;vertical-align: middle;opacity: 0.89">\n      </p>\n    </li>\n  </ol>\n  <hr>\n  <p class="bottom">最后更新：2014 年 6 月1日</p>\n</div>\n<div ng-include="\'app/layout/footer.html\'"></div>'),
            $templateCache.put("app/about/terms.html", '<style>\n  #terms {\n    padding: 0 40px;\n    line-height: 200%;\n    background-color: #fff;\n    width: 70%;\n    margin: 0 auto;\n  }\n  #terms .bottom {\n    padding-bottom: 20px;\n  }\n  #terms hr {\n    border:none;border-top:1px solid #ccc;\n  }\n  #terms h3 {\n    text-align: center;\n    margin: 0 auto;\n    padding: 20px 0;\n    font-size: 24px;\n    line-height: 36px;\n    margin-top: 20px;\n  }\n  #terms .first {\n    padding: 0 20px;\n  }\n  #terms p {\n    margin: 12px 0;\n    text-indent:35px;\n    font-size: 14px;\n  }\n  #terms ol > li {\n    font-size: 18px;\n  }\n  #terms strong {\n    font-size: 18px;\n  }\n  #terms ol > li > ul {\n    background-color: #f8f6f2;\n    list-style-type: none;\n    padding: 10px;\n    margin: 20px 40px;\n  }\n  #terms ol > li > ul > li {\n    font-size: 12px;\n  }\n</style>\n<div id="terms">\n  <h3>服务条款</h3>\n  <hr>\n\n  <p class="first">\n    欢迎使用 Coding —— 云端软件开发平台，包括代码托管，运行空间，质量控制，项目管理等等。Coding 由深圳市扣钉网络科技有限公司（以下简称“扣钉网络”）开发运营。本服务条款是您与扣钉网络之间的协议，并在必要的时候进行修订，且无需另行通知。修订后的条款一旦在网页上公布即有效代替原来的服务条款。\n  </p>\n\n  <ol>\n    <li>\n      <strong>本网站的使用</strong>\n      <p>\n        扣钉网络许可您在您的计算机设备上浏览（使用）本网站展示的内容。您在使用 Coding 之前需要注册 Coding 的账户，同时您需要仔细阅读 Coding的《隐私策略》和《服务条款》，并在充分阅读和理解了相关协议的约定后提交必要的个人及企业/团队信息完成注册。 扣钉网络因此获取的与您个人及您企业/团队相关的任何信息均将依照《隐私策略》中的相关条款安全使用。\n  使用 Coding 是免费的，但不包括我们推出的高级/付费功能。\n      </p>\n      <p>\n        如果您有意愿使用 Coding 的某些付费服务，这将表示您同意支付其中的所有费用。在您提交使用付费产品的申请后，扣钉网络将提供经我们认可的第三方在线服务机构的支付方式，并要求您支付相关费用。成功支付后，表明您已经获得使用付费服务的权利并且已经达成此项交易，除非因扣钉网络的原因导致服务无法正常提供，否则我们将不退还您已经支付的服务费。\n      </p>\n      <p>\n        此外，由于您违反了《隐私策略》或者《服务条款》的相关规定而导致账户不可用，扣钉网络将不会退还付费产品的服务费。\n      </p>\n      <p>\n        以下行为是我们坚决反对和禁止的：\n      </p>\n      <ul>\n        <li>\n          （1） 使用Coding的通信功能发送垃圾信息、频繁骚扰其他用户和造成用户反感的行为。\n        </li>\n        <li>\n          （2） 对网站服务器进行恶意攻击， 或者采取恶意手段使用 Coding，造成服务器异常。\n        </li>\n        <li>\n          （3） 使用 Coding 从事非法活动或者为非法活动提供帮助。\n        </li>\n      </ul>\n      <p>\n        如果您采取了上述行为，我们有权终止/暂停您使用 Coding 的权利，并将视该行为引起后果的严重性追究责任，并保留通过法律途径追偿合理损失的权利。\n      </p>\n    </li>\n    <li>\n      <strong>知识产权声明</strong>\n      <p>\n        本网站，包括(但不仅限于) 文字，内容，软件，录像，音乐，声音，图形，照片，图表，美术设计，图片，名称，标识，商标和/或服务标志（包括已注册和未注册的），以及其他资料（以下简称网站内容）都受到版权法，商标法和一切知识产权公约的保护。未经扣钉网络、用户或相关权利人书面许可， 任何人不得以任何形式进行使用或创造相关衍生作品。本网站内容包括扣钉网络所有或控制下的内容和第三方所有或控制下，并授权扣钉网络使用的内容。所有代码，文章，讨论等一切构成本网站的元素都可能是受版权保护的作品。您同意遵守所有适用本网站的版权保护法律法规，以及所有本网站包含的补充性的版权说明或限制。本网站的内容均由相应的机构/个人上传、维护。对于本站内容的任何使用请遵守内容所附带的授权协议。如不清楚相应的授权协议请询问上传该内容的机构/个人。\n      </p>\n      <p>\n        任何在 Coding 上注册的账号上传的内容的版权均归上传者所有，上传者承担所有被上传内容的版权责任。扣钉网络有权在其拥有的网站上，展示上传者上传到本网站公共区域的内容。\n      </p>\n    </li>\n    <li>\n      <strong>个人信息的保护</strong>\n      <p>\n        扣钉网络尊重访问本网站的任何个人的隐私信息。当您访问本网站的时候可能被要求提供您个人的基本资料(如姓名、电子邮件、电话号码等)，您可以自行选择是否提供。对于您提供的个人信息，扣钉网络将根据中华人民共和国相关法律进行保密并严格保管，不会将这些信息以任何方式提供或展示给任何第三方，但下述情况除外：\n      </p>\n      <ul>\n        <li>\n          （一） 当司法机关或行政机关依照法定程序和法定职权要求本网站披露个人资料时，我们将依法提供相关资料。对于此情况下的任何披露，本网站均得免责；\n        </li>\n        <li>\n          （二） 对于任何由黑客攻击、计算机病毒侵入或发作、或政府管制而造成的暂时性关闭等影响网站正常运营的不可抗力事件所造成的个人资料的泄露、丢失、被盗用或被篡改等，本网站均得免责；\n        </li>\n        <li>\n          （三） 对于用户将个人密码告知他人或与他人共享注册帐号所导致的任何个人资料泄露，丢失、被盗用或被篡改等,本网站不负任何责任；\n        </li>\n        <li>\n          （四） 对于与本网站链接的任何其它网站的个人资料泄露，丢失、被盗用或被篡改等事件，本网站不负任何责任。\n        </li>\n      </ul>\n    </li>\n    <li>\n      <strong>不可抗力及免责</strong>\n      <p>\n        您理解并同意，在使用本服务的过程中，可能会遇到不可抗力等风险因素，使本服务发生中断。 不可抗力是指不能预见、不能克服并不能避免且对一方或双方造成重大影响的客观事件，包括但不限于自然灾害如洪水、地震、瘟疫流行和风暴等以及社会事件如战争、动乱、政府行为等。出现上述情况时，扣钉网络将努力在第一时间与相关单位配合，及时进行修复，但是由此给您造成的损失，扣钉网络在法律允许的范围内免责。\n      </p>\n      <p>\n        在法律允许的范围内，扣钉网络对以下情形导致的服务中断或受阻不承担责任：\n      </p>\n      <ul>\n        <li>\n          （1）受到计算机病毒、木马或其他恶意程序、黑客攻击的破坏；\n        </li>\n        <li>\n          （2）用户或扣钉网络的电脑软件、系统、硬件和通信线路出现故障\n        </li>\n        <li>\n          （3）用户操作不当\n        </li>\n        <li>\n          （4）用户通过非扣钉网络授权的方式使用本服务\n        </li>\n        <li>\n          （5）其他扣钉网络无法控制或合理预见的情形\n        </li>\n      </ul>\n      <p>\n        您理解并同意，本服务并非为某些特定目的而设计，包括但不限于核设施、军事用途、 医疗设施、交通通讯等重要领域。如果因为软件或服务的原因导致上述操作失败而带来的人员伤亡、财产损失和环境破坏等， 扣钉网络不承担法律责任。\n      </p>\n    </li>\n    <li>\n      <strong>生效与终止</strong>\n      <p>\n        使用扣钉网络的服务即视为您已阅读本协议并接受本协议的约束。扣钉网络有权在必要时修改本协议条款，您可以在相关服务页面查阅最新版本的协议条款。本协议条款变更后，如果您继续使用扣钉网络提供的软件或服务，即视为您已接受修改后的协议。 如果您不接受修改后的协议，应当停止使用扣钉网络提供的软件或服务。扣钉网络可能会对服务内容进行变更，也可能会中断、中止或终止服务。\n      </p>\n      <p>\n        如发生下列任何一种情形，扣钉网络有权不经通知而中断或终止向您提供的服务：\n      </p>\n      <ul>\n        <li>\n          （1）根据法律规定您应提交真实信息，而您提供的个人资料不真实、或与注册时信息不一致又未能提供合理证明；\n        </li>\n        <li>\n          （2）您违反相关法律法规或本协议的约定；\n        </li>\n        <li>\n          （3）按照法律规定或主管部门的要求；\n        </li>\n        <li>\n          （4）出于安全的原因或其他必要的情形。\n        </li>\n        </ul>\n      <p>\n        若您使用了扣钉网络提供的付费服务，但您未按时足额付费，扣钉网络有权中断、中止或终止提供相关服务。\n      </p>\n    </li>\n    <li>\n      <strong>准据法和管辖权</strong>\n      <p>\n        本网站内容及本使用条款的解释和适用均适用中华人民共和国法律，由于使用本网站而产生的一切纠纷，除另有约定，均由中华人民共和国(扣钉网络所在地)人民法院管辖。如果本使用条款中的部分条款被有关机关认定为无效，则此无效部分并不影响本使用条款其他部分的效力，其他部分仍然有效。\n      </p>\n    </li>\n    <li>\n      <strong>其他</strong>\n      <p>\n        如果您对本协议或本服务有意见或建议，可与扣钉网络客户服务部门联系，联系方式为：<img src="/static/c07397bfc519f4b688852ffb2df6e618.png" style="height: 16px;vertical-align: middle;opacity: 0.89"> ，我们会给予您必要的帮助。\n      </p>\n    </li>\n  </ol>\n  <hr>\n  <p class="bottom">最后更新：2014年6月1日</p>\n</div>\n<div ng-include="\'app/layout/footer.html\'"></div>'),
            $templateCache.put("app/attachment/attachment.html", '<style type="text/css">\n#inner-menu{width:240px;}\n#attachment{margin-left:210px !important;}\n#create_folder{margin:10px 25px;padding:0;border:1px dashed #CCC;background:#fff;text-align:center;}\n#attachment .attachment{position:relative;font-size:13px;}\n#attachment .attachment:hover{background:#FFF !important;}\n#attachment .attachment .filename{width:auto;line-height:45px;cursor: pointer;}\n#attachment .attachment.uploading .filename{cursor: not-allowed;}\n#attachment .attachment .filename img{float:left;margin-right:5px;}\n#attachment .attachment .size{color:#999;width:110px;padding-right:20px;text-align:right;}\n#attachment .attachment .uploader{position:relative;line-height:45px;padding-left:45px;width:150px;}\n#attachment .attachment .uploader img{position:absolute;left:0;top:17px;}\n#attachment .attachment .time{width:125px;padding:0;}\n#attachment .attachment .process,\n#attachment .attachment .action{width:150px;font-size:18px;position: relative;}\n#attachment .attachment .action > a{float:right;margin-right:10px;}\n#upload-attachment input[type=file],#attachment input[type=file]{display:none;position:absolute;top:0;right:0;margin:0;opacity:0;-ms-filter:\'alpha(opacity=0)\';font-size:200px;direction:ltr;cursor:pointer;z-index:2;}\n#attachment .attachment .action .icon{opacity: 0;margin-right:5px;\n    -webkit-transition: opacity 0.2s ease-in;\n    -moz-transition: opacity 0.2s ease-in;\n    -ms-transition: opacity 0.2s ease-in;\n    -o-transition: opacity 0.2s ease-in;\n    transition: opacity 0.2s ease-in;\n    color:#666;\n}\n#attachment .attachment:hover .action .icon{opacity: 1;margin-right:5px;}\n#attachment .attachment .icon:hover {color:#000;}\n#attachment .attachment .remove-file.icon{position: absolute;top:24px; right:-15px;}\n\n#inner-menu .count{position: absolute;right: 28px;}\n#inner-menu > .no-defaults > .folder.no-default.editing .count{display:none;}\n#inner-menu > .no-defaults > .folder.item i.action.icon{cursor:pointer;margin:0 0 0 3px;display:none;}\n#inner-menu >  .no-defaults > .folder.active.item:hover i.action.icon{display:inline;}\n#inner-menu >  .no-defaults > .folder.active.item i.action.edit.icon:hover{color:cornflowerblue;}\n#inner-menu > .no-defaults > .sub_folders > .folder.item.sub_item.editing > .count{display: none}\n#inner-menu > .no-defaults > .folder.no-default.editing .count{display:none;}\n#inner-menu > .no-defaults > .folder.item i.action.icon{cursor:pointer;margin:0 0 0 3px;display:none;}\n#inner-menu >  .no-defaults > .folder.active.item:hover i.action.icon{display:inline;}\n#inner-menu >  .no-defaults > .folder.active.item i.action.edit.icon:hover{color:cornflowerblue;}\n#inner-menu > .no-defaults > .sub_folders > .folder.item i.action.icon{cursor:pointer;margin:0 0 0 3px;display:none;}\n#inner-menu > .no-defaults > .sub_folders > .folder.item.sub_item:hover i.action.icon{display:inline}\n#inner-menu > .no-defaults > .sub_folders > .folder.item.sub_item:hover i.action.edit.icon:hover{color:cornflowerblue;}\n\n#attachment .attachment .filename img {\n    float: left;\n    margin-right: 5px;\n    border: 2px solid #fff;\n}\n\n#inner-menu .folder .folder-editor{\n    width: 130px;\n    position: absolute;\n    top: -6px;\n    left: 18px;\n    outline: none;\n    border: 1px solid #ddd;\n    padding: 3px;\n}\n\n#inner-menu .sub_folders {\n    background: rgba(0,0,0,.03);\n}\n\n#inner-menu .item {\n    margin: 0;\n    padding: 11px 8px 11px 22px;\n    cursor: pointer;\n    position: static;\n    font-size: 14px;\n    line-height: 1.2em;\n}\n#inner-menu .item.active {\n    box-shadow: none;\n}\n#inner-menu > .folder.item.default-folder > i {\n    float:none;\n    margin:0px 4px 0px 0px;\n}\n#inner-menu > .no-defaults > .sub_folders > a.item.sub_item {\n    margin:6% 14%;\n    padding:3% 16%;\n    border:1px dashed #CCC;\n    background: #fff;\n    font-size:12px;\n    display: inline-block;\n    text-align: center;\n    width: 74%;\n}\n#inner-menu .edit_mode {\n    position: relative;\n    display: inline-block;\n    height: 16px;\n}\n#inner-menu > .no-defaults > .sub_folders > .folder.item.sub_item.open{color:#000;}\n\n</style>\n<div class="ui secondary vertical fixed menu active" id="inner-menu">\n    <header class="header item">\n        <span ng-if="current_app == \'project\'">项目文件</span>\n        <span ng-if="current_app == \'group\'">群组文件</span>\n    </header>\n    <div class="folder item default-folder" href="javascript:void(0);" ng-click="openFolder(0, $event);" ng-class="{active: folder_id == \'default\'}" style="border-radius:0">\n        <i class="folder icon" ng-class="{open: folder_id == \'default\'}"></i>默认文件夹\n        <span class="count">({{default_folder_count || 0}})</span>\n    </div>\n    <div ng-repeat="folder in folders" class="no-defaults">\n        <div class="folder item no-default" id="edit-folder-{{folder.file_id}}" ng-class="{active: current_folder.file_id == folder.file_id, editing: !!folder.editing}" ng-click="openFolder(folder, $event);" cg-not-click="folder.editing && updateFolderName(folder);" not-click-class="#edit-folder-{{folder.file_id}}, #edit-folder-{{folder.file_id}} *" not-click-when="folder.editing">\n            <span ng-show="!folder.editing" title="{{folder.name}}" class="ellipsis" style="width: 156px;display: inline-block">\n                <i class="folder icon" ng-class="{open: current_folder.file_id == folder.file_id}"></i><span ng-bind-html="folder.name"></span>\n            </span>\n            <span ng-show="folder.editing" class="edit_mode">\n                <i class="folder icon" ng-class="{open: folder_id == folder.file_id}" style="margin-right:0"></i>\n                <input id="folder-editor-{{folder.file_id}}" ng-model="folder.name" class="ui input folder-editor" cg-enter="updateFolderName(folder);">\n            </span>\n            <i ng-hide="!folder.editing" class="action red trash icon" ng-click="removeFolder($event, folder);"></i>\n            <i ng-hide="folder.editing" class="action edit icon" ng-click="setFolderEditable($event, folder);"></i>\n            <span class="count">({{folder.count || 0}})</span>\n        </div>\n        <div class="sub_folders" ng-if="current_folder.file_id == folder.file_id">\n            <span class="folder item sub_item" ng-repeat="sub_folder in folder.sub_folders" id="edit-folder-{{sub_folder.file_id}}" ng-class="{editing: !! sub_folder.editing, open: current_sub_folder.file_id == sub_folder.file_id}" ng-click="openFolder(sub_folder, $event, true)" cg-not-click="sub_folder.editing && updateFolderName(sub_folder)" not-click-class="#edit-folder-{{sub_folder.file_id}}, #edit-folder-{{sub_folder.file_id}} *" not-click-when="sub_folder.editing">\n                <span ng-show="!sub_folder.editing" title="{{sub_folder.name}}" style="margin-left:8px">\n                    <i class="folder icon" ng-class="{open: current_sub_folder.file_id == sub_folder.file_id}"></i>\n                    <span class="ellipsis" style="display:inline-block;width:120px">{{sub_folder.name}}</span>\n                </span>\n                <span ng-show="sub_folder.editing" class="edit_mode" style="margin-left:8px">\n                    <i class="folder icon" ng-class="{open: current_sub_folder.file_id == sub_folder.file_id}" style="margin-right:0"></i>\n                    <input id="folder-editor-{{sub_folder.file_id}}" ng-model="sub_folder.name" style="width: 122px" class="ui input folder-editor" cg-enter="updateFolderName(sub_folder);">\n                </span>\n                <i ng-hide="!sub_folder.editing" class="action red trash icon" ng-click="removeFolder($event, sub_folder, true);"></i>\n                <i ng-hide="sub_folder.editing" class="action edit icon" ng-click="setFolderEditable($event, sub_folder);"></i>\n                <span class="count">({{sub_folder.count || 0}})</span>\n            </span>\n            <a class="item sub_item" ng-show="!editing && current_folder.file_id == folder.file_id" ng-click="createFolder(folder.file_id);">\n                <i class="add icon"></i>添加子文件夹\n            </a>\n        </div>\n    </div>\n    <a class="item" ng-if="folder_loading">\n        <i class="loading icon"></i>正在加载文件夹...\n    </a>\n    <a class="item" id="create_folder" ng-show="!editing" ng-click="createFolder(0);" style="margin: 10px 23px">\n        <i class="add icon"></i>添加文件夹\n    </a>\n    <div class="scroll-holder"></div>\n</div>\n\n<div class="container" id="attachment" ng-include="current_template">\n</div>'),
            $templateCache.put("app/attachment/create.html", '<cg-file-editor cg-file-editor-project-id="PROJECT.id" cg-file-editor-file-id="file_id" cg-file-editor-view="detail" cg-file-editor-type="editor_type" cg-file-editor-action="action">\n</cg-file-editor>'),
            $templateCache.put("app/attachment/list.html", '<style type="text/css">\n#upload-attachment {overflow:hidden;}\n\n.project-attachments .attachment .filename{cursor: pointer;}\n.project-attachments .attachment .filename img,\n.project-attachments .attachment .filename .file-icon {\n    float: left;\n    margin-right: 5px;\n    width: 45px;\n    height: 45px;\n    text-align: center;\n    -webkit-background-size: contain;\n    background-position: 50% 50%;\n    background-size: contain;\n    box-sizing: border-box;\n    line-height: 45px;\n    font-weight: bolder;\n    cursor: pointer;\n}\n\n.project-attachments .attachment.uploading .filename .file-icon{\n    cursor: not-allowed;\n}\n\n.project-attachments .attachment > .checkbox{\n    text-align: center;\n    font-size: 18px;\n    width: 30px;\n    cursor:pointer;\n}\n\n#move-folder i.folder.icon{margin-right:5px;}\n\n.file-upload-zone{\n    margin:20px 0;\n    position: relative;\n    border:2px dashed #CCC;\n    height:auto;\n    width: 100%;\n    cursor: pointer;\n    overflow: hidden;\n    font-size:14px;\n    border-radius:5px;\n    padding: 80px!important;\n}\n.file-upload-zone:hover{\n    border:2px dashed #A1CF64;\n    color:#A1CF64;\n}\n#move-folder > .menu .item{border:none;}\n#move-folder > .menu > .no-defaults > .item.sub_item span{display:inline-block;margin-left:10px}\n#move-folder .current {color:#999;}\n#move-folder .current:hover {background: #fff;cursor:default;}\n#edit_action {margin-top:0}\n#edit_action .icon{margin-right:0}\n</style>\n<div class="coding ui dividing header">\n    <div class="actions" id="edit_action">\n        <div ng-show="editable_mode">\n            <a href="javascript:void(0);" class="ui default white button" ng-click="checkAll();" ng-class="{gray:check_all}">\n                <span ng-if="!check_all">全选</span>\n                <span ng-if="check_all">取消全选</span>\n            </a>\n            <div class="ui dropdown item add" id="move-folder" cg-dropdown ng-show="folders.length>0">\n                <div class="menu" style="width:210px;height:350px!important;overflow-y: auto">\n                    <div class="item" href="javascript:void(0);" ng-click="moveFileTo(0);" ng-show="folder_id !== \'default\' && folder_id != 0">\n                        <i class="folder icon"></i>默认文件夹\n                    </div>\n                    <div class="no-defaults" ng-repeat="folder in folders">\n                        <div class="item" ng-class="{current:current_folder.file_id == folder.file_id && !in_sub}" ng-click="moveFileTo(folder.file_id);">\n                            <span><i class="folder icon"></i>{{folder.name}}</span>\n                        </div>\n                        <div class="item sub_item" ng-class="{current:current_sub_folder.file_id == sub_folder.file_id && in_sub}" ng-repeat="sub_folder in folder.sub_folders" ng-click="moveFileTo(sub_folder.file_id);">\n                            <span><i class="folder icon"></i>{{sub_folder.name}}</span>\n                        </div>\n                    </div>\n                </div>\n                <a class="ui default white button item">\n                    <i class="folder icon"></i>移动到...\n                </a>\n            </div>\n            <a class="ui default red button" href="javascript:void(0);" ng-click="deleteSelected();">\n                <i class="trash icon"></i>删除\n            </a>\n            <a class="ui default green button" href="javascript:void(0);" ng-click="toggleListEditable();">\n                返回\n            </a>\n        </div>\n        <div ng-show="!editable_mode">\n            <a class="ui default white button" href="javascript:void(0);" ng-show="files.length>0" ng-click="toggleListEditable();" id="make-editable">\n                <i class="edit icon"></i>编辑列表\n            </a>\n            <a class="ui default white button" href="javascript:void(0);" id="upload-attachment" cg-trigger-upload="upload($callback)">\n                <i class="icon" ng-class="{loading: uploading, \'cloud upload\': !uploading}"></i>上传\n            </a>\n            <div class="ui simple dropdown item add">\n                <div class="menu" ng-init="project_path = PROJECT.project_path">\n                    <a class="item" ng-href="{{project_path}}/attachment/{{folder_id}}/create/txt">TXT</a>\n                    <a class="item" ng-href="{{project_path}}/attachment/{{folder_id}}/create/md">Markdown</a>\n                </div>\n                <a class="ui default white button item">\n                    <i class="add icon"></i>创建...\n                </a>\n            </div>\n        </div>\n    </div>\n    <div>\n        <span ng-bind-html="current_folder.name && !in_sub ? current_folder.name : current_sub_folder.name ? current_sub_folder.name : \'默认文件夹\'"></span>\n        <span style="font-size:14px;color:#333" ng-show="editable_mode">（已选 {{selected_file_count}} 个文件）</span>\n    </div>\n</div>\n<div class="empty center list" ng-if="files_loading">\n    <i class="loading icon"></i>正在加载文件列表...\n</div>\n\n<form file-upload="projectAttachmentZoneUploadSetting">\n    <table class="ui basic table project-attachments">\n        <tbody>\n        <tr class="attachment uploading" ng-repeat="file in uploading_files">\n            <td class="checkbox" ng-class="{\'editing\': editable_mode}" ng-show="editable_mode">\n            </td>\n            <td class="filename ellipsis" ng-click="previewFile(file);" width="300px">\n                <a cg-file-icon-src="file.preview" cg-file-icon="suffix(file.name)"></a>\n                <span class="ellipsis" title="{{file.name}}">{{file.name.substring(0,20)}}{{file.name.length>20 ? \'...\' : \'\'}}</span>\n            </td>\n            <td class="size">{{file.size | bytes:2}}</td>\n            <td class="uploader ellipsis">\n                <img class="ui circular image" ng-src="{{USER.avatar}}" width="32" height="32">{{USER.name}}\n            </td>\n            <td class="time">\n                几秒前\n            </td>\n            <td class="process">\n                <div ng-show="!file.fail" file-upload-progress="file.progress" style="font-size:12px">\n                    <i class="loading icon"></i>{{num}}%\n                </div>\n                <a ng-show="file.fail" class="red">上传失败！</a>\n            </td>\n        </tr>\n        <tr class="attachment" ng-repeat="file in files">\n            <td class="checkbox" ng-class="{\'editing\': editable_mode}" ng-show="editable_mode" ng-click="selectFile(file)">\n                <i class="icon" ng-class="{\'empty checkbox\': !file.editing, \'checkmark sign\': file.editing}"></i>\n            </td>\n            <td class="filename ellipsis" ng-click="previewFile(file);" width="300px">\n                <a cg-file-icon-src="file.preview" cg-file-icon="file.fileType"></a>\n                <span class="ellipsis" title="{{file.name}}" ng-bind-html="file.name"></span>\n            </td>\n            <td class="size">{{file.size | bytes:2}}</td>\n            <td class="uploader ellipsis">\n                <a ng-href="{{file.owner.path}}">\n                    <img class="ui circular image" ng-src="{{file.owner.avatar}}" width="32" height="32">{{file.owner.name}}\n                </a>\n            </td>\n            <td class="time">\n                <span cg-friendly-time="file.updated_at"></span>\n            </td>\n            <td class="action">\n                <a href="/api/project/{{PROJECT.id}}/files/{{file.file_id}}/download" target="_self"><i class="cloud download icon"></i></a>\n                <a ng-href="{{ detailPath(PROJECT, file) }}"><i class="external url icon"></i></a>\n                <a href="javascript:void(0);" ng-click="editFile(file);" ng-if="editable(file)"><i class="cloud edit icon"></i></a>\n                <a href="javascript:void(0);" ng-click="deleteFile(file);" ng-if="(USER | isOwnerOf: file) || (USER | isOwnerOf: PROJECT)"><i class="remove-file red minus sign alternate icon"></i></a>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n    <div class="center" cg-pager="{{attachment_pager_id}}"></div>\n    <input id="upload-zone" type="file" name="file" multiple="multiple">\n    <div class="empty center list file-upload-zone" cg-trigger-upload="upload($callback);">\n        <span ng-show="!uploading">\n            <span style="font-size:16px;line-height: 40px"><i class="upload cloud icon"></i><span ng-if="files.length==0">还未上传任何文件，</span><span>点击或将文件拖拽至此上传！</span><br></span><span>支持所有文件格式，单个文件不超过100M。</span>\n        </span>\n        <span ng-show="uploading">\n            <span file-upload-progress="upload_progress">\n                <i class="loading icon"></i>正在上传（{{num}}%）!\n            </span>\n        </span>\n    </div>\n</form>\n\n<div class="ui large modal attachment-preview-modal" style="width: 1100px;\n               position: absolute;\n               left: 50%;\n               margin-left: -550px" ng-controller="AttachmentPreviewModal" cg-modal="attachment_preview_modal" ng-include="\'app/attachment/modal/tpl/attachment-preview-modal.html\'">\n</div>'),
            $templateCache.put("app/attachment/modal/tpl/attachment-preview-modal.html", '<i class="icon close"></i>\n<div>\n    <div class="flex-box project-file-viewer" ng-class="{\'editing\': mode === \'edit\' && editable(current_file)}">\n        <div class="modal-preview-button" cg-prev-and-next="onImageNavChange($event);">\n            <a class="prev" href="javascript:void(0)" ng-if="image_preview.prevId>0 && mode != \'edit\'" ng-click="changeFileId(image_preview.prevId);"><i class="angle left icon"></i></a>\n            <a class="next" href="javascript:void(0)" ng-if="image_preview.nextId>0 && mode != \'edit\'" ng-click="changeFileId(image_preview.nextId);"><i class="angle right icon"></i></a>\n        </div>\n\n        <div style="width: 780px" ng-if="mode == \'preview\' || mode == \'edit\' && !editable(current_file)">\n            <div class="current-file-name" ng-if="!file_name_editing">{{current_file.name}}</div>\n            <div class="ui small action input attachment-modal-rename" ng-if="file_name_editing">\n                <input type="text" ng-model="current_file.readName" id="modal-edit-file-name-{{current_file.file_id}}" cg-not-click="file_name_editing && renameFile(current_file)" not-click-class="#modal-edit-file-name-{{current_file.file_id}}, #modal-edit-file-name-{{current_file.file_id}} *" not-click-when="file_name_editing" cg-enter="renameFile(current_file)">\n                <a class="ui green small button" style="cursor: default">.{{current_file.fileType}}</a>\n            </div>\n            <cg-file-previewer cg-disable-scroll class="attachment-preview-modal-previewer" ng-class="{\'preview-image-background\': getFileType(current_file) == \'image\' || getFileType(current_file) == \'text\'}" ng-if="mode == \'preview\' || mode == \'edit\' && !editable(current_file)" cg-file-previewer-project-id="file_info.project.id" cg-file-previewer-file-id="file_info.file_id" cg-file-previewer-view="modal"></cg-file-previewer>\n        </div>\n        <cg-file-editor style="width: 780px" ng-if="mode == \'edit\' && editable(current_file)" cg-file-editor-project-id="file_info.project.id" cg-file-editor-file-id="file_info.file_id" cg-file-editor-view="modal" cg-file-editor-type="editor_type" cg-file-editor-mode="mode" class="attachment-preview-modal-editor"></cg-file-editor>\n        <div class="file-pane" style="width: 320px">\n            <cg-file-toolbar cg-file-toolbar-mode="mode" cg-file-toolbar-file="current_file" cg-file-toolbar-folder-id="file_info.folder_id" cg-file-toolbar-project="file_info.project"></cg-file-toolbar>\n            <div class="file-inner-pane">\n                <div class="ui tabular menu">\n                    <a class="item" ng-class="{\'active\': inner_menu == \'activity\'}" ng-click="switchInnerMenu(\'activity\')">\n                        <i class="chat outline icon"></i>动态</a>\n                    <a class="item" ng-class="{\'active\': inner_menu == \'history\'}" ng-click="switchInnerMenu(\'history\')">\n                        <i class="undo icon"></i>历史版本</a>\n                </div>\n                <cg-file-activities ng-if="inner_menu === \'activity\'" cg-file-activities-project="file_info.project" cg-file-activities-user="USER" cg-file-activities-file-id="file_info.file_id" cg-file-activities-file="current_file" cg-file-activities-view="modal"></cg-file-activities>\n                <cg-file-histories ng-if="inner_menu === \'history\'" cg-file-histories-project="file_info.project" cg-file-histories-file="current_file" cg-file-histories-view="modal"></cg-file-histories>\n            </div>\n        </div>\n    </div>\n</div>'),
            $templateCache.put("app/attachment/preview.html", '<style type="text/css">\n    #preview-image{max-width: 90%;}\n    #preview-icon{position:relative;width:200px;height:200px;cursor:pointer;margin: 100px auto;}\n    #preview-icon:hover i.icon{color: rgba(255,255,255,1);}\n    #preview-icon i.icon{font-size:60px;position: absolute;color: rgba(255,255,255,0);bottom: 5px;right: 5px;margin: 0;}\n    #preview-icon .file-icon{width:200px;height:200px;font-size:30px;font-size: 80px;line-height: 170px;}\n\n    #pdf-preview, #image-preview{position: relative;}\n    #pdf-preview.loaded{display: inline-block;}\n    #pdf-preview .button:hover{background: rgba(0,0,0,0.1);cursor: pointer;}\n    #pdf-preview .prev,#pdf-preview .next{ position: absolute;width:50%;height: 100%;z-index: 2; font-size: 50px;}\n    #pdf-preview .button i.icon{display:none;position: absolute;top:50%;margin-top:-25px;color:#FFF;}\n    #pdf-preview .button:hover i.icon{display: inline;}\n    #pdf-preview .prev{left:0;}\n    #pdf-preview .prev > i.icon{left:20px;}\n    #pdf-preview .next{right:0;}\n    #pdf-preview .next > i.icon{right:20px;}\n    #pdf-preview .count{border-radius:3px;position: absolute;bottom: 5px;left:50%;margin-left:-40px;width:100px;font-size:16px;color:#FFF;background: rgba(0,0,0,0.3);text-align: center;}\n    #pdf-preview > .resize{background: rgba(0,0,0,0.1);cursor: pointer;display: none;position: absolute;top:5px;right:5px;width:50px;height:50px;z-index: 3;color:#FFF;text-align: center;line-height: 55px;cursor: pointer;}\n    #pdf-preview:hover > .resize{display: inline; border-radius: 3px;}\n    #pdf-preview > .resize i.resize.icon{margin:0;font-size:25px;}\n\n    /* fullscreen pdf preview */\n    /* #pdf-preview-wrapper.full{width: 100%;height: 100%;position:absolute;left: 0;top: 0;} */\n\n    #preview-image-loading{\n        position: absolute;\n        z-index: 3;\n        width: 140px;\n        font-size: 14px;\n        top: 50px;\n        left: 50%;\n        background: rgba(0,0,0,0.8);\n        color: #FFF;\n        padding: 2px 3px;\n        border-radius: 3px;\n        margin-left: -70px;\n    }\n\n    .preview-button{margin-bottom: 20px;}\n    .preview-button a{font-size:14px; background: #fff; color: #333; padding: 4px 5px;border-radius: 3px;}\n    .preview-button a:hover{background: #EEE; color: #000; }\n    .preview-button a:first-child{margin-right: 20px;}\n    .preview-button a:last-child{}\n    .preview-button a i{ font-size: 12px; }\n    .preview-button .prev{display:inline-block;float:left;margin-left:10px;}\n    .preview-button .next{display:inline-block;float:right;margin-right:10px;}\n\n    #text-preview pre{\n        padding:10px;\n        background: #FFF;\n        white-space: pre-wrap; /* CSS3 */\n        white-space: -moz-pre-wrap; /* Mozilla, post millennium */\n        white-space: -pre-wrap; /* Opera 4-6 */\n        white-space: -o-pre-wrap; /* Opera 7 */\n        word-wrap: break-word; /* Internet Explorer 5.5+ */\n    }\n\n    .file-info-wrapper {\n        display: table;\n    }\n\n    .file_info_word {\n        height: 32px;\n        font-size: 15px;\n        display: table-row;\n    }\n\n    .file-info-left {\n        display: table-cell;\n        width: 60px;\n        font-weight: 700;\n        text-align: right;\n        padding-right: 10px;\n    }\n\n    .file-info-right {\n        display: table-cell;\n    }\n\n    .white-block {\n        padding: 10px;border-radius:3px;background: #fff;\n    }\n\n\n    #actions > .ui.default.button > i{margin-right:0}\n\n    #attachment .ui.tabular.menu .item {\n        padding: 10px 15px;\n        font-size: 14px;\n    }\n    #attachment .ui.tabular.menu .item.active {\n        background: none !important;\n        border-bottom: 1px solid #F7F6F2 !important;\n    }\n\n    #attachment .ui.tabular .item .ui.circular.label {\n        padding: 1px 4px!important;\n        background-color: rgba(0,0,0,.15)!important;\n        color: #000;\n        font-size: 12px;\n        font-weight: 700;\n    }\n    .ui.popup {\n        max-width: 300px;\n    }\n\n    #share-button {\n        cursor: pointer;\n        color: #444;\n    }\n    #share-button:hover {\n        color: #000;\n    }\n\n    #attachment-preview {\n        min-width: 800px;\n    }\n\n    #attachement-preview-container {\n        background-color: #FFF;\n        padding: 30px;\n    }\n\n    @media only screen and (min-width: 1340px) {\n      #attachment-preview {\n        width: 70%;\n        max-width: 1280px;\n      }\n    }\n</style>\n<div id="attachment-preview">\n    <div id="attachement-preview-container">\n        <div class="ui dividing header">\n            <div class="actions" id="actions" style="margin-top: 0">\n                <a class="ui default white button" href="javascript:void(0);" ng-click="setFileNameEditable($event);" ng-if="\'text\' != getFileType(current_file) && current_file"><i class="cloud edit icon"></i>重命名</a>\n                <a class="ui default white button" href="javascript:void(0);" ng-click="editFile(current_file);" ng-if="\'text\' == getFileType(current_file) && current_file"><i class="cloud edit icon"></i>编辑</a>\n                <a class="ui default white button" href="javascript:void(0);" ng-click="downloadFile(current_file);"><i class="cloud download icon"></i>下载</a>\n                <a class="ui default red button" href="javascript:void(0);" ng-click="deleteFile(current_file, true);" ng-if="(USER | isOwnerOf: current_file) || (USER | isOwnerOf: PROJECT)"><i class="cloud trash icon"></i>删除</a>\n            </div>\n            <div class="title" style="height: 31px">\n                <span class="gray">\n                    <span ng-if="file_loading">加载中...</span>\n                    <span ng-bind-html="current_file.name" ng-if="!file_loading && !file_name_editing"></span>\n                    <div class="ui small action input" ng-if="file_name_editing">\n                        <input type="text" ng-model="current_file.readName" id="edit-file-name-{{current_file.file_id}}" cg-not-click="file_name_editing && renameFile(current_file)" not-click-class="#edit-file-name-{{current_file.file_id}}, #edit-file-name-{{current_file.file_id}} *" not-click-when="file_name_editing" cg-enter="renameFile(current_file)" style="width: 300px">\n                        <a class="ui green small button" style="cursor: default">.{{current_file.fileType}}</a>\n                    </div>\n                </span>\n                <span id="file-info-tpl">\n                    <div class="file-info-wrapper">\n                        <div class="file-info-title file_info_word" style="font-size: 15px;\n                            height: 25px;\n                            font-weight: inherit;\n                            display: table-row;\n                            width: 40%;\n                            text-align: right">\n                            <span class="file-info-left" style="padding-bottom:10px">文件信息</span>\n                        </div>\n                        <div class="file_info_word" ng-if="current_file.number">\n                            <span class="file-info-left">引用编号</span>\n                            <span class="file-info-right">#{{current_file.number}}</span>\n                        </div>\n                        <div class="file_info_word">\n                            <span class="file-info-left">文件类型</span>\n                            <span class="file-info-right">{{current_file.type}}</span>\n                        </div>\n                        <div class="file_info_word">\n                            <span class="file-info-left">文件大小</span>\n                            <span class="file-info-right">{{current_file.size | bytes}}</span>\n                        </div>\n                        <div class="file_info_word file-image-info">\n                            <span class="file-info-left">文件尺寸</span>\n                            <span class="file-info-right"></span>\n                        </div>\n                        <div class="file_info_word">\n                            <span class="file-info-left">创建时间</span>\n                            <span class="file-info-right" cg-friendly-time="current_file.created_at"></span>\n                        </div>\n                        <div class="file_info_word">\n                            <span class="file-info-left">最近更新</span>\n                            <span class="file-info-right" cg-friendly-time="current_file.updated_at"></span>\n                        </div>\n                        <div class="file_info_word">\n                            <span class="file-info-left">创建人</span>\n                            <span class="file-info-right ellipsis" style="max-width: 100px">{{current_file.owner.name}}</span>\n                        </div>\n                    </div>\n                </span>\n                <a class="gray" href="javascript:void(0);" ng-show="!file_name_editing" style="margin-left: 10px">\n                    <i class="info icon" style="padding-right: 0; margin-right: 0; opacity: 1" cg-popup="{on: \'click\', position: \'bottom center\'}" template="#file-info-tpl"></i>\n                </a>\n                <span id="share-button" class="gray" href="javascript:void(0);" ng-show="!file_name_editing" style="margin-left: 10px">\n                    <i class="coding coding-share icon" style="padding-right: 0; opacity: 1; font-size: 0.9em; z-index: 999" cg-share="share" file="current_file" ng-class="{green: share}"></i>\n                </span>\n            </div>\n        </div>\n        <div class="empty center list" ng-show="file_loading && image_preview.prevId == -1 && image_preview.nextId == -1">\n            <i class="loading icon"></i>加载文件预览中...\n        </div>\n\n        <div class="preview-button" cg-prev-and-next="onImageNavChange($event);" style="height:27px">\n            <a class="prev" href="javascript:void(0);" ng-if="image_preview.prevId>0" ng-click="previewImage(image_preview.prevId);">\n                <i class="arrow left icon"></i>{{image_preview.prevName}}\n            </a>\n            <a class="next" href="javascript:void(0);" ng-if="image_preview.nextId>0" ng-click="previewImage(image_preview.nextId);">\n                {{image_preview.nextName}}<i class="arrow right icon"></i>\n            </a>\n        </div>\n        <cg-file-previewer cg-file-previewer-project-id="PROJECT.id" cg-file-previewer-file-id="file_id" cg-file-previewer-view="detail">\n            </cg-file-previewer>\n    </div>\n    <div class="ui tabular menu">\n        <a class="item" ng-class="{active: detail_mode === \'activity\'}" href="javascript:void(0)" ng-click="switchDetailMode(\'activity\')">\n            <span>动态</span>\n            <span class="ui circular label" ng-if="current_file.activity_count">{{current_file.activity_count}}</span>\n        </a>\n        <a class="item" ng-class="{active: detail_mode === \'history\'}" href="javascript:void(0)" ng-click="switchDetailMode(\'history\')">\n            <span>历史版本</span>\n            <span class="ui circular label" ng-if="current_file.history_count">{{current_file.history_count}}</span>\n        </a>\n    </div>\n    <cg-file-activities ng-if="detail_mode === \'activity\'" cg-file-activities-project="PROJECT" cg-file-activities-user="USER" cg-file-activities-file-id="file_id" cg-file-activities-file="current_file" cg-file-activities-view="detail" style="margin-bottom: 100px">\n        </cg-file-activities>\n        <cg-file-histories ng-if="detail_mode === \'history\'" cg-file-histories-project="PROJECT" cg-file-histories-file="current_file" cg-file-histories-view="detail">\n            </cg-file-histories>\n</div>'),
            $templateCache.put("app/cg/index.html", '<div class="coding-cg coding" style="margin:50px">\n    <div class="ui header h1">Cg Directives</div>\n    <table class="ui basic table">\n        <thead>\n        <tr>\n            <th>cg-*</th>\n            <th>preview</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr>\n            <td>cg-enter</td>\n            <td>\n                <div class="markdown content" cg-highlight="<input name=&quot;name&quot; ng-model=&quot;name&quot; cg-enter=&quot;name = 123;&quot;>"></div>\n                <br>\n                <div class="ui medium input">\n                    <input type="text" style="width: 500px" placeholder="在此回车，input 值变为 123" name="name" ng-model="name" cg-enter="name = 123;">\n                </div>\n            </td>\n        </tr>\n        <tr>\n            <td>cg-ctrl-enter</td>\n            <td>\n                <div class="markdown content" cg-highlight="<input name=&quot;name&quot; ng-model=&quot;name&quot; cg-ctrl-enter=&quot;name = 123;&quot;>"></div>\n                <br>\n                <div class="ui medium input">\n                    <input type="text" style="width: 500px" placeholder="在此Ctrl+回车，input 值变为 123" name="name" ng-model="name2" cg-ctrl-enter="name2 = 123;">\n                </div>\n            </td>\n        </tr>\n        <tr>\n            <td>cg-highlight</td>\n            <td>\n                <div class="markdown content" cg-highlight="<div class=&quot;markdown content&quot; cg-highlight>[put code here]</div>"></div>\n                <br>\n                <div class="markdown content" cg-highlight="<div class=&quot;markdown content&quot; cg-highlight=&quot;[put code here]&quot;></div>"></div>\n                <br>\n                <div class="markdown content" cg-highlight="<div class=&quot;markdown content&quot; cg-highlight=&quot;[Expression]&quot;></div>"></div>\n                <br>\n                <div class="markdown content" cg-highlight>var sayHello = function(){\n    alert("Hello Coding.Net!");\n}</div>\n            </td>\n        </tr>\n        </tbody>\n    </table>\n</div>'),
            $templateCache.put("app/ci/ci.html", '<div ng-class="{\'public-project-view\': PROJECT.is_public}">\n    <div ng-if="PROJECT.is_public" ng-include="\'app/git/public_view/inner_menu.html\'"></div>\n    <div ng-if="!PROJECT.is_public" ng-include="\'app/git/partial/inner_menu.html\'" class="ui secondary vertical fixed menu active" id="inner-menu"></div>\n    <div class="container" ng-if="!loaded">\n            <cg-monkey-loading image-size="50" container-margin="60"></cg-monkey-loading>\n    </div>\n    <div ng-show="loaded" class="container">\n        <div>\n            <h4 ng-if="!PROJECT.is_public" class="header">持续集成</h4>\n        </div>\n        <div>\n            <a class="ui default green button" ng-href="{{PROJECT.project_path}}/ci" target="_blank">去体验</a>\n        </div>\n    </div>\n</div>'),
            $templateCache.put("app/codeInsight/index.html", '<div ng-class="{\'public-project-view\': PROJECT.is_public}">\n    <div ng-if="PROJECT.is_public" ng-include="\'app/git/public_view/inner_menu.html\'"></div>\n    <div ng-if="!PROJECT.is_public" ng-include="\'app/git/partial/inner_menu.html\'" class="ui secondary vertical fixed menu active" id="inner-menu"></div>\n    <div class="container" ng-if="!loaded">\n            <cg-monkey-loading image-size="50" container-margin="60"></cg-monkey-loading>\n    </div>\n    <div ng-show="loaded" class="code-insight new container">\n        <div>\n            <h4 ng-if="!PROJECT.is_public" class="header">代码阅读</h4>\n            <div ng-if="!PROJECT.is_public" class="ui divider"></div>\n            <div ng-if="(PROJECT.current_user_role !== \'owner\' && PROJECT.current_user_role !== \'member\') && PROJECT.is_public && tasks.length === 0">\n                <div class="ui warning message">\n                    此项目没有开启该功能\n                </div>\n            </div>\n            <a ng-if="PROJECT.current_user_role === \'owner\' || PROJECT.current_user_role === \'member\'" ng-href="{{PROJECT.project_path}}/codeInsight/new" class="ui default green button floated right">新建阅读版本</a>\n            <div class="clearfix"></div>\n            <div ng-if="tasks.length > 0" ng-repeat="task in tasks" class="ui tertiary form segment code-insight-task">\n                {{task.name}} 版本\n                <span class="code-insight-task-commit-id"><a ng-href="{{PROJECT.project_path}}/git/tree/{{task.commit_id}}">{{task.commit_id | shortCommitId}}</a></span>。\n                <a ng-href="{{PROJECT.project_path}}/codeInsight/show/{{task.commit_id}}" target="_blank" class="ui mini white button">去阅读</a>\n                <a ng-click="delete(task)"><i class="remove icon red" style="float: right;margin-left: 20px" ng-if="PROJECT.current_user_role === \'owner\' || PROJECT.current_user_role === \'member\'"></i></a>\n                <span style="float: right">创建于<time cg-friendly-time="task.created_at"></time></span>\n            </div>\n        </div>\n    </div>\n</div>\n\n<style type="text/css">\n.code-insight-task > a:hover {\n    cursor: pointer;\n}\n</style>'),
            $templateCache.put("app/codeInsight/new.html", '<div ng-class="{\'public-project-view\': PROJECT.is_public}">\n    <div ng-if="PROJECT.is_public" ng-include="\'app/git/public_view/inner_menu.html\'"></div>\n    <div ng-if="!PROJECT.is_public" ng-include="\'app/git/partial/inner_menu.html\'" class="ui secondary vertical fixed menu active" id="inner-menu"></div>\n    <div class="container" ng-if="!loaded">\n            <cg-monkey-loading image-size="50" container-margin="60"></cg-monkey-loading>\n    </div>\n    <div ng-show="loaded" class="code-insight new container">\n        <div>\n            <h4 ng-if="!PROJECT.is_public" class="header">代码阅读</h4>\n            <div ng-if="!PROJECT.is_public" class="ui divider"></div>\n            <div ng-if="(PROJECT.current_user_role !== \'owner\' && PROJECT.current_user_role !== \'member\') && PROJECT.is_public">\n                <div class="ui warning message" ng-if="!task_id || status != 3">\n                    此项目没有开启该功能\n                </div>\n            </div>\n            <div ng-if="PROJECT.current_user_role === \'owner\' || PROJECT.current_user_role === \'member\'">\n                <div class="ui success message" ng-show="showStatus">\n                    <code>{{commitId}}</code>，{{statusHuman}}\n                </div>\n                <div id="code-insight-loading" ng-show="status == 1" class="ui active striped progress">\n                    <div class="bar"></div>\n                    <div class="coding progress percent">{{showPercent | percent: 2}}</div>\n                </div>\n\n                <div class="ui form segment" style="max-width:500px;margin:20px auto" ng-show="status != 1 && status != 0">\n                    <h4>创建代码阅读版本</h4>\n                    <div class="field">\n                        <label>版本</label>\n                        <input type="text" ng-model="newTaskCommitId" placeholder="请输入标记点，分支、标签、commit Id均可" cg-enter="create_task(newTaskCommitId, name, code)">\n                    </div>\n                    <div class="field">\n                        <label>备注</label>\n                        <input type="text" ng-model="name" placeholder="任何内容" cg-enter="create_task(newTaskCommitId, name, code)">\n                    </div>\n                    <div class="field">\n                        <div style="padding: 16px;background-color: #F6F3D5;color: #96904D;border-radius: 5px">目前仅支持 Java， PHP，Ruby，HTML，XML，CSS。</div>\n                    </div>\n                    <div class="field">\n                        <div style="padding: 16px;background-color: #F6F3D5;color: #96904D;border-radius: 5px">这将会是收费功能，目前处于免费体验阶段。</div>\n                    </div>\n                    <div ng-show="!submit_loading" class="ui dark gray medium submit button" ng-click="create_task(newTaskCommitId, name, code)">创建</div>\n                    <div ng-show="submit_loading" class="ui dark gray medium submit button" style="width: 90px"><i class="loading icon" style="margin:0"></i></div>\n                    <a ng-href="{{PROJECT.project_path}}/codeInsight/index" class="ui medium button">返回</a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<style type="text/css" media="all">\n#code-insight-loading {\n    position: relative;\n}\n\n#code-insight-loading > .coding.progress.percent {\n    position: absolute;\n    top: 8px;\n    left: 50%;\n}\n</style>'),
            $templateCache.put("app/codeInsight/show.html", '<!--<cg-code-insight-bread-crumb>-->\n<!--</cg-code-insight-bread-crumb>-->\n<div class="codeInsight-breadcrumb">\n    <ol class="breadcrumb">\n        <li><a>{{PROJECT.name}}</a></li>\n        <li><a></a></li>\n    </ol>\n</div>\n<div class="codeInsight-select">\n    <select ui-select2="{width: \'150px\'}" ng-model="commitId" ng-change="changeCommitId(commitId)">\n        <option ng-repeat="task in tasks" value="{{task.commit_id}}">{{task.commit_id}}</option>\n    </select>\n</div>\n<div class="qc-checkbox ui toggle checkbox">\n    <input type="checkbox" ng-model="showQcInfo" id="showQcInfo" ng-change="changeShowQcInfo()">\n    <label for="showQcInfo">\n        显示代码诊断\n    </label>\n</div>\n<div class="code-insight qc-help-popup" cg-bind-html="qcHelps.html">\n</div>\n<div class="code-insight-v-bar" max-size="20px" min-size="20px">\n    <div style="left: -30px; top: 118px" class="code-insight-v-bar-project active">Project</div>\n    <div style="left: -30px; top: 198px" class="code-insight-v-bar-structure">Structure</div>\n</div>\n<div ui-layout options="{ flow : \'column\' }" id="codeInsight">\n    <sidebar size="250px">\n        <div class="title">\n            <a ng-href="{{PROJECT.project_path}}" target="_blank">{{PROJECT.name}}</a>\n        </div>\n        <div ng-if="commitId" class="tree file-tree">\n            <cg-ztree cg-commit-id="commitId"></cg-ztree>\n        </div>\n        <div class="left-structure tree hidden">\n        </div>\n    </sidebar>\n    <sidebar ng-controller="CodeInsightTabsController" style="overflow: hidden">\n        <div ui-layout>\n            <div class="right" style="bottom: 0">\n                <cg-tabs panes="panes" path="path"></cg-tabs>\n            </div>\n            <div id="code-insight-define" class="codeInsight code">\n\n            </div>\n        </div>\n    </sidebar>\n</div>'),
            $templateCache.put("app/esearch/search.html", '<div id="search-body">\n  <div class="search-input">\n    <div class="ui action large input">\n        <a class="project-label gray" ng-href="{{ search_project.project_path }}" ng-if="search_project">\n            <img width="36" ng-src="{{ search_project.icon }}">\n            <span ng-bind="search_project[\'owner_user_name\'] + \'/\' + search_project.name"></span>\n        </a>\n        <input id="page-search-input" type="text" ng-model="keyword" cg-enter="gotoSearch(keyword)" cg-esc-blur cg-auto-focus>\n        <a class="ui large gray button" ng-click="gotoSearch(keyword)">搜索</a>\n    </div>\n  </div>\n  <div class="center empty list" ng-show="allPageLoading">\n    <i class="loading icon"></i>\n    读取中\n  </div>\n  <div ng-show="!allPageLoading">\n    <div class="search-tab">\n      <div class="ui small tabular menu" ng-class="{\'project-search\': search_project}">\n          <a class="item project" ng-class="{active:tab == \'project\'}" ng-click="changeTab(\'project\')">\n              项目 <span class="item-num">{{projects.totalRow || 0}}</span>\n          </a>\n          <a class="item task" ng-show="USER && !publicInProjectSearch" ng-class="{active:tab == \'task\'}" ng-click="changeTab(\'task\')">\n              任务 <span class="item-num">{{tasks.totalRow || 0}}</span>\n          </a>\n          <a class="item topic" ng-class="{active:tab == \'topic\'}" ng-click="changeTab(\'topic\')">\n              讨论 <span class="item-num">{{project_topics.totalRow || 0}}</span>\n          </a>\n          <a class="item tweet" ng-class="{active:tab == \'tweet\'}" ng-click="changeTab(\'tweet\')">\n              冒泡 <span class="item-num">{{tweets.totalRow || 0}}</span>\n          </a>\n          <a class="item file" ng-show="USER && !publicInProjectSearch" ng-class="{active:tab == \'file\'}" ng-click="changeTab(\'file\')">\n              文档 <span class="item-num">{{files.totalRow || 0}}</span>\n          </a>\n          <a class="item mr" ng-show="USER && !publicInProjectSearch" ng-class="{active:tab == \'mr\'}" ng-click="changeTab(\'mr\')">\n              合并请求 <span class="item-num">{{mrs.totalRow || 0}}</span>\n          </a>\n          <a class="item pr" ng-class="{active:tab == \'pr\'}" ng-click="changeTab(\'pr\')">\n              Pull请求 <span class="item-num">{{prs.totalRow || 0}}</span>\n          </a>\n          <!-- rename it to user. will search all users in the future -->\n          <a class="item friend" ng-class="{active:tab == \'friend\'}" ng-click="changeTab(\'friend\')">\n              用户 <span class="item-num">{{friends.totalRow || 0}}</span>\n          </a>\n      </div>\n    </div>\n\n    <!-- project -->\n    <div class="search-content" ng-show="tab == \'project\' && key.length > 0">\n      <div class="search-controllers">\n        <div class="result" ng-if="key.length > 0">共搜索到 {{projects.totalRow || 0}} 个与 "{{key}}" 相关的项目</div>\n        <div class="filters" ng-repeat="(key, filter) in projectFilters" cg-search-filter filter="filter" callback="searchType(\'project\')" ng-show="filter.data.length > 0"></div>\n        <hr class="clear">\n      </div>\n      <div ng-repeat="project in projects.list" class="search-item">\n        <div class="thumb"><a ng-href="{{project.project_path}}"><img ng-src="{{project.icon}}"></a></div>\n        <div class="info">\n          <div class="name ellipsis" ng-if="project.name">\n              <a ng-href="{{project.project_path}}" cg-search-highlight="project.name"></a>\n          </div>\n          <div class="description ellipsis" cg-search-highlight="newlineToWhitespace(project.description)" ng-show="project.description"></div>\n          <div class="when">\n            <span class="avatar"><img ng-src="{{project.owner_user_picture}}"></span>\n            <span class="light" cg-bind-html="project.owner_user_home"></span>\n            <span class="light">最后更新于 <span cg-friendly-time="project.updated_at"></span></span>\n          </div>\n        </div>\n        <div class="stat" ng-show="project.type == 1">\n          <span><i class="icon fork code"></i>{{project.fork_count | friendlyNumber}}</span>\n          <span><i class="icon unhide"></i>{{project.watch_count | friendlyNumber}}</span>\n        </div>\n      </div>\n      <a class="down center more" ng-show="hasMore(projects) && !loading" href="javascript:void(0);" ng-click="loadMoreProjects()">显示更多</a>\n      <div ng-show="hasMore(projects) && loading" class="center empty list">\n        <i class="loading icon"></i>玩命获取搜索结果中...\n      </div>\n    </div>\n\n    <!-- topic -->\n    <div class="search-content" ng-show="tab == \'topic\' && key.length > 0">\n      <div class="search-controllers">\n        <div class="result" ng-if="key.length > 0">共搜索到 {{project_topics.totalRow || 0}} 个与 "{{key}}" 相关的讨论</div>\n        <div class="filters" ng-repeat="(key, filter) in topicFilters" cg-search-filter filter="filter" callback="searchType(\'topic\')" ng-show="filter.data.length > 0"></div>\n        <hr class="clear">\n      </div>\n      <div ng-repeat="topic in project_topics.list" class="search-item">\n        <div class="thumb-avatar"><a ng-href="{{topic.owner.path}}"><img ng-src="{{topic.owner.avatar}}"></a></div>\n        <div class="info">\n          <div class="name ellipsis" ng-if="topic.title">\n              <a ng-href="{{topic.project.project_path}}/topic/{{topic.id}}" cg-search-highlight="topic.title"></a>\n          </div>\n           <div class="description ellipsis-2" ng-if="topic.content.length > 0">\n               <a class="gray" ng-href="{{topic.project.project_path}}/topic/{{topic.id}}">\n                   <span ng-repeat="ctn in topic.content" cg-search-highlight="newlineToWhitespace(ctn)" ng-show="ctn"></span>\n               </a>\n           </div>\n          <div class="when2">\n            <span class="light">#{{topic.resource_id}}</span>\n            <span class="light"><a ng-href="{{topic.owner.path}}">{{topic.owner.name}}</a></span>\n            <span class="light"><i class="icon time" style="margin: 0"></i> <span cg-friendly-time="topic.created_at"></span></span>\n            <span class="light"><i class="icon chat" style="margin: 0"></i> {{topic.child_count || 0}}</span>\n          </div>\n        </div>\n      </div>\n      <a class="down center more" ng-show="hasMore(project_topics) && !loading" href="javascript:void(0);" ng-click="loadMoreProjectTopics()">显示更多</a>\n      <div ng-show="hasMore(project_topics) && loading" class="center empty list">\n        <i class="loading icon"></i>玩命获取搜索结果中...\n      </div>\n    </div>\n\n    <!-- task -->\n    <div class="search-content" ng-show="tab == \'task\' && key.length > 0 && USER && !publicInProjectSearch">\n      <div class="search-controllers">\n        <div class="result">共搜索到 {{tasks.totalRow || 0}} 个与 "{{key}}" 相关的任务</div>\n        <div class="filters" ng-repeat="(key, filter) in taskFilters" cg-search-filter filter="filter" callback="searchType(\'task\')" ng-show="filter.data.length > 0"></div>\n        <hr class="clear">\n      </div>\n      <div ng-repeat="task in tasks.list" class="search-item">\n        <div class="thumb-avatar"><a ng-href="{{task.owner.path}}"><img ng-src="{{task.owner.avatar}}"></a></div>\n        <div class="info">\n          <div class="name ellipsis" ng-if="task.content">\n              <a ng-href="{{task.project.project_path}}/task/{{task.id}}" cg-search-highlight="task.content"></a>\n          </div>\n            <div class="description" ng-if="task.description.length > 0">\n                <a class="gray" ng-href="{{task.project.project_path}}/task/{{task.id}}">\n                    <span ng-repeat="des in task.description" cg-search-highlight="newlineToWhitespace(des)" ng-show="des"></span>\n                </a>\n            </div>\n          <div class="when2">\n            <span class="light">#{{task.resource_id}}</span>\n            <span class="light"><a ng-href="{{task.creator.path}}">{{task.creator.name}}</a></span>\n            <span class="light"><i class="icon time" style="margin: 0"></i> <span cg-friendly-time="task.created_at"></span></span>\n            <span class="light"><i class="icon chat" style="margin: 0"></i> {{task.comments || 0}}</span>\n          </div>\n        </div>\n      </div>\n      <a class="down center more" ng-show="hasMore(tasks) && !loading" href="javascript:void(0);" ng-click="loadMoreTasks()">显示更多</a>\n      <div ng-show="hasMore(tasks) && loading" class="center empty list">\n        <i class="loading icon"></i>玩命获取搜索结果中...\n      </div>\n    </div>\n\n    <!-- pp -->\n    <div class="search-content" ng-show="tab == \'tweet\' && key.length > 0">\n      <div class="search-controllers">\n        <div class="result">共搜索到 {{tweets.totalRow || 0}} 个与 "{{key}}" 相关的冒泡</div>\n        <div class="filters" ng-repeat="(key, filter) in tweetFilters" cg-search-filter filter="filter" callback="searchType(\'tweet\')" ng-show="filter.data.length > 0"></div>\n        <hr class="clear">\n      </div>\n      <div ng-repeat="tweet in tweets.list" class="search-item">\n        <div class="thumb-avatar"><a ng-href="{{tweet.owner.path}}"><img ng-src="{{tweet.owner.avatar}}"></a></div>\n        <div class="info">\n          <div class="name"><a ng-href="{{tweet.path}}" ng-init="content = newlineToWhitespace(htmlToPlaintext(tweet.content))" cg-show-more="content" can-show-more="false" limit-to="48"></a></div>\n          <div class="when2">\n            <span class="light"><a ng-href="{{tweet.owner.path}}">{{tweet.owner.name}}</a></span>\n            <span class="light"><i class="icon time" style="margin: 0"></i> <span cg-friendly-time="tweet.created_at"></span></span>\n            <span>\n              <a ng-href="{{tweet.path}}" style="margin:0 0 0 5px;color:#666">\n                  <i class="chat icon" style="margin:0px 0px"></i> {{tweet.comments || 0}}\n              </a>\n            </span>\n            &nbsp;&nbsp;\n            <span style="cursor: pointer; margin:0 0 0 5px;color:#666">\n               <i class="heart icon" ng-class="{\'empty\' : !tweet.liked,\'red\': tweet.liked}" style="margin:0px 0px"></i>\n                {{tweet.likes || 0}}\n            </span>\n          </div>\n        </div>\n      </div>\n      <a class="down center more" ng-show="hasMore(tweets) && !loading" href="javascript:void(0);" ng-click="loadMoreTweets()">显示更多</a>\n      <div ng-show="hasMore(tweets) && loading" class="center empty list">\n        <i class="loading icon"></i>玩命获取搜索结果中...\n      </div>\n    </div>\n\n    <!-- file -->\n    <div class="search-content" ng-show="tab == \'file\' && key.length > 0 && USER && !publicInProjectSearch">\n      <div class="search-controllers">\n        <div class="result">共搜索到 {{files.totalRow || 0}} 个与 "{{key}}" 相关的文档</div>\n        <div class="filters" ng-repeat="(key, filter) in fileFilters" cg-search-filter filter="filter" callback="searchType(\'file\')" ng-show="filter.data.length > 0"></div>\n        <hr class="clear">\n      </div>\n      <table class="ui basic table">\n        <tbody>\n        <tr class="attachment" ng-repeat="file in files.list">\n          <td class="filename ellipsis" width="300px">\n            <a ng-href="{{file.path}}">\n              <span cg-file-icon-src="file.preview" cg-file-icon="file.fileType"></span>\n              <span class="ellipsis" cg-search-highlight="file.name"></span>\n            </a>\n          </td>\n          <td>#{{file.resource_id}}</td>\n          <td class="size">{{file.size | bytes:2}}</td>\n          <td class="uploader ellipsis">\n            <a ng-href="{{file.owner.path}}">\n              <img class="ui circular image" ng-src="{{file.owner.avatar}}" width="32" height="32">{{file.owner.name}}\n            </a>\n          </td>\n          <td class="time">\n            <span cg-friendly-time="file.created_at"></span>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n      <a class="down center more" ng-show="hasMore(files) && !loading" href="javascript:void(0);" ng-click="loadMoreFiles()">显示更多</a>\n      <div ng-show="hasMore(files) && loading" class="center empty list">\n          <i class="loading icon"></i>玩命获取搜索结果中...\n      </div>\n    </div>\n\n    <!-- mr -->\n    <div class="search-content" ng-show="tab == \'mr\' && key.length > 0">\n      <div class="search-controllers">\n        <div class="result">共搜索到 {{mrs.totalRow || 0}} 个与 "{{key}}" 相关的合并请求</div>\n        <div class="filters" ng-repeat="(key, filter) in mrFilters" cg-search-filter filter="filter" callback="searchType(\'mr\')" ng-show="filter.data.length > 0"></div>\n        <hr class="clear">\n      </div>\n      <div ng-repeat="mr in mrs.list" class="search-item">\n        <div class="thumb-avatar"><a ng-href="{{mr.author.path}}"><img ng-src="{{mr.author.avatar}}"></a></div>\n        <div class="info">\n          <div class="name ellipsis" ng-if="mr.title.length > 0">\n            <a class="gray" ng-href="{{mr.path}}">\n              <span cg-search-highlight="mr.title"></span>\n            </a>\n          </div>\n          <div class="pull-request">\n            <div class="pr-action">\n              <span class="pr-label src">{{htmlToPlaintext(mr.source_branch)}}</span>\n              <i class="long arrow right icon"></i>\n              <span class="pr-label des">{{htmlToPlaintext(mr.target_branch)}}</span>\n            </div>\n          </div>\n          <div class="description ellipsis-2" ng-if="mr.body.length > 0">\n            <a class="gray" ng-href="{{mr.path}}">\n              <span ng-repeat="body in mr.body" cg-search-highlight="newlineToWhitespace(body)" ng-show="body"></span>\n            </a>\n          </div>\n          <div class="when2">\n            <span class="light">#{{mr.iid}}</span>\n            <span class="light"><a ng-href="{{mr.author.path}}">{{mr.author.name}}</a></span>\n            <span class="light"><i class="icon time" style="margin: 0"></i><span cg-friendly-time="mr.created_at"></span></span>\n            <span class="merge-status" ng-class="mr.merge_status.toLowerCase()">{{printableMergeStatus(mr.merge_status)}}</span>\n          </div>\n        </div>\n      </div>\n      <a class="down center more" ng-show="hasMore(mrs) && !loading" href="javascript:void(0);" ng-click="loadMoreMRs()">显示更多</a>\n      <div ng-show="hasMore(mrs) && loading" class="center empty list">\n          <i class="loading icon"></i>玩命获取搜索结果中...\n      </div>\n    </div>\n\n    <!-- pr -->\n    <div class="search-content" ng-show="tab == \'pr\' && key.length > 0">\n      <div class="search-controllers">\n        <div class="result">共搜索到 {{prs.totalRow || 0}} 个与 "{{key}}" 相关的Pull请求</div>\n        <div class="filters" ng-repeat="(key, filter) in prFilters" cg-search-filter filter="filter" callback="searchType(\'pr\')" ng-show="filter.data.length > 0"></div>\n        <hr class="clear">\n      </div>\n      <div ng-repeat="pr in prs.list" class="search-item">\n        <div class="thumb-avatar"><a ng-href="{{pr.author.path}}"><img ng-src="{{pr.author.avatar}}"></a></div>\n        <div class="info">\n          <div class="name ellipsis" ng-if="pr.title.length > 0">\n            <a class="gray" ng-href="{{pr.path}}">\n              <span cg-search-highlight="pr.title"></span>\n            </a>\n          </div>\n          <div class="pull-request">\n            <div class="pr-action">\n              <span class="pr-label src">{{htmlToPlaintext(pr.author.global_key ? pr.author.global_key:\'已删除项目\')}}:{{pr.source_branch}}</span>\n              <i class="long arrow right icon"></i>\n              <span class="pr-label des">{{htmlToPlaintext(pr.owner.global_key)}}:{{pr.target_branch}}</span>\n            </div>\n          </div>\n          <div class="description ellipsis-2" ng-if="pr.body.length > 0">\n            <a class="gray" ng-href="{{pr.path}}">\n              <span ng-repeat="body in pr.body" cg-search-highlight="newlineToWhitespace(body)" ng-show="body"></span>\n            </a>\n          </div>\n          <div class="when2">\n            <span class="light">#{{pr.iid}}</span>\n            <span class="light"><a ng-href="{{pr.author.path}}">{{pr.author.name}}</a></span>\n            <span class="light"><i class="icon time" style="margin: 0"></i> <span cg-friendly-time="pr.created_at"></span></span>\n            <span class="merge-status" ng-class="pr.merge_status.toLowerCase()">{{printableMergeStatus(pr.merge_status)}}</span>\n          </div>\n        </div>\n      </div>\n      <a class="down center more" ng-show="hasMore(prs) && !loading" href="javascript:void(0);" ng-click="loadMorePRs()">显示更多</a>\n      <div ng-show="hasMore(prs) && loading" class="center empty list">\n          <i class="loading icon"></i>玩命获取搜索结果中...\n      </div>\n    </div>\n\n\n    <!-- friend -->\n    <div class="search-content" ng-show="tab == \'friend\' && key.length > 0">\n      <div class="search-controllers">\n        <div class="result">共搜索到 {{friends.totalRow || 0}} 个与 "{{key}}" 相关的用户</div>\n        <div class="filters" ng-repeat="(key, filter) in userFilters" cg-search-filter filter="filter" callback="searchType(\'friend\')" ng-show="filter.data.length > 0"></div>\n        <hr class="clear">\n      </div>\n      <div ng-repeat="friend in friends.list" class="search-item">\n        <div class="thumb-avatar"><a ng-href="{{friend.path}}"><img ng-src="{{friend.avatar}}"></a></div>\n        <div class="info">\n          <div class="name">\n            <a ng-href="{{friend.path}}" cg-search-highlight="friend.name"></a>\n            <i class="icon time"></i><span cg-friendly-time="friend.created_at"></span> 加入 Coding\n          </div>\n          <div class="description"><span class="tag" ng-repeat="tag in splitTags(friend.tags_str)" ng-if="tag && tag.length > 0">{{tag}}</span></div>\n          <div class="stat">\n            <div ng-if="user.id != USER.id" class="ui down black tiny button" ng-click="showSendMsgDialog(friend)">\n                给TA私信\n            </div>\n            <div ng-if="user.id == USER.id" class="ui green label self" style="line-height: 14px">\n                你自己\n            </div>\n          </div>\n        </div>\n      </div>\n      <a class="down center more" ng-show="hasMore(friends) && !loading" href="javascript:void(0);" ng-click="loadMoreFriends()">显示更多</a>\n      <div ng-show="hasMore(friends) && loading" class="center empty list">\n          <i class="loading icon"></i>玩命获取搜索结果中...\n      </div>\n    </div>\n\n    <div class="empty list center" ng-show="!loading && !key || key.length === 0">\n        <i class="coffee icon"></i>我是不会告诉你搜索需要先输入一个关键字的...\n    </div>\n\n  </div>\n</div>'),
            $templateCache.put("app/git/blame.html", '<div ng-class="{\'public-project-view\': PROJECT.is_public}">\n    <div ng-if="PROJECT.is_public" ng-include="\'app/git/public_view/inner_menu.html\'"></div>\n    <div ng-if="!PROJECT.is_public" ng-include="\'app/git/partial/inner_menu.html\'" class="ui secondary vertical fixed menu active" id="inner-menu"></div>\n    <div class="container" ng-if="!loaded">\n            <cg-monkey-loading image-size="50" container-margin="60"></cg-monkey-loading>\n    </div>\n    <div ng-if="loaded" class="blame container git-container">\n        <div ng-include="\'app/git/partial/_breadcrumb.html\'"></div>\n        <div class="blame-view">\n            <div class="file-box">\n                <div class="file-meta clearfix">\n                    <div class="ui tertiary mini compact menu opt">\n                        <a class="item" ng-href="{{raw_url}}" target="_blank">原始数据</a>\n                        <a class="item" ng-href="{{blob_url}}">查看代码</a>\n                        <a class="item" ng-href="{{commits_url}}">提交历史</a>\n                    </div>\n                    <div class="file-name info">\n                        <span class="icon"><i class="text file outline icon"></i>file</span>\n                        <span class="meta-divider"></span>\n                        <span class="file-size">{{blame.file.size | bytes:2}}</span>\n                    </div>\n                </div>\n                <div class="file-blame">\n                    <table ng-if="blame.lines">\n                        <tr ng-repeat="line in blame.lines" ng-class="{\'section-first\':!isSame(line,blame.lines[$index - 1],$index) && $index >= 0}" ng-if="line">\n                            <td nowrap="nowrap" class="commit-meta">\n                                <div ng-if="line.commitId.length == 40 && !isSame(line,blame.lines[$index - 1],$index)">\n                                    <p>\n                                <span class="commit-message" title="{{line.fullMessage}}">\n                                    <a ng-href="{{PROJECT.project_path}}/git/commit/{{line.commitId}}" name="{{line.commitId}}"><code>{{line.commitId | shortCommitId:10}}</code>\n                                    </a>\n                                    {{line.shortMessage}}\n                                </span>\n                                    </p>\n\n                                    <p class="author">\n                                        <a ng-href="{{line.committer.link}}">\n                                            <img class="author-gravatar" ng-src="{{line.committer.avatar}}" height="20" width="20">\n                                            <span class="author-name">{{line.committer.name}}</span>\n                                        </a>\n                                        <time class="author-date" cg-friendly-time="line.when"></time>\n                                    </p>\n                                </div>\n                            </td>\n                            <td nowrap="nowrap" class="line-num" id="L{{$index}}" rel="#L{{$index+1}}" num="{{$index+1}}"><code>{{line.lineNumber}}</code>\n                            </td>\n                            <td nowrap="nowrap" class="line-data" id="CL{{$index+1}}" cg-if="blame">\n                                <pre cg-blame-highlight="line.data" cg-line-length="blame.lines.length" cg-line-index="$index" cg-blame-lang="blame.file.lang"></pre>\n                            </td>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>'),
            $templateCache.put("app/git/blob.html", '<div ng-class="{\'public-project-view\': PROJECT.is_public}">\n    <div ng-if="PROJECT.is_public" ng-include="\'app/git/public_view/inner_menu.html\'"></div>\n    <div ng-if="!PROJECT.is_public" ng-include="\'app/git/partial/inner_menu.html\'" class="ui secondary vertical fixed menu active" id="inner-menu"></div>\n    <div class="container" ng-if="!loaded">\n        <cg-monkey-loading image-size="50" container-margin="60"></cg-monkey-loading>\n    </div>\n    <div class="container git-container" ng-if="loaded">\n        <div ng-include="\'app/git/partial/_breadcrumb.html\'"></div>\n        <div class="blob">\n            <div class="commit-tease">\n                <span class="coding floated right">\n                    <a ng-href="{{PROJECT.project_path}}/git/commit/{{blob.file.lastCommitId}}" class="commit-tease-sha">\n                        {{blob.file.lastCommitId | shortCommitId:10}}\n                    </a>\n                    <i class="icon" ng-class="{\'green checkmark\':showCopyIcon,\'paste\':!showCopyIcon}" clip-copy="blob.file.lastCommitId" clip-click="copyCommit()"></i>\n                    提交于\n                    <time cg-friendly-time="blob.file.lastCommitDate"></time>\n                </span>\n                <span class="commit-author-section">\n                    <a ng-href="{{blob.file.lastCommitter.link}}">\n                        <img class="author-gravatar" ng-src="{{blob.file.lastCommitter.avatar}}" alt="@{{blob.file.lastCommitter.name}}" width="20" height="20">\n                    </a>\n                    <span class="author-name"><a href="{{blob.file.lastCommitter.link}}" title="{{blob.file.lastCommitter.name}}">{{blob.file.lastCommitter.name}}</a></span>\n                </span>\n                <span class="message">\n                    <a ng-href="{{PROJECT.project_path}}/git/commit/{{blob.file.lastCommitId}}" cg-bind-html="blob.file.lastCommitMessage"></a>\n                </span>\n            </div>\n            <div class="file-box">\n                <div class="file-meta clearfix">\n                    <div class="ui tertiary mini compact menu opt">\n                        <a class="item" ng-if="codeInsightTask" ng-href="{{codeInsightTask.link}}" target="_blank">代码阅读</a>\n                        <a class="item" ng-if="can_edit && isHead && ((blob.file.mode == \'file\' && blob.file.data)|| blob.file.size == 0)" ng-href="{{PROJECT.project_path}}/git/edit/{{ref}}/{{path}}">编辑</a>\n                        <a class="item" ng-href="{{raw_url}}" target="_blank">原始数据</a>\n                        <a class="item" ng-if="blob.file.mode == \'file\' && blob.file.data" ng-href="{{PROJECT.project_path}}/git/blame/{{ref}}/{{path}}">按行查看</a>\n                        <a class="item" ng-href="{{PROJECT.project_path}}/git/commits/{{ref}}/{{path}}">提交历史</a>\n                        <a style="background: #df5a5a; color: white" class="item" ng-if="can_edit && isHead" ng-href="{{PROJECT.project_path}}/git/delete/{{ref}}/{{path}}">删除</a>\n                    </div>\n                    <div class="file-name info">\n                        <span class="icon"><i class="text file outline icon"></i>\n                            <span ng-if="blob.file.mode === \'file\'">file</span>\n                            <span ng-if="blob.file.mode === \'sym_link\'">symbol link</span>\n                        </span>\n                        <span class="meta-divider"></span>\n                        <span class="file-size">{{blob.file.size | bytes:2}}</span>\n                    </div>\n                </div>\n                <div class="file-preview">\n                    <div ng-if="(blob.file.mode === \'file\'|| blob.file.mode === \'sym_link\') && blob.file.data && blob.file.size <= 1024*1024*3">\n                        <div ng-if="blob.file.previewed" class="markdown-body blobmd" clip-copy-code="pre" cg-highlight="blob.file.preview"></div>\n                        <div ng-if="!blob.file.previewed" class="code-preview" cg-code-lang="blob.file.lang" cg-code-view="blob.file.data"></div>\n                    </div>\n                    <center ng-if="blob.file.mode === \'image\'">\n                        <img ng-src="{{raw_url}}">\n                    </center>\n                    <p ng-if="(blob.file.mode !== \'file\' && blob.file.mode !== \'image\' && blob.file.mode !== \'sym_link\') || blob.file.size > 1024*1024*3" class="not-support">不支持预览此文件，<a target="_self" ng-href="{{raw_url}}">点此下载</a></p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>'),
            $templateCache.put("app/git/branch/default_modal.html", '<form class="top-up-form ui form">\n    <div class="content">\n        <div class="field">\n            默认分支\n        </div>\n        <div class="field git select2">\n            <select ui-select2="{width: \'300px\'}" ng-model="form.default_branch">\n                <option ng-repeat="branch in branches" value="{{branch.name}}">{{branch.name}}</option>\n            </select>\n        </div>\n        <div class="field">\n            <a ng-show="!submiting" ng-click="submit()" style="margin-right: 20px" class="ui small blue button floated right">更新</a>\n            <div ng-show="submiting" style="margin-right: 20px" class="ui small blue button floated right" style="width: 60px"><i class="loading icon" style="margin: 0"></i></div>\n        </div>\n    </div>\n</form>'),
            $templateCache.put("app/git/branch/index.html", '<div ng-class="{\'public-project-view\': PROJECT.is_public}">\n    <div ng-if="PROJECT.is_public" ng-include="\'app/git/public_view/inner_menu.html\'"></div>\n    <div ng-if="!PROJECT.is_public" ng-include="\'app/git/partial/inner_menu.html\'" class="ui secondary vertical fixed menu active" id="inner-menu"></div>\n    <div class="container" ng-if="!loaded">\n        <cg-monkey-loading image-size="50" container-margin="60"></cg-monkey-loading>\n    </div>\n    <div ng-if="loaded" class="container branches git-container">\n        <h4 ng-if="!PROJECT.is_public" class="header">分支</h4>\n\n        <div ng-if="!PROJECT.is_public" class="ui divider"></div>\n\n        <div class="ui coding clearfix" style="margin-bottom: 30px" ng-if="PROJECT | isRole:MEMBER">\n            <div class="ui floated coding left">\n                <a class="ui button small" ng-href="{{PROJECT.project_path}}/git/branches/create"><i class="add icon"></i>新建分支</a>\n            </div>\n            <div class="ui floated coding right" ng-if="(PROJECT | isRole:ADMIN)"><a class="ui button small" ng-click="changeDefaultBranch()">修改默认分支</a>\n            </div>\n        </div>\n\n        <div ng-repeat="branch in branches" style="position: relative">\n            <table class="ui basic table branch-list" ng-class="{\'protected-branch-icon\' : branch.is_protected}">\n                <tr class="item">\n                    <td class="branch-name">\n                        <a ng-href="{{PROJECT.project_path}}/git/tree/{{branch.name | encodeGitUri}}">\n                            {{branch.name}}\n                            <div class="default-branch-label" ng-if="branch.is_default_branch">默认</div>\n                        </a>\n                    </td>\n                    <td class="commit-message">\n                        <a ng-href="{{PROJECT.project_path}}/git/commit/{{branch.last_commit.commitId}}" cg-bind-html="branch.last_commit.shortMessage"></a>\n                        -&nbsp;<span cg-friendly-time="branch.last_commit.commitTime">\n                    </span></td>\n                    <td class="branch-operator">\n                        <a ng-if="((PROJECT | isRole:ADMIN) || (PROJECT.current_user_role == \'member\' && !branch.is_protected)) && !branch.is_default_branch" title="删除分支" class="red" ng-click="delete_branch(branch)" target="_self">\n                            <i class="red minus sign alternate icon remove-task"></i>\n                        </a>\n                        <a ng-if="(PROJECT | isRole:ADMIN) || (PROJECT.current_user_role == \'member\' && branch.is_protected)" title="保护分支" style="color: #32be77" ng-click="protected_branch(branch)">\n                            <i class="shield icon"></i>\n                        </a>\n                        <a title="下载" ng-href="{{PROJECT.project_path}}/git/archive/{{branch.name | encodeUri}}" target="_self" class="light gray">\n                            <i class="cloud download icon"></i>\n                        </a>\n                        <a ng-if="!PROJECT.is_public && (PROJECT | isRole:MEMBER)" title="合并请求" class="light gray" ng-href="{{PROJECT.depot_path}}/merge/create?startWith={{branch.name}}">\n                            <i class="coding icon merge-request"></i>\n                        </a>\n                    </td>\n                </tr>\n            </table>\n\n            <div ng-if="branch.show_protected_branch_setting" class="protected_branch_setting">\n                <div>\n                    <a class="ui coding up more floated right" style="margin-top:-5px;margin-right:-7px" ng-href="javascript:void(0);" ng-click="branch.show_protected_branch_setting = false">收起</a>\n                </div>\n                <p>\n                    保护分支是受限制的 Git 仓库分支，只允许项目内指定成员更新该分支，启用后可选择保护分支成员。只有项目创建者可设置保护分支。\n                </p>\n\n                <div class="enable-protected-branch">\n                    <div class="ui toggle checkbox">\n                        <input type="checkbox" ng-model="branch.is_protected" id="enable-protected-branch-{{branch.name}}" ng-change="toggleProtectedBranch(branch)" ng-disabled="!(PROJECT | isRole:ADMIN)">\n                        <label for="enable-protected-branch-{{branch.name}}">启用保护分支(\n                            <span ng-if="branch.is_protected"><i class="ui icon lock"></i>已启用分支( {{branch.name}} )作为保护分支</span>\n                            <span ng-if="!branch.is_protected"><i class="ui icon unlock"></i>未启用</span>\n                            )</label>\n                    </div>\n                </div>\n                <div ng-show="branch.is_protected">\n                    <div class="member ui coding clearfix" ng-repeat="member in branchMembers">\n\n                        <div class="ui checkbox">\n                            <input type="checkbox" ng-model="member.has_update_access" id="branch-member-{{branch.name}}-{{member.user.global_key}}" ng-change="toggleMember(branch,member)" ng-disabled="!(PROJECT | isRole:ADMIN)">\n                            <label for="branch-member-{{branch.name}}-{{member.user.global_key}}">{{member.user.name}} -\n                                {{member.user.global_key}}</label>\n                        </div>\n\n                        <div class="avatar">\n                            <img class="ui circular image" width="32" height="32" ng-src="{{member.user.avatar}}">\n                        </div>\n                    </div>\n                    <div class="empty list center" ng-if="loading">\n                        <i class="loading icon"></i>正在加载数据...\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div cg-pager="{{pager_id}}" class="center"></div>\n        <div ng-if="!branches || branches.length == 0">\n            <div ng-include="\'app/git/partial/_back-monkey.html\'"></div>\n            <div class="no-branch-tips">\n                <p class="ui coding aligned center"><strong>本项目暂无分支</strong></p>\n\n                <p class="ui coding aligned center">请先提交代码到 Git 仓库</p>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class="ui modal tiny40" ng-controller="ChangeDefaultBranchModalCtrl" cg-modal="changeDefaultBranchModal" ng-include="\'app/git/branch/default_modal.html\'"></div>'),
            $templateCache.put("app/git/branch/new.html", '<div ng-class="{\'public-project-view\': PROJECT.is_public}">\n    <div ng-if="PROJECT.is_public" ng-include="\'app/git/public_view/inner_menu.html\'"></div>\n    <div ng-if="!PROJECT.is_public" ng-include="\'app/git/partial/inner_menu.html\'" class="ui secondary vertical fixed menu active" id="inner-menu"></div>\n    <div class="container branches git-container">\n        <h4 ng-if="!PROJECT.is_public" class="header">分支</h4>\n\n        <div ng-if="!PROJECT.is_public" class="ui divider"></div>\n\n        <div class="ui form segment" style="max-width:500px;margin:20px auto">\n            <h4>创建分支</h4>\n\n            <div class="field">\n                <label>分支名称</label>\n\n                <div class="ui left labeled input">\n                    <input type="text" ng-model="new_branch.name" placeholder="请输入新建分支名称" cg-enter="create_branch(new_branch)">\n                </div>\n            </div>\n            <div class="field">\n                <label>分支起点</label>\n\n                <div class="ui left labeled input">\n                    <input type="text" ng-model="new_branch.start_point" placeholder="请输入分支起点，分支、标签、commit Id均可" cg-enter="create_branch(new_branch)">\n                </div>\n            </div>\n            <div class="ui dark gray medium submit button" ng-click="create_branch(new_branch)">创建</div>\n            <div class="ui error message"></div>\n        </div>\n    </div>\n</div>'),
            $templateCache.put("app/git/commit.html", '<div ng-class="{\'public-project-view\': PROJECT.is_public}">\n    <div ng-if="PROJECT.is_public" ng-include="\'app/git/public_view/inner_menu.html\'"></div>\n    <div ng-if="!PROJECT.is_public" ng-include="\'app/git/partial/inner_menu.html\'" class="ui secondary vertical fixed menu active" id="inner-menu"></div>\n    <div class="container" ng-if="!loaded">\n            <cg-monkey-loading image-size="50" container-margin="60"></cg-monkey-loading>\n    </div>\n    <div class="commit container git-container" ng-if="loaded">\n        <div class="commit-view">\n            <div class="full-commit">\n                <div class="commit-title clearfix ellipsis">\n                    <div class="commit-title-short" cg-bind-html="shortMessage"></div>\n                    <pre class="commit-title-full" cg-bind-html="allMessage"></pre>\n                </div>\n                <a ng-href="{{PROJECT.project_path}}/git/tree/{{commit.commitId}}" class="ui button small right floated" style="margin-top: 6px">查看代码</a>\n\n                <div class="commit-meta clearfix">\n                    <span class="diff-link">\n                        <a target="_blank" ng-href="{{PROJECT.project_path}}/git/commit/{{commit.commitId}}.diff"><code>Diff</code></a>\n                        <a target="_blank" ng-href="{{PROJECT.project_path}}/git/commit/{{commit.commitId}}.patch"><code>Patch</code></a>\n                    </span>\n                    <span class="sha-block"><span class="sha-value"><code>{{commit.commitId}}</code></span></span>\n\n                    <a ng-href="{{commit.committer.link}}">\n                        <img class="gravatar" height="20" width="20" ng-src="{{commit.committer.avatar}}" ng-if="commit.committer.avatar.length > 0">\n                    <span class="author-name">{{commit.committer.name}}</span>\n                    </a>\n                    <span class="commit-time"> 提交于\n                        <time class="comm" cg-friendly-time="commit.commitTime"></time>\n                    </span>\n                </div>\n            </div>\n            <div ng-include="\'app/git/partial/_diff_show.html\'"></div>\n            <div class="commit-diff" ng-if="diffTooLong">\n                <div class="diff-too-long">此 commit 改动太多，不宜在网页上展示，<a target="_blank" ng-href="{{PROJECT.project_path}}/git/commit/{{commit.commitId}}.diff">点此下载 diff 文件</a> 到本地查看</div>\n            </div>\n            <div cg-diff-notes></div>\n        </div>\n    </div>\n</div>'),
            $templateCache.put("app/git/commits.html", '<div ng-class="{\'public-project-view\': PROJECT.is_public}">\n    <div ng-if="PROJECT.is_public" ng-include="\'app/git/public_view/inner_menu.html\'"></div>\n    <div ng-if="!PROJECT.is_public" ng-include="\'app/git/partial/inner_menu.html\'" class="ui secondary vertical fixed menu active" id="inner-menu"></div>\n    <div class="container" ng-if="!loaded">\n            <cg-monkey-loading image-size="50" container-margin="60"></cg-monkey-loading>\n    </div>\n    <div class="container git-container" ng-if="loaded">\n        <div ng-show="!path" ng-include="\'app/git/partial/_breadcrumb.html\'"></div>\n        <div ng-include="\'app/git/partial/_commits_list.html\'"></div>\n        <div class="ui coding aligned center" style="margin-top:30px">\n            <a ng-href="{{cur_path}}?page={{current_page - 1}}" ng-if="current_page > 1" class="ui button">\n                <i class="arrow left icon"></i>上一页</a>\n            <a ng-href="{{cur_path}}?page={{current_page + 1}}" ng-if="commits.length == page_size" class="ui button">\n                下一页<i class="arrow right icon"></i></a>\n        </div>\n    </div>\n</div>'),
            $templateCache.put("app/git/compare.html", '<style>\n    .public-project-view #compare-tabular > .item.active {\n        background-color: #FFF!important;\n        border-bottom: 1px solid #FFF!important;\n    }\n    #compare-tabular > .item.active {\n        background-color: #F7F6F2!important;\n        border-bottom: 1px solid #F7F6F2!important;\n    }\n</style>\n<div ng-class="{\'public-project-view\': PROJECT.is_public}">\n    <div ng-if="PROJECT.is_public" ng-include="\'app/git/public_view/inner_menu.html\'"></div>\n    <div ng-if="!PROJECT.is_public" ng-include="\'app/git/partial/inner_menu.html\'" class="ui secondary vertical fixed menu active" id="inner-menu"></div>\n    <div class="container compare git-container">\n        <div class="compare-view">\n            <div class="ui fluid small form">\n                <div class="ui four fields compare">\n                    <div class="field ref1">\n                        <input name="ref1" type="text" ng-model="ref1">\n                    </div>\n                    <div class="field and">\n                        <span>...</span>\n                    </div>\n                    <div class="field ref2">\n                        <input name="ref2" type="text" ng-model="ref2" cg-enter="submitCompare(ref1,ref2)">\n                    </div>\n                    <div>\n                        <span class="ui button right blue" ng-click="submitCompare(ref1,ref2)">对比</span>\n                    </div>\n                </div>\n            </div>\n            <div class="compare-content">\n                <div id="tab-header" class="ui tabular menu">\n                    <a class="item" ng-click="switchTab(1)" ng-class="{active:switchTabValue == 1}">\n                        <i class="home icon"></i> 提交记录 <span class="commits-count">{{commits.length || \'0\'}}</span>\n                    </a>\n                    <a class="item" ng-click="switchTab(2)" ng-class="{active:switchTabValue == 2}">\n                        <i class="mail icon"></i> 文件改动 <span class="commits-count">{{diffStat.paths.length || \'0\'}}</span>\n                    </a>\n                </div>\n                <div id="tab-contents" class="commits">\n                    <div id="compare_tab_1" class="tab-content commits-view clearfix" ng-if="switchTabValue == 1">\n                        <div ng-include="\'app/git/partial/_commits_list.html\'"></div>\n                        <p ng-if="nocommits" class="no-data" style="padding-bottom:  1rem">\n                            对比中后一个ref提交先于前一个ref，无法获得提交记录\n                        </p>\n\n                        <p ng-if="!commits && !nocommits" class="no-data" style="padding-bottom:  1rem">\n                            无法获得提交记录\n                        </p>\n                    </div>\n                    <div id="compare_tab_2" class="tab-content clearfix" ng-if="switchTabValue == 2">\n                        <div ng-include="\'app/git/partial/_diff_show.html\'"></div>\n\n                        <div class="commit-diff" ng-if="!diff.htmlDiff && diffStat && diffStat.paths.length > 0 && ref1 && ref2">\n                            <div class="diff-too-long">\n                                此 commit 改动太多，不宜在网页上展示，\n                                点此下载 <a target="_blank" ng-href="{{PROJECT.project_path}}/git/compare/{{ ref1 }}...{{ ref2 }}.diff">diff 文件</a> 或\n                                <a target="_blank" ng-href="{{PROJECT.project_path}}/git/compare/{{ ref1 }}...{{ ref2 }}.patch">patch 文件</a>\n                                到本地\n                            </div>\n                        </div>\n\n                        <div ng-if="!diff.htmlDiff" class="commit-diff" cg-bind-html="diff.htmlDiff">\n                            <p class="no-data" style="padding-bottom:  1rem">\n                                无法获得对比内容\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>'),
            $templateCache.put("app/git/edit/delete.html", '<div ng-class="{\'public-project-view\': PROJECT.is_public}">\n    <div ng-if="PROJECT.is_public" ng-include="\'app/git/public_view/inner_menu.html\'"></div>\n    <div ng-if="!PROJECT.is_public" ng-include="\'app/git/partial/inner_menu.html\'" class="ui secondary vertical fixed menu active" id="inner-menu"></div>\n    <div class="container" ng-if="!loaded">\n    <cg-monkey-loading image-size="50" container-margin="60"></cg-monkey-loading>\n</div>\n    <div class="container git-container" ng-if="loaded">\n        <div ng-include="\'app/git/partial/_breadcrumb.html\'"></div>\n        <div class="ui edit">\n            <div class="ui edit-view">\n                <div class="file-box">\n                    <div class="file-meta clearfix">\n                      <div class="file-name info">\n                          <span class="icon"><i class="text file outline icon"></i>file</span>\n                      </div>\n                    </div>\n                    <div class="file-edit">\n                      <p class="file-delete-info">\n                        您将删除 {{file.name}} 文件。\n                      </p>\n                    </div>\n                </div>\n                <form method="post" id="code_edit_submit">\n                    <div class="ui form">\n                        <div class="field commit-message">\n                            <div class="form-opt clearfix">\n                                <span><i class="comment icon"></i>提交说明</span>\n                            </div>\n                            <input id="last_commit" name="last_commit" type="hidden" value="{{lastCommit.sha}}">\n                            <textarea id="commit-message" name="message" ng-model="message" placeholder="delete file {{file.name}}" ng-change="checkMessage()"></textarea>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <label class="right floated ui small primary button" ng-class="{\'disabled\': !edited}" ng-click="!!edited && submit(message)">\n                <i class="pencil icon"></i>提交到{{ref | decodeUri}}分支\n            </label>\n            <a class="right floated secondary ui small button" ng-href="{{tree_url}}">取消</a>\n        </div>\n    </div>\n</div>'),
            $templateCache.put("app/git/edit/edit.html", '<div ng-class="{\'public-project-view\': PROJECT.is_public}">\n    <div ng-if="PROJECT.is_public" ng-include="\'app/git/public_view/inner_menu.html\'"></div>\n    <div ng-if="!PROJECT.is_public" ng-include="\'app/git/partial/inner_menu.html\'" class="ui secondary vertical fixed menu active" id="inner-menu"></div>\n    <div class="container" ng-if="!loaded">\n     <cg-monkey-loading image-size="50" container-margin="60"></cg-monkey-loading>\n</div>\n    <div class="container git-container" ng-if="loaded">\n        <div ng-include="\'app/git/partial/_breadcrumb.html\'"></div>\n        <div class="ui edit">\n            <div class="ui edit-view">\n                <div class="file-box">\n                    <div class="file-meta clearfix">\n                        <a ng-if="!previewed && is_markdown(file.name)" class="right floated secondary ui small button" ng-click="preview_md()">预览</a>\n                        <a ng-if="previewed" class="right floated secondary ui small button" ng-click="close_preview()">关闭预览</a>\n                        <div class="file-name info">\n                            <span class="icon"><i class="text file outline icon"></i>file</span>\n                            <!--<span class="meta-divider"></span>-->\n                            <!--<span class="file-lines">122lines</span>-->\n                            <span class="meta-divider"></span>\n                            <span class="file-size">{{file.size | bytes:2}}</span>\n                        </div>\n                    </div>\n                    <div>\n                        <div ng-show="previewed" class="markdown-body blobmd" ng-bind-html="previewed_data"></div>\n                    </div>\n                    <div ng-show="blob.length>=0 && !previewed" class="file-edit">\n                        <pre id="code-editor" class="code-editor" ui-ace="aceSettings" ng-model="blob"></pre>\n                    </div>\n                </div>\n                <form method="post" id="code_edit_submit">\n                    <div class="ui form">\n                        <div class="field commit-message">\n                            <div class="form-opt clearfix">\n                                <span><i class="comment icon"></i>提交说明</span>\n                            </div>\n                            <input id="last_commit" name="last_commit" type="hidden" value="{{lastCommit.sha}}">\n                            <input id="file_content" name="content" type="hidden" value="">\n                            <textarea id="commit-message" name="message" ng-model="message"></textarea>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <label class="right floated ui small primary button" ng-class="{\'disabled\': !edited}" ng-click="!!edited && applyEdit(message)">\n                <i class="pencil icon"></i>提交到{{ref | decodeUri}}分支\n            </label>\n            <a class="right floated secondary ui small button" ng-href="{{blob_url}}">取消</a>\n        </div>\n    </div>\n</div>'),
            $templateCache.put("app/git/edit/new.html", '<div ng-class="{\'public-project-view\': PROJECT.is_public}">\n    <div ng-if="PROJECT.is_public" ng-include="\'app/git/public_view/inner_menu.html\'"></div>\n    <div ng-if="!PROJECT.is_public" ng-include="\'app/git/partial/inner_menu.html\'" class="ui secondary vertical fixed menu active" id="inner-menu"></div>\n    <div class="container" ng-if="!loaded">\n    <cg-monkey-loading image-size="50" container-margin="60"></cg-monkey-loading>\n</div>\n    <div class="container git-container" ng-if="loaded">\n        <div ng-include="\'app/git/partial/_breadcrumb.html\'"></div>\n        <div class="ui edit">\n            <div class="ui edit-view">\n                <div class="file-box">\n                    <div class="file-meta clearfix">\n                        <a ng-if="!previewed && is_markdown" class="right floated secondary ui small button" ng-click="preview_md()">预览</a>\n                        <a ng-if="previewed" class="right floated secondary ui small button" ng-click="close_preview()">关闭预览</a>\n                        <div class="file-name info">\n                            <span class="icon"><i class="text file outline icon"></i>file</span>\n                        </div>\n                    </div>\n                    <div>\n                        <div ng-show="previewed" class="markdown-body blobmd" ng-bind-html="previewed_data"></div>\n                    </div>\n                    <div class="file-edit" ng-show="!previewed">\n                        <pre id="code-editor" class="code-editor" ui-ace="aceSettings" ng-model="file.content"></pre>\n                    </div>\n                </div>\n                <form method="post" id="code_edit_submit">\n                    <div class="ui form">\n                        <div class="field commit-message">\n                            <div class="form-opt clearfix">\n                                <span><i class="comment icon"></i>提交说明</span>\n                            </div>\n                            <input id="last_commit" name="last_commit" type="hidden" value="{{lastCommit.sha}}">\n                            <textarea id="commit-message" name="message" ng-model="message" placeholder="new file {{file.title}}"></textarea>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <label class="right floated ui small primary button" ng-click="submit(message)">\n              <i class="pencil icon"></i>提交到{{ref | decodeUri}}分支\n            </label>\n            <a class="right floated secondary ui small button" ng-href="{{tree_url}}">取消</a>\n        </div>\n    </div>\n</div>'),
            $templateCache.put("app/git/key/keys.html", '<style>\n    #user-key-setting {\n        max-width: 700px;\n        min-width: 700px;\n        background-color: #FFFFFF;\n        padding: 1.5em;\n        border-radius: 5px;\n    }\n</style>\n<div id="user-key-setting" ng-controller="UserKeysSettingController">\n    <div class="keys">\n        <form method="post">\n            <div class="ui form">\n                <div class="field">\n                    <label>公钥名称</label>\n                    <input placeholder="自定义公钥名称，可不填" type="text" name="title" ng-model="key_title">\n                </div>\n                <div class="field">\n                    <label>SSH-RSA公钥内容</label>\n                    <textarea placeholder="请粘贴形如这样的格式的 ssh-rsa 公钥：ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDHI6/Zs8DVJduqR0DHO8s5JDT4SpnXS+jvLJkAuji2G3nBYTdtjfvMx6i6ei6Lxv3MMecogYyujhIx/k9111+8ZqFpJAywNTfNuw/JiLaH989QLdM7F2NaJi3OHV8484Z6KKvBXyO99HIG/oCNYDYp/78kd0kz8b0ghlXG3M8YRHd5udV6VErKS5qQHH9WTsEaF2VZjrEPalYULHXJ7pikuKmwZ8CVlyqhPxCbHG4wdKprATpdpiax1i5mmH/+pt0vzK01RgZ/ibhVkFaAmxOCWxTSNstqAlYd+z01/688IUIIWqfbzMe7FSp4CLezlIn8UIowb8xw+yRcYMl2Lqon coding@MBP" name="content" ng-model="key_content" ng-change="split(key_content)"></textarea>\n                </div>\n                <a class="ui dark gray medium submit button" type="submit" ng-click="showPasswordWithCreateKey(key_title, key_content)">添加</a>\n            </div>\n        </form>\n\n        <h3 class="ui header">已有SSH-RSA公钥列表</h3>\n\n        <table class="deploy-key-table">\n            <tr class="deploy-key-title">\n                <td class="content">key内容(Finger Print)</td>\n                <td class="title">公钥名称</td>\n                <td class="time"></td>\n                <td class="oper">操作</td>\n            </tr>\n\n            <tr ng-repeat="key in keys">\n                <td class="content">{{key.finger_print}}</td>\n                <td class="title">{{key.title}}</td>\n                <td class="time">\n                    <span>{{key.type === \'ide\' ? \'WebIDE 生成于\' : \'上传于\'}}</span>\n                    <span cg-friendly-time="key.created_at"></span>\n                </td>\n                <td class="oper">\n                    <a class="ui small white button" href="javascript:void(0);" ng-click="showPasswordWithDeleteKey(key);" style="width: 62px">删除</a>\n                </td>\n            </tr>\n        </table>\n    </div>\n</div>'),
            $templateCache.put("app/git/merge/edit.html", '<style>\n    #merge-request-edit .git.select2 .select2-container {\n        margin: 0;\n    }\n</style>\n\n<div ng-if="!PROJECT.is_public" ng-include="\'app/git/partial/inner_menu.html\'" class="ui secondary vertical fixed menu active" id="inner-menu"></div>\n<div id="merge-request-edit" class="pull-request container git-container">\n    <h4 ng-if="!PROJECT.is_public">合并请求 #{{merge_request.iid}}</h4>\n\n    <div ng-if="!PROJECT.is_public" class="ui divider"></div>\n    <form class="ui form segment" ng-submit="submitMergeRequest(merge_request);" method="post">\n        <div class="two fields">\n            <div class="field git select2">\n                <label>源分支</label>\n                <select ui-select2="{width:\'250px\'}" id="mr-src-branches" ng-model="merge_request.srcBranch" disabled="disabled">\n                    <option value="{{merge_request.srcBranch}}">\n                    {{merge_request.srcBranch}}\n                    </option>\n                </select>\n            </div>\n            <div class="field git select2">\n                <label>目标分支</label>\n                <select ui-select2="{width:\'250px\'}" id="mr-des-branches" ng-model="merge_request.desBranch" disabled="disabled">\n                    <option value="{{merge_request.desBranch}}">\n                    {{merge_request.desBranch}}\n                    </option>\n                </select>\n            </div>\n        </div>\n        <div ng-if="loaded" ng-include="\'app/git/partial/_loading.html\'"></div>\n        <div class="field" ng-show="!loaded">\n            <div class="ui input">\n                <input type="text" name="title" placeholder="输入Merge Request标题" ng-model="merge_request.title" disabled="disabled">\n            </div>\n        </div>\n\n        <div class="field" ng-show="!loaded">\n            <div ng-show="!!merge_request.content" class="pr-content markdown content ui segment" clip-copy-code="pre" cg-highlight="merge_request.content" cg-page-scroll></div>\n        </div>\n\n        <div class="two fields" ng-show="!loaded">\n            <div class="field git select2">\n                <label>代码评审</label>\n\n                <div cg-member-selector cg-ms-selected="reviewers" cg-ms-project="PROJECT" cg-ms-members="members" style="width: 250px" class="no-tips"></div>\n            </div>\n\n            <div class="field git select2">\n                <label>任务引用</label>\n                <div class="mr-tasks">\n                    <div class="mr-task" ng-repeat="task in tasks">\n                        <span>\n                            <i class="icon tasks"></i>\n                            <a ng-href="{{task.link}}" target="_blank">\n                                #{{task.code}}\n                                {{task.title}}\n                            </a>\n                            <i class="icon remove red floated right" ng-click="task_remove(task)"></i>\n                        </span>\n                    </div>\n                </div>\n                <div ng-show="tasks.length < 3">\n                    <input id="mr-task-select" class="task-select" type="hidden">\n                </div>\n            </div>\n        </div>\n\n        <div class="ui button" ng-click="cancel()">取消</div>\n        <input ng-if="!submiting" type="submit" value="提交" class="ui blue submit button">\n        <div ng-if="submiting" class="ui blue submit button" style="width: 70px"><i class="loading icon" style="margin: 0"></i></div>\n    </form>\n\n</div>'),
            $templateCache.put("app/git/merge/index.html", '<div ng-include="\'app/git/partial/inner_menu.html\'" class="ui secondary vertical fixed menu active" id="inner-menu"></div>\n<div ng-if="!loaded" class="container">\n    <cg-monkey-loading image-size="50" container-margin="60"></cg-monkey-loading>\n</div>\n<div id="merge-request-list" ng-if="loaded" class="pull-request container git-container">\n    <div style="position: relative; height: 60px">\n        <h4 class="ui floated coding left">合并请求</h4>\n\n        <div class="ui floated coding right" style="right: 0; bottom: 0; position: absolute">\n            <a class="ui button small" ng-href="{{PROJECT.project_path}}/git/merge/create"><i class="add icon"></i>新建合并请求</a>\n        </div>\n    </div>\n    <div class="ui coding clearfix"></div>\n    <div class="ui divider"></div>\n    <div ng-controller="MergeRequestQueryFilterController">\n        <div class="ui coding clearfix tabular menu">\n            <a class="item" ng-class="{active: tab == \'review\'}" ng-click="change_tab(\'review\')">我评审的</a>\n            <a class="item" ng-class="{active: tab == \'mine\'}" ng-click="change_tab(\'mine\')">我发布的</a>\n            <!--<a class="item" ng-class="{active: tab == \'with_me\'}" ng-click="change_tab(\'with_me\')">与我相关的</a>-->\n            <a class="item" ng-class="{active: tab == \'other\'}" ng-click="change_tab(\'other\')">全部的</a>\n        </div>\n        <div class="ui coding clearfix" style="margin-bottom:30px" ng-if="PROJECT | isRole:MEMBER">\n            <div id="merge-request-filter" class="ui simple dropdown coding floated right">\n                <div class="text">{{ getFilter() }}</div>\n                <i class="dropdown icon"></i>\n\n                <div class="menu">\n                    <div class="item" ng-click="change_status(\'open\')">未处理</div>\n                    <div class="item" ng-click="change_status(\'closed\')">已处理</div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div ng-if="merges.list" class="merge-request-list" ng-repeat="merge_request in merges.list">\n        <div class="merge-request-list-item">\n            <div class="avatar">\n                <a ng-href="{{merge_request.author.path}}" title="{{merge_request.author.name}}">\n                    <img width="40" height="40" ng-src="{{merge_request.author.avatar}}">\n                </a>\n            </div>\n            <div class="content">\n                <div class="header">\n                    <a href="{{merge_request.path}}">\n                        <span class="mr-id">#{{merge_request.iid}}</span>\n                        {{merge_request.title}}\n                    </a>\n                </div>\n                <div class="footer">\n                    <a ng-href="{{merge_request.author.path}}" title="{{merge_request.author.name}}">\n                        <div class="mr-author">\n                            {{merge_request.author.name}}\n                        </div>\n                    </a>\n                    <i class="time icon"></i>\n                    <span class="time" cg-friendly-time="merge_request.created_at"></span>\n                    <i class="chat outline icon"></i>\n                    <span class="time">{{merge_request.comment_count}}条评论</span>\n                </div>\n            </div>\n            <div class="status">\n                <div class="mr-left-item">\n                    <span class="mr-label src">{{merge_request.srcBranch}}</span>\n                    <i class="right icon"></i>\n                    <span class="mr-label des">{{merge_request.desBranch}}</span>\n                </div>\n                <div class="mr-left-item" style="padding-top: 5px">\n                    <span ng-if="merge_request.granted === 1 && merge_request.merge_status === \'CANMERGE\'" class="coding floated right mr-status granted">已授权</span>\n                    <span class="coding floated right mr-status {{merge_request.merge_status.toLowerCase()}}">{{getMergeStatusHuman(merge_request.merge_status)}}</span>\n                </div>\n            </div>\n        </div>\n        <div class="ui divider"></div>\n    </div>\n    <div cg-pager="{{pager_id}}" class="center"></div>\n    <div ng-if="!merges.list || merges.list.length == 0">\n        <div ng-include="\'app/git/partial/_back-monkey.html\'"></div>\n        <p class="ui coding aligned center" style="margin-top: 55px"><strong style="font-size: 18px">没有符合的查询</strong></p>\n    </div>\n</div>'),
            $templateCache.put("app/git/merge/merge_modal.html", '<div class="header">\n    合并此请求\n</div>\n<form class="top-up-form ui form">\n    <div class="content" style="border-radius: 5px">\n        <div class="field">\n            <label style="color: #666">Merge Commit Message</label>\n            <textarea ng-model="merge_request.commit_message"></textarea>\n            <div style="margin-top: 10px" class="ui checkbox" ng-show="can_edit_src_branch && DEPOT.default_branch != merge_request.srcBranch">\n                <input type="checkbox" id="merge_request_delSourceBranch" ng-model="merge_request.delSourceBranch">\n                <label for="merge_request_delSourceBranch">删除源分支</label>\n            </div>\n        </div>\n        <div class="field" style="margin: 0">\n            <div class="ui button" ng-click="toggleMergeModal()">取消</div>\n            <div class="ui button green" ng-show="loaded" ng-click="merge(merge_request);">合并</div>\n            <div class="ui button green" ng-show="!loaded"><i class="loading icon"></i></div>\n        </div>\n    </div>\n</form>'),
            $templateCache.put("app/git/merge/new.html", '<style>\n    .public-project-view #merge-create-tabular > .item.active {\n        background-color: #FFF !important;\n        border-bottom: 1px solid #FFF !important;\n    }\n\n    #merge-create-tabular > .item.active {\n        background-color: #F7F6F2 !important;\n        border-bottom: 1px solid #F7F6F2 !important;\n    }\n    #merge-request-create .git.select2 .select2-container {\n        margin: 0;\n    }\n</style>\n<div id="merge-request-create" ng-class="{\'public-project-view\': PROJECT.is_public}">\n    <div ng-if="PROJECT.is_public" ng-include="\'app/git/public_view/inner_menu.html\'"></div>\n    <div ng-if="!PROJECT.is_public" ng-include="\'app/git/partial/inner_menu.html\'" class="ui secondary vertical fixed menu active" id="inner-menu"></div>\n    <div class="pull-request container git-container">\n        <h4 ng-if="!PROJECT.is_public">\n            合并请求\n            <i class="attention icon" data-html="<p>在创建新的合并请求时，可以填写代码评审，并引用项目内任务，进行关联。</p>\n                <p>MR发起人可以在该MR被合并前，随时对代码评审和引用任务进行编辑。</p>" data-position="bottom right" cg-popup></i>\n        </h4>\n\n        <div ng-if="!PROJECT.is_public" class="ui divider"></div>\n        <form class="ui form segment" ng-submit="submitMergeRequest(mr_create);" method="post">\n            <div class="two fields">\n                <div class="field git select2">\n                    <label>源分支</label>\n                    <select ui-select2="{width:\'250px\'}" id="mr-src-branches" ng-model="mr_create.srcBranch" ng-change="createMergeRequest(mr_create.srcBranch, mr_create.desBranch)">\n                        <option ng-repeat="branch in branches" value="{{branch.name}}">\n                            {{branch.name}}\n                        </option>\n                    </select>\n                </div>\n                <div class="field git select2">\n                    <label>目标分支</label>\n                    <select ui-select2="{width:\'250px\'}" id="mr-des-branches" ng-model="mr_create.desBranch" ng-change="createMergeRequest(mr_create.srcBranch, mr_create.desBranch)">\n                        <option ng-repeat="des_branch in branches" value="{{des_branch.name}}">\n                            {{des_branch.name}}\n                        </option>\n                    </select>\n                </div>\n            </div>\n            <div ng-if="loaded" ng-include="\'app/git/partial/_loading.html\'"></div>\n            <div class="field" ng-show="showDiff && !loaded">\n                <div class="ui input">\n                    <input type="text" name="title" placeholder="输入Merge Request标题" ng-model="mr_create.title">\n                </div>\n            </div>\n\n            <div class="field" ng-show="showDiff && !loaded">\n                <div class="ui input" cg-pagedown="contentUpdate($content)" id="-1" ng-model="mr_create.content">\n                    <textarea placeholder="输入Merge request详细描述" ng-model="mr_create.content" cg-refer-resource="PROJECT" cg-at-context at-context-type="\'merge_request\'" at-item="PROJECT" cg-at-emoji cg-textarea-editable></textarea>\n                </div>\n            </div>\n\n            <div class="two fields" ng-show="showDiff && !loaded">\n                <div class="field git select2">\n                    <label>代码评审</label>\n                    <div cg-member-selector cg-ms-selected="reviewers" cg-ms-project="PROJECT" cg-ms-members="members" style="width: 250px" class="no-tips"></div>\n                </div>\n\n                <div class="field git select2">\n                    <label>任务引用</label>\n                    <div class="mr-tasks">\n                        <div class="mr-task" ng-repeat="task in tasks">\n                            <span>\n                                <i class="icon tasks"></i>\n                                <a ng-href="{{task.link}}" target="_blank">\n                                    #{{task.code}}\n                                    {{task.title}}\n                                </a>\n                                <i class="icon remove red floated right" ng-click="task_remove(task)"></i>\n                            </span>\n                        </div>\n                    </div>\n                    <div ng-show="tasks.length < 3">\n                        <input id="mr-task-select" class="task-select" type="hidden">\n                    </div>\n                </div>\n            </div>\n\n            <div ng-if="showDiff">\n                <input ng-if="!submiting" type="submit" value="提交" class="ui blue submit button">\n                <div ng-if="submiting" class="ui blue submit button" style="width: 70px"><i class="loading icon" style="margin: 0"></i></div>\n            </div>\n        </form>\n\n        <div ng-if="!showDiff && !loaded && can_merge" class="yellow ui message">\n            请选择两个不同的分支\n        </div>\n        <div ng-if="!showDiff && !loaded && !can_merge" class="red ui message">\n            无法合并这两个分支\n        </div>\n\n        <div ng-if="showDiff && !loaded">\n            <h4 class="ui header">改动明细</h4>\n\n            <div class="ui divider"></div>\n\n            <div id="merge-create-tabular" class="ui tabular menu">\n                <a class="item" ng-class="{active: show_diff == \'commits\'}" ng-click="switchTab(\'commits\')">\n                    提交记录 <span class="commits-count">{{commits.length || \'0\'}}</span>\n                </a>\n                <a class="item" ng-class="{active: show_diff == \'files\'}" ng-click="switchTab(\'files\')">\n                    文件改动 <span class="commits-count">{{diffStat.paths.length || \'0\'}}</span>\n                </a>\n            </div>\n\n            <div ng-include="\'app/git/partial/_commits_list.html\'" ng-show="show_diff == \'commits\'" class="commits"></div>\n            <div ng-include="\'app/git/partial/_diff_show.html\'" ng-show="show_diff == \'files\'"></div>\n        </div>\n\n    </div>\n</div>'),
            $templateCache.put("app/git/merge/show.html", '<style>\n    .public-project-view #merge-show-tabular > .item.active {\n        background-color: #FFF!important;\n        border-bottom: 1px solid #FFF!important;\n    }\n    #merge-show-tabular > .item.active {\n        background-color: #F7F6F2!important;\n        border-bottom: 1px solid #F7F6F2!important;\n    }\n</style>\n<div ng-class="{\'public-project-view\': PROJECT.is_public}">\n    <div ng-if="PROJECT.is_public" ng-include="\'app/git/public_view/inner_menu.html\'"></div>\n    <div ng-if="!PROJECT.is_public" ng-include="\'app/git/partial/inner_menu.html\'" class="ui secondary vertical fixed menu active" id="inner-menu"></div>\n    <div ng-if="!loaded" class="container">\n            <cg-monkey-loading image-size="50" container-margin="60"></cg-monkey-loading>\n    </div>\n    <div ng-if="loaded" class="pull-request container git-container" style="min-width: 800px">\n        <div style="max-width:1200px">\n            <h4 ng-if="!PROJECT.is_public">\n                合并请求\n                <i class="attention icon" data-html="<p>&nbsp &nbsp 当代码评审对MR+1后，右侧列表对应的名字将变成绿色，并出现图标。</p>\n                    <p>&nbsp &nbsp 当非代码评审对MR+1后，将出现在右侧+1列表里，作为对合并的参考。</p>\n                    <p>&nbsp &nbsp 当创建的合并请求涉及保护分支时，如果发起人需要自己合并MR，对该分支有权限的管理者可以对发起人给予授权。</p>\n                    <p>&nbsp &nbsp 授权后，右侧列表发起人的名字将变成绿色，并出现图标代表已获得对此次合并的授权，可以适时自行合并MR。</p>" data-position="bottom right" cg-popup></i>\n            </h4>\n\n            <div ng-if="!PROJECT.is_public" class="ui divider"></div>\n            <h3 class="pr-title">\n                #{{merge_request.iid}} {{merge_request.title}}\n            </h3>\n\n            <div class="layout-content-right-menu" style="margin-bottom: 50px">\n                <div class="layout-content merge-request-layout">\n                    <div class="pr-action">\n                        <span class="pr-label src">{{merge_request.srcBranch}}</span>\n                        <i class="long arrow right icon"></i>\n                        <span class="pr-label des">{{merge_request.desBranch}}</span>\n                    </div>\n\n                    <div class="ui tertiary red segment action-bar" ng-if="merge_request.merge_status == \'REFUSED\'">\n                        <div class="content">\n                            <div class="summary">\n                                <span style="color: red">\n                                    <i class="minus sign icon"></i>\n                                </span>\n                                <span cg-friendly-time="merge_request.action_at"></span>\n                                <a href="{{merge_request.action_author.path}}">{{merge_request.action_author.name}}</a>\n                                拒绝了这个合并请求\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="ui tertiary green segment action-bar" ng-if="merge_request.merge_status == \'ACCEPTED\'">\n                        <div class="content">\n                            <div class="summary">\n                                <span style="color: green">\n                                    <i class="coding icon merge-request"></i>\n                                </span>\n                                <a href="{{merge_request.action_author.path}}">{{merge_request.action_author.name}}</a>\n                                <span cg-friendly-time="merge_request.action_at"></span>\n                                合并了这个合并请求\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="ui tertiary segment action-bar" ng-if="merge_request.merge_status == \'CANCEL\'">\n                        <div class="content">\n                            <div class="summary">\n                                <span style="color: #333">\n                                    <i class="coding icon remove"></i>\n                                </span>\n                                <a href="{{merge_request.action_author.path}}">{{merge_request.action_author.name}}</a>\n                                <span cg-friendly-time="merge_request.action_at"></span>\n                                取消了这个合并请求\n                            </div>\n                        </div>\n                    </div>\n                    <div ng-show="!!merge_request.content" clip-copy-code="pre" class="pr-content markdown content ui segment" cg-highlight="merge_request.content" cg-page-scroll></div>\n                    <div ng-if="merge_request.merge_status == \'CANNOTMERGE\' || merge_request.merge_status == \'CANMERGE\'">\n                        <div class="ui coding button blue" ng-if="can_edit ||\n                            ( merge_request.granted === 1 &&  merge_request.author.global_key === USER.global_key )" ng-class="{disabled: merge_request.merge_status === \'CANNOTMERGE\'}" ng-click="toggleMergeModal()">合并</div>\n                        <div class="ui coding button red" ng-if="can_edit" ng-click="refuse(merge_request)">拒绝</div>\n\n                        <div class="ui coding floated right" ng-show="can_edit && merge_request.author.global_key !== USER.global_key && !author_can_edit" style="height: 30px">\n                            <i class="help icon" data-html="<p>当创建的合并请求涉及保护分支时，如果发起人需要自己合并MR，对该分支有权限的管理者可以对发起人给予授权。</p>" data-position="bottom left" style="margin: 7px" cg-popup></i>\n                        </div>\n                        <div class="ui coding button green floated right" ng-show="can_edit && merge_request.granted === 0 && merge_request.author.global_key !== USER.global_key && !author_can_edit && !grant_submitting" ng-click="grant()">授权</div>\n                        <div class="ui coding button green floated right" ng-show="can_edit && merge_request.granted === 1 && merge_request.author.global_key !== USER.global_key && !author_can_edit && !grant_submitting" ng-click="grantUndo()">取消授权</div>\n                        <div class="ui coding button green floated right" ng-show="grant_submitting"><i class="loading icon" style="margin: 0"></i></div>\n                        <div class="ui coding button floated right" ng-show="current_reviewer.value === 100 && merge_request.author.global_key !== USER.global_key && !review_submitting" ng-click="reviewGoodUndo()">撤销+1</div>\n                        <div class="ui coding button floated right" ng-show="current_reviewer.value === 0 && merge_request.author.global_key !== USER.global_key && !review_submitting" ng-click="reviewGood()">+1</div>\n                        <div class="ui coding button floated right" ng-show="review_submitting"><i class="loading icon" style="margin: 0"></i></div>\n                        <div class="ui coding button floated right" ng-if="USER.global_key === merge_request.author.global_key" ng-click="edit()">编辑</div>\n                        <div class="ui coding button floated right" ng-if="USER.global_key === merge_request.author.global_key" ng-click="cancel(merge_request)">取消</div>\n                        <div class="ui coding button green floated right" ng-if="showSquash()" ng-click="beforeSquash()">\n                            <i class="loading icon" ng-if="squashing" style="margin: 0"></i>squash\n                        </div>\n                    </div>\n                </div>\n                <div class="layout-menu" style="width: 200px; padding-left: 30px">\n                    <div class="merge-request-right-item">\n                        <div class="merge-request-right-item-title">发起人：</div>\n                        <div class="merge-request-right-item-content">\n                            <a ng-href="{{merge_request.author.path}}" ng-style="{\'color\': merge_request.granted === 1?\'#32be77\':\'#333\'}" data-html="{{merge_request.granted === 1?\'已获得合并授权\':\'暂未获得合并授权\'}}" data-position="bottom center" cg-popup>\n                                <img ng-src="{{merge_request.author.lavatar}}" class="ui image avatar18">&nbsp;\n                                    {{merge_request.author.name}}\n                            </a>\n                        </div>\n                    </div>\n                    <div class="merge-request-right-item">\n                        <div class="merge-request-right-item-title">创建时间：</div>\n                        <div class="merge-request-right-item-content">\n                            <time cg-friendly-time="merge_request.created_at"></time>\n                        </div>\n                    </div>\n                    <div class="merge-request-right-item">\n                        <div class="merge-request-right-item-title">代码评审：</div>\n                        <div class="merge-request-right-item-content">\n                            <a ng-repeat="reviewer in reviewers" ng-href="{{reviewer.reviewer.path}}" ng-style="{\'color\':reviewer.value === 100?\'#32be77\':\'#333\'}" data-html="{{reviewer.value === 100 ? \'该用户已经同意此MR的评审\':\'该用户尚未对此MR进行评审\'}}" data-position="bottom center" cg-popup>\n                                <img ng-src="{{reviewer.reviewer.lavatar}}" class="ui image avatar18">&nbsp;\n                                <span>\n                                    {{reviewer.reviewer.name}}\n                                </span>\n                                <i ng-show="reviewer.value === 100" class="checkmark icon"></i>\n                            </a>\n                        </div>\n                    </div>\n                    <div class="merge-request-right-item" ng-show="volunteerReviewers.length > 0">\n                        <div class="merge-request-right-item-title">+1：</div>\n                        <div class="merge-request-right-item-content">\n                            <a ng-repeat="reviewer in volunteerReviewers" ng-href="{{reviewer.reviewer.path}}" ng-style="{\'color\':reviewer.value === 100?\'#32be77\':\'#333\'}" data-html="{{reviewer.value === 100 ? \'该用户已经同意此MR的评审\':\'该用户尚未对此MR进行评审\'}}" data-position="bottom center" cg-popup>\n                                <img ng-src="{{reviewer.reviewer.lavatar}}" class="ui image avatar18">&nbsp;\n                                <span>\n                                    {{reviewer.reviewer.name}}\n                                </span>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div ng-if="tasks.length > 0" class="merge-request-reference">\n                <div class="merge-request-reference-title">\n                    相关任务\n                </div>\n                <div ng-repeat="task in tasks" class="merge-request-reference-item">\n                    <a ng-href="{{task.link}}">\n                        <i class="icon tasks"></i>#{{task.code}} {{task.title}}\n                    </a>\n                </div>\n            </div>\n\n            <div ng-if="merge_request.merge_status == \'CANNOTMERGE\'" class="ui message">\n                <p><strong>Coding 不能帮你在线自动合并这个合并请求。可参照如下流程使用命令行来完成合并。</strong></p>\n                <div>\n                    <p>第一步：从项目仓库中，创建一个新的分支，并测试合并请求中的改动。<br>\n                    <code>\ngit fetch origin<br>\ngit checkout -b {{merge_request.srcBranch}} origin/{{merge_request.srcBranch}}<br>\ngit merge {{merge_request.desBranch}}\n                    </code>\n                    </p>\n                </div>\n                <p></p>\n                <div>\n                    <p>第二步：合并改动到目标分支，并推送到 Coding<br>\n                    <code>\ngit checkout {{merge_request.desBranch}}<br>\ngit merge --no-ff {{merge_request.srcBranch}}<br>\ngit push origin {{merge_request.desBranch}}<br>\n                    </code>\n                    </p>\n                </div>\n            </div>\n        </div>\n\n        <div id="merge-show-tabular" class="ui tabular menu">\n            <a class="item" ng-class="{active: show_diff == \'comments\'}" ng-click="showContent(\'comments\')">\n                评论 <span class="commits-count">{{commentCount || 0}}</span>\n            </a>\n            <a class="item" ng-class="{active: show_diff == \'commits\'}" ng-click="showContent(\'commits\')">\n                提交记录 <span class="commits-count">{{commits.length || 0}}</span>\n            </a>\n            <a class="item" ng-class="{active: show_diff == \'files\'}" ng-click="showContent(\'files\')">\n                文件改动 <span class="commits-count">{{diffStat.paths.length || 0}}</span>\n            </a>\n        </div>\n\n        <div ng-show="show_diff == \'comments\' && !comments_loaded">\n            <cg-monkey-loading image-size="50" container-margin="60"></cg-monkey-loading>\n        </div>\n        <div ng-include="\'app/git/partial/_comment.html\'" ng-show="show_diff == \'comments\' && comments_loaded"></div>\n\n        <div ng-include="\'app/git/partial/_diff_show.html\'" ng-show="show_diff == \'files\'" style="margin-bottom: 40px"></div>\n\n        <div class="diff-too-long" ng-if="!diffStat || !diffHtml && show_diff === \'files\'">\n            此 commit 改动太多，不宜在网页上展示，\n            点此下载 <a target="_blank" ng-href="{{ PROJECT.project_path }}/git/merge/{{ merge_request.iid }}.diff">diff 文件</a> 或\n            <a target="_blank" ng-href="{{ PROJECT.project_path }}/git/merge/{{ merge_request.iid }}.patch">patch 文件</a>\n            到本地\n        </div>\n\n        <div ng-include="\'app/git/partial/_commits_list.html\'" ng-show="show_diff == \'commits\'" class="commits"></div>\n\n    </div>\n</div>\n\n<div class="ui modal tiny" ng-controller="MergeRequestMergeModalCtrl" cg-modal="mergeRequestMergeModal" ng-include="\'app/git/merge/merge_modal.html\'"></div>\n\n<div class="ui modal tiny" ng-controller="MergeRequestSquashModalCtrl" cg-modal="mergeRequestSquashModal" ng-include="\'app/git/merge/squash_modal.html\'"></div>'),
            $templateCache.put("app/git/merge/squash_modal.html", '<div class="header">\n    合并提交记录 ( <span ng-bind="merge_request.srcBranch + \' 分支\'"></span> )\n</div>\n<form class="merge-request-squash-form ui form">\n    <div class="content" style="border-radius: 5px">\n        <div class="ui green segment">\n            <p>\n                合并提交记录 (Squash) 用来将 Merge Request 中多个 提交记录 (Commits) 合并为一个, 以便 代码评审 (Code Reivew) 以及 将来可能出现的 Revert 操作\n            </p>\n            <p>\n                <sep>*</sep>注：该合并操作是不可逆的, 建议只对 特性分支 进行该操作,请慎重对 master 等重要分支进行 squash!\n            </p>\n        </div>\n        <div class="field">\n            <label style="color: #666;margin-bottom: 10px">Squash Commit Message <span ng-if="preview">Preview</span></label>\n        </div>\n        <div class="field" ng-show="!preview">\n            <div class="fake-folded-editor" ng-if="!customized_msg" ng-click="toggleCustomized($event)"></div>\n            <textarea class="squash-message" name="squash_message" placeholder="请输入自定义 Commit Message" ng-if="customized_msg" ng-model="messages[\'customized\']" cg-refer-resource="PROJECT" cg-textarea-editable cg-auto-focus="resetCustomizedMsg()"></textarea>\n        </div>\n        <div class="field" ng-show="!customized_msg && !preview">\n            <label style="color: #666;margin-bottom: 10px">挑选保留的 Commit Message</label>\n            <div class="commit-messages" cg-perfect-scroll-bar="false">\n                <div class="ui checkbox" ng-repeat="commit in merge_request.commits">\n                    <input type="checkbox" id="{{ commit.commitId }}" ng-checked="$index === 0" ng-model="messages[commit.commitId]">\n                    <label for="{{ commit.commitId }}" ng-bind-html="commit.shortMessage"></label>\n                </div>\n            </div>\n        </div>\n        <div class="field" ng-show="preview" cg-perfect-scroll-bar="preview_msg">\n            <pre class="ui segment squash-msg-preview" ng-bind-html="preview_msg"></pre>\n        </div>\n        <div class="field" style="margin: 0">\n            <div class="ui button" ng-click="toggleSquashModal()">取消</div>\n            <div class="ui button green" ng-show="!loading" ng-click="squash();" ng-mouseenter="togglePreview(true)" ng-mouseleave="togglePreview(false)">确认</div>\n            <div class="ui button green" ng-show="loading"><i class="loading icon"></i></div>\n            <div class="ui button floated right" ng-show="customized_msg" ng-click="toggleCustomized($event)">\n                选取 Commit Message\n            </div>\n        </div>\n    </div>\n</form>'),
            $templateCache.put("app/git/partial/_back-monkey.html", '<div class="back-monkey" style="text-align: center">\n    <img src="/static/4f771334f89c521df6a4b42fe4a69999.png" height="65" alt="">\n</div>'),
            $templateCache.put("app/git/partial/_breadcrumb.html", '<div ng-controller="BreadcrumbController" class="ui large breadcrumb tree-nav">\n    <a ng-if="type != \'commits\' && !path" target="_self" ng-href="{{PROJECT.project_path}}/git/archive/{{ref}}" class="ui small button">\n        <i class="cloud download icon"></i>下载\n    </a>\n\n    <div ng-if="type != \'blame\'" class="refs dropdown box">\n        <span class="refs selector" cg-ref-selector-dropdown=".ui.teal.dropdown.refs" cg-search-focus=".refs.search">\n          <div class="refs ref-block">\n              <i class="code fork icon"></i>\n              <span class="refs ref">{{ref | decodeUri}}</span>\n          </div>\n        </span>\n\n        <div class="ui teal dropdown refs">\n            <div class="menu">\n                <div>\n                    <div class="item search">\n                        <input type="search" class="refs search" ng-model="query">\n                    </div>\n                    <div class="item refs">\n                        <ul class="tab refs" ng-model="tab">\n                            <li ng-click="tab = 1">\n                                <a class="tab" ng-class="{active:tab==1?\'active\':\'\'}">分支</a>\n                            </li>\n                            <li ng-click="tab = 2">\n                                <a class="tab" ng-class="{active:tab==2?\'active\':\'\'}">标签</a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <div ng-switch on="tab">\n                    <div ng-switch-when="1" class="items box" refs-total="{{branches.length}}">\n                        <a ng-href="{{PROJECT.project_path}}/git/{{type}}/{{branch.name | encodeGitUri}}/{{path}}" ng-repeat="branch in branches | filter:query" ng-if="branches.length > 0">\n                            <div class="item">\n                                <i class="checkmark icon" ng-style="{\'visibility\':ref == branch.name ? \'visible\':\'hidden\'}"></i>{{branch.name}}\n                            </div>\n                        </a>\n\n                        <div ng-if="branches.length <= 0 || !branches" class="item">\n                            <i class="checkmark icon" style="visibility: hidden"></i>\n                            暂时没有分支\n                        </div>\n                    </div>\n                    <div ng-switch-when="2" id="tags_items" class="items box" refs-total="{{tags.length}}">\n                        <a ng-href="{{PROJECT.project_path}}/git/{{type}}/{{tag.name | encodeGitUri}}/{{path}}" ng-repeat="tag in tags | filter:query" ng-if="tags.length > 0">\n                            <div class="item">\n                                <i class="checkmark icon" ng-style="{\'visibility\':ref == tag.name ? \'visible\':\'hidden\'}"></i>{{tag.name}}\n                            </div>\n                        </a>\n\n                        <div class="item" ng-if="tags.length <= 0 || !tags">\n                            <i class="checkmark icon" ng-style="{\'visibility\':ref == tag.name ? \'visible\':\'hidden\'}"></i>\n                            暂时没有标签\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <a class="active section" href="{{PROJECT.project_path}}/git/tree/{{ref}}">{{PROJECT.name}}</a>\n\n    <div class="divider"> /</div>\n\n    <span cg-bread-crumb="ref" cg-path="path" ng-if="ref && path"></span>\n    <span ng-if="isHead && type == \'tree\'  && path && (PROJECT | isRole:MEMBER)"><div class="divider"> /\n    </div></span>\n    <span ng-if="type == \'new\' && !!path && (PROJECT | isRole:MEMBER)"><div class="divider"> /\n    </div></span>\n    <span ng-if="type == \'tree\' && can_edit"><a ng-href="{{PROJECT.project_path}}/git/new/{{ref}}/{{path}}"><i class="plus basic icon"></i></a></span>\n    <span ng-show="type == \'new\'" class="ui coding small input"><input type="text" ng-model="file.title" ng-change="checkTitle()"></span>\n\n    <div class="active" ng-if="type == \'tree\'" style="float: right">\n        <a class="history" ng-href="{{PROJECT.project_path}}/git/commits/{{ref}}/{{path}}">\n            <i class="time icon"></i>提交历史</a>\n    </div>\n\n    <div ng-if="type == \'tree\' && codeInsightTask" class="coding floated right" style="margin-right: 20px">\n        <a class="ui small button" ng-href="{{codeInsightTask.link}}" target="_blank" ng-class="{\'green\':codeInsightTask.status==3, \'yellow\': codeInsightTask.status==1||codeInsightTask.status==0, \'light gray\': codeInsightTask.status==-1}">代码阅读</a>\n    </div>\n\n    <div ng-show="type == \'new\'" class="git-new-file-select">\n        <span ng-show="showLicense || showGitIgnore">选择模板</span>\n        <select ng-show="showLicense" ui-select2="{width: \'250px\'}" ng-model="gitLicense" ng-include="\'app/user/license.html\'" ng-change="changeLicense(gitLicense)"></select>\n        <select ng-show="showGitIgnore" ui-select2="{width: \'250px\'}" ng-model="gitIgnore" ng-include="\'app/user/gitignore.html\'" ng-change="changeGitIgnore(gitIgnore)"></select>\n    </div>\n\n</div>'),
            $templateCache.put("app/git/partial/_comment.html", '<div class="merge-request-activity-filter" ng-if="tag_menu === \'merge\'">\n    <a class="gray" href="javascript:void(0);" ng-click="toggleMergeRequestActivity()">\n        <i ng-class="getShowMergeRequestActivityIcon(showMergeRequestActivity)"></i>只看评论\n    </a>\n</div>\n<div class="comments" ng-class="{\'git-comments\': comments && comments.length > 0}">\n    <div class="diff-notes-wrapper" bindonce ng-repeat="discussion in comments">\n        <div ng-show="discussion[0].action && showMergeRequestActivity" class="activity">\n            <div class="icon activity" ng-class="discussion[0].action">\n                <i class="icon" ng-class="getActivityIcon(discussion[0].action)"></i>\n            </div>\n            <div class="detail">\n                <a class="gray" bo-href="discussion[0].author.path" bo-text="discussion[0].author.name"></a>\n                <span>{{getActivityHuman(discussion[0].action)}}</span>\n                -\n                <span cg-friendly-time="discussion[0].created_at"></span>\n                <div ng-if="discussion[0].comment" class="commits">\n                    <div ng-repeat="commit in discussion[0].comment.commits">\n                        <div class="commit" bindonce="commit" ng-init="show_commit_message = false;">\n                            <i class="icon code"></i>\n                            <a bo-href="commit.committer.link" bo-text="commit.committer.name"></a> :\n                            <a bo-href="PROJECT.project_path + \'/git/commit/\' + commit.commitId">[{{commit.commitId | shortCommitId}}]</a>\n                            <a class="gray" bo-href="PROJECT.project_path + \'/git/commit/\' + commit.commitId" bo-html="commit.shortMessage"></a>\n                            <span class="hidden-text-expander" ng-show="commit.allMessage">\n                                <a class="gray" href="javascript:void(0);" ng-click="show_commit_message = !show_commit_message">...</a>\n                            </span>\n                            <div class="all-message" ng-if="show_commit_message">\n                                <a class="gray" bo-href="PROJECT.project_path + \'/git/commit/\' + commit.sha" bo-html="commit.allMessage"></a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class="comment" bindonce ng-if="!discussion[0].commitId && !discussion[0].action" ng-repeat="item in discussion">\n            <a name="mr-comment-{{item.id}}" bo-if="item.noteable_type == \'MergeRequestBean\'"></a>\n            <a name="pr-comment-{{item.id}}" bo-if="item.noteable_type == \'PullRequestBean\'"></a>\n            <a class="commont-avatar" bo-href="item.author.path">\n                <img class="ui avatar image" width="36" bo-src="item.author.avatar">\n            </a>\n            <div class="content-wrapper">\n                <div class="content markdown" clip-copy-code="pre" cg-highlight="item.content">\n                </div>\n                <div class="time">\n                    <span class="mr10">\n                        <a class="gray" bo-href="item.author.path" bo-text="item.author.name"></a>\n                    </span>\n                    <span class="mr10">\n                        <i class="time icon"></i><span cg-friendly-time="item.created_at"></span>\n                    </span>\n                    <span class="mr10" ng-if="USER">\n                        <a class="gray reply" href="javascript:void(0);" ng-click="replyMerges(item);" cg-scroll-to scroll-to="#merges-comment-editor">\n                            <i class="chat outline icon"></i>回复\n                        </a>\n                    </span>\n                    <span class="mr10" ng-if="USER.id == item.author.id || (PROJECT | isRole:OWNER)">\n                        <a class="gray remove" href="javascript:void(0);" ng-click="delComment(item);">\n                            <i class="remove icon"></i>删除\n                        </a>\n                    </span>\n                </div>\n            </div>\n        </div>\n        <div class="diff-notes-wrapper" ng-class="{outdated: hideDiff}" bindonce ng-if="discussion[0].commitId && !discussion[0].action" ng-init="inline = true; diffHtml = discussion[0].diff_html; diffComments = discussion; hideDiff = discussion[0].outdated">\n            <div class="activity code">\n                <div class="button toggle-diff" ng-click="hideDiff = !hideDiff">\n                    <i class="icon" ng-class="{expand: hideDiff, collapse: !hideDiff}"></i>\n                    {{hideDiff ? \'展开详情\' : \'隐藏详情\'}}\n                </div>\n                <div class="icon activity">\n                    <i class="icon" ng-class="{code: !discussion[0].outdated, close: discussion[0].outdated}"></i>\n                </div>\n                <div class="detail">\n                    <a class="gray" bo-href="discussion[0].author.path" bo-text="discussion[0].author.name"></a>\n                    <span>{{discussion[0].outdated ? \'对过时的文件改动发起了讨论\' : \'对文件改动发起了讨论\'}}</span>\n                    -\n                    <span cg-friendly-time="discussion[0].created_at"></span>\n                </div>\n            </div>\n            <div class="commit-diff" cg-diff ng-init="notes_params = undefined"></div>\n            <div cg-diff-notes ng-init="commitId = discussion[0].commitId; noteable_type = discussion[0].noteable_type; noteable_id = discussion[0].noteable_id; path = discussion[0].path; position = discussion[0].position; line = discussion[0].line; anchor = discussion[0].anchor"></div>\n        </div>\n    </div>\n    <div class="empty list" ng-if="comments_loaded && comments.length == 0"><i class="coffee icon"></i>还没人评论<span ng-if="USER">，来一发？</span></div>\n    <div class="empty list" ng-if="comments_loading"><i class="loading icon"></i>正在加载评论~</div>\n    <!-- <div cg-pager="{{topic_detail_pager_id}}"></div> -->\n</div>\n\n<form id="merges-comment-form" ng-if="USER">\n    <div id="merges-comment-editor" editor-id="merges-comment-editor" cg-light-md-editor="addComment" data-ng-model="comment.content" on-change="onCommentChange" at-item="atConfig.target" at-context-type="atConfig.type" extra-item="atConfig.extra" show-submit="true" img-compression="false" project_dependency="PROJECT">\n    </div>\n</form>'),
            $templateCache.put("app/git/partial/_commits-item.html", '<li class="commit-list-item" ng-repeat="commit in commitz">\n    <div class="committer-gravatar">\n        <div class="ava">\n            <a ng-href="{{commit.committer.link}}">\n                <img height="36" width="36" ng-src="{{commit.committer.avatar}}" title="{{commit.committer.name}}">\n            </a>\n        </div>\n    </div>\n    <div>\n        <p class="commit-title">\n            <a class="ellipsis" ng-href="{{PROJECT.project_path}}/git/commit/{{commit.commitId}}" cg-bind-html="commit.shortMessage"></a>\n            <span ng-if="commit.allMessage.length > 0" class="hidden-text-expander">\n                <a href="javascript:void(0);" ng-click="commit.show_full_message = !commit.show_full_message">...</a>\n            </span>\n        </p>\n        <div class="commit-meta">\n            <a class="author" ng-href="{{commit.committer.link}}">{{commit.committer.name}}</a>\n            <time cg-friendly-time="commit.commitTime"></time>\n        </div>\n        <div class="commit-desc" ng-if="commit.show_full_message">\n            <pre class="commit-message-full" cg-bind-html="commit.allMessage"></pre>\n        </div>\n    </div>\n    <div class="commit-links">\n        <span class="comment-count" ng-if="commit.notesCount > 0" class="margin-right: 10px;">\n            <i class="comment icon"></i>{{commit.notesCount}}\n        </span>\n        <a class="commit-links-sha" ng-href="{{PROJECT.project_path}}/git/commit/{{commit.commitId}}">\n            <code>{{commit.commitId | shortCommitId:10}}</code>\n        </a>\n        <i ng-if="type == \'commits\'" class="icon" ng-class="{\'green checkmark\':commit.showCopyIcon,\'paste\':!commit.showCopyIcon}" clip-copy="commit.commitId" clip-click="copyCommit(commit)"></i>\n        <!--<i class="ui icon green checkmark" ng-if="type == \'commits\' && commit.showCopyIcon"></i>-->\n        <a class="bcode" ng-href="{{PROJECT.project_path}}/git/tree/{{commit.commitId}}">源码</a>\n        &nbsp;&nbsp;\n        <a ng-if="(PROJECT | isRole:MEMBER) && type == \'commits\' && !path" ng-href="{{PROJECT.depot_path}}/tags/create?startWith={{commit.commitId}}">\n            <i class="tag icon"></i>\n        </a>\n    </div>\n</li>'),
            $templateCache.put("app/git/partial/_commits_list.html", '<div class="commit-list">\n\n    <div ng-repeat="(date, commitz) in commitsWithDate | commitsToArray | orderBy: date">\n\n\n        <div class="commit-group-title">\n            <i class="icon coding-commit coding"></i>\n            {{commitz.$key}}\n        </div>\n\n        <ol class="commit-group" ng-include="\'app/git/partial/_commits-item.html\'"></ol>\n\n    </div>\n    <div class="no-more center empty list" ng-if="!commits || commits.length == 0">\n        没有更多提交了~\n    </div>\n</div>'),
            $templateCache.put("app/git/partial/_diff_show.html", '<div class="commit-diff-stat">\n    <p class="commit-diff-header clearfix" ng-show="!diffStat">\n        改动太大，无法在网页上展示。\n    </p>\n\n    <p class="commit-diff-header clearfix" ng-show="!!diffStat && diffStat.paths.length <= 1000">\n        <span><i class="info icon"></i></span><span class="toggle-diff-stat" cg-show-stat="commit-diff-stat-list" is-show="false">{{diffStat.paths.length || 0}} 个文件</span>，共 <strong>{{diffStat.insertions || 0}} 新增</strong> 和 <strong>{{diffStat.deletions || 0}} 删除</strong>\n        <a ng-click="location.search(\'diff\', \'split\')" class="ui green button small diff-mode-button" ng-show="diffMode != \'split\'">左右对比</a>\n        <a ng-click="location.search(\'diff\', \'normal\')" class="ui green button small diff-mode-button" ng-show="diffMode == \'split\'">普通模式</a>\n        <span class="ui diff-mode-box" ng-class="{wide:isExpActive(\'codecolor_inlinediff\')}" cg-diff-options>\n        <span class="ui simple dropdown" ng-show="isExpActive(\'codecolor_inlinediff\')">\n            更多<i class="dropdown icon"></i>\n            <span class="menu">\n                <span class="item" ng-show="isExpActive(\'codecolor_inlinediff\')">\n                <span class="ui toggle checkbox small">\n                    <input ng-model="colorOn" type="checkbox" id="color_on" ng-change="setOption(\'colorOn\', colorOn)">\n                    <label for="color_on">代码高亮</label>\n                </span>\n                </span>\n                <span class="item" ng-show="isExpActive(\'codecolor_inlinediff\')">\n                <span class="ui toggle checkbox small">\n                    <input ng-model="inlineDiffOn" type="checkbox" id="inline_diff_on" ng-change="setOption(\'inlineDiffOn\',inlineDiffOn)">\n                    <label for="inline_diff_on">行内对比</label>\n                </span>\n                </span>\n            </span>\n        </span>\n        <span class="ui toggle checkbox small diff-mode-button" ng-if="enableWhitespace">\n            <input ng-change="location.search(\'w\', ignoreWhitespace ? \'1\' : undefined)" ng-model="ignoreWhitespace" type="checkbox" id="ignore_whitespace">\n            <label for="ignore_whitespace">忽略空白</label>\n        </span>\n        <span class="ui toggle checkbox small diff-mode-button">\n            <input ng-model="diffShowTab" type="checkbox" id="diff_show_tab" ng-change="setOption(\'diffShowTab\', diffShowTab)">\n            <label for="diff_show_tab">显示制表符</label>\n        </span>\n        <span class="ui toggle checkbox small diff-mode-button" ng-show="diffMode !== \'split\'">\n            <input ng-model="diffWrap" type="checkbox" id="diff_wrap" ng-change="setOption(\'diffWrap\',diffWrap)">\n            <label for="diff_wrap">折行显示</label>\n        </span>\n        </span>\n        <span class="ui diff-mode-box" ng-class="{narrow:isExpActive(\'codecolor_inlinediff\')}" cg-diff-options>\n        <span class="ui simple dropdown" ng-show="isExpActive(\'codecolor_inlinediff\')">\n            选项<i class="dropdown icon"></i>\n            <span class="menu">\n                <span class="item" ng-show="isExpActive(\'codecolor_inlinediff\')">\n                <span class="ui toggle checkbox small">\n                    <input ng-model="colorOn" type="checkbox" id="color_on2" ng-change="setOption(\'colorOn\', colorOn)">\n                    <label for="color_on2">代码高亮</label>\n                </span>\n                </span>\n                <span class="item" ng-show="isExpActive(\'codecolor_inlinediff\')">\n                <span class="ui toggle checkbox small">\n                    <input ng-model="inlineDiffOn" type="checkbox" id="inline_diff_on2" ng-change="setOption(\'inlineDiffOn\',inlineDiffOn)">\n                    <label for="inline_diff_on2">行内对比</label>\n                </span>\n                </span>\n                <span class="item" ng-if="enableWhitespace">\n                <span class="ui toggle checkbox small">\n                    <input ng-change="location.search(\'w\', ignoreWhitespace ? \'1\' : undefined)" ng-model="ignoreWhitespace" type="checkbox" id="ignore_whitespace2">\n                    <label for="ignore_whitespace2">忽略空白</label>\n                </span>\n                </span>\n                <span class="item">\n                <span class="ui toggle checkbox small">\n                    <input ng-model="diffShowTab" type="checkbox" id="diff_show_tab2" ng-change="setOption(\'diffShowTab\', diffShowTab)">\n                    <label for="diff_show_tab2">显示制表符</label>\n                </span>\n                </span>\n                <span class="item" ng-show="diffMode !== \'split\'">\n                <span class="ui toggle checkbox small">\n                    <input ng-model="diffWrap" type="checkbox" id="diff_wrap2" ng-change="setOption(\'diffWrap\',diffWrap)">\n                    <label for="diff_wrap2">折行显示</label>\n                </span>\n                </span>\n            </span>\n        </span>\n        </span>\n    </p>\n    <p class="commit-diff-header clearfix" ng-show="!!diffStat && diffStat.paths.length > 1000">\n        <span><i class="info icon"></i></span><span class="toggle-diff-stat" cg-show-stat="commit-diff-stat-list" is-show="false">{{diffStat.paths.length || 0}} 个文件</span>\n    </p>\n\n    <div class="ui relaxed divided list commit-diff-stat-list" ng-if="(diffHtml && diffHtml.length > 0) || (!diffHtml && diffStat)">\n        <div class="item" ng-repeat="ds in diffStat.paths">\n            <span class="diff-stat">\n                <a class="diff-tip" cg-anchor="{{ds.path | pathToId}}" name="" title="{{ds.insertions || 0}} insertions & {{ds.deletions || 0}} deletions">\n                    <i class="insertions-bar">{{ ds.insertions }}</i>\n                    <i class="deletions-bar">{{ ds.deletions }}</i>\n                </a>\n            </span>\n            <span class="modify-type" modify="{{ds.changeType}}" title="{{ds.changeType}}">\n                <i class="add sign box icon add" ng-if="ds.changeType == \'ADD\'"></i>\n                <i class="edit sign icon modify" ng-if="ds.changeType == \'MODIFY\'"></i>\n                <i class="edit sign icon modify" ng-if="ds.changeType == \'RENAME\'"></i>\n                <i class="red minus sign alternate icon" ng-if="ds.changeType == \'DELETE\'"></i>\n            </span>\n            <a class="diff-path" cg-anchor="{{ds.path | pathToId}}"><code>{{ds.path}}</code></a>\n        </div>\n    </div>\n</div>\n<div class="commit-diff" ng-class="{tab: diffShowTab, wrap: diffWrap,\'color-off\': !colorOn, \'inline-diff-off\': !inlineDiffOn}" cg-diff></div>'),
            $templateCache.put("app/git/partial/_empty.html", '<div class="git-empty" ng-controller="ProjectTitleController">\n    <div ng-if="DEPOT.status != 2">\n        <div ng-if="USER.id==PROJECT.owner_id">\n            <div ng-include="\'app/git/partial/_back-monkey.html\'"></div>\n            <h2>当前项目没有代码</h2>\n            <p>使用 HTTPS 协议或者 SSH 协议地址 Push 代码或者按如下命令新建 Git 仓库</p>\n            <a class="about-git" href="/help/faq/git/git.html" target="_blank">不懂如何上传代码到 coding？ 请点击我 ></a>\n            <p>\n            我们建议所有的git仓库都有一个\n            <code><a ng-href="{{PROJECT.project_path}}/git/new/master?filename=README.md">README</a></code> ，\n            <code><a ng-href="{{PROJECT.project_path}}/git/new/master?filename=LICENSE">LICENSE</a></code> 和\n            <code><a ng-href="{{PROJECT.project_path}}/git/new/master?filename=.gitignore">.gitignore</a></code> 文件。\n            </p>\n\n            <div class="ui action input proto-url">\n                <div class="proto-switch" ng-style="{background:cur_clone_type==\'https\'?\'#EEE\':\'#FFF\'}" ng-click="changeCloneUrl(\'https\')">HTTPS</div>\n                <div class="proto-switch" ng-style="{background:cur_clone_type==\'ssh\'?\'#EEE\':\'#FFF\'}" ng-click="changeCloneUrl(\'ssh\')">SSH</div>\n                <input type="text" ng-model="cur_clone_url" style="height: 35px; border-radius: 0" readonly="readonly" onclick="this.select()">\n                <div class="ui right icon button mini copy-btn" clip-copy="cur_clone_url" clip-click="do_click()" style="line-height:10px;width:30px"><i class="icon" ng-class="{\'green checkmark\':copied,\'paste\':!copied}"></i></div>\n            </div>\n\n\n            <div ng-controller="InitDepotController">\n\n                <div class="scaffold-link" ng-click="showScaffoldForm = !showScaffoldForm">点击这里快速初始化仓库</div>\n\n                <div class="scaffold-form" ng-show="showScaffoldForm">\n                    <div class="git tab-bar">\n                        <a class="git tab-bar item" ng-class="{ active : initDepotForm.type === \'init\' }" ng-click="initDepotForm.type = \'init\'">初始化仓库</a>\n                        <a class="git tab-bar item" ng-class="{ active : initDepotForm.type === \'import\' }" ng-class="" ng-click="initDepotForm.type = \'import\'">导入仓库</a>\n                    </div>\n                    <div class="git tab-content" ng-class="{ active : initDepotForm.type === \'init\' }">\n                        <div class="field" style="margin: 1.2em 0">\n                            <div>\n                                <div class="ui checkbox">\n                                    <input type="checkbox" ng-model="initDepotForm.gitReadmeEnabled" id="git-readme-enabled">\n                                    <label for="git-readme-enabled">启用README.md文件初始化项目</label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="git select2">\n                            <select ui-select2="{width: \'240px\'}" ng-model="initDepotForm.gitLicense" id="git-license-enabled" ng-include="\'app/user/license.html\'"></select>\n                            <select ui-select2="{width: \'240px\'}" ng-model="initDepotForm.gitIgnore" id="git-ignore-enabled" ng-include="\'app/user/gitignore.html\'"></select>\n                        </div>\n                    </div>\n                    <div class="git tab-content" ng-class="{ active : initDepotForm.type === \'import\' }">\n                        <div class="field">\n                            <div class="ui radio checkbox" style="margin-right: 1em">\n                                <input id="git_vcs_type" type="radio" value="git" name="vcsType" ng-change="" ng-model="initDepotForm.vcsType">\n                                <label for="git_vcs_type" style="padding-left: 1.5em">Git</label>\n                            </div>\n\n                            <div class="ui radio checkbox" style="margin-right: 1em">\n                                <input id="svn_vcs_type" type="radio" value="svn" ng-model="initDepotForm.vcsType" name="vcsType">\n                                <label for="svn_vcs_type" style="padding-left: 1.5em">SVN/Subversion</label>\n                            </div>\n\n                            <div class="ui radio checkbox" style="margin-right: 1em">\n                                <input id="hg_vcs_type" type="radio" name="vcsType" ng-model="initDepotForm.vcsType" value="hg">\n                                <label for="hg_vcs_type" style="padding-left: 1.5em">Hg/Mercurial</label>\n                            </div>\n\n\n                            <i class="icon help tip" style="cursor: pointer" data-html="<div class=\'content\'>Coding.net 支持用户在创建项目的时候，导入外部的公开仓库（不需要提供认证的）。目前支持 Git 、SVN、Hg 三种类型仓库的导入。注意：为防止滥用，我们对单个仓库的导入时间做了限制，另外导入过程中请不要 Push 到远程仓库，导入结果会发送相关通知告知您。</div>" cg-help-popup=""></i>\n                        </div>\n                        <div class="field">\n                            <div class="ui fluid input" style="display:block;margin-top:20px">\n                                <input type="text" ng-model="initDepotForm.importFrom" placeholder="导入公开项目地址" style="padding: .65em 1em">\n                            </div>\n                        </div>\n                    </div>\n                    <a ng-click="initDepot()" class="git tab-btn" ng-class="{ disabled : canSubmit === false }">创<br>建</a>\n                </div>\n            </div>\n\n            <div class="quick-setup">\n                <div class="git tab-bar">\n                    <a class="git tab-bar item" ng-class="{ active : createDepotType === \'new\' }" ng-click="changeCreateDepotType(\'new\')">在命令行中创建 Git 仓库</a>\n                    <a class="git tab-bar item" ng-class="{ active : createDepotType === \'existing\' }" ng-click="changeCreateDepotType(\'existing\')">已有项目</a>\n                </div>\n                <div class="git tab-content" ng-class="{ active : createDepotType === \'new\' }">\n                    <pre>\n<code>{{newDepotCommondLine}}</code>\n                    </pre>\n                </div>\n                <div class="git tab-content" ng-class="{ active : createDepotType === \'existing\' }">\n                    <pre>\n<code>{{existingDepotCommondLine}}</code>\n                    </pre>\n                </div>\n                <a class="git tab-btn" clip-copy="copyCommondLine()" clip-click="doClickCopyCommondLine()"><i class="icon" style="margin: 0" ng-class="{\'green checkmark\':copiedCopyCommondLine,\'paste\':!copiedCopyCommondLine}"></i></a>\n            </div>\n\n        </div>\n        <div ng-if="USER.id !== PROJECT.owner_id" class="ui coding aligned center">\n            <p>此项目的 Git 仓库为空。</p>\n        </div>\n    </div>\n</div>\n<div ng-if="!DEPOT.default_branch && DEPOT.status == 2 && USER.id === PROJECT.owner_id" class="ui coding aligned center" ng-controller="ImportStatusController">\n    <div class="container" ng-include="\'app/git/partial/_loading.html\'"></div>\n    代码仓库正在从外部仓库 ({{DEPOT.origin_url}}) 导入中，稍后会自动刷新。\n</div>\n<div ng-if="!DEPOT.default_branch && DEPOT.status == 2 && USER.id !== PROJECT.owner_id" class="ui coding aligned center">\n    <p>此项目的 Git 仓库为空。</p>\n</div>'),
            $templateCache.put("app/git/partial/_loading.html", '<div class="git-loading-container">\n    <div class="git-loading monkey"></div>\n    <div id="git-loading-text"><img src="/static/9025e7ebf3f2073858a74b2a2e6245a4.png" width="40" height="40"></div>\n</div>'),
            $templateCache.put("app/git/partial/_readme.html", '<div class="readme-title">\n  <p><i class="book icon"></i> {{readme.name}}</p>\n</div>\n<div class="file-box">\n  <div class="file-preview">\n    <div class="blobmd">\n      <div class="markdown-body" clip-copy-code="pre" ng-if="readme.previewed" cg-highlight="readme.preview"></div>\n      <pre ng-if="!readme.previewed">{{readme.data}}</pre>\n    </div>\n  </div>\n</div>'),
            $templateCache.put("app/git/partial/inner_menu.html", '<style type="text/css">\n\n    #inner-menu .clone-panel {\n        font-size: 18px;\n        padding-left: 14px;\n        padding-right: 14px;\n    }\n\n    #inner-menu .clone-panel article {\n        margin: 5px 0px;\n        font-size: 12px;\n        font-weight: normal;\n        line-height: 16px;\n        color: #666;\n    }\n\n    .switch-btn,.fork-btn{\n        font-size: 11px;\n        cursor: pointer;\n    }\n    .switch-btn.disabled {\n        color: black;\n        font-weight: bold;\n    }\n    .switch-btn.disabled:hover {\n        text-decoration: none;\n    }\n    .switch-btn:hover {\n        text-decoration: underline;\n    }\n    #inner-menu .clone-panel .copied-tips{\n        font-size: 14px;\n        margin: 10px 0px;\n    }\n    #inner-menu .git-version-tips {\n        font-size: 10px;\n        margin-top: 10px;\n        color: #333;\n    }\n</style>\n<header class="header item">\n    Git 仓库\n    <article>\n        {{PROJECT.description}}\n    </article>\n</header>\n<a class="item" ng-href="{{PROJECT.project_path}}/git" ng-class="{active:inner_menu == \'basic\'}">\n    <i class="code icon"></i>代码\n</a>\n<a class="item" ng-href="{{PROJECT.project_path}}/git/branches" ng-class="{active:inner_menu == \'branch\'}">\n    <i class="fork code icon"></i>分支\n</a>\n<a class="item" ng-href="{{PROJECT.project_path}}/git/tags" ng-class="{active:inner_menu == \'tag\'}">\n    <i class="tags icon"></i>标签\n</a>\n<a class="item" ng-href="{{PROJECT.project_path}}/git/merges" ng-class="{active:inner_menu == \'merge\'}">\n    <i class="coding icon merge-request"></i>合并请求\n</a>\n<a class="item" ng-href="{{PROJECT.project_path}}/git/plot" ng-if="DEPOT.hasCommits" ng-class="{active:inner_menu == \'plot\'}">\n    <i class="basic globe icon"></i>项目网络\n</a>\n<a class="item" ng-href="{{PROJECT.project_path}}/git/graph" ng-if="DEPOT.hasCommits" ng-class="{active:inner_menu == \'stat\'}">\n    <i class="chart basic icon"></i>项目统计\n</a>\n<a class="item" ng-href="{{PROJECT.project_path}}/ide" ng-class="{active:inner_menu == \'ide\'}">\n    <i class="edit icon"></i>WebIDE\n</a>\n<a class="item" ng-if="USER.test | testMember: \'ci\'" ng-href="{{PROJECT.project_path}}/continuousIntegration" ng-class="{active:inner_menu == \'ci\'}">\n    <i class="lab icon"></i>持续集成\n</a>\n\n<div class="sep"></div>\n\n<div class="clone-panel" ng-controller="ProjectTitleController" style="font-size: 14px">\n    <a ng-click="changeCloneUrl(\'https\')" class="switch-btn" ng-class="{disabled:cur_clone_type==\'https\'}">HTTPS</a>\n    <a ng-click="changeCloneUrl(\'ssh\')" class="switch-btn" ng-class="{disabled:cur_clone_type==\'ssh\'}">SSH</a>\n    方式访问仓库:\n\n    <div class="ui action small input" style="font-size:12px; margin-top: 10px">\n        <input type="text" id="clone-url-input" ng-model="cur_clone_url" style="height: 35px" readonly="readonly" onclick="this.select()">\n        <div class="ui right icon button mini copy-btn" clip-copy="cur_clone_url" clip-click="do_click()" style="line-height:10px"><i class="icon" ng-class="{\'green checkmark\':copied,\'paste\':!copied}"></i></div>\n    </div>\n    <div class="git-version-tips">\n        建议使用 Git 1.8.0 以上的版本\n    </div>\n</div>\n<a class="scroll-holder" style="height: 90px"></a>'),
            $templateCache.put("app/git/plot/plot.html", '<div ng-class="{\'public-project-view\': PROJECT.is_public}">\n    <div ng-if="PROJECT.is_public" ng-include="\'app/git/public_view/inner_menu.html\'"></div>\n    <div ng-if="!PROJECT.is_public" ng-include="\'app/git/partial/inner_menu.html\'" class="ui secondary vertical fixed menu active" id="inner-menu"></div>\n\n    <div class="plot container git-container">\n        <div ng-if="!loaded">\n            <cg-monkey-loading image-size="50" container-margin="60"></cg-monkey-loading>\n        </div>\n        <select ui-select2="{width:\'250px\'}" ng-show="loaded" ng-model="current_branch" ng-change="changeCurrentBranch(current_branch)">\n            <option ng-repeat="branch in branches" value="{{branch.name}}">\n                {{branch.name}}\n            </option>\n        </select>\n        <div class="plot view" ng-show="loaded">\n            <div id="network">\n                <div class="info">\n                    <i class="dot"></i>连续相同颜色代表同一天的 Commit ， <i class="cdot"><i></i></i>代表某一个 tag 的 Commit\n                    。使用鼠标滚轮或拖动右侧滚动条滚动。\n                </div>\n                <div class="svg" data-url="{{plot_url}}" cg-plot-view="loadPlot" cg-plot-view-load-length="100">\n                    <div class="ui active dimmer">\n                        <div class="ui large text loader">Loading</div>\n                    </div>\n                </div>\n                <div class="more">\n                    <span ng-if="loadMoreing && hasPlotData"><i class="loading icon"></i>正在加载更多数据</span>\n                    <span ng-if="!loadMoreing && hasPlotData" style="text-decoration: underline" ng-click="loadPlotMore()">点击加载更多</span>\n                    <span ng-if="!hasPlotData">数据已经全部加载完毕</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>'),
            $templateCache.put("app/git/public_view/forks.html", '<div class="public-project-view">\n    <div ng-if="PROJECT.is_public" ng-include="\'app/git/public_view/inner_menu.html\'"></div>\n    <div class="container" ng-if="!loaded">\n     <cg-monkey-loading image-size="50" container-margin="60"></cg-monkey-loading>\n</div>\n    <div class="forks container" ng-if="loaded">\n        <div>\n            <h2>Fork 了 {{PROJECT.name}} 的人</h2>\n            <hr>\n            <p>{{PROJECT.name}} 项目由 {{PROJECT.owner.name}} 发起。此处显示的是 {{PROJECT.name}} 的 Fork 树。</p>\n            <div class="ui divided list pr-list">\n                <div class="item" ng-repeat="depot in list" ng-class="{\'children\': depot.id != depot.root_id, \'last-children\': $index == list.length-1}">\n                    <div class="line" ng-if="depot.id != depot.root_id">\n                            <hr class="line cross-line">\n                    </div>\n                    <div class="item" ng-class="{child: depot.id != depot.root_id}">\n                        <a href="/u/{{depot.owner.global_key}}">\n                            <img class="ui avatar image" ng-src="{{depot.owner.avatar}}">\n                        </a>\n\n                        <div class="content">\n                            <div class="header">\n                                <a href="{{depot.depot_path}}">{{depot.path}}</a>\n                                <span class="root-label" ng-if="depot.id == depot.root_id">根项目</span>\n                            </div>\n                            <span class="author">{{depot.owner.name}} {{depot.id == depot.root_id ? \'创建\':\'Fork\'}}于</span>\n                            <span class="time" cg-friendly-time="depot.created_at"></span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>'),
            $templateCache.put("app/git/public_view/inner_menu.html", '<style>\n    #project-clone-url {\n        display: inline-block;\n        border: 1px solid #d8d8d8;\n        border-right: none;\n        height: 25px;\n        padding: 0 5px;\n        line-height: 27px;\n        border-radius: 2px 0 0 2px;\n\n    }\n</style>\n\n<div ng-controller="ProjectTitleController" class="public-project-view-top" style="height:60px">\n\n    <div class="project-title ui coding">\n        <img class="project-logo" ng-src="{{PROJECT.icon}}" alt="项目logo" width="48px" height="48px">\n\n        <div class="project-name">\n            <span ng-bind-html="PROJECT.owner_user_home"></span>/<a ng-href="{{PROJECT.project_path}}/git">{{PROJECT.name}}</a>\n            <span ng-if="PROJECT.recommended >= 1" style="font-size: 22px;position: relative;top:4px"><i class="ui coding icon coding-recommended red"></i></span>\n\n            <div class="watch-panel ui coding floated right">\n                <a ng-href="{{PROJECT.depot_path}}/pull/create" ng-if="PROJECT.forked && PROJECT.owner_id == USER.id">\n                    <span class="watch button pulls"><i class="coding icon pull-request"></i>\n                        Pull Request\n                    </span>\n                </a>\n\n                <span ng-if="!PROJECT.stared" ng-click="star()">\n                    <a class="watch button" title="点击收藏此项目"><i class="star icon"></i> 收藏</a>\n                </span>\n                <span ng-if="PROJECT.stared" ng-click="unstar()">\n                    <a class="watch button" title="点击取消收藏">\n                        <i class="green checkmark icon"></i>\n                        {{stared_msg}}\n                    </a>\n                </span>\n                <span class="watch count">\n                    <a ng-href="{{PROJECT.project_path}}/stargazers">\n                        {{PROJECT.star_count}}\n                    </a>\n                </span>\n\n                <span ng-if="!PROJECT.watched" ng-click="watch()">\n                    <a class="watch button" title="点击关注此项目"><i class="unhide icon"></i> 关注</a>\n                </span>\n                <span ng-if="PROJECT.watched" ng-click="unwatch()">\n                    <a class="watch button" title="点击取消关注"><i class="green checkmark icon"></i>\n                        {{watched_msg}}\n                    </a>\n                </span>\n                <span class="watch count">\n                    <a ng-href="{{PROJECT.project_path}}/watchers">\n                        {{PROJECT.watch_count}}\n                    </a>\n                </span>\n\n                <span ng-show="PROJECT.owner_id == USER.id">\n                    <a class="watch button"><i class="coding icon fork"></i>Fork</a>\n                </span>\n                <span ng-show="PROJECT.owner_id != USER.id" ng-click="fork()">\n                    <a class="watch button"><i class="coding icon fork"></i>Fork</a>\n                </span>\n                <span class="watch count">\n                    <a ng-href="{{PROJECT.depot_path}}/forks">\n                        {{PROJECT.fork_count}}\n                    </a>\n                </span>\n\n            </div>\n        </div>\n        <span class="project-fork" ng-if="PROJECT.forked && DEPOT.parent.depot_path">Fork 自\n            <a ng-href="{{DEPOT.parent.depot_path}}">{{PROJECT.parent_depot_path}}</a>\n        </span>\n    </div>\n\n    <div class="public-project-view-third ui coding clearfix">\n        <div style="width:900px;display:inline-block;float:left;word-break: break-all" ng-if="PROJECT.is_public && PROJECT.description" cg-show-more="PROJECT.description" limit-to="200"></div>\n        <div style="width:900px;display:inline-block;float:left" ng-if="!(PROJECT.is_public && PROJECT.description)">\n            暂无描述\n\n        </div>\n        <div class="clone-panel coding ui floated right">\n            <div class="ui action input mini">\n                <div id="project-clone-url" class="ui dropdown project-clone-url-button coding floated left">\n                    <div class="text" style="line-height:27px">HTTPS</div>\n                    <i class="dropdown icon" style="margin: 0"></i>\n\n                    <div class="menu">\n                        <div ng-click="changeCloneUrl(\'https\');" class="item">HTTPS</div>\n                        <div ng-click="changeCloneUrl(\'ssh\')" class="item">SSH</div>\n                        <div ng-click="changeCloneUrl(\'git\')" class="item">GIT(只读)</div>\n                    </div>\n                </div>\n                <input type="text" ng-model="cur_clone_url" readonly="readonly" onclick="this.select()" style="border-radius:0;height: 27px; width: 150px;padding: 0.5em 0.5em">\n\n                <div class="ui right icon button mini copy-btn" clip-copy="cur_clone_url" clip-click="do_click()" style="padding:0 10px;border:1px solid #ddd;box-shadow:none;position: relative;left:-1px;line-height:10px"><i class="icon" ng-class="{\'green checkmark\':copied,\'paste\':!copied}"></i></div>\n            </div>\n        </div>\n    </div>\n\n</div>\n<div class="ui coding clearfix"></div>\n\n<div ng-if="tag_menu != \'forks\' || tag_menu != \'watchers\' || tag_menu != \'stargazers\'" ng-controller="publicProjectViewController" class="public-project-view-second">\n    <div class="public-project-view-second ui tabular menu" ng-init="project_path = PROJECT.project_path;">\n        <a class="item" ng-class="{active:tag_menu == \'basic\'}" ng-href="{{project_path}}/git">代码</a>\n        <a class="item" ng-class="{active:tag_menu == \'branch\'}" ng-href="{{project_path}}/git/branches">分支</a>\n        <a class="item" ng-class="{active:tag_menu == \'tag\'}" ng-href="{{project_path}}/git/tags">标签</a>\n        <a class="item" ng-class="{active:tag_menu == \'pulls\'}" ng-href="{{PROJECT.depot_path}}/pulls">Pull Request</a>\n        <a class="item" ng-class="{active:tag_menu == \'plot\'}" ng-if="DEPOT.hasCommits" ng-href="{{project_path}}/git/plot">项目网络</a>\n        <a class="item" ng-class="{active:tag_menu == \'stat\'}" ng-if="DEPOT.hasCommits" ng-href="{{project_path}}/git/graph">项目统计</a>\n        <a class="item" ng-class="{active:tag_menu == \'ide\'}" ng-if="PROJECT.current_user_role === \'owner\' || PROJECT.current_user_role === \'member\'" ng-href="{{project_path}}/ide">WebIDE</a>\n        <a class="item" ng-class="{active:tag_menu == \'ci\'}" ng-if="(USER.test | testMember: \'ci\') && (PROJECT.current_user_role === \'owner\' || PROJECT.current_user_role === \'member\')" ng-href="{{project_path}}/continuousIntegration">持续集成</a>\n        <a class="item" ng-class="{active:tag_menu == \'topic\'}" ng-href="{{project_path}}/topic">讨论</a>\n        <a class="item" ng-class="{active:tag_menu == \'paas\'}" ng-href="{{project_path}}/paas">演示</a>\n        <a class="item" ng-class="{active:tag_menu == \'qc\'}" ng-href="{{project_path}}/qc">质量管理</a>\n        <a class="item" ng-class="{active:tag_menu == \'setting\'}" ng-if="USER.id == PROJECT.owner_id" ng-href="{{project_path}}/setting">设置</a>\n        <a class="item" ng-class="{active:tag_menu == \'members\'}" ng-if="PROJECT | isRole:MEMBER" ng-href="{{project_path}}/members">项目成员</a>\n    </div>\n</div>'),
            $templateCache.put("app/git/public_view/stargazers.html", '<div class="public-project-view">\n    <div ng-if="PROJECT.is_public" ng-include="\'app/git/public_view/inner_menu.html\'"></div>\n    <div class="container" ng-if="!loaded">   \n     <cg-monkey-loading image-size="50" container-margin="60"></cg-monkey-loading>\n</div>\n    <div ng-if="loaded">\n      <h2>收藏了 {{PROJECT.name}} 的人</h2>\n      <hr>\n      <div style="padding-top:20px">\n          <div class="public-project-view-watchers" ng-if="stargazers.length > 0" ng-repeat="user in stargazers">\n            <div class="avatar">\n                <a ng-href="/u/{{user.global_key}}"><img class="ui image avatar64" ng-src="{{user.avatar}}"></a>\n            </div>\n            <div class="info">\n                <a ng-href="/u/{{user.global_key}}">{{user.name}}</a>\n            </div>\n            <div class="action">\n                <div ng-if="user.followed && user.id != USER.id" class="ui down tiny gray button" ng-click="unfollow(user);">\n                    <i class="minus icon"></i>\n                    取消关注\n                </div>\n                <div ng-if="!user.followed && user.id != USER.id" class="ui down tiny green button" ng-click="follow(user);">\n                    <i class="add icon"></i>\n                    关注\n                </div>\n                <div ng-if="user.id != USER.id" class="ui down black tiny button" ng-click="showSendMsgDialog(user)">\n                    给TA私信\n                </div>\n                <div ng-if="user.id == USER.id" class="ui green label self" style="line-height: 14px">\n                    你自己\n                </div>\n            </div>\n          </div>\n      </div>\n    </div>\n</div>'),
            $templateCache.put("app/git/public_view/watchers.html", '<div class="public-project-view">\n    <div ng-if="PROJECT.is_public" ng-include="\'app/git/public_view/inner_menu.html\'"></div>\n    <div class="container" ng-if="!loaded">\n     <cg-monkey-loading image-size="50" container-margin="60"></cg-monkey-loading>\n    </div>\n    <div ng-if="loaded">\n      <h2>关注了 {{PROJECT.name}} 的人</h2>\n      <div style="padding-top:20px">\n          <div class="public-project-view-watchers" ng-if="watchers.length > 0" ng-repeat="user in watchers">\n            <div class="avatar">\n                <a ng-href="/u/{{user.global_key}}"><img class="ui image avatar64" ng-src="{{user.avatar}}"></a>\n            </div>\n            <div class="info">\n                <a ng-href="/u/{{user.global_key}}">{{user.name}}</a>\n            </div>\n            <div class="action">\n                <div ng-if="user.followed && user.id != USER.id" class="ui down small gray button" ng-click="unfollow(user);">\n                    <i class="minus icon"></i>\n                    取消关注\n                </div>\n                <div ng-if="!user.followed && user.id != USER.id" class="ui down small green button" ng-click="follow(user);">\n                    <i class="add icon"></i>\n                    关注\n                </div>\n                <div ng-if="user.id != USER.id" class="ui down black small button" ng-click="showSendMsgDialog(user)">\n                    给TA私信\n                </div>\n                <div ng-if="user.id == USER.id" class="ui green label self" style="line-height: 10px">\n                    你自己\n                </div>\n            </div>\n        </div>\n      </div>\n    </div>\n</div>'),
            $templateCache.put("app/git/pull/index.html", '<div class="public-project-view">\n    <div class="pull-request container git-container">\n        <div ng-include="\'app/git/public_view/inner_menu.html\'"></div>\n        <div ng-controller="PullRequestQueryFilterController" id="pull-request-filter" class="ui simple dropdown coding floated right">\n            <div class="text">{{ getFilter() }}</div>\n            <i class="dropdown icon"></i>\n\n            <div class="menu">\n                <div class="item" ng-click="change_status(\'open\')">未处理</div>\n                <div class="item" ng-click="change_status(\'closed\')">已处理</div>\n                <div class="item" ng-click="change_status(\'all\')">全部</div>\n            </div>\n        </div>\n        <div ng-if="!loaded">\n                <cg-monkey-loading image-size="50" container-margin="60"></cg-monkey-loading>\n        </div>\n        <div ng-if="loaded">\n        <div ng-if="data.list" class="pr-list" style="padding-top: 10px">\n            <div class="pr-item" ng-repeat="pull_request in data.list">\n                <div class="content">\n                    <div class="header">\n                        <span class="pr-id">#{{pull_request.iid}}</span>\n                        <a href="{{pull_request.path}}">{{pull_request.title}}</a>\n                        <div class="pull-right">\n                            <span class="pr-label src">{{pull_request.src_owner_name ? pull_request.src_owner_name:\'已删除项目\'}}:{{pull_request.srcBranch}}</span>\n                                <i class="long arrow right icon"></i>\n                            <span class="pr-label des">{{PROJECT.owner_user_name}}:{{pull_request.desBranch}}</span>\n                        </div>\n                    </div>\n                    <div class="footer">\n                        <a href="{{pull_request.author.path}}">\n                            <img class="author-gravatar" width="20" height="20" ng-src="{{pull_request.author.avatar}}">\n                            <div class="pr-author">\n                                {{pull_request.author.name}}\n                            </div>\n                        </a>\n                        <span class="pr-created-at">\n                            创建于\n                        </span>\n                        <span class="time" cg-friendly-time="pull_request.created_at"></span>\n                        <span class="pull-right pr-merged-time" ng-if="pull_request.action_at">\n                            于\n                            <span cg-friendly-time="pull_request.action_at"></span>\n                        </span>\n                        <span class="pull-right pr-status {{pull_request.merge_status.toLowerCase()}}">{{getMergeStatusHuman(pull_request.merge_status)}}</span>\n                    </div>\n                </div>\n                <div class="ui divider"></div>\n            </div>\n        </div>\n        <div cg-pager="{{pager_id}}" class="center"></div>\n        <div style="margin-top: 30px" ng-if="!data.list || data.list.length == 0">\n            <div ng-include="\'app/git/partial/_back-monkey.html\'"></div>\n            <p class="ui coding aligned center" style="margin-top: 55px"><strong style="font-size: 18px">暂无{{ getFilterByCenter() }}合并请求</strong></p>\n        </div>\n    </div>\n    </div>\n</div>'),
            $templateCache.put("app/git/pull/new.html", '<div class="public-project-view">\n    <div class="pull-request container git-container">\n    <div ng-include="\'app/git/public_view/inner_menu.html\'"></div>\n    <form class="ui form segment" ng-submit="submitPullRequest(pr_create.pull_request);" method="post">\n        <div class="field">\n        <label>源分支</label>\n        <select ui-select2="{width:\'250px\'}" id="pr-src-branches" ng-change="changeDepot(pr_create.pull_request);" ng-model="pr_create.pull_request.srcBranch">\n            <option ng-repeat="branch in branches" value="{{branch.name}}" ng-selected="pr_create.pull_request.srcBranch == branch.name">\n                {{branch.name}}\n            </option>\n        </select>\n        </div>\n        <div class="field">\n            <label>目标项目-目标分支</label>\n        <select ui-select2="{width:\'250px\'}" id="pr-des-depots" ng-change="changeDepot(pr_create.pull_request);" ng-model="pr_create.pull_request.des_path">\n            <option ng-repeat="depot in pr_create.depots" value="{{depot.path}}" ng-selected="pr_create.pull_request.des_path == depot.path">\n                {{depot.path}}\n            </option>\n        </select>\n        -\n        <select ui-select2="{width:\'250px\'}" id="pr-des-branches" ng-change="changeDepot(pr_create.pull_request);" ng-model="pr_create.pull_request.desBranch">\n            <option ng-repeat="des_branch in pr_create.des_branches" value="{{des_branch.name}}" ng-selected="pr_create.pull_request.desBranch == des_branch.name">\n                {{des_branch.name}}\n            </option>\n        </select>\n        </div>\n        <div class="field">\n            <div class="ui input">\n                <input type="text" name="title" placeholder="输入Pull Request标题" ng-model="pr_create.pull_request.title">\n            </div>\n        </div>\n\n        <div class="field">\n            <div class="ui input" cg-pagedown="contentUpdate($content)" id="-1" ng-model="pr_create.pull_request.content">\n                <textarea placeholder="输入Pull request详细描述" ng-model="pr_create.pull_request.content" cg-refer-resource="PROJECT" cg-at-context at-context-type="\'pull_request\'" at-item="PROJECT" cg-at-emoji cg-textarea-editable></textarea>\n            </div>\n        </div>\n\n        <div>\n            <input type="submit" value="提交" class="ui blue submit button">\n        </div>\n    </form>\n\n    <div ng-if="loading" ng-include="\'app/git/partial/_loading.html\'"></div>\n    <div ng-if="!loading">\n        <h4 class="ui header">改动明细</h4>\n        <div class="ui divider"></div>\n\n        <div class="ui tabular menu">\n            <a class="item" ng-class="{active: show_diff == \'commits\'}" ng-click="switchTab(\'commits\')">\n                提交记录 <span class="commits-count">{{commits.length || \'0\'}}</span>\n            </a>\n            <a class="item" ng-class="{active: show_diff == \'files\'}" ng-click="switchTab(\'files\')">\n                文件改动 <span class="commits-count">{{diffStat.paths.length || \'0\'}}</span>\n            </a>\n        </div>\n\n        <div ng-include="\'app/git/partial/_commits_list.html\'" ng-show="show_diff == \'commits\'" class="commits"></div>\n        <div ng-include="\'app/git/partial/_diff_show.html\'" ng-show="show_diff == \'files\'"></div>\n    </div>\n    </div>\n</div>'),
            $templateCache.put("app/git/pull/show.html", '<div class="public-project-view">\n    <div class="pull-request container git-container">\n        <div ng-include="\'app/git/public_view/inner_menu.html\'"></div>\n        <div ng-if="!loaded">\n            <cg-monkey-loading image-size="50" container-margin="60"></cg-monkey-loading>\n        </div>\n        <div ng-if="loaded">\n            <h3 class="pr-title">\n                #{{pull_request.iid}} {{pull_request.title}}\n                <span ng-class="getMergeStatusClass(pull_request.merge_status)">{{getMergeStatusHuman(pull_request.merge_status)}}</span>\n            </h3>\n\n            <div class="pr-author">\n                <a style="color:#333" ng-href="{{pull_request.author.path}}"><img ng-src="{{pull_request.author.lavatar}}" class="ui image avatar18" style="width: 13px; height: 13px; margin-top: -2px">&nbsp;<strong>{{pull_request.author.name}}</strong></a>\n                &nbsp; 创建于 <span cg-friendly-time="pull_request.created_at"></span>\n            </div>\n            <div class="ui divider"></div>\n\n            <div class="pr-action">\n                <span class="pr-label src">{{pull_request.src_owner_name ? pull_request.src_owner_name:\'已删除项目\'}}:{{pull_request.srcBranch}}</span>\n                <i class="long arrow right icon"></i>\n                <span class="pr-label des">{{PROJECT.owner_user_name}}:{{pull_request.desBranch}}</span>\n\n                <div class="pull-right" ng-if="pull_request.merge_status === \'CANMERGE\' || pull_request.merge_status === \'CANNOTMERGE\'">\n                    <div ng-if="USER.id === pull_request.author.id" class="ui coding button" ng-click="cancel(pull_request)">取消</div>\n                </div>\n                <div class="pull-right" ng-if="can_edit && pull_request.merge_status == \'CANNOTMERGE\'">\n                    <div class="ui coding button red refuse-btn" ng-click="refuse(pull_request);">拒绝</div>\n                    <div class="ui coding button blue disabled merge-btn">合并</div>\n                </div>\n\n                <div class="pull-right" ng-if="can_edit && pull_request.merge_status == \'CANMERGE\'">\n                    <div class="ui coding button red refuse-btn" ng-click="refuse(pull_request);">拒绝</div>\n                    <div class="ui coding button blue merge-btn" ng-click="toggleShowMergeForm(showMergeForm)">合并</div>\n                </div>\n\n                <div class="clearfix"></div>\n                <div class="pr-merge ui form segment" ng-show="showMergeForm && pull_request.merge_status == \'CANMERGE\' && can_edit">\n                    <h2 class="ui dividing header">合并此 Pull Request</h2>\n                    <div class="content">\n                        <div class="field">\n                            <label>Merge Commit Message</label>\n                            <textarea ng-model="pull_request.commit_message"></textarea>\n                        </div>\n                    </div>\n                    <div class="actions">\n                        <div class="ui button" ng-click="toggleShowMergeForm(showMergeForm)">取消</div>\n                        <div class="ui button green" ng-click="merge(pull_request);">合并</div>\n                    </div>\n                </div>\n            </div>\n            <div ng-if="pull_request.merge_status == \'CANNOTMERGE\'" class="ui message">\n                <p><strong>Coding 不能帮你在线自动合并这个 Pull Request。可参照如下流程使用命令行来完成合并。</strong></p>\n                <div>\n                    <p>第一步：从你自己的项目仓库中，创建一个新的分支，并测试 Pull Request 中的改动。<br>\n                    <code>\ngit checkout -b {{pull_request.src_owner_name}}-{{pull_request.srcBranch}} {{pull_request.desBranch}}<br>\ngit pull https://coding.net/{{pull_request.src_owner_name}}/{{pull_request.src_project_name}}.git {{pull_request.srcBranch}}\n                    </code>\n                    </p>\n                </div>\n                <p></p>\n                <div>\n                    <p>第二步：合并改动到目标分支，并推送到 Coding<br>\n                    <code>\ngit checkout {{pull_request.desBranch}}<br>\ngit merge --no-ff {{pull_request.src_owner_name}}-{{pull_request.srcBranch}}<br>\ngit push origin {{pull_request.desBranch}}<br>\n                    </code>\n                    </p>\n                </div>\n            </div>\n            <div class="ui tertiary red segment action-bar" ng-if="pull_request.merge_status == \'REFUSED\'">\n                <div class="content">\n                    <div class="summary">\n                        <span style="color: red">\n                            <i class="minus sign icon"></i>\n                        </span>\n                        <a href="{{pull_request.action_author.path}}">{{pull_request.action_author.name}}</a>\n                        <span cg-friendly-time="pull_request.action_at"></span>\n                        拒绝了这个Pull Request\n                    </div>\n                </div>\n            </div>\n\n            <div class="ui tertiary green segment action-bar" ng-if="pull_request.merge_status == \'ACCEPTED\'">\n                <div class="content">\n                    <div class="summary">\n                        <span style="color: green">\n                            <i class="coding icon pull-request"></i>\n                        </span>\n                        <a href="{{pull_request.action_author.path}}">{{pull_request.action_author.name}}</a>\n                        <span cg-friendly-time="pull_request.action_at"></span>\n                        合并了这个Pull Request\n                    </div>\n                </div>\n            </div>\n\n            <div ng-show="!!pull_request.content" class="pr-content markdown content ui segment" clip-copy-code="pre" cg-bind-html="pull_request.content" cg-page-scroll></div>\n\n            <div class="ui tabular menu">\n                <a class="item" ng-class="{active: show_diff == \'comments\'}" ng-click="showContent(\'comments\')">\n                    评论 <span class="commits-count">{{commentCount || 0}}</span>\n                </a>\n                <a class="item" ng-class="{active: show_diff == \'commits\'}" ng-click="showContent(\'commits\')">\n                    提交记录 <span class="commits-count">{{commits.length}}</span>\n                </a>\n                <a class="item" ng-class="{active: show_diff == \'files\'}" ng-click="showContent(\'files\')">\n                    文件改动 <span class="commits-count">{{diffStat.paths.length}}</span>\n                </a>\n            </div>\n\n            <div ng-show="show_diff == \'comments\' && !comments_loaded">\n                <cg-monkey-loading image-size="50" container-margin="60"></cg-monkey-loading>\n            </div>\n            <div ng-include="\'app/git/partial/_comment.html\'" scope="" onload="" ng-show="show_diff == \'comments\' && comments_loaded"></div>\n\n            <div ng-include="\'app/git/partial/_diff_show.html\'" ng-show="show_diff == \'files\'"></div>\n\n            <div ng-include="\'app/git/partial/_commits_list.html\'" ng-show="show_diff == \'commits\'" class="commits"></div>\n        </div>\n    </div>\n</div>'),
            $templateCache.put("app/git/stat/graph.html", '<div ng-class="{\'public-project-view\': PROJECT.is_public}">\n    <div ng-if="PROJECT.is_public" ng-include="\'app/git/public_view/inner_menu.html\'"></div>\n    <div ng-if="!PROJECT.is_public" ng-include="\'app/git/partial/inner_menu.html\'" class="ui secondary vertical fixed menu active" id="inner-menu"></div>\n\n    <div class="graph container git">\n        <h4 ng-if="!PROJECT.is_public" class="header">项目统计</h4>\n\n        <div ng-if="!PROJECT.is_public" class="ui divider"></div>\n\n        <div ng-if="!loaded">\n            <cg-monkey-loading image-size="50" container-margin="60"></cg-monkey-loading>\n        </div>\n\n        <select ui-select2="{width:\'250px\'}" ng-show="loaded" ng-model="current_branch" ng-change="changeCurrentBranch(current_branch)">\n            <option ng-repeat="branch in branches" value="{{branch.name}}">\n                {{branch.name}}\n            </option>\n        </select>\n\n        <div class="graph view" ng-show="loaded">\n            <h3 id="date_header" class="page-title"></h3>\n            <input id="brush_change" type="hidden">\n\n            <div class="graphs">\n                <div id="contributors-master">\n                </div>\n                <div id="contributors" class="clearfix">\n                    <ol class="contributors-list clearfix">\n                    </ol>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>'),
            $templateCache.put("app/git/tag/index.html", '<div ng-class="{\'public-project-view\': PROJECT.is_public}">\n    <div ng-if="PROJECT.is_public" ng-include="\'app/git/public_view/inner_menu.html\'"></div>\n    <div ng-if="!PROJECT.is_public" ng-include="\'app/git/partial/inner_menu.html\'" class="ui secondary vertical fixed menu active" id="inner-menu"></div>\n    <div ng-if="!loaded" class="container">\n            <cg-monkey-loading image-size="50" container-margin="60"></cg-monkey-loading>\n\n    </div>\n    <div class="container git-container" ng-if="loaded" style="overflow-x: hidden">\n        <h4 ng-if="!PROJECT.is_public">标签</h4>\n\n        <div ng-if="!PROJECT.is_public" class="ui divider"></div>\n\n        <div class="ui coding clearfix" style="margin-bottom:30px" ng-if="(PROJECT | isRole:MEMBER)">\n            <div class="ui floated coding left">\n                <a class="ui button small" ng-href="{{PROJECT.project_path}}/git/tags/create"><i class="add icon"></i>新建标签</a>\n            </div>\n        </div>\n\n        <div class="tag-list" ng-if="tags && tags.length > 0">\n            <ul class="clearfix">\n                <li ng-repeat="tag in tags" class="clearfix">\n                    <div ng-if="!isSameDay(tags, $index)" class="date" cg-time-ago-day="tag.created_at" cg-time-ago-day-with-year="!isSameYear(tags, $index)" ng-class="{green : isToday(tag.created_at)}">\n                    </div>\n                    <span class="tag-name">\n                        <a ng-href="{{PROJECT.project_path}}/git/tree/{{tag.name | encodeGitUri}}">{{tag.name}}</a>\n                    </span>\n                    <div class="content">\n                        <div class="tag-info">\n                            <a ng-href="{{tag.author.link}}" class="avatar">\n                                <img ng-src="{{tag.author.avatar}}" alt="{{tag.author.name}}">\n                            </a>\n                            <div class="tag-page">\n                                <span class="circle"></span>\n                                <div class="message" ng-if="tag.message"><pre>{{tag.message}}</pre></div>\n                                <div class="info" ng-style="{\'margin-top\': tag.message?\'0\':\'20px\' }">\n                                    <span><a ng-href="{{tag.author.link}}">{{tag.author.name}}</a></span>\n                                    <span class="time">创建于 <span cg-friendly-time="tag.created_at"></span></span>\n                                </div>\n                                <div class="btn">\n                                    <a ng-href="{{PROJECT.project_path}}/git/commit/{{tag.last_commit.commitId}}">\n                                        <i class="code icon"></i>\n                                        {{tag.last_commit.commitId | shortCommitId}}\n                                    </a>\n                                    <a ng-href="{{PROJECT.project_path}}/git/archive/{{tag.name | encodeGitUri}}.zip" target="_self">\n                                        <i class="download disk icon green"></i>\n                                        zip\n                                    </a>\n                                    <a ng-href="{{PROJECT.project_path}}/git/archive/{{tag.name | encodeGitUri}}.tar.gz" target="_self">\n                                        <i class="download disk icon green"></i>\n                                        tar.gz\n                                    </a>\n                                    <a ng-if="(PROJECT | isRole:MEMBER)" href="javascript:void(0);" ng-click="delete_tag(tag)">\n                                        <i class="minus sign alternate icon red"></i>\n                                        Delete\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </li>\n            </ul>\n        </div>\n\n        <div cg-pager="{{pager_id}}" class="center"></div>\n        <div ng-if="!tags || tags.length == 0">\n            <div ng-include="\'app/git/partial/_back-monkey.html\'"></div>\n            <div class="create-tag-tips">\n                <p class="ui coding aligned center"><strong>本项目暂无标签</strong></p>\n\n                <p>你可以使用 <code>git tag</code> 命令来添加新标签</p>\n\n                <p><code>git tag -a v1.0 -m \'version 1.0\'</code></p>\n\n                <p>可以使用 <code>git push</code> 命令来将标签推送到远程仓库</p>\n\n                <p><code>git push origin v1.0:v1.0</code></p>\n            </div>\n        </div>\n    </div>\n</div>'),
            $templateCache.put("app/git/tag/new.html", '<div ng-class="{\'public-project-view\': PROJECT.is_public}">\n    <div ng-if="PROJECT.is_public" ng-include="\'app/git/public_view/inner_menu.html\'"></div>\n    <div ng-if="!PROJECT.is_public" ng-include="\'app/git/partial/inner_menu.html\'" class="ui secondary vertical fixed menu active" id="inner-menu"></div>\n    <div class="container tags git-container">\n        <h4 ng-if="!PROJECT.is_public" class="header">标签</h4>\n        <div ng-if="!PROJECT.is_public" class="ui divider"></div>\n\n        <div class="ui form segment" style="max-width:500px;margin:20px auto">\n            <h4>创建标签</h4>\n            <div class="field">\n                <label>标签名称</label>\n                <div class="ui left labeled input">\n                    <input type="text" ng-model="new_tag.name" placeholder="请输入新建标签名称" cg-enter="create_tag(new_tag)" required>\n                </div>\n            </div>\n            <div class="field">\n                <label>标记点</label>\n                <div class="ui left labeled input">\n                    <input type="text" ng-model="new_tag.tag_point" placeholder="请输入标记点，分支、标签、commit Id均可" cg-enter="create_tag(new_tag)">\n                </div>\n            </div>\n            <div class="field">\n                <label>标记说明</label>\n                <div class="ui left labeled input">\n                <textarea ng-model="new_tag.message" placeholder="请输入标签说明" cg-ctrl-enter="create_tag(new_tag)"></textarea>\n                </div>\n            </div>\n            <div class="ui dark gray medium submit button" ng-click="create_tag(new_tag)" ng-show="!submitting">创建</div>\n            <div class="ui dark gray medium submit button" ng-show="submitting"><i class="loading icon"></i></div>\n            <div class="ui error message"></div>\n        </div>\n    </div>\n</div>'),
            $templateCache.put("app/git/tree.html", '<div ng-class="{\'public-project-view\': PROJECT.is_public}">\n    <div ng-if="PROJECT.is_public" ng-include="\'app/git/public_view/inner_menu.html\'"></div>\n    <div ng-if="!PROJECT.is_public" ng-include="\'app/git/partial/inner_menu.html\'" class="ui secondary vertical fixed menu active" id="inner-menu"></div>\n    <div ng-if="!loaded" class="container">\n        <cg-monkey-loading image-size="50" container-margin="60"></cg-monkey-loading>\n    </div>\n    <div ng-if="loaded" class="container" style="margin-bottom:40px">\n        <div ng-if="empty" ng-include="\'app/git/partial/_empty.html\'"></div>\n        <div class="git-container" ng-if="!empty">\n\n            <div class="tree">\n                <div ng-include="\'app/git/partial/_breadcrumb.html\'"></div>\n                <div ng-if="too_many_files" class="ui message">\n                    <div class="header">\n                        Coding 提示您：\n                    </div>\n                    <p>该目录下文件太多，这里最多显示出 500 个文件，如需要查看所有文件，请 Clone 到本地查看。</p><p>\n                </div>\n                <div class="commit-tease">\n                    <span class="coding floated right">\n                        <a ng-href="{{PROJECT.project_path}}/git/commit/{{tree.lastCommit.commitId}}" class="commit-tease-sha">\n                            {{tree.lastCommit.commitId | shortCommitId:10}}\n                        </a>\n                        <i class="icon" ng-class="{\'green checkmark\':showCopyIcon,\'paste\':!showCopyIcon}" clip-copy="tree.lastCommit.commitId" clip-click="copyCommit()"></i>\n                        提交于\n                        <time cg-friendly-time="tree.lastCommit.commitTime"></time>\n                    </span>\n                    <span class="commit-author-section">\n                        <a ng-href="{{tree.lastCommitter.link}}">\n                            <img class="author-gravatar" ng-src="{{tree.lastCommitter.avatar}}" alt="@{{tree.lastCommitter.name}}" width="20" height="20">\n                        </a>\n                        <span class="author-name"><a href="{{tree.lastCommitter.link}}" title="{{tree.lastCommitter.name}}">{{tree.lastCommitter.name}}</a></span>\n                    </span>\n                    <span class="message">\n                        <a ng-href="{{PROJECT.project_path}}/git/commit/{{tree.lastCommit.commitId}}" cg-bind-html="shortMessage"></a>\n                    </span>\n                    <span ng-if="allMessage.length > 0" ng-click="toggleShowAllMessage(showAllMessage)" class="hidden-text-expander">\n                        <a>...</a>\n                    </span>\n                    <div class="commit-desc">\n                        <pre ng-show="showAllMessage" cg-bind-html="allMessage"></pre>\n                    </div>\n                </div>\n                <div class="files-list">\n                    <table class="files">\n                        <tr ng-if="parentLink">\n                            <td class="content">\n                                <span class="truncate truncate-target">\n                                    <a ng-href="{{parentLink}}"><i class="reply mail icon"></i>..</a>\n                                </span>\n                            </td>\n                            <td></td>\n                            <td></td>\n                            <td></td>\n                            <td></td>\n                        </tr>\n                        <tr ng-repeat="file in tree.files" id="tr_{{md5.createHash(file.path)}}">\n                            <td class="icon">\n                                <i ng-class="{folder:file.mode==\'tree\'||file.mode==\'git_link\', file:file.mode!=\'tree\'&&file.mode!=\'git_link\', outline:file.mode!=\'tree\'&&file.mode!=\'git_link\', icon:true}" ng-style="{\'color\':file.mode==\'git_link\'?\'orange\':\'\'}"></i>\n                            </td>\n                            <td class="content">\n                                <span class="truncate truncate-target">\n                                  <a cg-file-path="file" cg-ref="ref">\n                                  </a>\n                                </span>\n                            </td>\n                            <td class="age">\n                                <span class="truncate truncate-target"></span>\n                            </td>\n                            <td class="committer">\n                                <span class="truncate truncate-target">\n                                    <i class="loading icon" style="font-size: 10px"></i>\n                                    <a href="#"></a>\n                                </span>\n                            </td>\n                            <td class="name">\n                                <span class="truncate truncate-target">\n                                    <a href="#"></a>\n                                </span>\n                            </td>\n                            <td class="message">\n                                <span class="truncate truncate-target">\n                                    <a href=""></a>\n                                </span>\n                            </td>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n\n            <div ng-if="readme" class="readme" ng-include="\'app/git/partial/_readme.html\'"></div>\n            <div ng-if="!readme && can_edit && !path" class="readme">\n                <div class="empty-readme">我们推荐每个项目都新建一个 <a ng-href="{{PROJECT.project_path}}/git/new/{{ref}}?filename=README.md">README</a> 文件\n                </div>\n            </div>\n            <div cg-tree-info="tree_url" ng-if="tree_url.length > 0 && tree.files"></div>\n        </div>\n    </div>\n</div>'),
            $templateCache.put("app/help/content.html", '<div class="help box">\n    <div class="title">\n        {{current_root_category.name}}\n    </div>\n    <div class="ui divider"></div>\n    <div class="content">\n        <div class="text">\n            <div ng-repeat="faq in faqs" class="faqs">\n                <p class="faq title" ng-if="faq.name">{{faq.name}}</p>\n\n                <div class="questions" ng-repeat="q in faq.questions" ng-class="{active:q.code == question}" ng-if="q.status == 1">\n                    <p class="question"><i class="angle icon" ng-class="{down:q.code == question,right:q.code != question}"></i>\n                        <a><span ng-click="openQA(q.code)" ng-class="{active:q.code == question}">{{q.question}}</span></a>\n                    </p>\n                    <a name="{{q.code}}"></a>\n\n                    <p class="answer" cg-bind-html="q.answer" ng-if="q.code == question"></p>\n                </div>\n            </div>\n            <cg-monkey-loading image-size="30" container-margin="120" ng-if="load_question || loading_category"></cg-monkey-loading>\n        </div>\n    </div>\n</div>'),
            $templateCache.put("app/help/help.html", '<div id="help">\n    <div class="ui grid help">\n        <div class="row">\n            <div class="four wide column">\n                <div ng-include="\'app/help/menu.html\'"></div>\n            </div>\n            <div class="twelve wide column">\n                <div class="column">\n                    <div ng-include="\'app/help/content.html\'"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div ng-include="\'app/layout/footer.html\'"></div>'),
            $templateCache.put("app/help/index.html", '<div id="help">\n    <div class="help index">\n        <section>\n            <div class="search">\n                <div class="ui fluid action input medium">\n                    <input type="text" placeholder="输入关键字，寻找你要的答案" ng-model="key" cg-enter="search(key)">\n\n                    <div class="ui default dark gray button" ng-click="search(key)">搜索</div>\n                </div>\n                <a class="ui default blue button floated right" style="margin-top: 30px" href="/u/coding/p/Coding-Feedback/topic"><i class="umbrella icon"></i>在线反馈</a>\n            </div>\n        </section>\n\n        <section>\n            <div class="commons">\n                <div class="title">常见问题</div>\n                <div class="ui grid">\n                    <div class="eight wide column">\n                        <ul>\n                            <li><i class="icon right angle"></i> <a href="/help/about_coding/what_can_i_do_on_coding_net">我能在 Coding.net 上做些什么？ </a>\n                            </li>\n                            <li><i class="icon right angle"></i> <a href="/help/about_users/third_party_account_login">是否可以通过第三方账号登录？ </a>\n                            </li>\n                            <li><i class="icon right angle"></i> <a href="/help/about_users/what_is_bubbling">什么是冒泡？ </a>\n                            </li>\n                            <li><i class="icon right angle"></i> <a href="/help/about_users/how_to_send_private_messages">如何发送私信？ </a></li>\n                        </ul>\n                    </div>\n                    <div class="eight wide column">\n                        <ul>\n                            <li><i class="icon right angle"></i><a href="/help/project_manage/how_many_projects_an_account_can_create">一个账号可以创建多少个项目？</a>\n                            </li>\n                            <li><i class="icon right angle"></i> <a href="/help/about_git/how_to_access_git_depository">如何访问 git 仓库？</a></li>\n                            <li><i class="icon right angle"></i> <a href="/help/project_demos/what_is_demo_platform">什么是演示平台？ </a>\n                            </li>\n                            <li><i class="icon right angle"></i> <a href="/help/about_qc/what_is_the_quality_analysis">什么是质量分析？ </a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section>\n            <div class="quick">\n                <ul>\n                    <a href="/help/about_coding">\n                        <li>\n                            <div>\n                                <div>\n                                    <i class="coding icon monkey"></i>\n                                </div>\n                                <div class="title">Coding 入门</div>\n                                <div class="desc">\n                                    了解 Coding 是什么<br>以及我们能利用 Coding 做些什么\n                                </div>\n                            </div>\n                        </li>\n                    </a>\n                    <a href="/help/about_users">\n                        <li>\n                            <div>\n                                <div>\n                                    <i class="icon user"></i>\n                                </div>\n                                <div class="title">账户&社交</div>\n                                <div class="desc">\n                                    了解如何加入 Coding 社区<br>享受更多互动乐趣\n                                </div>\n                            </div>\n                        </li>\n                    </a>\n                    <a href="/help/project_manage">\n                        <li>\n                            <div>\n                                <div>\n                                    <i class="coding icon project"></i>\n                                </div>\n                                <div class="title">项目管理</div>\n                                <div class="desc">\n                                    了解如何使用讨论、任务、文档等<br>功能进行项目管理\n                                </div>\n                            </div>\n                        </li>\n                    </a>\n                </ul>\n                <ul>\n                    <a href="/help/about_git">\n                        <li>\n                            <div>\n                                <div>\n                                    <i class="icon code"></i>\n                                </div>\n                                <div class="title">代码托管</div>\n                                <div class="desc">\n                                    利用Git仓库进行<br>代码托管的简易说明\n                                </div>\n                            </div>\n                        </li>\n                    </a>\n                    <a href="/help/webide">\n                        <li>\n                            <div>\n                                <div>\n                                    <i class="edit icon"></i>\n                                </div>\n                                <div class="title">WebIDE</div>\n                                <div class="desc">\n                                    在线编辑代码<br>在线集成开发环境\n                                </div>\n                            </div>\n                        </li>\n                    </a>\n                    <a href="/help/project_demos">\n                        <li>\n                            <div>\n                                <div>\n                                    <i class="icon cloud"></i>\n                                </div>\n                                <div class="title">项目辅助功能</div>\n                                <div class="desc">\n                                    在线演示平台<br>在线生成质量分析报告\n                                </div>\n                            </div>\n                        </li>\n                    </a>\n\n                </ul>\n            </div>\n        </section>\n    </div>\n</div>\n<div ng-include="\'app/layout/footer.html\'"></div>'),
            $templateCache.put("app/help/menu.html", '<div class="help menu">\n    <div class="title">\n        帮助中心\n    </div>\n\n    <div class="ui divider"></div>\n    <div class="help search">\n        <div class="ui action input default">\n            <input type="text" placeholder="请输入关键词" ng-model="key" ng-keypress="search(key)">\n\n            <div class="ui default dark gray button" ng-click="search(key)">搜索</div>\n        </div>\n    </div>\n    <div class="help list">\n        <ul class="list" ng-if="root_category.length > 0">\n            <li ng-class="{active:current_root_category.code==category.code}" ng-repeat="category in root_category" ng-click="loadQuestions(category)">{{category.name}}<i ng-if="current_root_category.code==category.code" class="double angle right icon"></i></li>\n        </ul>\n        <cg-monkey-loading image-size="30" ng-if="loading_category"></cg-monkey-loading>\n    </div>\n    <div class="ui divider"></div>\n    <div class="help support">\n        <p>技术支持 & 问题建议</p>\n\n        <p><i class="icon mail circular inverted"></i><img src="/static/c07397bfc519f4b688852ffb2df6e618.png" style="height: 16px;vertical-align: middle;opacity: 0.89">\n        </p>\n\n        <p><i class="icon help circular inverted"></i><a class="support-text" href="/u/coding/p/Coding-Feedback/topic">在线反馈</a>\n        </p>\n    </div>\n</div>'),
            $templateCache.put("app/ide/ide.html", '<div ng-class="{\'public-project-view\': PROJECT.is_public}">\n    <div ng-if="PROJECT.is_public" ng-include="\'app/git/public_view/inner_menu.html\'"></div>\n    <div ng-if="!PROJECT.is_public" ng-include="\'app/git/partial/inner_menu.html\'" class="ui secondary vertical fixed menu active" id="inner-menu"></div>\n    <div class="container" ng-if="!loaded">\n            <cg-monkey-loading image-size="50" container-margin="60"></cg-monkey-loading>\n    </div>\n    <div ng-show="loaded" class="container">\n        <div class="ide-container">\n            <h3>Coding WebIDE</h3>\n            <div ng-if="!PROJECT.is_public" class="ui divider"></div>\n            <div class="ui message">\n                <p>\n                Coding WebIDE 是 Coding 自主研发的在线集成开发环境。用户可以通过 WebIDE 创建项目的工作空间，进行在线开发，调试等操作。与此同时，WebIDE 还提供了可分享的开发环境功能，用户可以保存当前的 Terminal 环境，分享给团队的其他成员。\n                </p>\n            </div>\n            <div class="ui message">\n                <strong class="header">实现在线开发</strong>\n                <p>\n                语法加亮，编辑器实时自动保存<br>\n                支持黑白主题界面切换<br>\n                全功能 Terminal<br>\n                支持 Git 提交，分支切换，pull，push<br>\n                </p>\n            </div>\n            <!--<div class="small-image" style="right: 200px;">-->\n                <!--<img src="/static/7f185cf946e74d8d95959080a6dadfa7.png" alt="可分享的开发环境" width="150" />-->\n            <!--</div>-->\n            <!--<div class="small-image" style="right: 30px;">-->\n                <!--<img src="/static/142010666214064ea69517cb4531c2e6.png" alt="实现在线开发" width="150" />-->\n            <!--</div>-->\n            <ul class="small-image">\n                <li>\n                    <img src="/static/7f185cf946e74d8d95959080a6dadfa7.png" alt="实现在线开发" width="150">\n                </li>\n                <li>\n                    <img src="/static/142010666214064ea69517cb4531c2e6.png" alt="可分享的开发环境" width="150">\n                </li>\n            </ul>\n            <div class="web-ide-button">\n                <a class="ui large green button" ng-href="{{ide_link}}" target="_blank">进入 WebIDE</a>\n            </div>\n            <div class="web-ide-workspace">\n                <a ng-href="https://ide.coding.net/dashboard" target="_blank">查看现有 Workspace</a>\n            </div>\n        </div>\n    </div>\n    <div class="screenshot background">\n        <div class="screenshot preview">\n            <!--<div class="close-pane">--> \n                <!--<i class="close basic icon"></i>-->\n            <!--</div>-->\n            <div class="preview-title">\n            </div>\n            <img>\n        </div>\n        <div class="prev-preview">\n            <i class="left arrow basic icon"></i>\n        </div>\n        <div class="next-preview">\n            <i class="right arrow basic icon"></i>\n        </div>\n    </div>\n</div>'),
            $templateCache.put("app/layout/confirmation_tip.html", '您的验证邮件已经发送到<span ng-bind="USER.email"></span>，请尽快查收并激活账号。如在收件箱中未看到激活邮件，请留意一下垃圾邮件箱(T_T)。或<a ng-click="resendActivateEmail()">重新发送激活邮件</a>'),
            $templateCache.put("app/layout/footer.html", '<div id="footer" ng-controller="FooterController">\n    <div class="footer">\n        <div class="us">\n            <ul>\n                <li><a cg-jump-out-angular-href="/home-desktop.html?redirect=false">首页</a></li>\n                <li><a href="/about">关于Coding</a></li>\n                <li><a href="/jobs">招贤纳士</a></li>\n                <li><a href="/terms">服务条款</a></li>\n                <li><a href="/privacy">隐私策略</a></li>\n                <li><a href="/help" target="_self">帮助中心</a></li>\n                <li><a href="https://blog.coding.net/">Blog</a></li>\n                <li><a href="/app">App</a></li>\n                <li><a cg-jump-out-angular-href="/shop">Shop</a></li>\n                <li><a href="https://mart.coding.net" style="font-weight: bold">码市</a></li>\n            </ul>\n            <p>\n                Copyright&nbsp;&nbsp;&copy;&nbsp;2015&nbsp;Coding.net&nbsp;&nbsp;\n                <a href="http://www.miitbeian.gov.cn/" target="_blank" style="color:#999;text-decoration:none">粤ICP备14029750号-1</a>&nbsp;&nbsp;\n                粤B-20140247&nbsp;&nbsp;\n                <a href="http://www.gdgs.gov.cn/" style="color:#999;text-decoration:none">广东省工商行政管理局</a>\n            </p>\n        </div>\n        <div class="share">\n            <div class="weixin">\n                <img src="/static/f16717708cd0f2f090ad7a68cdfa7b33.jpg" ng-init="show_qrcode=false" ng-click="clickPop($event)">\n\n                <div id="qr_code_pop" class="ui popup transition" ng-class="{visible:show_qrcode}"><img src="https://coding.net/static/fcdf6ecd90f6022d143a5e06fbe391b8.jpg"></div>\n            </div>\n            <a href="http://weibo.com/p/1006065153943878/home?from=page_100606&mod=TAB#place" target="_blank">\n                <img src="/static/807caa78420d2e20a8dc6b61bb620527.jpg">\n            </a>\n            <a href="mailto:support@coding.net">\n                <img src="/static/0b941854e5d05120d662e402b72cd1bc.jpg">\n            </a>\n        </div>\n    </div>\n</div>'),
            $templateCache.put("app/layout/top_menu.html", '<style type="text/css">\n    #top-menu .right.menu .add.dropdown .menu:after{right:67px;}\n    .coding .ui.menu:not(.vertical) .item > .input > .icon {padding-top: 0.82em;}\n    #top-menu .public-pages {position: absolute;left: 150px;top: 2px;height: 40px;width: 260px;}\n    #top-menu .public-pages .folded {\n        display: none;\n    }\n    .ui.menu a.item.func-item {\n        line-height: normal!important;\n        margin: 0!important;\n        padding: 6px 14px!important;\n        font-weight: 400!important;\n        text-align: left!important;\n    }\n    .search-input input.search:focus{width: 340px!important;}\n    #top-menu input.search:focus{width: 340px;}\n    .project-num {\n        position: absolute;\n        width: auto;\n        line-height: 12px;\n        background: #f75288;\n        border-radius: 10px;\n        padding: 2px 6px;\n        color: #FFF;\n        font-size: 10px;\n        border: 2px solid #FFF;\n        text-align: center;\n        transform:scale(0.875);\n        margin-top: -2px\n    }\n\n    @media only screen and (min-width: 1260px) and (max-width: 1420px) {\n        #top-menu .left.menu a.item {\n            margin: 10px 2px\n        }\n    }\n\n    #top-menu .public-pages .normal .dropdown > .item {\n        margin-right: 10px;\n    }\n\n    #top-menu .public-pages .normal .dropdown > .item:after {\n        content: \'\';\n        width: 0;\n        height: 0;\n        border-left: 4px solid transparent;\n        border-right: 4px solid transparent;\n        border-top: 4px solid #000;\n        position: absolute;\n        top: 10px;\n        right: -7px;\n    }\n\n    #top-menu .public-pages .normal .dropdown > .no-arrow {\n        margin-right: 2px;\n    }\n\n    #top-menu .public-pages .normal .dropdown > .no-arrow:after {\n        border: none;\n    }\n\n    @media only screen and (max-width: 1260px) {\n\n        #top-menu .public-pages .normal{\n            display: none;\n        }\n\n        #top-menu .public-pages .folded{\n            display: block;\n            position: relative;\n            width: 50px;\n        }\n\n        #top-menu .public-pages .folded:after{\n            content: \'\';\n            width: 0;\n            height: 0;\n            border-left: 4px solid transparent;\n            border-right: 4px solid transparent;\n            border-top: 4px solid #000;\n            position: absolute;\n            top: 20px;\n            right: 0px;\n        }\n\n        .random-background.account-background #top-menu .public-pages{\n            background: none;\n        }\n\n        .random-background.account-background #top-menu .public-pages:hover{\n            background: rgba(255,255,255,.5);\n        }\n\n        .public-pages > a{\n            display: list-item!important;\n            list-style: none;\n            width: 50px;\n        }\n    }\n\n    .frequently-projects.menu{\n        width: 474px!important;\n        height: 400px!important;\n    }\n\n    .frequently-projects.menu:after{\n        background: #F6F6F6!important;\n    }\n\n    .frequently-used-projects{\n        position: absolute;\n        width: 360px;\n        height: 100%;\n        left: 0;\n        top: 0;\n        z-index: 12;\n        background: #FFF;\n        border-right: 1px solid #DDD;\n    }\n\n    .menu-item-wrapper{\n        width: 114px;\n        padding-left: 360px;\n        height: 100%;\n        background: #F6F6F6;\n    }\n\n    .menu-item-wrapper .item:last-child{\n        border-bottom: 1px solid rgba(0, 0, 0, 0.05)!important;\n    }\n\n    .mart-logo {\n        padding: 0 !important;\n        height: 60px;\n    }\n    .mart-logo a {\n        padding: 5px 10px 0 !important;\n        height: 60px;\n    }\n    .mart-logo img {\n        height: 50px;\n    }\n    .mart-logo .vertical-line {\n        position: absolute;\n        top: 0;\n        right: 0;\n\n        margin-top: 20px;\n        height: 20px;\n        border-left: 1px solid rgba(0, 0, 0, 0.2);\n    }\n    #top-menu .ui.coding.register.button,\n    #top-menu .ui.coding.login.button {\n        padding: 0 2em;\n        font-weight: normal;\n    }\n</style>\n<a class="left logo item" ng-if="USER" cg-jump-out-angular-href="/user" target="_self" style="left: 1px">\n    <img src="/static/7a51352fa766f4176d7c4543339e0e98.png" height="60">\n</a>\n<a class="left logo item" ng-if="USER === false" cg-jump-out-angular-href="/" target="_self" style="padding: 8px 2px">\n    <img src="/static/5ee8025c9dc63a6ff53153705d0e7ce8.png" height="45">\n</a>\n<div class="left menu" data-ng-controller="QuickSearchController" ng-style="{\'left\':USER === false ? \'160px\':\'75px\'}">\n    <div id="quick-search" style="margin: 9px 15px" cg-advance-search ng-if="!enableEsearch" ng-model="form.search_text">\n        <div class="ui icon small input search-input" style="z-index: 899">\n            <input data-ng-model="form.search_text" name="q" class="search" type="text" placeholder="Search..." cg-textarea-editable>\n        </div>\n   </div>\n   <div id="quick-search" style="margin: 9px 15px" cg-advance-esearch ng-if="enableEsearch" ng-model="form.search_text">\n        <div class="ui icon small input search-input" style="z-index: 899">\n            <input data-ng-model="form.search_text" name="q" class="search" type="text" placeholder="Search..." cg-textarea-editable>\n        </div>\n   </div>\n    <!--登录后-->\n    <div class="public-pages" ng-if="USER">\n        <div class="normal">\n            <a cg-auto-refresh-href="/user/projects" class="item">项目</a>\n            <a cg-auto-refresh-href="/user/tasks?owner={{USER.id}}" class="item">任务</a>\n            <a class="item" href="/webide" target="_blank">IDE</a>\n            <a cg-auto-refresh-href="/pp" class="item">冒泡</a>\n            <a cg-auto-refresh-href="/upgrade" class="item">升级</a>\n            <a class="item" href="/help" target="_blank">帮助</a>\n        </div>\n        <div class="folded">\n            <div class="ui simple pointing dropdown" style="padding: 0;line-height: normal">\n                <a href="javascript:void(0);" class="item">导航</a>\n                <div class="menu" style="padding: 2px;left: -10px">\n                    <a class="item func-item" cg-auto-refresh-href="/user/projects">项目</a>\n                    <a class="item func-item" cg-auto-refresh-href="/user/tasks?owner={{USER.id}}">任务</a>\n                    <a class="item func-item" href="/webide" target="_blank">IDE</a>\n                    <a class="item func-item" cg-auto-refresh-href="/pp">冒泡</a>\n                    <a class="item func-item" cg-auto-refresh-href="/upgrade">升级</a>\n                    <a class="item func-item" href="/help" target="_blank">帮助</a>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!--未登录-->\n    <div class="public-pages" ng-if="USER === false">\n        <div class="normal">\n            <div class="ui simple dropdown">\n                <a href="javascript:void(0);" class="item no-arrow">功能</a>\n                <div class="menu">\n                    <a class="item func-item" href="/git" target="_blank">代码托管</a>\n                    <a class="item func-item" href="/pm" target="_blank">项目管理</a>\n                    <a class="item func-item" href="/webide" target="_blank">WebIDE</a>\n                    <a class="item func-item" href="/app" target="_blank">APP</a>\n                </div>\n            </div>\n            <a cg-auto-refresh-href="/upgrade" class="item">价格</a>\n            <a cg-auto-refresh-href="/pp" class="item">冒泡</a>\n            <a cg-auto-refresh-href="http://blog.coding.net/" target="_blank" class="item">博客</a>\n            <a class="item func-item" href="/help" target="_blank">帮助</a>\n        </div>\n        <div class="folded">\n            <div class="ui simple pointing dropdown" style="padding: 0;line-height: normal">\n                <a href="javascript:void(0);" class="item">导航</a>\n                <div class="menu" style="padding: 2px;left: -10px">\n                    <a class="item func-item" href="/git" target="_blank">代码托管</a>\n                    <a class="item func-item" href="/pm" target="_blank">项目管理</a>\n                    <a class="item func-item" href="/webide" target="_blank">WebIDE</a>\n                    <a class="item func-item" href="/app" target="_blank">APP</a>\n                    <a class="item func-item" cg-auto-refresh-href="/upgrade">价格</a>\n                    <a class="item func-item" cg-auto-refresh-href="/pp">冒泡</a>\n                    <a class="item func-item" cg-auto-refresh-href="http://blog.coding.net/" target="_blank">博客</a>\n                    <a class="item func-item" href="/help" target="_blank">帮助</a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class="header" ng-include="\'app/layout/top_menu/\' + (top_menu_tpl ? top_menu_tpl : \'title\') + \'.html\'"></div>\n\n<div class="right menu" ng-if="USER">\n    <div class="ui item mart-logo">\n        <a class="icon item" href="https://mart.coding.net" target="_blank">\n            <img src="/static/d96b3b8192d6abefb2585d80fa81e56b.png">\n        </a>\n        <span class="vertical-line"></span>\n    </div>\n    <div class="ui simple pointing dropdown item add" style="padding: 0">\n        <div class="menu">\n            <a class="item" ng-click="createTask();" ng-if="USER"><i class="tasks icon"></i>任务</a>\n            <a class="item" href="/user/projects/create"><i class="coding project icon"></i>项目</a>\n            <a class="item" ng-click="makeBubble();"><i class="coding bubble icon"></i>冒泡</a>\n            <a class="item" ng-click="showSendMsgDialog();"><i class="mail icon"></i>私信</a>\n            <a class="item" ng-click="addFriend();"><i class="user icon"></i>好友</a>\n        </div>\n        <a class="add-project icon item"><i class="add icon"></i></a>\n    </div>\n    <div class="ui simple pointing dropdown item add" style="padding: 0">\n        <div class="menu">\n            <a class="item" cg-auto-refresh-href="/user/notifications" ng-if="!($root.unread.notifications > 0)"><span style="font-size: 12px">无未读信息</span></a>\n            <a class="item" cg-auto-refresh-href="/user/notifications/unread" ng-if="$root.unread.notifications > 0"><span style="font-size: 12px">{{$root.unread.notifications}}&nbsp;未读信息</span></a>\n        </div>\n        <a class="icon item inbox" cg-auto-refresh-href="/user/notifications" ng-if="!($root.unread.notifications > 0)"><i class="inbox icon"></i></a>\n        <a class="icon item inbox message" cg-auto-refresh-href="/user/notifications/unread" ng-if="$root.unread.notifications > 0"><i class="inbox icon"></i></a>\n    </div>\n    <div class="ui simple pointing dropdown item add" style="padding: 0">\n        <div class="menu">\n            <a class="item" cg-auto-refresh-href="/user/messages" ng-if="!($root.unread.messages > 0)"><span style="font-size: 12px">无未读私信</span></a>\n            <a class="item" cg-auto-refresh-href="/user/messages/unread" ng-if="$root.unread.messages > 0"><span style="font-size: 12px">{{$root.unread.messages}}&nbsp;未读私信</span></a>\n        </div>\n        <a class="inbox icon item" cg-auto-refresh-href="/user/messages" ng-if="!($root.unread.messages > 0)"><i class="mail icon"></i></a>\n        <a class="inbox icon item message" cg-auto-refresh-href="/user/messages/unread" ng-if="$root.unread.messages > 0"><i class="mail icon"></i></a>\n    </div>\n\n    <div class="ui dropdown item" ng-controller="UserDropdownController" cg-dropdown dropdown-setting="dropdown_settings">\n        <div class="menu frequently-projects">\n            <div class="frequently-used-projects" ng-include="\'app/layout/top_menu/frequently_used_projects.html\'">\n            </div>\n            <div class="menu-item-wrapper">\n                <a class="item" cg-auto-refresh-href="/user/projects"><i class="coding project icon"></i>项目\n                    <span class="project-num" ng-if="prj_update_count">{{prj_update_count | unreadCount}}</span>\n                </a>\n                <a class="item" cg-auto-refresh-href="/user/tasks?owner={{USER.id}}"><i class="tasks icon"></i>任务</a>\n                <a class="item" cg-auto-refresh-href="/user/relationship/friends"><i class="user icon"></i>好友</a>\n                <a class="item" cg-auto-refresh-href="/user/activities"><i class="basic lightning icon"></i>动态</a>\n                <a class="item" cg-auto-refresh-href="/user/account"><i class="dashboard icon"></i>账户</a>\n                <a class="item" cg-auto-refresh-href="javascript:void(0);" ng-click="logout();" style="border-bottom: 1px solid rgba(0, 0, 0, 0.0470588)"><i class="sign out icon"></i>退出</a>\n                <a class="item" cg-auto-refresh-href="/app#download" style="position: absolute; bottom: 0"><i class="download icon"></i>APP 下载</a>\n            </div>\n        </div>\n        <a cg-auto-refresh-href="/user" class="ui avatar image" ng-class="{\'message-breath\' : USER.prj_update_count > 0 || prj_update_count > 0}" title="{{USER.name}}">\n            <img ng-src="{{USER.avatar}}">\n        </a>\n        <i class="dropdown icon" id="dropdown-icon"></i>\n    </div>\n</div>\n<div class="right menu" ng-if="USER === false">\n    <div class="ui item mart-logo">\n        <a class="icon item" href="https://mart.coding.net" target="_blank">\n            <img src="/static/d96b3b8192d6abefb2585d80fa81e56b.png">\n        </a>\n        <span class="vertical-line"></span>\n    </div>\n    <a class="ui coding green register button" cg-auto-refresh-href="/register">注册</a>\n    <a class="ui coding white login button" cg-auto-refresh-href="/login">登录</a>\n</div>'),
            $templateCache.put("app/layout/top_menu/frequently_used_projects.html", '<div class="projects-wrapper" ng-controller="FrequentlyProjectsController">\n    <div class="title clearfix">\n        <span class="coding floated left">\n            <i class="pin icon rotate30"></i>常用项目\n        </span>\n        <span class="coding floated right">\n            <a class="gray" href="/user/projects">\n                <i class="setting icon"></i>\n            </a>\n        </span>\n    </div>\n    <div class="content">\n        <div class="empty-list coding aligned center" ng-if="projects.length === 0 && loaded">\n            <p>\n                <i class="coffee icon"></i>\n                <span style="color: #666; line-height: 23px">\n                    你还没有设置常用项目，去项目页面设置？<br>\n                    Hover 项目 Logo 就能 Pin 呢！\n                </span>\n            </p>\n            <a href="/user/projects" class="ui button">马上去设置</a>\n        </div>\n        <div class="empty-list coding aligned center" ng-if="projects.length === 0 && loading && !loaded">\n            <p style="padding-top: 50px">\n                <i class="loading icon"></i> 正在加载常用项目...\n            </p>\n        </div>\n        <div class="">\n            <ul class="frequent-project-list clearfix">\n                <li ng-repeat="item in projects track by $index">\n                    <a class="pin-logo-wrapper" cg-auto-refresh-href="{{item.project_path}}">\n                        <img ng-src="{{item.icon}}" title="{{item.name}}">\n                        <!-- pin\n                        <div class="pin-project-cover" ng-class="{\'active\': item.pin}">\n                            <i class="remove sign red icon" ng-click="pin($event, item);"></i>\n                        </div>\n                        -->\n                    </a>\n                    <div class="title icon ellipsis-2" title="{{item.name}}" ng-class="{public: item.is_public}" ng-bind="item.name"></div>\n                    <i class="message-tip" ng-show="item.un_read_activities_count && !item.selected" ng-bind="item.un_read_activities_count"></i>\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>'),
            $templateCache.put("app/layout/top_menu/group.html", "<span>{{GROUP.name}}</span>"),
            $templateCache.put("app/layout/top_menu/project.html", '<style type="text/css">\n    #project_title_dropdown{min-width: 120px;height: 30px;}\n    #public-project-title{display: inline-block;padding: 10px 0;}\n    #project_title_dropdown .menu{font-size: 14px; width: 300px;}\n    #project_title_dropdown .menu .search.icon {padding-top: 6px;}\n    #project_title_dropdown .project-picker.wide .projects-outer .text {width: 210px!important;}\n    #project_title_dropdown i.triangle.icon {float: right; margin-top: 12px;}\n    @media only screen and (max-width: 1360px) {\n        #public-project-title{max-width: 200px;}\n    }\n    @media only screen and (min-width: 1361px) and (max-width: 1500px) {\n        #public-project-title{max-width: 300px;}\n    }\n    @media only screen and (min-width: 1500px) {\n        #public-project-title{max-width: none;}\n    }\n</style>\n<div ng-if="!PROJECT[\'is_public\']" id="project_title_dropdown" ng-controller="TopMenuProjectTitleController">\n    <div cg-task-project-picker="current_project" non-cancelable="true" projects="projects" active="true">\n        <div id="public-project-title" class="text ellipsis">\n            <i ng-if="!current_project[\'is_public\'] && showTitle" class="lock icon"></i><span ng-if="showTitle" ng-bind="current_project.name"></span>\n        </div>\n        <i class="triangle down icon" ng-if="projects.length>1 && showTitle"></i>\n    </div>\n</div>'),
            $templateCache.put("app/layout/top_menu/title.html", '<span class="top-menu-title" ng-controller="TopMenuTitleController" ng-bind="top_menu_title">\n</span>'),
            $templateCache.put("app/layout/top_menu/user.html", '<span ng-bind="USER.name" class="top-user-name ellipsis" title="{{USER.name}}"></span>'),
            $templateCache.put("app/marketing/single.html", '<style>\nbody {\n    padding: 0px;\n    margin: 0px;\n    background-image: url("https://dn-coding-net-production-static.qbox.me/8049b60b-001a-48f3-a8d3-76982759a01d.png");\n}\n\n#single {\n    width: 1280px;\n    margin: 0px auto;\n    color: #FFF;\n}\n\n#single .top-bg {\n    background: url("https://dn-coding-net-production-pp.qbox.me/8a4a0912-d461-4374-9d0d-3b7a28a97676.png");\n    width: 1280px;\n    height: 722px;\n}\n\n#single section.intro {\n    background: url("https://dn-coding-net-production-static.qbox.me/eadf1f1c-a463-4ca9-9b2e-0706cc75a803.png");\n    width: 1046px;\n    height: 1562px;\n    background-position: top center;\n    background-repeat: no-repeat;\n    margin: 0 auto;\n    margin-top: -100px;\n    z-index: 2;\n    padding-bottom: 60px;\n}\n\n#single .requirement,\n#single .dining {\n    width: 960px;\n    margin: 0 auto;\n}\n\n#single .requirement {\n    padding-top: 490px;\n}\n\n#single .requirement .text,\n#single .requirement .publish {\n    padding-left: 30px;\n    color: #7f402c;\n    font-size: 14px;\n    line-height: 28px;\n}\n\n#single .requirement .publish {\n    text-align: center;\n    padding-top: 10px;\n}\n\n#single .requirement .text {\n    font-style: italic;\n}\n\n#single .requirement .text a {\n    color: #4586c8;\n    text-decoration: none;\n}\n\n#single .dining {\n    display: table;\n    width: 960px;\n    margin: 0 auto;\n    padding-top: 70px;\n}\n\n#single .dining .cell {\n    display: table-cell;\n    vertical-align: top;\n    width: 50%;\n}\n\n#single .dining .cell .title {\n    margin-bottom: 20px;;\n}\n\n#single .dining .cell .title img {\n    margin-left: -8px;\n}\n\n#single .dining .cell.pt-100 {\n    padding-top: 90px;\n}\n\n#single .dining .cell .photo {\n    text-align: center;\n}\n\n#single .dining .cell .photo.pl {\n    padding-left: 95px;\n}\n\n#single .dining .cell .photo.mt-190 {\n    margin-top: -190px;\n}\n\n#single .dining .cell .photo.mt-20 {\n    margin-top: -20px;\n}\n\n#single .dining .cell .addrs {\n    color: #7f402e;\n    font-style: italic;\n}\n\n#single .dining .cell .addrs.pl-80 {\n    padding-left: 80px;\n}\n\n#single .dining .cell .addrs.mt-60 {\n    margin-top: -60px;\n}\n\n#single .dining .cell .addrs h3 {\n    font-size: 18px;\n    font-weight: normal;\n    font-style: italic;\n    color: #ee5936;\n    margin: 0;\n    padding: 0;\n    padding-bottom: 10px;\n}\n\n#single .dining .cell .addrs ul {\n    padding: 0px;\n    margin: 0px;\n}\n\n#single .dining .cell .addrs .addr {\n    padding-bottom: 20px;\n}\n\n#single .dining .cell .addrs ul > li {\n    list-style-type: circle;\n    list-style-position: inside;\n    position: relative;\n}\n\n#single .dining .cell .addrs ul > li label {\n    text-decoration: underline;\n    line-height: 32px;\n    font-size: 14px;\n    cursor: pointer;\n}\n\n#single .dining-room-box {\n    position: absolute;\n    bottom: 40px;\n    left: 0px;\n    z-index: 1000;\n    display: none;\n}\n\n#single .dining-room-box .content {\n    padding: 20px;\n    background: #faede1;\n    font-size: 12px;\n    border-radius: 10px;\n    position: relative;\n    font-style: normal;\n    -webkit-box-shadow: -5px 10px rgba(0, 0, 0, 0.04);\n    -moz-box-shadow: -5px 10px rgba(0, 0, 0, 0.04);\n    box-shadow: -5px 10px rgba(0, 0, 0, 0.04);\n    color: #a28f7c;\n    line-height: 24px;\n    width: 400px;\n}\n\n#single .dining-room-box .content em {\n    color: #7f402c;\n    font-weight: normal;\n    font-style: normal;\n}\n\n#single .dining-room-box .content div.name a {\n    font-size: 18px;\n    color: #ee5936;\n}\n\n#single .dining-room-box .content:before {\n    content: \'\';\n    position: absolute;\n    left: 2em;\n    bottom: -0.3em;\n    width: 2em;\n    height: 1.5em;\n    transform: rotate(155deg);\n    -webkit-transform: rotate(155deg);\n    -moz-transform: rotate(155deg);\n    -ms-transform: rotate(155deg);\n    -webkit-transition: background .1s linear;\n    -moz-transition: background .1s linear;\n    transition: background .1s linear;\n    background-color: #faede1;\n    border-left: 1px solid #faede1;\n    border-bottom: 1px solid #faede1;\n    z-index: 2;\n}\n\n#single .dining-room-box .content > div {\n    margin-bottom: 10px;\n}\n\n#single .dining-room-box .content > div:last-child {\n    margin-bottom: 0px;\n}\n\n#single .dining-room-box .content .level img {\n    vertical-align: middle;\n}\n\n#single .tips {\n    width: 800px;\n    margin: 0 auto;\n    font-size: 12px;\n    color: #7f402e;\n    line-height: 24px;\n    margin-top: -10px;\n}\n\n.clearfix:after {\n    visibility: hidden;\n    display: block;\n    font-size: 0;\n    content: " ";\n    clear: both;\n    height: 0;\n}\n\n.clearfix {\n    display: block;\n}\n</style>\n\n<div id="single">\n<section class="top-bg">\n\n</section>\n<section class="intro">\n<div class="requirement">\n    <div class="text">\n        <ul>\n            <li>说出你最喜欢的 Coding 的功能，并写一篇不少于 300 字的评论。（截图，使用体验等等）</li>\n            <li>我们将在11月7日评选出16篇优质评论，为每人提供 600 元报销款。</li>\n            <li>餐后把一张餐厅照片和发票照片私信发给 <a href="/u/coding" style="" target="_self">@Coding </a>，随后报销！（仅限11月20日前）</li>\n            <li>所有未入选的合格评论都会获得洋葱猴 T 恤一件。</li>\n        </ul>\n    </div>\n    <div class="publish">\n        <a href="u/panpan/p/1111/topic/all" target="_self"><img src="https://dn-coding-net-production-static.qbox.me/1ab06dd2-cdd0-40fc-845d-1ef2a360af56.png"></a>\n    </div>\n</div>\n<div class="dining">\n<div class="cell">\n    <div class="photo pl mt-20"><img src="https://dn-coding-net-production-static.qbox.me/6b2e7d1a-3b51-42de-807d-75da3eb82b3b.png">\n    </div>\n    <div class="addrs mt-60 pl-80">\n\n        <div class="addr first">\n            <h3>广州</h3>\n            <ul>\n                <li>\n                    <label mk-popover="">Wilber\'s</label>\n\n                    <div class="dining-room-box">\n                        <div class="content">\n                            <div class="name"><a href="http://www.dianping.com/shop/2430631" target="_blank">Wilber\'s</a></div>\n                            <div class="level">\n                                <em>星评：</em>\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/beb2f225-bc87-428c-890b-befb8efec131.png">\n                            </div>\n                            <div class="dining-addr"><em>地址：</em>广州越秀区 竹丝岗二马路62号(近农林下路)</div>\n                            <div class="intro"><em>简介：</em>\n                                城中热门意大利餐厅，郁郁葱葱的参天大树下，隐蔽着一座老房子，米色的墙壁上一行行绿色的英文语句，有如跳动的音符，弹奏出曼妙的音乐章，内里小资而浪漫。\n                            </div>\n                        </div>\n                    </div>\n                </li>\n                <li>\n                    <label mk-popover="">Noble Restaurant & Bar 贵仕餐厅</label>\n\n                    <div class="dining-room-box">\n                        <div class="content">\n                            <div class="name"><a href="http://www.dianping.com/shop/4658352" target="_blank">Noble\n                                Restaurant & Bar 贵仕餐厅</a></div>\n                            <div class="level">\n                                <em>星评：</em>\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/adfc9bef-1013-4eca-8d96-fe73227e307c.png">\n                            </div>\n                            <div class="dining-addr"><em>地址：</em>天河区珠江新城华夏路8号合景国际金融广场5楼(近广州歌剧院)</div>\n                            <div class="intro"><em>简介：</em>\n                                法国菜。弘扬个性化舒适的就餐环境，轻松简洁的特色服务，将时尚的菜品，用精致的器皿全面展示，让顾客在用餐过程中倍感，餐厅的独特魅力。\n                            </div>\n                        </div>\n                    </div>\n                </li>\n            </ul>\n        </div>\n\n        <div class="addr second">\n            <h3>深圳</h3>\n            <ul>\n                <li>\n                    <label mk-popover="">BT8 Bar&Restaurant</label>\n\n                    <div class="dining-room-box">\n                        <div class="content">\n                            <div class="name"><a href="http://www.dianping.com/shop/19110433" target="_blank">BT8\n                                Bar&Restaurant</a></div>\n                            <div class="level">\n                                <em>星评：</em>\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/adfc9bef-1013-4eca-8d96-fe73227e307c.png">\n                            </div>\n                            <div class="dining-addr"><em>地址：</em>罗湖区宝安南路1036号鼎丰大厦一楼(摩登克斯酒店)</div>\n                            <div class="intro"><em>简介：</em>\n                                西方的烧烤和日本料理的精致口味之间的高端融合。这个地方给人提供了一个优雅的感觉，同时保持一个包容的氛围。这里的鸡尾酒一级棒！\n                            </div>\n                        </div>\n                    </div>\n                </li>\n                <li>\n                    <label mk-popover="">艾嘉路意大利餐厅（欢乐海岸店）</label>\n\n                    <div class="dining-room-box">\n                        <div class="content">\n                            <div class="name"><a href="http://www.dianping.com/shop/5717490" target="_blank">艾嘉路意大利餐厅（欢乐海岸店）</a>\n                            </div>\n                            <div class="level">\n                                <em>星评：</em>\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/adfc9bef-1013-4eca-8d96-fe73227e307c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/beb2f225-bc87-428c-890b-befb8efec131.png">\n\n                            </div>\n                            <div class="dining-addr"><em>地址：</em>深圳南山区 白石路8号欢乐海岸曲水湾12栋1楼(近滨海大道)</div>\n                            <div class="intro"><em>简介：</em>\n                                意大利菜。艾嘉路意大利餐厅在做菜方面要求极为苛刻，然而对于就餐环境同样追求尽善尽美，优质的食具，独特的氛围，舒适的环境，浪漫的音乐以及对顾客的专注诚意，足以让您感受地道意大利菜肴和美食之外，同样也让你感受到传说中意大利的热情。\n                            </div>\n                        </div>\n                    </div>\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>\n<div class="cell">\n    <div class="title"><img src="https://dn-coding-net-production-static.qbox.me/26cd6076-e39d-48e8-90ea-92116d3138a7.png"></div>\n    <div class="addrs">\n        <div class="addr third">\n            <h3>北京</h3>\n            <ul>\n                <li>\n                    <label mk-popover="">唇度Le château厚烤牛排酒堡</label>\n\n                    <div class="dining-room-box">\n                        <div class="content">\n                            <div class="name"><a href="http://www.dianping.com/shop/19293625" target="_blank">唇度Le\n                                château厚烤牛排酒堡</a></div>\n                            <div class="level">\n                                <em>星评：</em>\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/adfc9bef-1013-4eca-8d96-fe73227e307c.png">\n                            </div>\n                            <div class="dining-addr"><em>地址：</em>北京海淀区复兴路乙11号梅地亚中心1楼</div>\n                            <div class="intro"><em>简介：</em>\n                                这家红酒牛排西式餐厅环境婉约，充满优雅浪漫情调，名字也很有文艺范儿——“唇度厚烤牛排酒堡”，法文“LeChâteau”，其多重含义有“城堡、酒堡以及厚烤牛排”的简称，也特指那些敢于称作是“厚牛排”的美味出品时刻，必须保证的温度与厚度。\n                            </div>\n                        </div>\n                    </div>\n                </li>\n                <li>\n                    <label mk-popover="">TRB</label>\n\n                    <div class="dining-room-box">\n                        <div class="content">\n                            <div class="name"><a href="http://www.dianping.com/shop/5455635" target="_blank">TRB(Temple\n                                Restaurant Beijing)</a></div>\n                            <div class="level">\n                                <em>星评：</em>\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                            </div>\n                            <div class="dining-addr"><em>地址：</em>北京东城区沙滩北街23号(近五四大街)</div>\n                            <div class="intro"><em>简介：</em>\n                                TRB欧式西餐厅。“开在六百多年古寺庙里”的法餐厅，餐厅外保持着厚重的“历史感”，餐厅里是简洁、艺术、现代感的设计，非常“别具一格”。服务员“面带微笑”，上菜，撤盘都在“非常适当的时候”。餐前开胃小食种类“丰富”，鹅肝、牛排味道“不错”，海虹奶油汤“很稠”；藏酒“千余种”，每道菜都配有相应的酒以“呈现最佳味道”。周末有\n                                brunch，五道就“吃得很饱”。\n                            </div>\n                        </div>\n                    </div>\n                </li>\n            </ul>\n        </div>\n\n        <div class="addr fouth">\n            <h3>上海</h3>\n            <ul>\n                <li>\n                    <label mk-popover="">Bocado</label>\n\n                    <div class="dining-room-box">\n                        <div class="content">\n                            <div class="name"><a href="http://www.dianping.com/shop/5342673" target="_blank">Bocado</a>\n                            </div>\n                            <div class="level">\n                                <em>星评：</em>\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/adfc9bef-1013-4eca-8d96-fe73227e307c.png">\n                            </div>\n                            <div class="dining-addr"><em>地址：</em>上海徐汇区永福路47号203(近复兴路)</div>\n                            <div class="intro"><em>简介：</em>\n                                “Bocado”在西班牙语中有“一口”的意思，如同广为人知的 tapas 小食一样，传达着西班牙人热情、随意的生活方式。受西班牙小别墅的启发，Bocado\n                                运用庄园风格的复古竖条软木铺设地板，营造出朴素的复古感，柔和的烛光和轻快随意的音乐营造出温馨愉悦的用餐环境。每周三吉他弹唱、周五、六资深DJ表演。\n                            </div>\n                        </div>\n                    </div>\n                </li>\n                <li>\n                    <label mk-popover="">TOP CHEF</label>\n\n                    <div class="dining-room-box">\n                        <div class="content">\n                            <div class="name"><a href="http://www.dianping.com/shop/4538913" target="_blank">TOP\n                                CHEF</a></div>\n                            <div class="level">\n                                <em>星评：</em>\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/6c4eb37e-d0ff-4bca-a2cf-9b0c82ded14c.png">\n                                <img src="https://dn-coding-net-production-pp.qbox.me/adfc9bef-1013-4eca-8d96-fe73227e307c.png">\n                            </div>\n                            <div class="dining-addr"><em>地址：</em>上海卢湾区 蒙自路169号智造局4-105室(近丽园路)</div>\n                            <div class="intro"><em>简介：</em>\n                                TOPCHEF\n                                是一家主营意大利菜的西餐厅，风味独特，口味正宗，味道一流。餐厅装修真是酷毙了，设计很有特色，幽幽的灯光，半开的幕窗，非常温馨的环境和布置，精致的器皿，醇美的红酒，每样都让你流连忘返。\n                            </div>\n                        </div>\n                    </div>\n                </li>\n            </ul>\n        </div>\n    </div>\n    <div class="photo mt-190"><img src="https://dn-coding-net-production-static.qbox.me/6e27e4d6-b2d4-4390-b974-76352aff50b7.png">\n    </div>\n</div>\n</div>\n<div class="tips">\n    以上餐厅通过 Coding 实际考察推荐，当然你可以选择你所在城市水平相当的西餐厅去 Enjoy。（别忘了提前预约安排好浪漫小细节哦！）<br>\n    * 本次活动解释权归 Coding 所有。\n</div>\n</section>\n</div>'),
            $templateCache.put("app/mobile_app/index.html", '<style>\n    html, body {\n        height: inherit !important;\n        overflow: inherit;\n    }\n</style>\n<div id="app-open-source" cg-wow="">\n    <section class="banner">\n        <div class="content">\n            <div class="intro">\n                <div class="front-view">\n                    <div class="open-source">\n                        <div>\n                            <img src="https://dn-coding-net-production-static.qbox.me/8e8ec370-5ddb-478f-8107-508295a407ed.png">\n                        </div>\n                    </div>\n                    <div class="phones">\n                        <div>\n                            <img src="https://dn-coding-net-production-pp.qbox.me/6a0255e6-e774-42b0-9303-b99aab50d65a.png">\n                        </div>\n                    </div>\n                </div>\n                <div class="buttons">\n                    <a href="https://coding.net/u/coding/p/Coding-Android/git" class="button"><i class="android icon"></i>Android 源码</a>\n                    <a href="https://coding.net/u/coding/p/Coding-iOS/git" class="button"><i class="apple icon"></i>iOS\n                        源码</a>\n                    <a href="https://coding.net/u/coding/p/Coding-iPad/git" class="button"><i class="download icon"></i>iPad 源码</a>\n                </div>\n            </div>\n        </div>\n    </section>\n    <section class="first">\n        <div class="content">\n            <div class="container">\n                <div class="section-title">\n                    <h1>管理任务理应如此享受</h1>\n\n                    <p>Coding 为开发者提供前所未有的项目开发体验</p>\n                </div>\n                <div class="pics-box">\n                    <ul class="pics">\n                        <li class="pic-1">\n                            <div class="icon wow fadeIn animated" data-wow-delay="1s">\n                                <img src="https://dn-coding-net-production-static.qbox.me/0667e837-9227-405e-bfc6-f55e2073729b.png">\n                            </div>\n                            <div class="app wow fadeInUpBig center animated">\n                                <img src="https://dn-coding-net-production-static.qbox.me/532bac76-4bf4-4279-bfe7-b45f5dfccdec.png">\n                            </div>\n                        </li>\n                        <li class="pic-2">\n                            <div class="icon wow fadeIn animated" data-wow-delay="1s">\n                                <img src="https://dn-coding-net-production-static.qbox.me/50b5b172-4c82-4eea-85d8-1252969cfc21.png">\n                            </div>\n                            <div class="app wow fadeInUpBig center animated">\n                                <img src="https://dn-coding-net-production-static.qbox.me/379976fe-1a7e-4677-b035-47ff880f8a6a.png">\n                            </div>\n\n                        </li>\n                        <li class="pic-3">\n\n                            <div class="icon wow fadeIn animated" data-wow-delay="1s">\n                                <img src="https://dn-coding-net-production-static.qbox.me/9c659780-d7b2-4a2d-a5bf-f0c19ce1f995.png">\n                            </div>\n                            <div class="app wow fadeInUpBig center animated">\n                                <img src="https://dn-coding-net-production-static.qbox.me/1600e9e2-5a1c-441c-a53d-e62ecb2dc255.png">\n                            </div>\n\n                        </li>\n                        <li class="pic-4">\n\n                            <div class="icon wow fadeIn animated" data-wow-delay="1s">\n                                <img src="https://dn-coding-net-production-static.qbox.me/02bfb5cc-fde5-4c16-afd4-619a51993968.png">\n                            </div>\n                            <div class="app wow fadeInUpBig center animated">\n                                <img src="https://dn-coding-net-production-static.qbox.me/24215bb3-adf8-478e-a6af-6052f01c00d1.png">\n                            </div>\n\n                        </li>\n                    </ul>\n                </div>\n\n            </div>\n        </div>\n    </section>\n    <section class="second">\n        <div class="content">\n            <div class="container">\n                <div class="section-title">\n                    <h1>团队沟通本该如此流畅</h1>\n\n                    <p>私信、通知合二为一，消息推送让团队沟通更精准快捷</p>\n                </div>\n                <div class="message">\n                    <div class="app">\n                        <div class="wow fadeInUpBig center animated">\n                            <img class="app-img" src="https://dn-coding-net-production-static.qbox.me/92d85de4-132f-49e0-9e0a-0f52fb826d51.png">\n\n                            <div><img class="icon wow fadeIn animated" data-wow-delay="1s" src="https://dn-coding-net-production-static.qbox.me/3322cd30-d731-44bd-a7bf-efb0cec108ed.png">\n                            </div>\n                        </div>\n                    </div>\n                    <div class="talk">\n                        <div class="to">\n                            <div class="avatar wow fadeIn animated" data-wow-delay="1.5s"><img src="https://dn-coding-net-production-static.qbox.me/849d8894-f1af-45c9-9b07-f3a78c2a5c66.png">\n                            </div>\n                            <div class="talk-pop to wow fadeIn animated" data-wow-delay="1.5s">\n                                <div>\n                                    在吗？反馈一个 Bug...\n                                </div>\n                            </div>\n                        </div>\n                        <div class="from">\n                            <div class="talk-pop from wow fadeIn animated" data-wow-delay="2s">\n                                <div>\n                                    在了，谢谢您的反馈。\n                                </div>\n                            </div>\n                            <div class="avatar wow fadeIn animated" data-wow-delay="2s"><img src="https://dn-coding-net-production-static.qbox.me/cc794de4-c1f5-4b9c-ba56-d33519b8d644.png">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n    <section class="third">\n        <div class="content">\n            <div class="container">\n                <div class="section-title">\n                    <h1>冒泡社交只为给开发者分享欢乐</h1>\n\n                    <p>Coding 为开发者精心打造的交流、分享技术开发乐趣的天地</p>\n                </div>\n                <div class="bubble">\n                    <div class="mid-image wow fadeInUpBig center animated">\n                        <img src="https://dn-coding-net-production-static.qbox.me/776a41cb-6ed3-41c6-bb66-8632defc67b4.png" width="100%">\n\n                        <div class="icon">\n                            <img data-wow-delay="0.5s" class="span3 wow fadeIn animated" src="https://dn-coding-net-production-static.qbox.me/7738e333-458a-4e4d-a9f5-88e120a295bd.png">\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n    <a name="download"></a>\n    <section class="four">\n        <div class="content">\n            <div class="container">\n                <div class="section-title">\n                    <h1>立即体验 Coding 客户端</h1>\n\n                    <p>各大应用市场搜索 “Coding” 下载</p>\n                </div>\n                <div>\n                    <div class="qr-code">\n                        <img src="https://dn-coding-net-production-static.qbox.me/16ce58f2-24df-4528-b90f-9cdf6df16442.png">\n\n                        <div><a href="/app/android" target="_self" class="apk-button"><i class="android icon"></i>Android APK</a></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n    <div id="pull-request" ng-if="false">\n        <div>\n            <div class="gift">\n                <div class="monkey">\n                    <img src="https://dn-coding-net-production-static.qbox.me/81be69af-5be8-4d4f-8447-8fe9621302fd.png">\n                </div>\n                <div class="box">\n\n                </div>\n            </div>\n            <div class="detail">\n                <div class="text">\n                    提交 Pull Request 有礼哦！\n                </div>\n                <div>\n                    <a class="btn" href="https://coding.net/u/coding/p/marketing/topic/12548">查看详情</a>\n                </div>\n            </div>\n        </div>\n        <div class="close" ng-click="closeFixedTip()"><i class="remove icon"></i></div>\n    </div>\n</div>\n<style>\n    #footer {\n        padding: 20px 0px !important;\n    }\n</style>\n<div ng-include="\'app/layout/footer.html\'"></div>'),
            $templateCache.put("app/paas/empty.html", '<div class="empty paas container" ng-controller="PaasEmptyController">\n    <div class="warning ui icon small message">\n        <i class="frown icon"></i>\n        <div class="content">\n            <div class="header">温馨提示\n                <i class="icon help tip" style="cursor: pointer;margin-left: 5px!important" data-html="<div class=\'content\'>如何开启演示平台？<br/>1） Git 仓库不为空<br/>2） 只有项目拥有者才能开启演示平台<br/>3） 通过项目部署检测，即可一键部署，启动演示功能<br/>注意：<br/>- 项目演示功能仅作演示之用，不支持高并发访问。<br/>- 不作任何数据保证，请不要输入重要数据。<br/>- 您可以 Fork Demo 公开项目，来快速体验演示平台功能。<br/><a href=\'/help/doc/paas/getting-started.html\' target=\'_blank\'>更多帮助<i class=\'icon double angle right\'></i></a></div>" cg-help-popup=""></i>\n            </div>\n            <p>\n                功能不可用，此项目尚未开启演示平台，<strong style="color: rgb(49, 80, 178)">演示平台文档地址：</strong>\n                <a href="http://docs.coding.io" target="_blank">http://docs.coding.io</a>。\n            </p>\n        </div>\n    </div>\n    <div class="error ui small icon message" ng-if="empty_repo && USER.id == PROJECT.owner_id">\n        <i class="warning icon"></i>\n        <div class="content">\n            <div class="header">此项目无法开启演示平台</div>\n            <p>没有代码托管或代码库为空</p>\n        </div>\n    </div>\n\n    <div class="ui attached small message" ng-if="!empty_repo && USER.id == PROJECT.owner_id">\n        <div class="header">开启演示平台功能</div>\n        <p>按照下面的步骤手动开启演示平台，我们将执行一系列的检测和操作。</p>\n    </div>\n    <div class="ui attached fluid segment" ng-if="!empty_repo && USER.id == PROJECT.owner_id">\n        <div class="ui small info message" ng-class="{\'hidden\': !!msg_hide}">\n            <i class="close icon" ng-click="msg_hide = true"></i>\n            <div class="header">几点注意事项：</div>\n            <ol>\n                <li>\n                    <b>开启演示前请务必先查看文档: </b>\n                    <a href="http://docs.coding.io" target="_blank">http://docs.coding.io</a>\n                </li>\n                <li><b>此功能仅作项目演示(Demo)之用，不支持大量的访问</b></li>\n                <li><b>我们不对应用数据做任何保证，请不要在应用内存储重要数据</b></li>\n                <li>此功能不会影响到项目已有的任何内容，两者数据完全独立</li>\n                <li>部分项目开启演示平台后可能还需要做些修改或配置才能正常运行</li>\n                <li>如果不想演示了，你可以自由停止演示项目，或者删除项目演示</li>\n            </ol>\n        </div>\n        <div class="ui small message">\n            <h4 class="ui header">检测应用</h4>\n            <p>初步检测演示平台是否支持部署当前项目，请点击下面按钮继续：</p>\n            <p>\n                <div class="ui secondary button" ng-click="!empty_repo && detect()">开始检测</div>\n                <i class="loading icon" ng-show="detectLoading"></i>\n                <label class="ui green label" ng-show="canEnable && language">\n                    <i class="ok sign icon"></i>\n                    <strong>检测到支持的运行环境：</strong> {{language || \'未知\'}}\n                </label>\n                <label class="ui label" ng-show="detected && !canEnable">\n                    <i class="warning icon"></i>未检测到支持的运行环境\n                    （你依然可以 <a ng-click="canEnable = true" style="color: red; text-decoration: underline">强制开启</a>，或许修改下代码或配置就可以了哦）\n                </label>\n            </p>\n        </div>\n        <div class="ui small success message" ng-class="{\'hidden\': !canEnable}">\n            <h4 class="ui header">开启功能</h4>\n            <div style="margin: 10px 0" ng-show="servers">\n              <p style="color: #666">应用可以部署到以下服务器，请选择：</p>\n              <div class="ui radio checkbox" ng-repeat="server in servers">\n                <input type="radio" name="demo-server" id="server_{{server.index}}" ng-model="$parent.endpoint" ng-value="server.index" ng-show="showHongKong(server)">\n                <label for="server_{{server.index}}" class="title" ng-show="showHongKong(server)">{{server.name}}</label>\n              </div>\n              <div class="invite-box" ng-show="showInvite(endpoint)">\n                <label style="font-weight: bold">请输入邀请码：</label>\n                <div class="ui small input">\n                  <input ng-model="invite_code" type="text" placeholder="邀请码">\n                </div>\n              </div>\n              <p ng-if="!PROJECT.is_public && PROJECT.plan === 1">\n                <label class="ui purple label">\n                  <i class="ui icon info"></i><strong>提示：</strong>升级项目到开发版或高级版可支持香港演示平台自定义域名 &nbsp;&nbsp;\n                  <a style="color: pink" href="/upgrade" target="_blank">查看详情 »</a>\n                </label>\n              </p>\n            </div>\n            <p style="color: #666">点击下面的按钮开启演示平台功能：</p>\n            <p style="color: #222; font-weight: bold">\n              <input type="checkbox" id="readed" ng-model="readed">\n              <label for="readed">我已阅读并知道以上注意事项</label>\n            </p>\n            <div style="margin-top: 20px">\n                <div class="ui primary button" ng-class="{\'disabled\': !canEnable}" ng-click="!empty_repo && canEnable && enable(endpoint, invite_code, readed)">开启功能</div>\n                <i class="loading icon" ng-show="enableLoading"></i>\n                <label class="ui green label" ng-show="enabled">\n                    <i class="ok sign icon"></i>开启成功！\n                </label>\n                <label class="ui red label" ng-show="!readed && show_warn">\n                    <i class="warning icon"></i>请先阅读注意事项！\n                </label>\n                <label class="ui red label" ng-show="message">\n                    <i class="frown icon"></i>{{message}}\n                </label>\n                <span class="faq-box" ng-show="message">\n                    <i class="help icon"></i>\n                    <a href="http://docs.coding.io/guides/faq" target="_blank">常见问题解答</a>\n                </span>\n            </div>\n        </div>\n    </div>\n</div>'),
            $templateCache.put("app/paas/files.html", '<div ng-class="{\'public-project-view\': PROJECT.is_public}">\n  <div ng-include="\'app/git/public_view/inner_menu.html\'" ng-if="PROJECT.is_public"></div>\n  <div ng-include="\'app/paas/inner_menu.html\'" class="ui secondary vertical menu active" id="inner-menu" ng-class="{fixed: !PROJECT.is_public}" ng-style="PROJECT.is_public ? {float: \'left\', \'border-right\': \'none\'} : {}"></div>\n  <div class="paas container" ng-style="PROJECT.is_public ? {\'border-left\': \'1px solid #CCC\', \'min-height\': \'420px\', \'padding\': \'30px 30px 0 30px\'} : {}">\n      <h2 class="ui dividing header">\n        <div class="right floated small ui button" ng-click="refreshPage()">刷新</div>\n        文件系统\n      </h2>\n      <div class="files">\n        <p style="font-size: 12px; color: #666">\n          <strong>提示：</strong>必须启动应用后才可以查看文件系统。\n        </p>\n        <div class="file-explorer">\n          <div class="ui breadcrumb">\n            <a class="section" style="font-weight: bold" ng-click="changePath(\'/\')">{{PROJECT.name}}</a>\n            <div class="divider" ng-repeat-start="bc in breadcrumbs">/</div>\n            <a class="section" ng-click="changePath(\'/\', bc.path + \'/\')" ng-repeat-end>{{bc.name}}</a>\n            <div class="divider">/</div>\n            <a class="section" style="color: black; cursor: auto">{{name}}</a>\n          </div>\n          <p class="file-loading" ng-if="loading">\n              <i class="loading icon"></i>\n              正在加载\n          </p>\n          <div class="content" ng-if="!loading && !!files">\n            <hr>\n            <table ng-if="dir">\n              <tr ng-if="path != \'/\' && path !=\'\'">\n                <th>\n                  <a ng-click="goToPrev(path)"><i class="reply mail icon"></i>..</a>\n                </th>\n                <td></td>\n              </tr>\n              <tr ng-repeat="file in files track by $index">\n                <th>\n                  <a ng-click="changePath(path, file.name)">\n                    <i ng-class="{folder: file.dir, text: !file.dir, file: !file.dir, outline: !file.dir, icon: true}"></i><span>{{file.name}}</span>\n                  </a>\n                </th>\n                <td>{{file.size}}</td>\n              </tr>\n              <tr ng-if="files.length == 0"><td colspan="2" style="text-align: center">无内容</td></tr>\n            </table>\n            <pre ng-if="!dir && files.length > 0" cg-highlight="files"></pre>\n            <p class="file-loading" ng-if="!dir && files.length == 0">无内容</p>\n          </div>\n          <div class="goto-page" ng-show="!!files && total_pages > 1">\n              每页显示 50K 数据，页码:\n              <input ng-model="page" type="text" cg-ctrl-enter="goToPage(page)">\n              <a class="mini blue ui button" ng-click="goToPage(page)">Go</a>\n          </div>\n          <div cg-pager="{{pager_id}}"></div>\n        </div>\n      </div>\n  </div>\n</div>'),
            $templateCache.put("app/paas/inner_menu.html", '<header class="header item">\n    演示平台\n    <a href="http://docs.coding.io" target="_blank" title="演示平台文档"><i class="icon help"></i></a>\n    <article>\n        项目演示平台\n    </article>\n</header>\n<a class="item" ng-href="{{PROJECT.project_path}}/paas" ng-class="{active:inner_menu == \'basic\'}">\n    <i class="dashboard icon"></i>控制台\n</a>\n<a class="item" ng-href="{{PROJECT.project_path}}/paas/logs" ng-class="{active:inner_menu == \'logs\'}">\n    <i class="calendar icon"></i>查看日志\n</a>\n<a class="item" ng-href="{{PROJECT.project_path}}/paas/files" ng-class="{active:inner_menu == \'files\'}">\n    <i class="file icon"></i>文件系统\n</a>\n<a class="item" ng-href="{{PROJECT.project_path}}/paas/vars" ng-class="{active:inner_menu == \'vars\'}">\n    <i class="info icon"></i>环境变量\n</a>\n<a class="item" ng-href="{{PROJECT.project_path}}/paas/services" ng-class="{active:inner_menu == \'services\'}">\n    <i class="glass icon"></i>服务管理\n</a>'),
            $templateCache.put("app/paas/logs.html", '<div ng-class="{\'public-project-view\': PROJECT.is_public}">\n  <div ng-include="\'app/git/public_view/inner_menu.html\'" ng-if="PROJECT.is_public"></div>\n  <div ng-include="\'app/paas/inner_menu.html\'" class="ui secondary vertical menu active" id="inner-menu" ng-class="{fixed: !PROJECT.is_public}" ng-style="PROJECT.is_public ? {float: \'left\', \'border-right\': \'none\'} : {}"></div>\n  <div class="paas container" ng-style="PROJECT.is_public ? {\'border-left\': \'1px solid #CCC\', \'min-height\': \'420px\', \'padding\': \'30px 10px 0 30px\'} : {}">\n      <h2 class="ui dividing header">\n        <div class="right floated gray small ui button" ng-click="logs = []">清屏</div>\n        <div class="right floated dark gray small ui button" ng-class="{\'loading\': loading}" ng-click="ws_support && refreshLogs()" ng-show="!autoScroll">刷新</div>\n        <span>应用日志\n         <i class="icon help tip" style="cursor: pointer;margin-left: 5px!important" data-html="<div class=\'content\'>演示平台中的应用日志包括该项目的演示部署及访问日志，主要是为了程序排错之用。<br/>\x0B注意：平台仅保留最近一千行应用日志。应用日志会进行不定期清理，如有重要日志，请及时保存。<br/><a href=\'/help/project_demos/what_is_the_application_log\' target=\'_blank\'>更多帮助<i class=\'icon double angle right\'></i></a></div>" cg-help-popup=""></i>\n        </span>\n        <div class="log-filters">\n          <div class="ui radio checkbox" ng-repeat="(key, display) in log_filters">\n            <input type="radio" name="log-filter" id="filter_{{key}}" ng-model="$parent.filter" ng-value="key">\n            <label for="filter_{{key}}" class="title">{{display}}</label>\n          </div>\n        </div>\n      </h2>\n      <p style="margin: 10px 0 10px 0; font-size: 12px; color: #666">\n        <strong>注意：</strong>本功能仅供开发调试用。服务器端最多缓存 1000 行日志，不定期清除，点击日志列表右上角的小圆点可以开启实时日志。\n      </p>\n      <div class="error ui small icon message" ng-if="!ws_support">\n          <i class="warning icon"></i>\n          <div class="content">\n              <div class="header">日志功能无法启用</div>\n              <p>在当前浏览器上未检测到 WebSocket 支持</p>\n          </div>\n      </div>\n      <div class="logs" ng-if="ws_support" cg-scroll-to-top>\n        <p class="log-loading" ng-show="loading"><i class="loading icon"></i>建立 WebSocket 连接..</p>\n        <a id="tail" ng-click="toggleScroll()" ng-class="{\'active\': autoScroll}" style="top: 0px" ng-show="!loading">\n          <span class="status"></span>\n          <label class="text">{{autoScroll ? \'关闭实时日志\' : \'开启实时日志\'}}</label>\n        </a>\n        <pre ng-show="!loading">\n            <p ng-repeat="log in logs" class="log-{{log.header.source}}" ng-show="isLogShow(filter, log.header.source)"><a></a><span class="{{log.header.type}}">{{log.header.text}}</span><span class="{{log.content.type}}">{{log.content.text}}</span></p>\n        </pre>\n      </div>\n  </div>\n</div>'),
            $templateCache.put("app/paas/service/add_service_modal.html", '<div class="marketplace ui modal" id="pass-add-service-modal">\n  <i class="close icon"></i>\n  <h3 class="header">添加服务</h3>\n  <div class="content">\n    <div class="ui form">\n      <div class="field">\n        <h4>选择服务(必选)\n          <label class="ui red pointing left label" ng-if="form_error">\n              <i class="warning icon"></i>请选择一个服务\n          </label>\n        </h4>\n\n        <p style="font-size: 13px; color: #666" ng-if="!marketplace"><i class="loading icon"></i>加载服务列表</p>\n        <div class="ui relaxed horizontal divided list">\n          <div class="item" ng-click="selService(market.guid, $event)" ng-repeat="market in marketplace">\n            <div class="image">\n              <img ng-src="{{market.logo}}" title="{{market.description}}" width="60" height="60">\n              <a class="small like green ui corner label">\n                <i class="checkmark icon"></i>\n              </a>\n            </div>\n            <div class="content">\n              <div class="name">{{market.label}}</div>\n            </div>\n          </div>\n        </div>\n        <input type="hidden" ng-model="service.guid">\n      </div>\n      <div class="field">\n        <h4>服务名(可选)</h4>\n        <input type="text" placeholder="可由字母、数字、下划线组成" ng-model="service.name">\n      </div>\n      <div class="field">\n        <div class="ui checkbox">\n          <input id="createBind" name="createBind" type="checkbox" ng-model="createBind">\n          <label for="createBind">绑定创建后的服务到此项目(可选)</label>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="actions">\n    <div class="ui black button">取消</div>\n    <div class="ui positive button" ng-class="{\'loading\': add_loading}" ng-click="createService(service)">确定</div>\n  </div>\n</div>'),
            $templateCache.put("app/paas/service/console.html", '<div ng-class="{\'public-project-view\': PROJECT.is_public}">\n  <div ng-include="\'app/git/public_view/inner_menu.html\'" ng-if="PROJECT.is_public"></div>\n  <div ng-include="\'app/paas/inner_menu.html\'" class="ui secondary vertical menu active" id="inner-menu" ng-class="{fixed: !PROJECT.is_public}" ng-style="PROJECT.is_public ? {float: \'left\', \'border-right\': \'none\'} : {}"></div>\n  <div class="paas container" ng-style="PROJECT.is_public ? {\'border-left\': \'1px solid #CCC\', \'min-height\': \'420px\', \'padding\': \'30px 30px 0 30px\'} : {}">\n    <h2 class="ui dividing header">\n      <div class="toolbar" style="float: right">\n        <div class="small gray ui button" ng-click="fullscreen=!fullscreen">\n          全屏\n          <i class="icon gray remove" ng-click="fullscreen=false" ng-if="fullscreen"></i>\n        </div>\n        <div class="small ui button file" ng-if="importable">\n          恢复数据\n          <input id="fileupload" type="file" name="file" file-upload="uploadSettings">\n        </div>\n        <a ng-href="{{export_url}}" target="_self" class="small ui button" ng-if="importable">备份数据</a>\n      </div>\n      服务控制台\n    </h2>\n    <div class="ui dimmable dimmed" style="min-height: 300px">\n        <div class="ui inverted active dimmer" ng-if="loading">\n          <div class="ui loader"></div>\n        </div>\n        <div class="ui small info message" ng-if="filesystem">\n            <strong>提示：</strong>文件系统服务不支持执行命令，下面的控制台仅作显示提示信息用。\n            <a class="small blue ui button" ng-click="browseFs()">查看服务文件系统</a>\n        </div>\n        <div class="service-console" id="service-console" cg-fullscreen="fullscreen">\n          <div class="loading" style="margin-top: 100px; padding: 10px 0; text-align: center; color: #555; font-size: 14px" ng-if="!consoleReady">\n            <i class="loading icon"></i>正在初始化\n          </div>\n        </div>\n    </div>\n  </div>\n</div>'),
            $templateCache.put("app/paas/service/show.html", '<div ng-class="{\'public-project-view\': PROJECT.is_public}">\n  <div ng-include="\'app/git/public_view/inner_menu.html\'" ng-if="PROJECT.is_public"></div>\n  <div ng-include="\'app/paas/inner_menu.html\'" class="ui secondary vertical menu active" id="inner-menu" ng-class="{fixed: !PROJECT.is_public}" ng-style="PROJECT.is_public ? {float: \'left\', \'border-right\': \'none\'} : {}"></div>\n  <div class="paas container" ng-style="PROJECT.is_public ? {\'border-left\': \'1px solid #CCC\', \'min-height\': \'420px\', \'padding\': \'30px 30px 0 30px\'} : {}">\n      <h2 class="ui dividing header">\n        <div class="right floated positive small dark gray ui button" ng-click="showMarketplace()" ng-if="cf_app.project.owner.id == USER.id">添加服务</div>\n        服务管理\n      </h2>\n      <div class="ui dimmable dimmed" style="min-height: 300px">\n        <div class="ui inverted active dimmer" ng-if="loading">\n          <div class="ui loader"></div>\n        </div>\n        <div class="ui inverted active dimmer" ng-if="!!service_credentials">\n          <div class="content">\n            <div class="center">\n              <div class="ui info message" style="max-width: 860px; margin: 0 auto; text-align: left; font-size: 12px">\n              <i class="close icon" ng-click="hideCredentials()"></i>\n              <div class="header" style="border-bottom: 1px solid #ddd; padding-bottom: 10px">\n                服务连接信息\n              </div>\n              <ul class="list" ng-if="!!service_credentials" style="margin-top: 10px">\n                <li ng-repeat="(key, value) in service_credentials"><b>{{key}}: </b>{{value}}</li>\n              </ul>\n            </div>\n            </div>\n          </div>\n        </div>\n        <h4 class="ui green header">\n          <div class="content">\n            已绑定服务\n            <div class="sub header" style="font-size: 14px; line-height: 24px">已绑定到此应用的服务</div>\n          </div>\n        </h4>\n        <table class="ui table segment service">\n          <thead>\n              <tr>\n                <th class="three wide">名称</th>\n                <th class="four wide">描述</th>\n                <th class="four wide">已绑定应用</th>\n                <th class="five wide">操作</th>\n              </tr>\n          </thead>\n          <tbody>\n            <tr ng-if="listLoading(app_services)">\n              <td colspan="4" style="padding: 10px 0;text-align: center;color: #555;font-size: 16px"><i class="loading icon"></i>正在加载</td>\n            </tr>\n            <tr ng-if="listEmpty(app_services)">\n              <td colspan="4" style="padding: 10px 0;text-align: center;color: #555;font-size: 16px">无数据</td>\n            </tr>\n            <tr ng-repeat="app_service in app_services">\n              <td>\n                {{app_service.name}}\n              </td>\n              <td>{{app_service.description}}</td>\n              <td class="bindings">\n                <a href="{{binding.project.url}}" class="ui label binding" target="_blank" ng-repeat="binding in app_service.bindings">{{binding.project.name}}</a>\n              </td>\n              <td>\n                <div class="small red ui button" ng-click="unBindService(app_service.id)" ng-if="cf_app.project.owner.id == USER.id">解绑</div>\n                <a ng-if="app_service.console" ng-href="{{PROJECT.project_path}}/paas/services/{{app_service.id}}/console" class="small black ui button">控制台</a>\n                <div class="small ui button" ng-click="showCredentials(app_service.id)">连接信息</div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <h4 class="ui purple header" ng-if="cf_app.project.owner.id == USER.id">\n          <div class="content">\n            可用服务\n            <div class="sub header" style="font-size: 14px; line-height: 24px">可以绑定到此应用的服务</div>\n          </div>\n        </h4>\n        <table class="ui table segment service" ng-if="cf_app.project.owner.id == USER.id">\n          <thead>\n              <tr>\n                <th class="three wide">名称</th>\n                <th class="four wide">描述</th>\n                <th class="four wide">已绑定应用</th>\n                <th class="five wide">操作</th>\n              </tr>\n          </thead>\n          <tbody>\n            <tr ng-if="listLoading(user_services)">\n              <td colspan="4" style="padding: 10px 0;text-align: center;color: #555;font-size: 16px"><i class="loading icon"></i>正在加载</td>\n            </tr>\n            <tr ng-if="listEmpty(user_services)">\n              <td colspan="4" style="padding: 10px 0;text-align: center;color: #555;font-size: 16px">无数据</td>\n            </tr>\n            <tr ng-repeat="user_service in user_services">\n              <td>\n                {{user_service.name}}\n              </td>\n              <td>{{user_service.description}}</td>\n              <td class="bindings">\n                <a href="{{binding.project.url}}" class="ui label binding" target="_blank" ng-repeat="binding in user_service.bindings">{{binding.project.name}}</a>\n              </td>\n              <td>\n                <div class="small green ui button" ng-click="bindService(user_service.id)">绑定</div>\n                <div class="small red ui button" ng-click="requirePassword(user_service.id)" ng-show="cf_app.project.owner.id == USER.id">删除</div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n  </div>\n</div>'),
            $templateCache.put("app/paas/show.html", '<div ng-class="{\'public-project-view\': PROJECT.is_public}">\n  <div ng-include="\'app/git/public_view/inner_menu.html\'" ng-if="PROJECT.is_public"></div>\n  <div class="ui dimmable dimmed" ng-if="paas_enabled">\n    <div class="ui visible active dimmer no-right" ng-if="!!cf_app && !cf_app.can_admin">\n      <div class="ui small info icon message">\n        <i class="info icon"></i>\n        <div class="content">\n          <div class="header">无操作权限</div>\n          <p>\n            你可以：\n            <a href="/help/doc/paas/introduction.html" target="_blank" class="demo-link">查看项目演示帮助</a>\n            <span ng-if="healthy">&nbsp;或者&nbsp;</span>\n            <a ng-if="healthy" ng-href="{{url}}" target="_blank" class="demo-link">访问此演示</a>\n          </p>\n        </div>\n      </div>\n    </div>\n    <div ng-include="\'app/paas/inner_menu.html\'" class="ui secondary vertical menu active" id="inner-menu" ng-class="{fixed: !PROJECT.is_public}" style="margin-top: 0" ng-style="PROJECT.is_public ? {float: \'left\', \'border-right\': \'none\'} : {}" ng-if="!!cf_app && paas_enabled"></div>\n    <div class="paas container" ng-if="!!cf_app && paas_enabled" ng-style="PROJECT.is_public ? {\'border-left\': \'1px solid #CCC\', \'min-height\': \'420px\', \'padding\': \'30px 30px 0 30px\'} : {}">\n      <h2 class="ui dividing header">\n        <div class="ui teal label server" ng-if="cf_app.endpoint_name"><b>服务器：</b>{{cf_app.endpoint_name}}</div>\n        控制台\n      </h2>\n      <div class="ui dimmable dimmed">\n        <div class="ui inverted active dimmer" ng-if="loading">\n            <div class="ui loader"></div>\n        </div>\n        <div class="ui inverted active dimmer" ng-if="domain_help">\n            <div class="content">\n                <div class="center">\n                    <div class="ui info message" style="max-width: 600px; margin: 0 auto; padding: 15px 20px; text-align: left; font-size: 12px">\n                        <i class="close icon" ng-click="toggleDomainHelp()"></i>\n                        <div class="header" style="border-bottom: 1px solid #ddd; padding-bottom: 10px">\n                            如何使自定义域名生效？\n                        </div>\n                        <div style="margin-top: 15px">\n                            要使自定义域名生效，请把自定义域名的 <code>CNAME</code> 记录指向 <code>api.codingapp.com</code>。\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <table class="ui console table">\n            <tr>\n                <th class="three wide">当前状态</th>\n                <td class="thirteen wide state">\n                    <p class="health">\n                        <div class="ui label runtime" ng-show="health && health.runtime != \'\'">\n                          <b>运行环境：</b><a href="http://docs.coding.io" target="_blank">{{health.runtime}}</a>\n                        </div>\n                        <span style="color: #777; font-size: 14px">\n                            <i class="circle icon" ng-style="{color: health.color || \'yellow\'}"></i>\n                            {{health.human || \'更新状态..\'}}\n                        </span>\n                        <a ng-href="{{url}}" target="_blank" class="ui small green button" style="font-size: 12px; margin-left: 30px">马上访问</a>\n                        <a ng-if="health && health.code != \'RUNNING\'" href="http://docs.coding.io/guides/faq" target="_blank" class="faq-link">常见部署问题解答<i class="icon help"></i></a>\n                    </p>\n                    <p ng-if="healthy && !stats" style="color: #666">\n                        <i class="loading icon"></i>\n                        获取状态数据..\n                    </p>\n                    <table class="ui table segment stats console" ng-if="healthy && !!stats">\n                        <thead>\n                            <tr>\n                                <th ng-if="stats.length > 1">实例</th>\n                                <th>CPU</th>\n                                <th>内存</th>\n                                <th>磁盘</th>\n                                <th>运行时间</th>\n                                <th ng-if="stats.length > 1">状态</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr ng-repeat="stat in stats" style="color: #666; font-size: 14px; line-height: 24px">\n                                <td ng-if="stats.length > 1">{{stat.id}}</td>\n                                <td>{{stat.stats.usage.cpu | percent:2}}</td>\n                                <td>{{stat.stats.usage.mem | bytes:1}}/{{stat.stats.mem_quota | bytes:1}}</td>\n                                <td>{{stat.stats.usage.disk | bytes:1}}/{{stat.stats.disk_quota | bytes:1}}</td>\n                                <td>{{stat.stats.uptime | distance:\'seconds\':3}}</td>\n                                <td ng-if="stats.length > 1">{{stat.human}}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                    <div class="actions" style="margin: 10px 0">\n                        <div class="small blue circular ui button" ng-class="{\'disabled\': (stopped === undefined) || !stopped}" ng-click="stopped && start()">\n                            <i class="play sign icon"></i>启动\n                        </div>\n                        <div class="small primary circular ui button" ng-class="{\'disabled\': (stopped === undefined) || !!stopped}" ng-click="!stopped && stop()">\n                            <i class="off icon"></i>停止\n                        </div>\n                        <div class="small purple circular ui button" ng-class="{\'disabled\': (stopped === undefined) || !!stopped}" ng-click="!stopped && restart()">\n                            <i class="refresh icon"></i>重启\n                        </div>\n                        <div class="small red ui button" ng-click="requirePassword()" ng-show="cf_app.project.owner.id == USER.id">\n                          <i class="trash icon"></i>删除\n                        </div>\n                    </div>\n                </td>\n            </tr>\n            <tr>\n                <th>编译部署</th>\n                <td>\n                    <form class="ui form deploy" ng-submit="deploy(ref, path, command, buildpack)">\n                        <div class="inline field">\n                          <label>部署版本</label>\n                          <input ng-model="ref" type="text" placeholder="分支名、标签名或 commit id（不填默认为 master）">\n                          <a class="expert" ng-click="show_expert_option = !show_expert_option">\n                            <i class="icon double angle" ng-class="{down: !show_expert_option, up: show_expert_option}"></i>{{show_expert_option ? \'隐藏高级选项\' : \'显示高级选项\'}}\n                          </a>\n                        </div>\n                        <div class="ui segment expert" ng-show="show_expert_option">\n                          <p style="color: #A00; font-size: 10px"><strong>\n                            提醒：</strong>大多数情况下这些选项不需要配置，如果不了解它们的意义，请全部留空！\n                          </p>\n                          <div class="inline field">\n                            <label>源码路径</label>\n                            <input ng-model="path" type="text" placeholder="要部署的目录（可选，相对于项目根目录）">\n                          </div>\n                          <div class="inline field">\n                            <label>启动命令</label>\n                            <input ng-model="command" type="text" placeholder="应用启动命令（可选，可执行文件或 shell 脚本）">\n                          </div>\n                          <div class="inline field">\n                            <label><a href="http://docs.coding.io/references/buildpack" target="_blank">buildpack</a></label>\n                            <input ng-model="buildpack" type="text" placeholder="自定义 buildpack 地址（可选，可以 clone 的 git 仓库地址）" ng-disabled="runtime != \'auto\'">\n                          </div>\n                          <div class="inline field">\n                            <label>运行环境</label>\n                            <div class="ui radio checkbox">\n                              <input type="radio" name="runtime" id="runtime_auto" ng-model="runtime" value="auto" ng-change="buildpack=\'\'">\n                              <label for="runtime_auto">自动检测</label>\n                            </div>\n                            <div class="ui radio checkbox" ng-repeat="(runtime, buildpack) in runtimes">\n                              <input type="radio" name="runtime" id="runtime_{{runtime}}" ng-model="$parent.runtime" ng-value="buildpack" ng-change="$parent.buildpack=buildpack">\n                              <label for="runtime_{{runtime}}" class="title">{{runtime}}</label>\n                            </div>\n                          </div>\n                        </div>\n                        <div class="field">\n                          <input type="submit" value="一键部署" class="ui small dark gray button deploy">\n                          <span class="deployer" ng-if="!!cf_app.deployer">\n                            最近一次部署：<a ng-href="{{cf_app.deployer.url}}">\n                              <img class="ui avatar image" ng-src="{{cf_app.deployer.avatar | thumbnail: 28}}">\n                              {{cf_app.deployer.name}}</a> 于 <time cg-friendly-time="cf_app.deployed_at"></time>\n                              （<a ng-href="{{cf_app.project.url}}/git/tree/{{cf_app.git_ref}}" target="_blank">@{{formatRef(cf_app.git_ref)}}</a>）\n                          </span>\n                        </div>\n                    </form>\n                </td>\n            </tr>\n            <tr>\n                <th>访问域名</th>\n                <td>\n                    <form class="ui form domain" ng-submit="updateRoute(host, domain, custom_domain)">\n                      <div class="two fields">\n                        <div class="inline field" ng-show="!custom_domain">\n                            <input type="text" class="host" placeholder="二级域名" ng-model="host">\n                            <div class="ui pointing left label route">.{{cf_app.sys_domain}}</div>\n                        </div>\n                        <div class="inline field" ng-show="custom_domain">\n                            <input type="text" class="domain" placeholder="自定义域名" ng-model="domain" ng-readonly="!can_change_domain">\n                            <a ng-click="toggleDomainHelp()" style="cursor: pointer"><i class="icon help"></i>域名如何生效</a>\n                        </div>\n                        <div class="field">\n                            <input type="submit" value="确认" class="ui button update-route" ng-class="{disabled: !validateRoute(host, domain, custom_domain) || (custom_domain && !can_change_domain)}">\n                            <div class="ui toggle checkbox" ng-show="can_change_domain">\n                              <input type="checkbox" id="custom_domain" ng-model="custom_domain">\n                              <label for="custom_domain">自定义域名</label>\n                            </div>\n                        </div>\n                      </div>\n                    </form>\n                </td>\n            </tr>\n            <tr>\n                <th>应用内存</th>\n                <td>\n                    <form class="ui form" ng-submit="memory != cf_app.memory && updateMemory(memory)">\n                        <div class="two fields">\n                          <div class="inline field memory">\n                            <input type="radio" ng-repeat-start="mem in mems" ng-model="$parent.memory" ng-checked="mem == $parent.memory" value="{{mem}}" id="memory_{{mem}}">\n                            <label for="memory_{{mem}}" ng-repeat-end>{{formatMem(mem)}}</label>\n                          </div>\n                          <div class="field">\n                            <input type="submit" value="确认" class="ui button update-memory" ng-class="{disabled: memory == cf_app.memory}">\n                          </div>\n                        </div>\n                    </form>\n                </td>\n            </tr>\n        </table>\n      </div>\n    </div>\n  </div>\n  <div class="paas container" ng-if="unknown_state">\n      <div class="ui info message">无法获取项目演示平台状态：服务不可用</div>\n  </div>\n  <div ng-include="\'app/paas/empty.html\'" ng-if="!unknown_state && !paas_enabled"></div>\n</div>'),
            $templateCache.put("app/paas/vars.html", '<div ng-class="{\'public-project-view\': PROJECT.is_public}">\n  <div ng-include="\'app/git/public_view/inner_menu.html\'" ng-if="PROJECT.is_public"></div>\n  <div ng-include="\'app/paas/inner_menu.html\'" class="ui secondary vertical menu active" id="inner-menu" ng-class="{fixed: !PROJECT.is_public}" ng-style="PROJECT.is_public ? {float: \'left\', \'border-right\': \'none\'} : {}"></div>\n  <div class="paas container" ng-style="PROJECT.is_public ? {\'border-left\': \'1px solid #CCC\', \'min-height\': \'420px\', \'padding\': \'30px 30px 0 30px\'} : {}">\n      <h2 class="ui dividing header">环境变量</h2>\n      <p style="margin: 10px; font-size: 12px; color: #666">\n        <strong>注意：</strong>环境变量的改动，需要&nbsp;<span style="color: #A00">重启应用</span>&nbsp;才能生效。\n      </p>\n      <div class="ui dimmable dimmed">\n        <div class="ui inverted active dimmer" ng-if="loading">\n          <div class="ui loader"></div>\n        </div>\n        <table class="ui table segment vars">\n          <thead>\n              <tr>\n                <th class="seven wide">名称</th>\n                <th class="seven wide">值</th>\n                <th class="two wide">操作</th>\n              </tr>\n          </thead>\n          <tbody>\n            <tr ng-if="!envs">\n              <td colspan="3" style="padding: 10px 0;text-align: center;color: #555;font-size: 16px">\n                <i class="loading icon"></i>正在加载\n              </td>\n            </tr>\n            <tr ng-repeat="(key, value) in envs" ng-if="!!envs">\n              <td>{{key}}</td>\n              <td style="word-break: break-word">{{value}}</td>\n              <td>\n                <div class="ui mini primary button" ng-click="delEnv(key)">删除</div>\n              </td>\n            </tr>\n          </tbody>\n          <tfoot>\n            <tr>\n              <td>\n                <div class="ui small input">\n                  <input type="text" placeholder=" 变量名" ng-model="env.key">\n                </div>\n              </td>\n              <td>\n                <div class="ui small input">\n                  <input type="text" placeholder="变量值" ng-model="env.value" cg-enter="!!env.key && setEnv(env)">\n                </div>\n              </td>\n              <td><input type="submit" value="添加" class="ui small dark gray button" ng-class="{\'disabled\': !env.key}" ng-click="!!env.key && setEnv(env)"></td>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n  </div>\n</div>'),
            $templateCache.put("app/project/add_members_modal.html", '<style type="text/css">\n    #add-members .friends {\n        margin: 10px 0;\n        height: 200px;\n        overflow-y: auto;\n    }\n\n    #add-members .friend {\n        position: relative;\n        padding: 10px 15px;\n        border: 1px dashed #CCC;\n        width: auto;\n        margin: 0 10px 10px 0;\n        border-radius: 3px;\n        cursor: pointer;\n    }\n\n    #add-members .friend > .avatar {\n        position: absolute;\n        left: 15px;\n        top: 10px;\n    }\n\n    #add-members .friend > .info {\n        height: 100%;\n        width: auto;\n        line-height: 32px;\n        padding-left: 52px;\n    }\n\n    .selected_title {\n        height: 36px;\n        line-height: 36px;\n        font-size: 16px;\n    }\n</style>\n<div class="ui tiny modal" id="add_member_modal">\n    <i class="close icon"></i>\n    <div class="header">添加成员</div>\n    <div class="content">\n        <div id="add-members">\n            <div class="ui two column relaxed grid">\n                <div class="column">\n                    <div class="ui medium fluid input">\n                        <input type="text" ng-model="key" cg-timeout-input="loadFriend(key);" placeholder="输入 email、用户名 或 用户标识 来搜索用户">\n                    </div>\n                    <div class="friends">\n                        <div class="friend" ng-repeat="user in friends" ng-click="selectFriend(user);">\n                            <div class="avatar">\n                                <img class="ui circular image" width="32" height="32" ng-src="{{user.avatar}}">\n                            </div>\n                            <div class="info">{{user.name}} - {{user.global_key}}</div>\n                            <div class="ui green corner label" ng-show="user.selected">\n                                <i class="checkmark icon"></i>\n                            </div>\n                        </div>\n                        <div class="empty list center" ng-if="loading">\n                            <i class="loading icon"></i>正在加载数据...\n                        </div>\n                        <div class="empty list center" ng-if="loaded && friends.length ==0 && key.length > 0">\n                            <i class="frown icon"></i>没有找到符合条件的用户\n                        </div>\n                    </div>\n                </div>\n                <div class="ui vertical divider">\n                    »\n                </div>\n                <div class="column">\n                    <div class="selected_title">已选成员</div>\n                    <div class="friends">\n                        <div class="friend" ng-repeat="suser in selected_users">\n                            <div class="avatar">\n                                <img class="ui circular image" width="32" height="32" ng-src="{{suser.avatar}}">\n                            </div>\n                            <div class="info">{{suser.name}} - {{suser.global_key}}</div>\n                            <div class="ui corner label" ng-class="{\'green\': joined(suser)}">\n                                <i class="checkmark icon"></i>\n                            </div>\n                        </div>\n                        <div class="empty list center" ng-if="selected_users.length ==0">\n                            <i class="frown icon"></i>尚未选择任何成员\n                        </div>\n                        <div class="invite-friend" ng-if="isEmail(key)">\n                            <button class="ui default green button" ng-click="inviteFriend();">马上邀请好友</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="actions">\n        <div class="ui cancel button">取消</div>\n        <div class="ui dark gray ok button">确认</div>\n    </div>\n</div>'),
            $templateCache.put("app/project/add_members_modal2.html", '<style type="text/css">\n    #add_member_modal > .content{\n        padding: 0;\n    }\n\n    #add-members .wrapper{\n        position: relative;\n    }\n\n    #add-members .search-region{\n        width: 220px;\n        padding: 20px 20px 0 20px;\n        border-right: 1px solid #CCC;\n    }\n\n    #add-members .select-region{\n        padding: 20px 0 0 20px;\n    }\n\n    #add-members .selected-region{\n        padding: 15px 10px 0 20px;\n        border-top: 1px solid #CCC;\n    }\n\n    #add-members .selected-region .label i.remove.icon{\n        cursor: pointer;\n    }\n\n    #add-members .member-folder{\n        margin: 15px 0 0 0;\n        height: 220px;\n        overflow-y: auto;\n        overflow-x: hidden;\n    }\n\n    #add-members .vertical.menu  > .item{\n        -webkit-border-radius: 0px;\n        -moz-border-radius: 0px;\n        border-radius: 0px;\n        font-size: 14px;\n        height: 36px!important;\n        line-height: 24px;\n        display: block;\n        padding: 5px;\n        margin-bottom: 0;\n    }\n\n    #add-members .vertical.menu  > .item.active{\n        background-color: rgba(0, 0, 0, 0.03);\n    }\n\n    #add-members .vertical.menu > .item i.icon{\n        float: none;\n        margin: 0 .45em 0 0.25em\n    }\n\n    #add-members .selected-region ul{\n        list-style: none;\n        margin: 0;\n        padding: 0;\n    }\n\n    #add-members .selected-region ul li:first-child{\n        font-size: 14px;\n        line-height: 16px;\n        margin-bottom: 10px;\n    }\n\n    #add-members .selected-region ul li{\n        float: left;\n        font-size: 12px;\n        margin-bottom: 10px;\n        text-transform: none;\n    }\n\n    #add-members .select-nothing{\n        text-align: center;\n    }\n    #add-members .select-nothing span.words{\n        font-size: 16px;\n        color: #999;\n    }\n\n    #add-members .select-nothing .invite-button{\n        margin-top: 20px;;\n    }\n\n    #add-members .select-users{\n        height: 250px;\n        position: relative;\n        overflow-y: auto;\n        overflow-x: hidden;\n    }\n\n    #add-members .select-users ul{\n        list-style: none;\n        margin: 0;\n        padding: 0;\n        position: relative;\n    }\n\n    #add-members .select-users ul li{\n        float: left;\n        display: inline-block;\n        width: 140px;\n        height: 40px;\n        border: 1px dashed #CCC;\n        padding: 5px;\n        position: relative;\n        line-height: 40px;\n        font-size: 14px;\n        background: #FFF;\n        margin: 0 10px 10px 0;\n        cursor: pointer;\n    }\n\n    #add-members .select-users ul li.is-member{\n        cursor: not-allowed;\n    }\n\n    #add-members .select-users ul li img{\n        position: absolute;\n        left: 10px;\n        top: 8px;\n    }\n\n    #add-members .select-users ul li span{\n        padding-left: 50px;\n    }\n\n    #add-members .select-users ul li .label{\n        line-height: normal;\n        font-size: 12px;\n    }\n\n    #add_member_modal .actions .max-member{\n        float: left;\n        height: 30px;\n        line-height: 30px;\n        color: #666;\n        font-size: 14px;\n    }\n\n</style>\n<div class="ui tiny modal" id="add_member_modal">\n    <i class="close icon"></i>\n    <div class="header">添加成员</div>\n    <div class="content">\n        <div id="add-members">\n            <div class="wrapper">\n                <table width="100%">\n                    <tr>\n                        <td class="search-region">\n                            <div class="ui medium fluid icon input">\n                                <input type="text" ng-model="key" cg-timeout-input="loadFriend(key);" placeholder="email、用户名或用户标识">\n                                <i class="search icon"></i>\n                            </div>\n                            <div class="member-folder">\n                                <div class="ui secondary vertical menu active">\n                                    <a class="item" href="javascript:void(0);" ng-class="{active: selectMenuIs(\'friend\')}" ng-click="loadFriends();">\n                                        <i class="unhide icon"></i>我关注的人\n                                    </a>\n                                    <a class="item" href="javascript:void(0);" ng-class="{active: selectMenuIs(\'follower\')}" ng-click="loadFollowers();">\n                                        <i class="heart icon"></i>粉丝\n                                    </a>\n                                    <a class="item ellipsis" href="javascript:void(0);" ng-repeat="project in projects" bindonce ng-class="{active: selectMenuIs(\'member\', project.id)}" ng-click="loadProjectMembers(project.id);">\n                                        <img class="ui image avatar24" bo-src="project.icon" bo-attr bo-attr-alt="project.name">\n                                        <span bo-text="project.name"></span>\n                                    </a>\n                                    <a class="item" href="javascript:void(0);" ng-if="loading_projects">\n                                        <i class="loading icon"></i>正在加载项目列表...\n                                    </a>\n                                </div>\n                            </div>\n                        </td>\n                        <td class="select-region">\n                            <div class="select-nothing" ng-if="friends.length == 0 && !loading">\n                                <span class="words" ng-if="member_size > 0">\n                                    <span ng-if="loaded">\n                                        <i class="frown icon"></i>\n                                        没有找到符合条件的好友\n                                        ，马上邀请好友加入项目？\n                                    </span>\n                                    <span ng-if="!loaded">\n                                        <i class="coffee icon"></i>\n                                        我的项目成员不在 Coding，马上邀请好友加入？\n                                    </span>\n                                </span>\n                                <span ng-if="member_size<=0">\n                                        <i class="coffee icon"></i>\n                                        <span ng-bind="max_member_warning_info"></span>\n                                </span>\n                                <div class="invite-button">\n                                    <a class="ui default green button" ng-click="inviteFriend();" href="javascript:void(0);">马上邀请好友</a>\n                                </div>\n                            </div>\n                            <div class="select-nothing" ng-if="loading">\n                                <span class="words">\n                                    <i class="loading icon"></i>正在搜索好友...\n                                </span>\n                            </div>\n                            <div class="select-users" ng-if="!loading && friends.length > 0">\n                                <ul class="clearfix">\n                                    <li class="ellipsis" ng-repeat="friend in friends" bindonce ng-click="selectFriend(friend);" bo-class="{\'is-member\': friend.is_member}" bo-title="selectUserTitle(friend)">\n                                        <div class="ui corner label" ng-class="{\'green\': friend.selected}" ng-show="friend.is_member || friend.selected">\n                                            <i class="checkmark icon"></i>\n                                        </div>\n                                        <img class="ui image avatar32" bo-src="friend.avatar">\n                                        <span bo-text="friend.name"></span>\n                                    </li>\n                                </ul>\n                            </div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td class="selected-region" colspan="2">\n                            <ul class="ui circular labels clearfix">\n                                <li>已选成员： </li>\n                                <li class="ui label" ng-if="selected_users.length === 0">尚未选择任何成员</li>\n                                <li class="ui green label" ng-repeat="friend in selected_users" bindonce="">\n                                    <span bo-text="friend.name"></span>\n                                    <i class="remove icon" title="取消选定" ng-click="removeSelected(friend, $event);"></i>\n                                </li>\n                            </ul>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n    <div class="actions">\n        <div class="max-member">\n            <span ng-if="member_size>0">你还可以添加 <span style="color:#32be77" ng-bind="member_size || 0"></span> 个项目成员</span>\n            <span ng-if="member_size<=0" ng-bind="max_member_warning_info" style="color: #A00;opacity: 0.8"></span>\n        </div>\n        <div class="ui cancel button">取消</div>\n        <div class="ui dark gray ok button">确认</div>\n    </div>\n</div>'),
            $templateCache.put("app/project/edit_project_icon_modal.html", '<style type="text/css">\n    #edit-project-icon .project-icon {\n        height: 200px;\n        display: inline-flex;\n    }\n    #edit-project-icon .project-icon-show{\n        width: 128px;\n        height: 128px;\n    }\n    #edit-project-icon input[type="file"] {\n        display: block;\n        position: absolute;\n        margin: 0;\n        opacity: 0;\n        -ms-filter: \'alpha(opacity=0)\';\n        direction: ltr;\n        cursor: pointer;\n        z-index:999;\n        width: 98px;\n        height: 28px;\n        margin-top: -20px;\n        margin-left: -10px;\n    }\n</style>\n<div class="ui tiny40 modal" id="edit-project-icon-modal">\n\n</div>'),
            $templateCache.put("app/project/home_topics.html", '<div class="posts">\n    <div class="post" bindonce ng-repeat="topic in project_topics">\n        <div class="avatar">\n            <img class="ui image avatar32" bo-src="topic.owner.avatar ">\n        </div>\n        <div class="title ellipsis">\n            <a bo-href="PROJECT.project_path + \'/topic/\' + topic.id"><span bo-html="topic.title"></span></a>\n        </div>\n        <div class="time ellipsis">\n            <span cg-friendly-time="topic.created_at"></span>\n            / <span bo-text="topic.child_count"></span>条评论\n        </div>\n    </div>\n</div>'),
            $templateCache.put("app/project/index.html", '<style type="text/css">\n    #project-home .dividing.header a{float:right;font-size:16px;color:#000;}\n    #project-home .dividing.header a i.icon{font-size:14px;}\n\n    #project-home .members{margin-left:10px;}\n    #project-home .members a.member{margin: 0 10px 10px 0;display:inline-block;}\n\n    #project-home .posts{position: relative;}\n    #project-home .posts .post{padding:5px;height:55px;overflow: hidden;position: relative;border-bottom: 1px solid #E1E1E1;}\n    #project-home .posts .post .avatar{position: absolute;left:10px;top:15px;}\n    #project-home .posts .post .title{padding-left:50px;font-size:14px;width: 100%;height:50%;line-height: 32px;}\n    #project-home .posts .post .title a{color:#000;}\n    #project-home .posts .post .time{padding-left:50px;width:100%;color:#999;font-size:12px;height:50%;line-height: 24px;}\n\n    #project-home .right.more{margin:15px 0 0 12px;}\n\n    #project-home .attachments{}\n    #project-home .attachment{position: relative;padding:12px 0 12px 70px;font-size:14px;border-bottom: 1px solid #E1E1E1;}\n    #project-home .attachment .thumbnail{position: absolute;left:10px;top:8px;}\n    #project-home .attachment .info{height:45px;}\n    #project-home .attachment .info .name,\n    #project-home .attachment .info .time{height:22px;line-height: 22px;}\n    #project-home .attachment .info .time{color:#999;font-size:12px;}\n\n    #project-home .unread-tips{\n        padding: 5px 12px;\n        font-size: 13px;\n        border-radius: 5px;\n        background: #F6F3D5;\n        color:#000;\n        text-align: center;\n    }\n\n    #project-home > .column > .wrapper{\n        background: #FFF;\n        padding: 20px ;\n        margin-top: 0px;\n        margin-bottom: 20px;\n        border-radius: 3px;\n    }\n\n    #project-home > .five.column {\n        padding-left:0;\n        padding-right:0;\n    }\n\n    #project-home .project.tasks.just-show .task .title textarea{\n        color:#000;\n    }\n\n    .project-description{position: relative;min-height: 100px;}\n    .project-description > img{width: 96px; border-radius: 3px; float: left;}\n    .project-description > p{padding-left: 110px;word-break: break-all;font-size: 14px; color: #666;}\n\n</style>\n<section>\n    <div class="ui stackable grid" id="project-home">\n        <div class="ten wide column">\n            <div class="wrapper">\n                <div class="ui dividing header">项目动态</div>\n\n                <div class="ui small tabular menu activities-menu">\n                    <a class="item" ng-click="changeActivitiesMode(\'all\');" ng-class="{active: activities_mode == \'all\'}">\n                        所有\n                    </a>\n                    <a class="item" ng-click="changeActivitiesMode(\'task\');" ng-class="{active: activities_mode ==\'task\'}">\n                        任务\n                    </a>\n                    <a class="item" ng-click="changeActivitiesMode(\'topic\');" ng-class="{active: activities_mode ==\'topic\'}">\n                        讨论\n                    </a>\n                    <a class="item" ng-click="changeActivitiesMode(\'file\');" ng-class="{active: activities_mode ==\'file\'}">\n                        文档\n                    </a>\n                    <a class="item" ng-click="changeActivitiesMode(\'code\');" ng-class="{active: activities_mode ==\'code\'}">\n                        代码\n                    </a>\n                    <a class="item" ng-click="changeActivitiesMode(\'other\');" ng-class="{active: activities_mode ==\'other\'}">\n                        其他动态\n                    </a>\n                </div>\n\n                <div class="unread-tips" ng-if="showUnreadMsg()">\n                     自您上次访问共有{{PROJECT.un_read_activities_count}}条更新\n                </div>\n\n                <div class="ui basic segment" id="project-activities">\n                    <div class="wrapper" cg-timeline="project_activities" activity-mode="project_activity_mode" show-separator="showUnreadMsg()">\n                    </div>\n                </div>\n\n                <div class="center empty list" ng-if="activity_loading">\n                    <i class="loading icon"></i>正在加载项目动态...\n                </div>\n\n                <div class="center empty list" ng-if="project_activity_emtpy && activity_loaded">\n                    当前分类没有任何动态\n                </div>\n\n                <a class="center down more" href="javascript:void(0);" ng-click="loadProjectActiveList(project_last_id,activities_mode);" ng-if="project_last_id>0 && !activity_loading">\n                    显示更多动态\n                </a>\n                <div class="center empty list" ng-if="project_last_id == 0 && activity_loaded && !project_activity_emtpy">\n                    没有更多动态了～\n                </div>\n            </div>\n        </div>\n        <div class="six wide column">\n            <!--项目内冒泡-->\n            <div ng-if="!PROJECT.is_public && (PTWL.indexOf(PROJECT.id) !== -1)" class="wrapper" ng-include="\'app/tweet/project_tweet.html\'"></div>\n\n            <!-- task list start -->\n            <div class="wrapper project tasks just-show" ng-controller="ProjectHomeTasksController" ng-if="PTWL.indexOf(PROJECT.id) === -1">\n                <div class="ui dividing header">\n                    我的任务\n                    <a href="javascript:void(0);" ng-click="createProjectTask()"><i class="add icon"></i>创建任务</a>\n                </div>\n                <div bindonce ng-repeat="task in tasks" cg-task-show="task"></div>\n                <a class="right more gray" ng-href="{{PROJECT.project_path}}/tasks/user/{{USER.global_key}}">查看我的任务</a>\n            </div>\n            <!-- task list end -->\n\n            <!-- post list start -->\n            <div class="wrapper" ng-if="PTWL.indexOf(PROJECT.id) === -1">\n                <div class="ui dividing header">项目讨论<a ng-href="{{PROJECT.project_path}}/topic/create"><i class="add icon"></i>创建讨论</a></div>\n                <div ng-include="\'app/project/home_topics.html\'"></div>\n                <a class="right more gray" ng-href="{{PROJECT.project_path}}/topic">查看所有讨论</a>\n            </div>\n            <!-- post list end -->\n\n            <!-- attachment list start -->\n            <div class="wrapper" ng-if="PTWL.indexOf(PROJECT.id) === -1">\n                <div class="ui dividing header">项目文档</div>\n                <div class="attachments" ng-controller="ProjectHomeAttachmentController">\n                    <div class="attachment" ng-repeat="file in home_attachments">\n                        <a class="gray" ng-href="{{PROJECT.project_path}}/attachment/{{file.parent_id}}/preview/{{file.file_id}}">\n                            <div class="thumbnail">\n                                <div cg-file-icon-src="file.preview" cg-file-icon="file.fileType"></div>\n                            </div>\n                            <div class="info">\n                                <div class="name ellipsis" ng-bind-html="file.name"></div>\n                                <div class="time">更新于 <span cg-friendly-time="file.updated_at"></span></div>\n                            </div>\n                        </a>\n                    </div>\n                </div>\n                <a class="right more gray" ng-href="{{PROJECT.project_path}}/attachment">查看所有文档</a>\n            </div>\n            <!-- attachment list end -->\n\n            <!-- member list start -->\n            <div class="wrapper" ng-if="PTWL.indexOf(PROJECT.id) === -1">\n                <div class="ui dividing header">项目成员\n                    <!--<a href="javascript:void(0);" ng-click="addMember();"><i class="add icon"></i>邀请成员</a>-->\n                </div>\n                <div class="members" ng-controller="ProjectHomeMemberController">\n                    <a class="member" bindonce ng-repeat="member in home_members" bo-href="member.user.path" bo-title="member.user.name">\n                        <img class="ui image avatar42" bo-src="member.user.avatar ">\n                    </a>\n                </div>\n                <a class="right more gray" ng-href="{{PROJECT.project_path}}/members">查看所有成员</a>\n            </div>\n            <!-- member list end -->\n\n            <!-- project description start-->\n            <div class="wrapper" ng-if="PTWL.indexOf(PROJECT.id) === -1">\n                <div class="ui dividing header">项目简介</div>\n                <div class="project-description">\n                    <img ng-src="{{PROJECT.icon}}" alt="项目logo">\n                    <p cg-show-more="PROJECT.description" limit-to="150" ng-if="PROJECT.description.length !== 0"></p>\n                    <p ng-if="PROJECT.description.length === 0">&lt;该项目未添加简介&gt;</p>\n                </div>\n            </div>\n            <!-- project description end -->\n        </div>\n    </div>\n</section>'),
            $templateCache.put("app/project/member_picker.html", '<div class="ui center top simple dropdown">\n    <img class="ui avatar image" ng-src="{{current_user.avatar}}">\n    <div class="menu">\n        <a class="item"><img class="ui avatar image" ng-src="{{current_user.avatar}}" style="width: 32px;height:32px"></a>\n        <a class="item"><img class="ui avatar image" ng-src="{{current_user.avatar}}" style="width: 32px;height:32px"></a>\n        <a class="item"><img class="ui avatar image" ng-src="{{current_user.avatar}}" style="width: 32px;height:32px"></a>\n        <a class="item"><img class="ui avatar image" ng-src="{{current_user.avatar}}" style="width: 32px;height:32px"></a>\n        <a class="item"><img class="ui avatar image" ng-src="{{current_user.avatar}}" style="width: 32px;height:32px"></a>\n    </div>\n</div>'),
            $templateCache.put("app/project/members.html", "<div ng-class=\"{'public-project-view': PROJECT.is_public,'project-member-page':true}\" ng-style=\"{'display':PROJECT.is_public?'block':'initial'}\">\n    <div ng-if=\"PROJECT.is_public\" ng-include=\"'app/git/public_view/inner_menu.html'\"></div>\n" + '    <div class="ui secondary vertical fixed menu active project-members" id="inner-menu">\n        <header class="header item">\n            项目成员 ({{project_members_count}})\n            <a id="add-project-member" href="javascript:void(0);" ng-if="(PROJECT | isRole:ADMIN)" ng-click="addMember();">\n                <i class="add icon"></i>\n            </a>\n        </header>\n        <div class="search item">\n            <div class="ui icon input">\n                <input type="text" class="search-member" placeholder="Search..." ng-model="searchMember">\n                <i class="search icon" style="padding-top: 6px; width: 30px"></i>\n            </div>\n        </div>\n        <div class="member-item item clearfix" ng-class="{active:member.user.global_key==region}" ng-repeat="member in members | filter:searchMember" ng-click="showMemberActivity(member);">\n            <div class="member-item-wrapper">\n                <div class="info">\n                    <div class="avatar">\n                        <img class="ui image avatar36" ng-src="{{member.user.avatar}}">\n                    </div>\n                    <div class="wrapper">\n                        <div class="title" style="margin-top:{{member.alias?\'1px\':\'8px\'}}">\n                            <span>{{member.user.name}}</span>\n                        </div>\n                        <div class="alias" ng-if="member.alias">\n                            <span>{{member.alias}}</span>\n                        </div>\n                    </div>\n                </div>\n                <div class="right">\n                    <div class="action">\n                        <i class="user icon" ng-if="(member.type | isRoleIn:project_member_admin)" ng-class="{\'owner\':member.type == OWNER,\'admin\':member.type == ADMIN}"></i>\n                        <i class="project-member-icon-code-deny visitor" ng-if="member.type | isRoleIn:project_member_no_code"></i>\n                        <i class="red remove icon" ng-if="canRemove(member)" ng-click="kickout($event, current_member);"></i>\n                        <i class="remove icon unvisible" ng-if="!canRemove(member)"></i>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <a class="scroll-holder">\n        </a>\n    </div>\n    <div class="container" id="project-member">\n        <div class="member info clearfix" ng-if="current_member">\n            <div class="avatar">\n                <a class="gray" href="{{current_member.user.path}}">\n                    <img class="ui image avatar96" ng-src="{{current_member.user.lavatar}}">\n                </a>\n            </div>\n            <div class="wrapper">\n                <div class="title">\n                    <a class="gray" href="{{current_member.user.path}}" class="name">{{current_member.user.name}}</a>\n                    <!--<a href="{{current_member.user.path}}" class="email">{{current_member.user.email}}</a>-->\n                    <span class="role-setting" ng-if="!PROJECT.is_public && current_member.type < PROJECT.current_user_role_id && (PROJECT | isRole:ADMIN)">\n                        <span class="divider"></span>\n                        <div class="ui pointing dropdown member-setting top left" cg-ui-dropdown="{}">\n                            <div class="menu">\n                                <li class="item" ng-class="{\'active\':current_member.type == ADMIN}" ng-if="PROJECT | isRole:OWNER" ng-click="updateMemberType(current_member,ADMIN)">\n                                    <label>项目管理员</label>\n                                    <i class="icon check no-margin" ng-if="current_member.type == ADMIN"></i>\n                                </li>\n                                <li class="item" ng-class="{\'active\':current_member.type == MEMBER}" ng-if="PROJECT | isRole:ADMIN" ng-click="updateMemberType(current_member,MEMBER)">\n                                    <label>项目成员</label>\n                                    <i class="icon check no-margin" ng-if="current_member.type == MEMBER"></i>\n                                </li>\n                                <li class="item" ng-class="{\'active\':current_member.type == MEMBER_NO_CODE}" ng-if="PROJECT | isRole:ADMIN" ng-click="updateMemberType(current_member,MEMBER_NO_CODE)">\n                                    <label>受限成员</label>\n                                    <i class="icon check no-margin" ng-if="current_member.type == MEMBER_NO_CODE"></i>\n                                </li>\n                            </div>\n                            <div class="ui label Poodle small ng-scope owner" ng-if="PROJECT.owner_id == current_member.user_id" style="line-height: 1em">项目所有者\n                                <i class="icon setting small gray"></i>\n                            </div>\n                            <div class="ui label Poodle small ng-scope admin" ng-if="current_member.type == ADMIN" style="line-height: 1em">项目管理员\n                                <i class="icon setting small gray"></i>\n                            </div>\n                            <div class="ui label Poodle small ng-scope member" ng-if="current_member.type == MEMBER" style="line-height: 1em">项目成员\n                                <i class="icon setting small gray"></i>\n                            </div>\n                            <div class="ui label Poodle small ng-scope visitor" ng-if="current_member.type == MEMBER_NO_CODE" style="line-height: 1em">\n                                受限成员\n                                <i class="icon setting small gray"></i>\n                            </div>\n                        </div>\n                          <i class="icon info tip small visible" style="cursor: pointer;float: inherit;margin: 0px!important" data-html="<div class=\'content\'><div><strong>项目所有者：</strong>拥有对项目的所有权限。</div><div><strong>项目管理员：</strong>拥有对项目的部分权限。不能删除，转让项目，不能对其他管理员进行操作。</div><div><strong>普通成员：</strong>可以阅读和推送代码。</div><div><strong>受限成员：</strong>不能进入与代码相关的页面。</div></div>" cg-help-popup=""></i>\n                    </span>\n                     <span class="alias-setting" ng-if="PROJECT | isRole:ADMIN">\n                        <span class="divider"></span>\n                        <a ng-show="!alias_editing" class="alias-edit gray" ng-click="showSaveAlias()" title="编辑此成员备注名称">\n                            <span ng-if="current_member.alias">{{current_member.alias}}</span>\n                            <span ng-if="!current_member.alias">添加备注</span>\n                            <i class="icon edit"></i>\n                        </a>\n                        <input ng-show="alias_editing" class="alias-input" ng-model="current_member.alias" cg-enter="updateAlias()" ng-blur="updateAlias()">\n                    </span>\n                </div>\n                <div class="time">\n                    加入时间：\n                    <span cg-friendly-time="current_member.created_at" cg-friendly-time-format="YYYY-MM-DD"></span>\n                </div>\n                <div class="action" ng-if="USER.id != current_member.user_id">\n                    <div class="ui down small green button" ng-if="!current_relationship.relation" ng-click="follow(current_member.user);">\n                        <i class="add icon"></i>\n                        马上关注\n                    </div>\n                    <!--<div class="ui small button borderless" ng-if="current_relationship.relation==2">相互关注</div>-->\n                    <div class="ui down small gray button" ng-if="current_relationship.relation>0" ng-click="unfollow(current_member.user);">\n                        <i class="minus icon"></i>\n                        取消关注\n                    </div>\n                    <div class="ui down black small button" ng-click="showSendMsgDialog(current_member.user)">\n                        给TA私信\n                    </div>\n                </div>\n                <div class="action" ng-if="USER.id == current_member.user_id">\n                    <div class="ui down red small button" ng-if="PROJECT.owner_id != USER.id && USER.id == current_member.user_id" ng-click="quit(current_member);">\n                        <i class="minus icon"></i>\n                        退出项目\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class="member activities ui basic segment" id="project-activities">\n            <div class="wrapper" cg-timeline="project_activities" show-separator="false">\n            </div>\n        </div>\n        <div class="empty center list">\n        <span ng-if="project_activity_loading">\n            <i class="loading icon"></i>正在加载成员项目动态...\n        </span>\n        <span ng-if="project_activity_loaded && project_activities.length == 0">\n            <i class="coffee icon"></i>该成员无项目动态...\n        </span>\n            <a class="center down more" href="javascript:void(0);" ng-click="loadMemberProjectActivity(current_member.user_id, project_activity_last_id);" ng-if="project_activity_last_id>0 && !project_activity_loading">显示更多动态</a>\n        </div>\n    </div>\n</div>'),
            $templateCache.put("app/project/password_validate_modal.html", '<div class="ui tiny40 modal" id="password-validate-modal">\n    <i class="close icon"></i>\n    <div class="header">需要{{method_message}}\n        <sup ng-hide="method === \'password\'">\n            <a title="点击查看两步验证帮助文档" class="gray" target="_blank" href="/help/doc/account/2fa.html" target="_blank">\n                <i class="help icon" style="color: #666;font-size: 12px"></i>\n            </a>\n        </sup>\n    </div>\n    <div class="content">\n        <div class="ui red message" ng-bind="words"></div>\n        <div class="ui small form" ng-class="{loading: deleting}" style="font-size: 1.125em">\n            <div class="ui fluid action medium input">\n                <input type="password" ng-show="method === \'password\'" placeholder="请输入{{method_message}}" style="display: initial" ng-model="two_factor_code" cg-enter="passwordValidate();">\n                <input type="text" ng-hide="method === \'password\'" placeholder="请输入{{method_message}}" style="display: initial" ng-model="two_factor_code" cg-enter="passwordValidate();">\n                <div class="ui red button" ng-click="passwordValidate();">确认</div>\n            </div>\n        </div>\n    </div>\n    <div class="actions">\n        <div class="ui cancel button">取消</div>\n    </div>\n</div>'),
            $templateCache.put("app/project/setting/deploy_key/index.html", '<div ng-controller="ProjectDeployKeyIndexController">\n    <div class="git-main-content">\n        <div class="ui secondary inverted inverted segment">\n            <p>\n                部署公钥用以部署项目，只拥有<span style="font-size:20px;font-weight:bold;color:#f00">只读</span>权限，且不能跟个人公钥通用，如需要设置个人公钥，请<a href="/user/account/setting/keys">点击这里</a>。\n                <a href="/help/doc/git/ssh-key.html#部署ssh公钥" target="_blank"><i class="icon help tip"></i></a>\n            </p>\n        </div>\n        <div class="clearfix" style="padding-bottom: 12px">\n            <a class="ui small white button floated right" ng-href="{{PROJECT.project_path}}/setting/deploy_key/new">新建部署公钥</a>\n        </div>\n        <div class="deploy-key-text"><span>已在此项目启用的部署公钥</span></div>\n        <div class="deploy-key-title">\n            <table>\n                <tr>\n                    <td class="deploy-key-title content">key内容(Finger Print)</td>\n                    <td class="deploy-key-title title">标题</td>\n                    <td class="deploy-key-title time"></td>\n                    <td class="deploy-key-title oper">操作</td>\n                </tr>\n            </table>\n        </div>\n        <div ng-repeat="key in project_keys">\n            <div class="deploy-key">\n                <table>\n                    <tr>\n                        <td class="deploy-key content">{{key.finger_print}}</td>\n                        <td class="deploy-key title">{{key.title || \'\'}}</td>\n                        <td class="deploy-key time">添加于 <time cg-friendly-time="key.created_at"></time></td>\n                        <td class="deploy-key oper">\n                            <a class="ui small white button floated left" href="javascript:void(0);" ng-click="showUnbindPassword(key.id)">删除</a>\n                    </td></tr>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>'),
            $templateCache.put("app/project/setting/deploy_key/new.html", '<div ng-controller="ProjectDeployKeyNewController">\n    <div class="git-main-form">\n        <div class="keys">\n        <div class="ui secondary inverted inverted segment">\n            <p>\n                部署公钥用以部署项目，只拥有<span style="font-size:20px;font-weight:bold;color:#f00">只读</span>权限，且不能跟个人公钥通用，如需要设置个人公钥，请<a href="/user/account/setting/keys">点击这里</a>。\n                <a href="/help/doc/git/ssh-key.html#部署ssh公钥" target="_blank"><i class="icon help tip"></i></a>\n            </p>\n        </div>\n            <form method="post">\n                <div class="ui form">\n                    <div class="field">\n                        <label>公钥名称</label>\n                        <input placeholder="自定义公钥名称，可不填" type="text" name="title" ng-model="key_title">\n                    </div>\n                    <div class="field">\n                        <label>SSH-RSA公钥内容</label>\n                        <textarea placeholder="请粘贴形如这样的格式的 ssh-rsa 公钥：ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDHI6/Zs8DVJduqR0DHO8s5JDT4SpnXS+jvLJkAuji2G3nBYTdtjfvMx6i6ei6Lxv3MMecogYyujhIx/k9111+8ZqFpJAywNTfNuw/JiLaH989QLdM7F2NaJi3OHV8484Z6KKvBXyO99HIG/oCNYDYp/78kd0kz8b0ghlXG3M8YRHd5udV6VErKS5qQHH9WTsEaF2VZjrEPalYULHXJ7pikuKmwZ8CVlyqhPxCbHG4wdKprATpdpiax1i5mmH/+pt0vzK01RgZ/ibhVkFaAmxOCWxTSNstqAlYd+z01/688IUIIWqfbzMe7FSp4CLezlIn8UIowb8xw+yRcYMl2Lqon coding@MBP" name="content" ng-model="key_content" ng-change="split(key_content)"></textarea>\n                    </div>\n                    <a ng-show="!submit_loading" class="ui dark gray medium submit button" type="submit" ng-click="showPasswordWithCreateKey(key_title, key_content);">添加</a>\n\n                    <div ng-show="submit_loading" class="ui dark gray medium submit button" style="width: 90px"><i class="loading icon" style="margin:0"></i></div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>'),
            $templateCache.put("app/project/setting/general/advance.html", '<style>\n    #project-advance-setting > .ui.segment {max-width: 800px; -webkit-box-shadow: none; box-shadow: none; padding: 1.5em;}\n    #project-advance-setting > .ui.segment > .ui.warning.message > strong {color: #D95C5C;}\n    #project-advance-setting > .ui.segment > .paas-enabled {margin-bottom:20px;color:#D95C5C;}\n    #project-advance-setting > .ui.segment > .paas-enabled > a {color:#D95C5C;text-decoration:underline}\n    #project-advance-setting > .ui.segment > .transfer-warning {margin-bottom:20px;}\n    #transfer-member {padding:8px;}\n    #transfer-member > .ui.simple.dropdown.item {width:200px;}\n    #transfer-member > .ui.simple.dropdown.item > img {width: 24px;height:24px;margin-top: -4px;}\n    #transfer-member > .ui.simple.dropdown.item > i {float:right}\n    #transfer-member > .menu > .search {padding:7px;background-color: rgba(0, 0, 0, 0.06);}\n    #transfer-member > .menu > .empty.list {font-size:12px;}\n    #transfer-member > .menu > .member-list {max-height:260px;overflow-y:auto}\n    #transfer-member > .menu > .member-list > .item {height:36px}\n    #transfer-member > .menu > .member-list > .item > img {width: 24px;height:24px;margin-top: -4px;}\n    #transfer-member > .menu > .no-members > .item > span {font-size:16px;color: rgba(0, 0, 0, 0.2);}\n    #transfer-member .transfer-username {display: inline-block; max-width: 120px}\n</style>\n<div id="project-advance-setting" ng-controller="ProjectSettingAdvanceController">\n    <section ng-if="PROJECT.owner_id === USER.id" class="ui segment">\n        <h4 class="ui green header"><span style="color:#32bc77">归档项目</span></h4>\n\n        <div class="ui warning message">\n            <strong>注意：</strong>\n            项目归档后，该项目将会移到“项目所有者”的归档项目中，并且不能对该项目做任何操作，直到解除归档。同时该项目将从所有项目成员的项目列表中移除。“项目所有者”可以在项目->归档项目中进行解除归档操作，解除归档后，项目成员仍保留。\n        </div>\n\n        <div class="ui green default button" ng-if="!archiving" ng-click="beforeArchiveProject()">归档项目\n        </div>\n        <div class="ui green default button" ng-if="archiving">\n            <i class="loading icon" style="margin-right: 5px"></i>归档中...\n        </div>\n    </section>\n\n    <section ng-if="PROJECT.owner_id === USER.id" class="ui segment">\n        <h4 class="ui green header"><span style="color:#32bc77">转让项目</span></h4>\n\n        <div class="ui warning message">\n            <strong>注意：</strong>\n            项目转让后，你将不再是“项目所有者”，你将失去某些管理权限（如添加成员、开启演示、删除项目等）。同时，项目转让后，项目的git 仓库访问路径会发生变化，例如：用户 Coding 将项目转给用户 Demo 后， git 仓库访问路径将由 https://git.coding.net/coding/test.git 变成 https://git.coding.net/demo/test.git\n        </div>\n        <div class="paas-enabled" ng-if="paas_enabled">您已开启演示，请 <a href="{{paas_url}}">删除演示</a> 后，再进行转让！</div>\n        <div class="transfer-warning">\n            <span>转让成员：</span>\n            <div class="ui dropdown selection" cg-dropdown dropdown-setting="dropDownSetting" id="transfer-member" ng-class="{\'disabled\': paas_enabled}">\n                <div class="ui simple dropdown item" ng-if="!selected_member">\n                    请选择<i class="dropdown icon" style="float:right"></i>\n                </div>\n                <div class="ui simple dropdown item" ng-if="selected_member">\n                    <img class="ui avatar image" src="{{selected_member.avatar}}">\n                    <span class="transfer-username ellipsis">{{selected_member.name}}</span>\n                    <i class="dropdown icon"></i>\n                </div>\n                <div class="menu">\n                    <div class="search" ng-if="members.length > 10">\n                        <div class="ui icon input">\n                            <input type="text" class="search-member" placeholder="Search..." ng-model="searchMember.name">\n                            <i class="search icon"></i>\n                        </div>\n                    </div>\n                    <div class="empty list" ng-if="member_loading">\n                        <i class="loading icon"></i>正在加载成员列表...\n                    </div>\n                    <div class="member-list" ng-if="!member_loading && members.length != 0">\n                        <a class="item" ng-repeat="member in members | filter: searchMember" bindonce="members" ng-click="selectMember(member)">\n                            <img class="ui avatar image" bo-src="member.avatar">\n                            <span class="transfer-username ellipsis">{{member.name}}</span>\n                        </a>\n                    </div>\n                    <div class="no-members" ng-if="!member_loading && members.length === 0">\n                        <div class="item"><span>无其他成员</span></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class="ui green default button" ng-if="!transferring" ng-click="beforeTransferProject()" ng-class="{\'disabled\': !selected_member}">转让项目\n        </div>\n        <div class="ui green default button" ng-if="transferring">\n            <i class="loading icon" style="margin-right: 5px"></i>转让中...\n        </div>\n    </section>\n\n    <section ng-if="PROJECT.owner_id === USER.id" class="ui segment">\n        <h4 class="ui red header">删除项目</h4>\n        <div class="ui warning message">\n            删除项目将会连同其相关的所有数据（包括 讨论，pull requests，动态 等在内）一起删除<br><br>\n            <strong>此操作无法恢复!</strong>\n        </div>\n        <div class="ui red default button" ng-if="!deleting" ng-click="beforeDeleteProject();">删除项目\n        </div>\n        <div class="ui red default button" ng-if="deleting">\n            <i class="loading icon" style="margin-right: 5px"></i>删除中...\n        </div>\n    </section>\n\n    <section ng-if="PROJECT.owner_id !== USER.id" class="ui segment">\n        <h4 class="ui header" style="color: #38BF7D">退出项目</h4>\n        <div class="ui warning message">\n            <strong>注意：</strong>\n            退出项目后，你将不能查看任何关于该项目的信息。如果想重新加入，请联系项目管理员。\n        </div>\n        <div class="ui red default button" ng-if="!quiting" ng-click="quit()">退出项目\n        </div>\n        <div class="ui red default button" ng-if="quiting">\n            <i class="loading icon" style="margin-right: 5px"></i>退出中...\n        </div>\n    </section>\n</div>'),
            $templateCache.put("app/project/setting/general/basic.html", '<style>\n    #project-setting .project-icon {\n        position: absolute;\n        width: 128px;\n        height:128px;\n    }\n    #project-setting .project-icon-loading {\n        position: absolute;\n        width: 128px;\n        height:128px;\n        background: #fff;\n        opacity: 0.6;\n    }\n    #project-setting .ui.form.segment.setting {\n        max-width: 800px;\n        margin-left: 190px;\n        -webkit-box-shadow: none;\n        box-shadow: none;\n        padding: 1.5em;\n    }\n    #project-setting .private-label {\n        text-align: center;\n        background: #eee;\n        margin-top: 20px;\n        padding: 5px;\n        border-radius: 5px;\n        width: 118px;\n        position: absolute;\n        top: 120px;\n        font-size: 14px;\n        color: #666;\n    }\n    #project-setting .project-icon i {\n        float:right;\n        position: absolute;\n        width: 128px;\n        height: 128px;\n        background: rgba(0,0,0,.7);\n        webkit-border-radius: 128px;\n        -moz-border-radius: 128px;\n        -ms-border-radius: 128px;\n        -o-border-radius: 128px;\n        display: table;\n        z-index: 99;\n        color: #fff;\n        opacity: 0;\n        -webkit-transition: all 0.5s ease-out;\n        -moz-transition: all 0.5s ease-out;\n        -o-transition: all 0.5s ease-out;\n        -ms-transition: all 0.5s ease-out;\n        transition: all 0.5s ease-out;\n    }\n    #project-setting .project-icon:hover i {\n        webkit-transition: all 0.5s ease-out;\n        -moz-transition: all 0.5s ease-out;\n        -o-transition: all 0.5s ease-out;\n        -ms-transition: all 0.5s ease-out;\n        transition: all 0.5s ease-out;\n        opacity: 1;\n    }\n    #project-setting .project-icon i:before {\n        display: table-cell;\n        vertical-align: middle;\n    }\n    #project-setting input[type="file"] {\n        display: block;\n        position: absolute;\n        margin: 0;\n        opacity: 0;\n        -ms-filter: \'alpha(opacity=0)\';\n        direction: ltr;\n        cursor: pointer;\n        z-index:999;\n        width: 128px;\n        height: 128px;\n    }\n    #project-setting .select2-container .select2-choice{\n      border: 1px solid rgba(0, 0, 0, 0.15);\n      padding: 0.4em 1em;\n    }\n    #project-setting .select2-container .select2-choice .select2-arrow{\n      border-left: 1px solid #ddd;\n      background-image: -webkit-gradient(linear, left bottom, left top, color-stop(0, #eeeeee), color-stop(0.6, #ffffff));\n      background-image: -webkit-linear-gradient(center bottom, #eeeeee 0%, #ffffff 60%);\n      background-image: -moz-linear-gradient(center bottom, #eeeeee 0%, #ffffff 60%);\n      filter: progid:DXImageTransform.Microsoft.gradient(startColorstr = \'#ffffff\', endColorstr = \'#eeeeee\', GradientType = 0);\n      background-image: linear-gradient(to top, #eeeeee 0%, #ffffff 60%);\n    }\n    #project-setting .select2-container .select2-choice .select2-arrow b{\n      background: url("/static/2ca61b76e22053571dd8611e5aac4900.png") no-repeat 0 7px;\n    }\n    #project-setting .ui.checkbox .box, #project-setting .ui.checkbox label{\n      padding-left: 1.5em;\n    }\n</style>\n<div ng-if="PROJECT" id="project-setting" style="position:relative" ng-controller="ProjectSettingBasicController">\n    <div class="ui inverted dimmer" ng-class="{active : updating}"><i class="icon loading"></i></div>\n    <div class="ui success message" ng-if="update_success">\n        <div class="header">\n            更新成功!\n        </div>\n    </div>\n    <div style="position: absolute; width: 152px; height:131px">\n        <div ng-show="uploading" class="project-icon-loading">\n            <i class="loading icon" style="font-size:50px;position: absolute;margin:0;left:35px;top:40px"></i>\n        </div>\n        <div ng-show="!uploading" class="project-icon">\n            <input type="file" name="file" cg-file-upload="uploadSetting">\n            <div ng-if="PROJECT.icon">\n                <i class="edit sign icon" style="position:absolute; right: 0; margin: 0"></i>\n                <img ng-src="{{PROJECT.icon}}" width="128px" height="128px">\n            </div>\n        </div>\n        <div ng-if="!PROJECT.is_public" class="private-label">私有项目<i class="lock icon"></i></div>\n    </div>\n    <div class="ui warning message" style="margin-left:190px">\n      <p><strong>注意：</strong>修改项目名将导致项目的访问 URL（包含 Git 仓库的 URL）将会改变，在此之前的 URL 地址将失效。Git 仓库地址修改办法 <code>git remote set-url origin [NEW_URL]</code></p>\n    </div>\n    <form class="ui form segment setting" ng-class="{loading:group_creating}">\n\n        <input type="hidden" ng-model="project.id">\n        <div class="field">\n          <label>项目名称</label>\n          <input type="text" ng-model="project.name" placeholder="项目名称">\n        </div>\n\n        <div class="field">\n          <label>项目描述</label>\n          <textarea ng-model="project.description" placeholder="项目描述"></textarea>\n        </div>\n\n        <div>\n            <input type="submit" value="更新" class="ui dark gray medium submit button" ng-click="updateProject(project);">\n        </div>\n\n    </form>\n</div>'),
            $templateCache.put("app/project/setting/index.html", '<style>\n    .public-project-view #inner-menu {\n        float: left;\n        border: 0 !important;\n        margin: 0;\n        position: absolute;\n        min-height: 500px !important;\n        z-index: 0;\n    }\n\n    .public-project-view #project-setting-content {\n        border-left: 1px solid #DDD;\n        min-height: 500px;\n    }\n</style>\n<div ng-class="{\'public-project-view\': PROJECT.is_public}" ng-style="{\'display\':PROJECT.is_public?\'block\':\'initial\'}">\n    <div ng-if="PROJECT.is_public" ng-include="\'app/git/public_view/inner_menu.html\'"></div>\n    <div class="ui secondary vertical fixed menu active" id="inner-menu">\n        <header class="header item">\n            项目设置\n            <article>\n                在此可以更新项目基本信息，以及删除项目。\n            </article>\n        </header>\n        <a class="item" ng-if="!PROJECT.is_public" ng-href="{{PROJECT.project_path}}/setting/summary" ng-class="{active:inner_menu == \'summary\'}">\n            <i class="info icon"></i>项目概览\n        </a>\n        <a class="item" ng-if="is_project_admin" ng-href="{{PROJECT.project_path}}/setting/basic" ng-class="{active:inner_menu == \'basic\'}">\n            <i class="wrench icon"></i>基本设置\n        </a>\n        <a class="item" ng-if="is_project_admin" ng-href="{{PROJECT.project_path}}/setting/webhook" ng-class="{active:inner_menu == \'webhook\'}">\n            <i class="anchor icon"></i>WebHook\n        </a>\n        <a class="item" ng-if="is_project_admin" ng-href="{{PROJECT.project_path}}/setting/deploy_key" ng-class="{active:inner_menu == \'deploy_key\'}">\n            <i class="key icon"></i>部署公钥\n        </a>\n        <a class="item" ng-if="is_project_admin || !PROJECT.is_public" ng-href="{{PROJECT.project_path}}/setting/advance" ng-class="{active:inner_menu == \'advance\'}">\n            <i class="coding advanced-setting icon"></i>高级设置\n        </a>\n\n        <div class="sep" ng-if="PROJECT.plan > 1"></div>\n        <a class="item" style="cursor: pointer!important;font-size: 12px;padding: 2px 25px;opacity: 1;cursor: default" ng-if="PROJECT.plan > 1" ng-href="{{PROJECT.project_path}}/setting/support" ng-class="{active:inner_menu == \'support\'}">\n            <i class="circular doctor icon inverted" style="background-color: #df5a5a;color:#FFF;opacity: 1"></i>\n            客服工单\n        </a>\n        <a class="item" style="cursor: pointer!important;font-size: 12px;padding: 2px 25px;opacity: 1;cursor: default" href="mailto:support@coding.net?Subject=%5B%E6%8A%80%E6%9C%AF%E6%94%AF%E6%8C%81%5D" target="_blank" ng-if="PROJECT.plan > 1">\n            <i class="circular mail icon inverted" style="background-color: #eb935d!important;color:#FFF;opacity: 1"></i>\n            support@coding.net\n        </a>\n        <a class="item" style="cursor: pointer!important;font-size: 12px;padding: 2px 25px;opacity: 1;cursor: default" target="_blank" href="http://wpa.qq.com/msgrd?v=3&uin=2847276903&site=qq&menu=yes" ng-if="PROJECT.plan === 3">\n            <i class="circular icon user inverted" style="background-color: #527D9D!important;color:#FFF;opacity: 1;position: relative">\n                <img src="/static/6808e0ed2d33f08031025908056304b2.png" style="width: 18px;position: absolute;left: 3px;top: 3px">\n            </i> 2847276903\n        </a>\n        <a class="item" style="cursor: pointer!important;font-size: 12px;padding: 2px 25px;opacity: 1;cursor: default" href="tel:400263464" ng-if="PROJECT.plan === 3">\n            <i class="circular phone icon inverted" style="background-color: #38BF7D;color:#FFF;opacity: 1"></i>\n            400-026-3464\n        </a>\n    </div>\n    <div class="container" id="project-setting-content" ng-include="keysPath()">\n    </div>\n</div>'),
            $templateCache.put("app/project/setting/project_upgrade.html", '<div id="project-upgrade-wrapper">\n    <h1>\n        更多功能<span class="blank">&nbsp;</span> 更少限制\n    </h1>\n\n    <h2>Get more power on the cloud</h2>\n    <ul class="features clearfix">\n        <li>\n            <div>\n                <i class="rocket icon"></i>\n\n                <p>\n                    <strong>更多资源</strong>\n                    更多内存，更多空间，更多成员\n                </p>\n            </div>\n        </li>\n        <li>\n            <div>\n                <i class="url icon"></i>\n\n                <p>\n                    <strong>高级功能</strong>\n                    自定义域名，数据打包下载\n                </p>\n            </div>\n        </li>\n        <li>\n            <div>\n                <a class="gray" href="/gitsla" target="_blank">\n                    <i class="shield icon"></i>\n\n                    <p>\n                        <strong>高 SLA</strong>\n                        保证 99.9% 的 SLA\n                    </p>\n                </a>\n            </div>\n        </li>\n        <li>\n            <div>\n                <i class="doctor icon"></i>\n\n                <p>\n                    <strong>专属技术顾问</strong>\n                    电话、在线客服 24 小时为您服务\n                </p>\n            </div>\n        </li>\n    </ul>\n\n    <h3>功能对比</h3>\n    <article class="markdown content">\n        <table>\n            <thead>\n            <tr>\n                <th></th>\n                <th>免费版</th>\n                <th>开发版</th>\n                <th>高级版</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n                <td>价格 ( 单个项目 )</td>\n                <td>免费</td>\n                <td>￥49/月、￥245/半年、￥441/年</td>\n                <td>￥199/月、￥995/半年、￥1791/年</td>\n            </tr>\n            <tr>\n                <td>项目成员</td>\n                <td>10人</td>\n                <td>20人</td>\n                <td>50人</td>\n            </tr>\n            <tr>\n                <td>Git 仓库容量</td>\n                <td>1G</td>\n                <td>5G</td>\n                <td>10G</td>\n            </tr>\n            <tr>\n                <td>演示平台</td>\n                <td>512M 内存/用户,24 小时挂起<sup>1</sup></td>\n                <td>1G 内存/项目,无挂起</td>\n                <td>2G 内存/项目,无挂起</td>\n            </tr>\n            <tr>\n                <td>自定义域名</td>\n                <td>不支持</td>\n                <td>支持</td>\n                <td>支持</td>\n            </tr>\n            <tr>\n                <td><a class="gray" cg-jump-out-angular-href="/git#codeinsight">CodeInsight</a></td>\n                <td>不支持</td>\n                <td>支持</td>\n                <td>支持</td>\n            </tr>\n            <tr>\n                <td><a class="gray" cg-jump-out-angular-href="/webide">WebIDE</a></td>\n                <td>3 Workspaces/用户</td>\n                <td>不占成员个人份额</td>\n                <td>不占成员个人份额</td>\n            </tr>\n            <tr>\n                <td><a class="gray" href="/gitsla" target="_blank">SLA<sup>2</sup></a></td>\n                <td> -</td>\n                <td> -</td>\n                <td>99.9%</td>\n            </tr>\n            <tr>\n                <td>数据打包下载<sup>3</sup></td>\n                <td>不支持</td>\n                <td>支持</td>\n                <td>支持</td>\n            </tr>\n            <tr>\n                <td>客服支持</td>\n                <td>邮件</td>\n                <td>邮件、工单</td>\n                <td>邮件、工单、QQ、电话</td>\n            </tr>\n            </tbody>\n        </table>\n    </article>\n    <article class="tips">\n        <p><span>注：</span>1. 应用挂起是指当连续 24 小时没有人访问该应用，该应用会被自动停止，当有人访问进入时，演示平台会自动启动被挂起的应用，延时大约 3\n            秒左右。挂起对于用户来说是透明的，绝大部分情况下不影响用户使用。</p>\n\n        <p>2. 具体请参见 <a class="gray" href="/gitsla" target="_blank">Git 代码托管服务等级协议</a>。</p>\n\n        <p>3. Coding 保留用户迁移项目数据的权利，你可以随时把项目数据打包备份或者导入到第三方系统，免除后顾之忧。</p>\n    </article>\n\n    <div ng-if="loaded && projects.length === 0 && USER">\n        <h3>尚未创建项目，先创建项目再升级吧！</h3>\n\n        <form class="ui small form">\n            <div class="field">\n                <a href="/user/projects/create" class="ui large blue button">创建项目</a>\n            </div>\n        </form>\n    </div>\n\n    <div ng-if="loaded && projects.length > 0">\n        <h3>选择你要升级的项目，马上去升级吧！</h3>\n\n        <form class="ui small form">\n            <div class="field">\n                <div class="ui selection dropdown" cg-ui-dropdown="dropdown">\n                    <input type="hidden" name="project" ng-model="project_id">\n\n                    <div class="default text" ng-if="!project_selected">请选择项目</div>\n                    <div class="text ellipsis" ng-if="project_selected">\n                        <img class="ui image avatar24" style="height: 24px!important" ng-src="{{ project_selected.icon }}">\n                        {{ project_selected.name }}\n                    </div>\n                    <i class="dropdown icon"></i>\n\n                    <div class="menu ui">\n                        <div class="item ellipsis" title="{{ project.name }}" ng-repeat="project in projects" ng-click="onProjectSelect(project);">\n                            <img class="ui image avatar24" style="height: 24px!important" ng-src="{{ project.icon }}">\n                            {{ project.name }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class="field">\n                <button class="ui large green button" ng-click="upgrade(project_selected);">马上升级</button>\n            </div>\n        </form>\n    </div>\n</div>\n<div ng-include="\'app/layout/footer.html\'"></div>'),
            $templateCache.put("app/project/setting/summary/index.html", '<div class="project-upgrade-wrapper">\n\n    <div class="project-upgraded" ng-controller="ProjectSummaryController">\n\n        <section class="summary">\n\n            <h1>\n                <span ng-bind="PROJECT.name"></span>\n                <em ng-style="projectVersionBg()">\n                    <i class="icon" ng-class="project_version.icon"></i>\n                    <span ng-if="!service_info.expired_plan" ng-bind="project_version.name"></span>\n                    <span ng-if="service_info.expired_plan" ng-bind="expired_project_version.name"></span>\n                </em>\n                <a class="ui green button small" ng-href="{{PROJECT.project_path}}/setting/summary/upgrade" ng-if="version === \'free\' && !service_info.expired_plan && is_project_owner">\n                    马上升级\n                </a>\n                <a href="javascript:void(0);" ng-if="version === \'dev\' && is_project_owner" ng-click="upgradePro();">\n                    升级为高级版<i class="red icon triangle right"></i>\n                </a>\n            </h1>\n\n            <div class="ui three column stackable grid">\n                <div class="row">\n                    <div class="column">\n                        <div class="inner">\n                            <div class="title">\n                                <strong><i class="time big icon"></i>服务期</strong>\n                                <em ng-if="service_info.expired_plan > 1">已到期</em>\n                                <a class="ui green button small" ng-if="service_info.expired_plan > 1 && is_project_owner" ng-href="{{PROJECT.project_path}}/setting/summary/upgrade">重新升级</a>\n                                <a href="javascript:void(0);" class="ui green button small" ng-click="renewalManually()" ng-if="version !== \'free\' && !service_info.expired_plan && is_project_owner">手动续费</a>\n                            </div>\n                            <div class="progress">\n                                <div class="progress-bar">\n                                    <!-- show rate when plan expired or not free -->\n                                    <div class="progress" ng-if="version !== \'free\' || !!service_info.expired_plan" ng-style="{\n                                            width: rate(service_info.used_day, service_info.cycle),\n                                            background: progressColor(service_info.used_day, service_info.cycle)\n                                         }">\n                                    </div>\n                                    <!-- show not limit when plan free -->\n                                    <div class="progress" ng-if="version === \'free\'" style="width: 0"></div>\n                                </div>\n                                <div>\n                                    <span class="rate" ng-if="version !== \'free\' || !!service_info.expired_plan">\n                                        <em ng-bind="service_info.used_day"></em> / <span ng-bind="service_info.cycle"></span>\n                                    </span>\n                                    <span class="rate" ng-if="version == \'free\' && !service_info.expired_plan">\n                                        <em ng-bind="service_info.used_day + \'天\'"></em> / 不限\n                                    </span>\n                                    <span class="renewal-setting" ng-if="!service_info.expired_plan && version !== \'free\'">\n                                        <span ng-if="!project_plan.auto">未开启自动续费</span>\n                                        <span ng-if="project_plan.auto">已开启自动续费</span>\n                                        <a href="javascript:void(0);" ng-click="renewal();" ng-if="is_project_owner">设置</a>\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="column">\n                        <div class="inner">\n                            <div class="title">\n                                <strong><i class="users big icon"></i>团队成员数</strong>\n                            </div>\n                            <div class="progress">\n                                <div class="progress-bar">\n                                    <div class="progress" ng-style="{\n                                            width: rate(service_info.member, service_info.max_member),\n                                            background: progressColor(service_info.member, service_info.max_member)\n                                         }">\n                                    </div>\n                                </div>\n                                <div>\n                                <span class="rate">\n                                    <em ng-bind="service_info.member"></em> /\n                                    <span ng-bind="service_info.max_member"></span>\n                                </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="column">\n                        <div class="inner">\n                            <div class="title">\n                                <strong><i class="code big icon"></i>Git 仓库使用情况</strong>\n                            </div>\n                            <div class="progress">\n                                <div class="blue progress-bar">\n                                    <div class="progress" ng-style="{\n                                        width: rate(service_info.git_memory, service_info.max_git_memory),\n                                        background: progressColor(service_info.git_memory, service_info.max_git_memory)\n                                        }">\n                                    </div>\n                                </div>\n                                <div>\n                                <span class="rate">\n                                    <em ng-bind="service_info.git_memory * 1024 | bytes: 2"></em> /\n                                    <span ng-bind="project_version.limits.git"></span>\n                                </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <div ng-if="version !== \'free\' && !service_info.expired_plan && is_project_owner">\n            <p class="package">\n                数据打包下载：\n                <a class="ui blue button" href="javascript:void(0);" ng-click="exportProject();" ng-if="!seconds">马上打包</a>\n                <a href="javascript:void(0);" class="ui blue button disabled" ng-if="seconds">\n                    {{ exportEnableTime(seconds) }} 后可再次打包\n                </a>\n                <span class="tips" ng-if="!(loaded_export && !export_info.created_at)">最后一次打包时间:\n                    <i class="icon" ng-class="{loading: loading_export, time: !loading_export}"></i>\n                    <span ng-if="loading_export">正在查询上一次时间...</span>\n                    <a class="gray" target="_blank" ng-if="loaded_export && export_info.created_at" ng-bind="export_info.created_at | date : \'yyyy-MM-dd HH:mm:ss\'" ng-href="{{ export_info.url + \'?download/export_\' + PROJECT.name + \'_\' + export_info.created_at +\'.json\' }}"></a>\n                </span>\n            </p>\n\n            <article>\n                * 打包内容包括任务、讨论、成员等，但不包括代码和历史（用户可通过 Git 自行获取）<br>\n                * 数据打包成功后，我们将会发送下载链接到您的注册邮箱，请耐心等待。\n            </article>\n        </div>\n\n        <div class="ui modal account-charge-modal" ng-if="version === \'dev\'" ng-controller="ProjectUpgradeProModalCtrl" cg-modal="upgrade_pro_modal" ng-include="\'app/project/setting/summary/modal/upgrade_pro_modal.html\'"></div>\n\n        <div class="ui modal account-charge-modal" ng-controller="ProjectUpgradeRenewalModalCtrl" cg-modal="upgrade_renewal_modal" ng-include="\'app/project/setting/summary/modal/renewal_modal.html\'"></div>\n\n        <div class="ui tiny40 modal account-charge-modal" ng-controller="ProjectRenewalManuallyModalCtrl" cg-modal="renewal_manually_modal" ng-include="\'app/project/setting/summary/modal/renewal_manually_modal.html\'"></div>\n\n        <div class="ui modal account-charge-modal" ng-if="upgraded" ng-controller="ProjectUpgradeJustRenewalModalCtrl" cg-modal="upgrade_just_renewal_modal" ng-include="\'app/project/setting/summary/modal/just_renewal_modal.html\'"></div>\n\n    </div>\n\n</div>'),
            $templateCache.put("app/project/setting/summary/modal/just_renewal_modal.html", '<div class="header">项目续费</div>\n<div class="content project-upgrade-form">\n    <form class="ui form" method="POST">\n        <div class="field version-description">\n            <i class="inverted circular icon" ng-class="upgrade_version.icon"></i>\n            <article>\n                <h3>\n                    <span ng-bind="upgrade_version.name"></span>\n                    <a href="#">查看项目 免费版、开发版 和 高级版 对比详情 &raquo;</a>\n                </h3>\n                <p ng-bind="version_description"></p>\n            </article>\n        </div>\n        <div class="inline fields payment-period" style="padding: 75px 0 0 110px">\n            <div class="field" ng-if="upgrade_prices.month > 0">\n                <div class="ui radio checkbox">\n                    <input name="type" id="price-{{ id }}-1" type="radio" value="month" ng-model="form.period">\n                    <label for="price-{{ id }}-1"><em ng-bind="upgrade_period.month"></em>/月</label>\n                </div>\n            </div>\n            <div class="field" ng-if="upgrade_prices.half_year > 0">\n                <div class="ui radio checkbox">\n                    <input name="type" id="price-{{ id }}-2" type="radio" value="half_year" ng-model="form.period">\n                    <label for="price-{{ id }}-2"><em ng-bind="upgrade_period.half_year"></em>/半年</label>\n                </div>\n            </div>\n            <div class="field" ng-if="upgrade_prices.full_year > 0">\n                <div class="ui radio checkbox">\n                    <input name="type" id="price-{{ id }}-3" type="radio" value="full_year" ng-model="form.period">\n                    <label for="price-{{ id }}-3"><em ng-bind="upgrade_period.full_year"></em>/一年</label>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>\n<div class="actions">\n    <a class="ui cancel borderless button">取消</a>\n    <a class="ui ok button green" ng-click="renewal(form);">马上续费</a>\n</div>\n\n<div class="ui modal account-charge-modal" ng-controller="ProjectUpgradeChargeModalCtrl" cg-modal="upgrade_charge_modal" ng-include="\'app/project/setting/summary/modal/upgrade_charge_modal.html\'"></div>\n\n<div class="ui modal account-result-modal" cg-modal="renewal_result_modal" ng-include="\'app/project/setting/summary/modal/renewal_result_modal.html\'"></div>'),
            $templateCache.put("app/project/setting/summary/modal/password_required_modal.html", '<i class="close icon"></i>\n<div class="header">需要{{method_message}}\n    <sup ng-hide="method === \'password\'">\n        <a title="点击查看两步验证帮助文档" class="gray" target="_blank" href="/help/doc/account/2fa.html">\n            <i class="help icon" style="color: #666;font-size: 12px"></i>\n        </a>\n    </sup>\n</div>\n<div class="content">\n    <div class="ui red message" ng-bind="password_words + \'需要\' + method_message"></div>\n    <div class="ui small form" style="font-size: 1.125em">\n        <div class="ui fluid action medium input">\n            <input type="password" ng-if="method === \'password\'" placeholder="请输入{{method_message}}" ng-model="form.password" cg-enter="confirm(form.password);">\n            <input type="text" ng-hide="method === \'password\'" placeholder="请输入{{method_message}}" ng-model="form.password" cg-enter="confirm(form.password);">\n\n            <div class="ui red button" ng-click="confirm(form.password);">确认</div>\n        </div>\n    </div>\n</div>\n<div class="actions">\n    <div class="ui cancel button">取消</div>\n</div>'),
            $templateCache.put("app/project/setting/summary/modal/renewal_manually_modal.html", '<div class="header">手动续费</div>\n<div class="content project-upgrade-form">\n    <form class="ui form">\n        <div class="field version-description">\n            <i class="inverted circular icon" ng-class="current_versions.icon"></i>\n            <article>\n                <h3>\n                    <span ng-bind="current_versions.name"></span>\n                    <a href="/upgrade" target="_blank">查看项目 免费版、开发版 和 高级版 对比详情 &raquo;</a>\n                </h3>\n                <p ng-bind="version_description"></p>\n            </article>\n        </div>\n        <div class="inline fields payment-period" style="margin-top: 60px">\n            <div class="field" ng-if="available_plan >= 1">\n                <div class="ui radio checkbox">\n                    <input name="type" id="price-{{ id }}-1" type="radio" value="month" ng-model="form.period" checked="checked">\n                    <label for="price-{{ id }}-1">\n                        <em ng-bind="upgrade_periods[version].month">29</em>/月\n                    </label>\n                </div>\n            </div>\n            <div class="field" ng-if="available_plan >= 6">\n                <div class="ui radio checkbox">\n                    <input name="type" id="price-{{ id }}-2" type="radio" value="half_year" ng-model="form.period">\n                    <label for="price-{{ id }}-2">\n                        <em ng-bind="upgrade_periods[version].half_year">149</em>/半年\n                        <strong>买5个月送1个月</strong>\n                    </label>\n                </div>\n            </div>\n            <div class="field" ng-if="available_plan >= 12">\n                <div class="ui radio checkbox">\n                    <input name="type" id="price-{{ id }}-3" type="radio" value="full_year" ng-model="form.period">\n                    <label for="price-{{ id }}-3">\n                        <em ng-bind="upgrade_periods[version].full_year">269</em>/一年\n                        <strong>买9个月送3个月</strong>\n                    </label>\n                </div>\n            </div>\n        </div>\n        <div class="project-upgrade-wrapper" ng-include="\'app/project/setting/summary/voucher/voucher.html\'" ng-show="available_plan > 0"></div>\n        <div class="ui warning message" style="display: block" ng-if="available_plan === 0">付费项目已达到最大周期（24个月）。</div>\n    </form>\n</div>\n<div class="actions" ng-show="available_plan > 0">\n    <span style="float:left" ng-if="version_price >= 0">\n        实付款：<span style="color:#666">￥</span><strong class="red" style="font-size: 25px" ng-bind="version_price"></strong>\n    </span>\n    <a class="ui cancel borderless button">取消</a>\n    <a class="ui ok button green" ng-click="renewalNow();">确认续费</a>\n</div>\n<div class="ui modal account-charge-modal" ng-controller="ProjectUpgradeChargeModalCtrl" cg-modal="upgrade_charge_modal" ng-include="\'app/project/setting/summary/modal/upgrade_charge_modal.html\'"></div>\n<div class="ui modal account-charge-modal" ng-controller="PasswordRequiredModalCtrl" cg-modal="password_required_modal" ng-include="\'app/project/setting/summary/modal/password_required_modal.html\'"></div>'),
            $templateCache.put("app/project/setting/summary/modal/renewal_modal.html", '<div class="header">续费设置</div>\n<div class="content project-upgrade-form">\n    <form class="ui form" method="POST">\n        <div class="inline fields payment-period" style="margin-top: 20px">\n            <div class="field" style="margin-right: 0.5em!important">\n                <label>续费方式：</label>\n            </div>\n            <div class="field" ng-if="upgrade_prices.month > 0">\n                <div class="ui radio checkbox">\n                    <input name="type" id="price-{{ id }}-1" type="radio" value="month" ng-model="form.period">\n                    <label for="price-{{ id }}-1"><em ng-bind="upgrade_period.month"></em>/月</label>\n                </div>\n            </div>\n            <div class="field" ng-if="upgrade_prices.half_year > 0">\n                <div class="ui radio checkbox">\n                    <input name="type" id="price-{{ id }}-2" type="radio" value="half_year" ng-model="form.period">\n                    <label for="price-{{ id }}-2"><em ng-bind="upgrade_period.half_year"></em>/半年</label>\n                </div>\n            </div>\n            <div class="field" ng-if="upgrade_prices.full_year > 0">\n                <div class="ui radio checkbox">\n                    <input name="type" id="price-{{ id }}-3" type="radio" value="full_year" ng-model="form.period">\n                    <label for="price-{{ id }}-3"><em ng-bind="upgrade_period.full_year"></em>/一年</label>\n                </div>\n            </div>\n        </div>\n        <div class="inline fields" style="margin-bottom: 15px">\n            <div class="field">\n                <label>自动续费：</label>\n            </div>\n            <div class="field">\n                <div class="ui toggle checkbox">\n                    <input id="{{ id }}-renewal" type="checkbox" ng-model="form.renewal">\n                    <label for="{{ id }}-renewal"></label>\n                </div>\n            </div>\n            <div class="field">\n                <p class="green tips" ng-if="form.renewal">自动从账户余额中扣费为项目续费</p>\n                <p class="red tips" ng-if="!form.renewal">到期后，该项目将会降级为普通项目</p>\n            </div>\n        </div>\n        <div class="field">\n            <p class="tips">\n                * 确认修改后，自下个续费期生效。\n            </p>\n        </div>\n    </form>\n</div>\n<div class="actions">\n    <a class="ui cancel borderless button">取消</a>\n    <a class="ui ok button green" ng-click="renewal(form);">确认修改</a>\n</div>\n<div class="ui modal account-charge-modal" ng-controller="ProjectUpgradeChargeModalCtrl" cg-modal="upgrade_charge_modal" ng-include="\'app/project/setting/summary/modal/upgrade_charge_modal.html\'"></div>'),
            $templateCache.put("app/project/setting/summary/modal/renewal_result_modal.html", '<div class="content">\n    <h2 class="green" style="margin-top: 30px">\n        续费成功！\n    </h2>\n    <p>\n        到期时间：2015-12-11 12:01\n    </p>\n</div>'),
            $templateCache.put("app/project/setting/summary/modal/upgrade_charge_modal.html", '<form id="upgrade-charge-modal-form" class="top-up-form ui small form" action="/api/payment/charge" target="_blank" method="POST" ng-submit="charge($event, form)">\n    <div class="header">账户充值</div>\n    <div class="content">\n        <div class="field message" ng-if="insufficient">\n            账户余额不足，马上充值！\n        </div>\n        <div class="field balance">\n            <label>账户余额：<em ng-bind="balance"></em> 元</label>\n        </div>\n        <div class="inline field">\n            <label>充值金额：</label>\n            <input type="text" name="price" ng-model="form.price" decimals="2" decimal-point="." style="width: 100px;margin-right: 5px">元\n        </div>\n        <div class="inline field">\n            <label>充值方式：</label>\n            <input type="radio" name="platform" id="top-up-method-{{ id }}-alipay" value="alipay" ng-model="form.platform" placeholder="" checked="checked">\n            <label for="top-up-method-{{ id }}-alipay">\n                <img class="top-up-method-img" src="/static/baf1cf414bd43a036b8b15c589e66694.gif" alt="alipay">\n            </label>\n            <input type="radio" name="platform" id="top-up-method-{{ id }}-weixin" value="weixin" ng-model="form.platform" placeholder="" style="margin-left: 30px">\n            <label for="top-up-method-{{ id }}-weixin">\n                <img class="top-up-method-img" src="/static/5965fe18cd6c1951fe15884b2f3e54a6.jpg" style="height: 37px" alt="weixin">\n            </label>\n        </div>\n    </div>\n    <div class="action-buttons">\n        <a class="ui cancel borderless button" ng-click="closeChargeModal()">取消</a>\n        <button type="submit" class="ui ok button green">马上充值</button>\n    </div>\n</form>\n\n<div class="ui modal top-up-modal" cg-modal="top_up_modal" ng-include="\'app/user/account_setting/account/modal/top-up-modal.html\'"></div>'),
        $templateCache.put("app/project/setting/summary/modal/upgrade_pro_modal.html", '<div class="header">升级为高级版</div>\n<div class="content project-upgrade-form">\n    <form class="ui form" method="POST">\n        <div class="field version-description">\n            <i class="inverted circular icon" ng-class="pro_version.icon"></i>\n            <article>\n                <h3>\n                    <span ng-bind="pro_version.name"></span>\n                    <a href="/upgrade" target="_blank">查看项目 免费版、开发版 和 高级版 对比详情 &raquo;</a>\n                </h3>\n                <p ng-bind="version_description"></p>\n            </article>\n        </div>\n        <div class="inline fields payment-period pl10">\n            <div class="field" ng-if="upgrade_prices.month > 0">\n                <div class="ui radio checkbox">\n                    <input name="type" id="price-{{ id }}-1" type="radio" value="month" ng-model="form.period" checked="checked">\n                    <label for="price-{{ id }}-1">\n                        <em ng-bind="upgrade_period.month">29</em>/月\n                    </label>\n                </div>\n            </div>\n            <div class="field" ng-if="upgrade_prices.half_year > 0">\n                <div class="ui radio checkbox">\n                    <input name="type" id="price-{{ id }}-2" type="radio" value="half_year" ng-model="form.period" ng-checked="upgrade_prices.month <= 0">\n                    <label for="price-{{ id }}-2">\n                        <em ng-bind="upgrade_period.half_year">149</em>/半年\n                        <strong>买5个月送1个月</strong>\n                    </label>\n                </div>\n            </div>\n            <div class="field" ng-if="upgrade_prices.full_year > 0">\n                <div class="ui radio checkbox">\n                    <input name="type" id="price-{{ id }}-3" type="radio" value="full_year" ng-model="form.period" ng-checked="upgrade_prices.half_year <= 0">\n                    <label for="price-{{ id }}-3">\n                        <em ng-bind="upgrade_period.full_year">269</em>/一年\n                        <strong>买9个月送3个月</strong>\n                    </label>\n                </div>\n            </div>\n        </div>\n        <div ng-include="\'app/project/setting/summary/voucher/voucher.html\'"></div>\n        <div class="field pl10" style="margin-bottom: 0px">\n            <p class="tips">\n                * 升级为高级版后不能降级为开发版。\n            </p>\n            <p ng-if="upgrade_prices.remain > 0">\n                <span class="payment-discount-info">\n                    升级优惠金额：<span style="color:#666">￥</span><span style="font-size: 20px" ng-bind="upgrade_prices.remain"></span>\n                    <sup style="font-size: 12px;color:#666">\n                        <i class="icon help" data-html="<div class=\'content\'>此金额是根据您付费购买的当前开发版剩余天数折现的：<br>优惠金额 ＝（当前版本每月单价 / 30 ）* （当前剩余天数 - 赠送天数）</div>" cg-popup="coupon_popup_opt"></i>\n                    </sup>\n                </span>\n            </p>\n        </div>\n    </form>\n</div>\n<div class="actions">\n    <span style="float:left" ng-if="upgrade_prices.remain >= 0">\n        实付款：<span style="color:#666">￥</span><strong class="red" style="font-size: 25px" ng-bind="version_price"></strong>\n    </span>\n    <a class="ui cancel borderless button">取消</a>\n    <a class="ui ok button green" ng-click="upgrade(form);">确认升级</a>\n</div>\n<div class="ui modal account-charge-modal" ng-controller="ProjectUpgradeChargeModalCtrl" cg-modal="upgrade_charge_modal" ng-include="\'app/project/setting/summary/modal/upgrade_charge_modal.html\'"></div>\n<div class="ui modal account-charge-modal" ng-controller="PasswordRequiredModalCtrl" cg-modal="password_required_modal" ng-include="\'app/project/setting/summary/modal/password_required_modal.html\'"></div>'),
        $templateCache.put("app/project/setting/summary/upgrade.html", '<div class="project-upgrade-wrapper">\n    <div class="project-upgrade-form" ng-controller="ProjectUpgradeFormController">\n        <header class="ui dividing header">升级项目</header>\n\n        <p class="description">\n            Coding 升级项目可选择 “开发版” 和 “高级版”，使你的项目拥有更多的功能、更少的限制。<br>\n            <a href="/upgrade">查看项目 免费版、开发版 和 高级版 对比详情 &raquo; </a>\n        </p>\n\n        <form class="ui form">\n            <div class="field choose-field">\n                <label class="version">选择升级版本：</label>\n                <ul class="versions clearfix">\n                    <li>\n                        <input name="version" type="radio" id="version-{{ project_versions.dev.id }}" value="{{ project_versions.dev.id }}" ng-model="form.version" checked="checked">\n                        <label for="version-{{ project_versions.dev.id }}">\n                            <a class="ui right green corner label">\n                                <i class="checkmark icon"></i>\n                            </a>\n                            <i class="circular inverted icon" ng-class="project_versions.dev.icon"></i>\n\n                            <h2 ng-bind="project_versions.dev.name"></h2>\n\n                            <p ng-bind-html="upgrade_version_desc.dev">\n                            </p>\n                        </label>\n                    </li>\n                    <li>\n                        <input name="version" type="radio" id="version-{{ project_versions.pro.id }}" value="{{ project_versions.pro.id }}" ng-model="form.version">\n                        <label for="version-{{ project_versions.pro.id }}">\n                            <a class="ui right green corner label">\n                                <i class="checkmark icon"></i>\n                            </a>\n                            <i class="circular inverted icon" ng-class="project_versions.pro.icon"></i>\n\n                            <h2 ng-bind="project_versions.pro.name"></h2>\n\n                            <p ng-bind-html="upgrade_version_desc.pro"></p>\n                        </label>\n                    </li>\n                </ul>\n            </div>\n            <div class="inline fields payment-period">\n                <div class="field">\n                    <div class="ui radio checkbox">\n                        <input name="type" id="price-1" type="radio" value="month" ng-model="form.period" checked="checked">\n                        <label for="price-1">\n                            <em ng-bind="upgrade_periods[form.version].month"></em>/月\n                        </label>\n                    </div>\n                </div>\n                <div class="field">\n                    <div class="ui radio checkbox">\n                        <input name="type" id="price-2" type="radio" value="half_year" ng-model="form.period">\n                        <label for="price-2">\n                            <em ng-bind="upgrade_periods[form.version].half_year"></em>/半年\n                            <strong>买5个月送1个月</strong>\n                        </label>\n                    </div>\n                </div>\n                <div class="field">\n                    <div class="ui radio checkbox">\n                        <input name="type" id="price-3" type="radio" value="full_year" ng-model="form.period">\n                        <label for="price-3">\n                            <em ng-bind="upgrade_periods[form.version].full_year"></em>/一年\n                            <strong>买9个月送3个月</strong>\n                        </label>\n                    </div>\n                </div>\n            </div>\n            <div ng-include="\'app/project/setting/summary/voucher/voucher.html\'"></div>\n            <div class="field money">\n                <span>实付款：￥</span> <span>{{version_price}}</span>\n            </div>\n            <div class="field">\n                <button class="ui green medium button" ng-click="upgrade(form);">\n                    马上升级\n                </button>\n                <p class="tips">\n                    注意：升级项目仅会升级当前项目，其他项目不会享受高级项目的权利。\n                </p>\n            </div>\n        </form>\n\n        <div class="ui modal account-charge-modal" ng-controller="ProjectUpgradeChargeModalCtrl" cg-modal="upgrade_charge_modal" ng-include="\'app/project/setting/summary/modal/upgrade_charge_modal.html\'"></div>\n\n        <div class="ui modal account-charge-modal" ng-controller="PasswordRequiredModalCtrl" cg-modal="password_required_modal" ng-include="\'app/project/setting/summary/modal/password_required_modal.html\'"></div>\n    </div>\n</div>'),
        $templateCache.put("app/project/setting/summary/voucher/voucher.html", '<div class="field voucher-form" ng-controller="VoucherController">\n    <p>\n        <i class="triangle icon" ng-class="{\'right\': !showVoucher, \'down\': showVoucher}" ng-click="showHideVoucher()"></i>\n        <span ng-click="showHideVoucher()">使用代金券</span>\n    </p>\n    <div class="inline fields" ng-show="!voucher && showVoucher">\n        <div class="ui default input">\n            <input type="text" placeholder="请输入代金券" ng-model="voucherCode" cg-enter="submitVoucher(voucherCode, captchaCode, $event)">\n        </div>\n        <div ng-show="showCaptcha" class="ui default input" style="width:100px!important; margin-left: 10px">\n            <input type="text" placeholder="验证码" ng-model="captchaCode" cg-enter="submitVoucher(voucherCode, captchaCode, $event)">\n        </div>\n        <img ng-show="showCaptcha" ng-src="{{captcha}}" alt="验证码" ng-click="refreshCaptcha()" class="captcha-img">\n        <div class="voucher-form-submit">\n            <a class="ui default green button" ng-click="submitVoucher(voucherCode, captchaCode)" ng-show="!loadingVoucher">使用</a>\n            <a class="ui default green button" style="width: 70px" ng-show="loadingVoucher"><i class="loading icon" style="margin: 0"></i></a>\n        </div>\n    </div>\n    <div class="voucher-code-show" ng-show="voucher && showVoucher">\n        <div>\n            代金券优惠金额：<span style="color: #666">￥</span> <span style="font-size: 20px;color: #E88964;opacity:1">{{voucher.money}}</span>\n            <p>过期时间：{{voucher.endDate | amDateFormat:\'YYYY-M-D HH:mm:ss\'}}</p>\n        </div>\n        <i class="remove icon red" ng-click="unuseVoucher()"></i>\n    </div>\n</div>'),
        $templateCache.put("app/project/setting/support/create.html", '<div class="project-support-create-wrapper" ng-controller="ProjectSupportCtrl">\n\n    <header class="ui dividing header">提交工单</header>\n\n    <form class="ui small form">\n        <div class="field">\n            <label>问题类型</label>\n            <div class="ui selection dropdown" cg-dropdown="types" cg-on-change="onTypeChange">\n                <input type="hidden" name="type" ng-model="ticket.type">\n                <div class="default text">请选择</div>\n                <!--<div class="default text" ng-if="ticket.type.length !== 0" ng-bind="types[ticket.type-1].key"></div>-->\n                <i class="dropdown icon"></i>\n                <div class="menu">\n                    <div class="item" ng-repeat="type in types" data-value="{{ type.value }}" ng-bind="type.key"></div>\n                </div>\n            </div>\n        </div>\n        <div class="field">\n            <label>标题</label>\n            <input type="text" ng-model="ticket.title">\n        </div>\n        <div class="field">\n            <label>详细描述</label>\n            <div cg-pagedown="contentUpdate($content)" min-height="200" id="-1" ng-model="ticket.content">\n                <textarea placeholder="工单内容" ng-model="ticket.content" cg-at-emoji cg-textarea-editable></textarea>\n            </div>\n        </div>\n        <div class="field">\n            <button class="ui blue button" ng-class="{loading: creating}" ng-click="submit()">提交工单</button>\n        </div>\n    </form>\n\n</div>'),
        $templateCache.put("app/project/setting/support/index.html", '<div class="project-support-wrapper" ng-controller="CustomerTicketsCtrl">\n\n    <header class="ui dividing header">技术支持</header>\n\n    <section class="qa">\n        <h2>常见问题</h2>\n        <ul class="clearfix">\n            <li>\n                <a href="/help/faq/account/user.html#怎么修改邮箱，个性后缀，昵称？" target="_blank">怎么修改邮箱，个性后缀，昵称？ </a>\n            </li>\n            <li>\n                <a href="/help/faq/paas/deploy.html#项目一键部署失败？" target="_blank">项目一键部署失败？</a>\n            </li>\n            <li>\n                <a href="/help/faq/paas/deploy.html#支持-push-代码后自动更新部署演示吗？" target="_blank">/支持 push 代码后自动更新部署演示吗？ </a>\n            </li>\n            <li>\n                <a href="/help/faq/paas/deploy.html#演示平台部署的网站支持-https-吗？" target="_blank">演示平台部署的网站支持-https 吗？ </a>\n            </li>\n            <li>\n                <a href="/help/faq/git/repository.html#用户可以建多少个仓库？" target="_blank">一个账号可以创建多少个项目？</a>\n            </li>\n            <li>\n                <a href="/help/faq/webide/ide.html#运行程序后，生成的-access-url-报502，404-是怎么回事？" target="_blank">运行程序后，生成的 access-url 报502，404-是怎么回事？</a>\n            </li>\n            <li>\n                <a href="/help/faq/webide/ide.html#webide-可以安装数据库吗？" target="_blank">webide 可以安装数据库吗？ </a>\n            </li>\n            <li>\n                <a href="/help/faq/git/git.html#代码-push-不了，报-ssl-abort，ssl-protocol-error，或者-connection-timeout-怎么办？" target="_blank">代码 push 不了，报 SSL Abort，SSL protocol error，或者 Connection Timeout 怎么办？ </a>\n            </li>\n        </ul>\n    </section>\n\n    <section class="support">\n        <h2>工单列表 <span ng-if="total_count > 0">({{ total_count }})</span><a class="ui blue button" ng-href="{{PROJECT.project_path}}/setting/support/create">提交工单</a></h2>\n        <article class="markdown content">\n            <table class="text-align-left-th">\n                <thead>\n                <tr>\n                    <th>工单 ID</th>\n                    <th>标题</th>\n                    <th>提交者</th>\n                    <th>提交时间</th>\n                    <th>状态</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr bindonce ng-repeat="ticket in tickets">\n                    <td bo-text="ticket.id"></td>\n                    <td>\n                        <a bo-href="PROJECT.project_path + \'/setting/support/ticket/\' + ticket.id" bo-text="ticket.title">\n                        </a>\n                    </td>\n                    <td><a bo-href="ticket.owner.path" bo-text="ticket.owner.name"></a></td>\n                    <td bo-text="ticket.created_at"></td>\n                    <td bo-text="ticket_status[ticket.status]"></td>\n                </tr>\n                <tr ng-if="tickets.length === 0">\n                    <td colspan="5" align="center">\n                    <span ng-if="loaded">\n                        尚未提交任何工单\n                    </span>\n                    <span ng-if="loading">\n                        <i class="loading icon"></i>正在加载数据...\n                    </span>\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n            <div class="center" cg-pager="{{ticket_pager_id}}"></div>\n        </article>\n    </section>\n\n</div>'),
        $templateCache.put("app/project/setting/support/ticket.html", '<style type="text/css">\n\n    #ticket-comments .comment{position: relative;padding:10px 0;}\n    #ticket-comments .comment img.avatar{position: absolute;top:22px;left:0;}\n    #ticket-comments .comment .content-wrapper{\n        margin-left: 45px;\n        padding: 15px;\n        position: relative;\n        border: 1px solid #EEE;\n        background: #FFF;\n        border-radius: 3px;\n    }\n    #ticket-comments .comment .content-wrapper:before{\n        margin-top: -11px;\n        bottom: auto;\n        right: auto;\n        top: 30px;\n        left: -6px;\n        position: absolute;\n        content: "";\n        width: .6em;\n        height: .6em;\n        -webkit-transform: rotate(45deg);\n        -moz-transform: rotate(45deg);\n        -ms-transform: rotate(45deg);\n        transform: rotate(45deg);\n        z-index: 2;\n        -webkit-transition: background .1s linear;\n        -moz-transition: background .1s linear;\n        transition: background .1s linear;\n        background-color: #FFF;\n        border-left: 1px solid #EEE;\n        border-bottom: 1px solid #EEE;\n    }\n    #ticket-comments .comment .content{line-height:23px;font-size:14px;margin-bottom: 10px;}\n    #ticket-comments .comment .content img.monkey.emotion{width: 64px;}\n    #ticket-comments .comment .time{font-size:12px;color:#999;}\n    #ticket-comments .comment .time a.remove,\n    #ticket-comments .comment .time a.reply{display: none;}\n    #ticket-comments .comment .time .mr10{\n        margin-right: 10px;\n    }\n    #ticket-comments .comment:hover .time a.remove,\n    #ticket-comments .comment:hover .time a.reply{display: inline;}\n\n    #comment-form{margin:20px 10px 50px 10px;}\n\n    #topic-detail .dividing.header > a.button{margin-top: 10px;}\n    #topic-detail .dividing.header img.avatar{margin-right: 15px;}\n\n    #topic-comment-editor.light-md-editor .editor > textarea{\n        min-height: 0;\n        max-height: none;\n    }\n\n    #project-ticket-detail{\n        position: relative;\n    }\n\n    #project-ticket-detail .topic-title{\n        position: relative;\n        padding-bottom: 15px;\n        margin-bottom: 20px;\n        border-bottom: 1px solid #CCC;\n    }\n\n    #project-ticket-detail .topic-title .avatar{\n        position: absolute;\n        display: inline-block;\n        width: 42px;\n        height: 42px;\n        left: 0;\n        top: 0;\n    }\n\n    #project-ticket-detail .topic-title h2{\n        font-size: 24px;\n        font-weight: normal;\n        color: #000;\n        margin: 0 0 3px 0;\n    }\n\n    #project-ticket-detail .topic-title .toolbar{\n        font-size: 12px;\n        color: #666;\n        line-height: 20px;\n    }\n\n    #project-ticket-detail .topic-title .toolbar .mr10{\n        margin-right: 10px;\n    }\n\n    #project-ticket-detail .topic-title .tags-show span.tag{\n        font-size: 12px;\n        font-weight: normal;\n        color: #FFF;\n        -webkit-border-radius: 3px;\n        -moz-border-radius: 3px;\n        border-radius: 3px;\n        padding: 2px 3px;\n        margin-right: 5px;\n        word-break: break-all;\n        vertical-align: top;\n    }\n\n    #project-ticket-detail .topic-content{\n        margin: 0 5px;\n    }\n\n    .public-project-view #project-ticket-detail-wrapper{\n        width: 818px;\n    }\n\n    #project-ticket-detail .ticket-comments-header{\n        margin: 20px 0;\n        padding-bottom: 10px;\n        border-bottom: 1px solid #CCC;\n        font-size: 16px;\n        color: #333;\n    }\n\n    #project-ticket-detail .ticket-comments-header .dropdown{\n        font-size: 14px;\n        padding-bottom: 5px;\n    }\n\n    #project-ticket-detail .ticket-comments-header .dropdown .menu .item{\n        padding: 8px!important;\n    }\n\n    #project-ticket-detail .ticket-comments-header .dropdown .menu .item .checkmark.icon{\n        opacity: 0;\n        margin-right: 0;\n    }\n\n    #project-ticket-detail .ticket-comments-header .dropdown .menu .item.active .checkmark.icon{\n        opacity: 1;\n    }\n\n    #project-ticket-detail .mr10 i.icon{\n        margin-right: 0;\n    }\n\n</style>\n\n<div class="project-ticket-wrapper" ng-controller="ProjectSupportTicketCtrl">\n\n    <div id="project-ticket-detail" bindonce="ticket">\n        <div class="topic-title">\n            <h2 class="title" bo-html="\'[\' + ticket_status[ticket.status] + \'] \' + ticket.title"></h2>\n\n            <div class="toolbar">\n                <span class="mr10" bo-text="\'#\'+ticket.id"></span>\n                <span class="mr10 owner"><a class="gray" ng-href="{{ USER.path }}" ng-bind="USER.name"></a></span>\n                <span class="mr10 time"><i class="time icon"></i><span cg-friendly-time="ticket.created_at"></span></span>\n                <span class="mr10 comment"><i class="chat outline icon"></i><span ng-bind="ticket.child_count + \'条回复\'"></span></span>\n                <!--<span class="mr10 action" ng-if="canEdit()">\n                    <a class="gray" ng-href="{{PROJECT.project_path}}/topic/{{ticket.id}}/edit"><i class="edit icon"></i>编辑</a>\n                </span>\n                <span class="mr10 action">-->\n                    <!--<a class="gray" href="javascript:void(0);">-->\n                        <!--<i class="remove icon"></i>关闭工单</a>-->\n                <!--</span>-->\n            </div>\n        </div>\n        <div class="topic-content">\n            <div class="markdown content" cg-highlight="ticket.description" ng-if="ticket.description"></div>\n            <div class="empty list" ng-if="detail_loading"><i class="loading icon"></i>正在加载讨论内容...</div>\n        </div>\n        <div class="ticket-comments-header">\n            评论<span ng-if="!detail_loading">（<span ng-bind="ticket.child_count"></span>）</span>\n\n            <a href="javascript:void(0);" ng-click="refreshComments()" class="coding floated right"><i class="refresh icon"></i></a>\n            <!--<div class="ui simple dropdown coding floated right" ng-if="comments.length > 0">-->\n                <!--排序-->\n                <!--<i class="dropdown icon" style="margin-left: 5px;"></i>-->\n\n                <!--<div class="menu" style="left: -40px;">-->\n                    <!--<a class="item" href="javascript:void(0);"-->\n                       <!--ng-class="{active: comment_type === 0}"-->\n                       <!--ng-click="loadCommentsOfType(0);">-->\n                        <!--<i class="checkmark icon"></i>-->\n                        <!--最旧评论-->\n                    <!--</a>-->\n                    <!--<a class="item" href="javascript:void(0);"-->\n                       <!--ng-class="{active: comment_type === 1}"-->\n                       <!--ng-click="loadCommentsOfType(1);">-->\n                        <!--<i class="checkmark icon"></i>-->\n                        <!--最新评论-->\n                    <!--</a>-->\n                <!--</div>-->\n            <!--</div>-->\n        </div>\n    </div>\n\n    <div class="comments" id="ticket-comments">\n        <div class="comment" ng-repeat="item in comments">\n            <a>\n                <img class="ui avatar image" height="32" ng-if="item.author.photo" ng-src="{{ item.author.photo }}">\n            </a>\n\n            <div class="content-wrapper">\n                <div class="content markdown" cg-highlight="item.html_content">\n                </div>\n                <div class="time">\n                    <span class="mr10">\n                        <a class="gray" ng-if="item.author.email !== USER.email" title="客服：{{ item.author.agent_display_name }}" ng-bind="item.author.agent_display_name || item.author.name"></a>\n                        <a class="gray" ng-if="item.author.email === USER.email" ng-href="{{ USER.path }}" ng-bind="USER.name"></a>\n                    </span>\n                    <span class="mr10">\n                        <i class="time icon"></i><span cg-friendly-time="item.created_at"></span>\n                    </span>\n                    <span class="mr10" ng-if="USER">\n                        <a class="gray reply" href="javascript:void(0);" ng-click="replyTopic(item);" cg-scroll-to="topic-comment-editor">\n                            <!--<i class="chat outline icon"></i>回复-->\n                        </a>\n                    </span>\n                    <!--<span class="mr10" ng-if="false">-->\n                        <!--<a class="gray remove" href="javascript:void(0);" ng-click="deleteComment(item);">-->\n                            <!--<i class="remove icon"></i>删除-->\n                        <!--</a>-->\n                    <!--</span>-->\n                </div>\n            </div>\n        </div>\n        <div class="empty list" ng-if="comments_loaded && comments.length == 0"><i class="coffee icon"></i>还没人评论<span ng-if="USER">，来一发？</span></div>\n        <div class="empty list" ng-if="comments_loading && comments.length === 0"><i class="loading icon"></i>正在加载评论~</div>\n        <!--<div cg-pager="{{topic_detail_pager_id}}"></div>-->\n    </div>\n\n    <form id="comment-form" ng-if="USER">\n        <div id="ticket-comment-editor" cg-light-md-editor="commentTicket" data-ng-model="ticket_comment" at-member="PROJECT.id" project_dependency="PROJECT">\n        </div>\n    </form>\n\n</div>'),
        $templateCache.put("app/project/setting/webhook/edit.html", '<div class="webhooks" ng-controller="ProjectWebHookEditController">\n    <div class="git-main-form">\n        <form class="ui form setting" ng-submit="submit(hook)">\n            <div class="field">\n                <div class="input">\n                    <input type="text" ng-model="hook.hook_url" name="hook_url" placeholder="url">\n                </div>\n            </div>\n            <div class="field">\n                <div class="input">\n                    <input type="text" ng-model="hook.token" name="token" placeholder="token(非必填)">\n                </div>\n            </div>\n            <div class="field">\n                <table style="color: #666">\n                    <tr>\n                        <td><div class="ui toggle checkbox"><input type="checkbox" ng-model="hook.type_push" id="type_push"><label for="type_push">Push</label></div></td>\n                        <td><div class="ui toggle checkbox"><input type="checkbox" ng-model="hook.type_mr_pr" id="type_mr_pr"><label for="type_mr_pr">MR/PR</label></div></td>\n                        <td><div class="ui toggle checkbox"><input type="checkbox" ng-model="hook.type_topic" id="type_topic"><label for="type_topic">Topic</label></div></td>\n                    </tr>\n                    <tr>\n                        <td><div class="ui toggle checkbox"><input type="checkbox" ng-model="hook.type_member" id="type_member"><label for="type_member">Member</label></div></td>\n                        <td><div class="ui toggle checkbox"><input type="checkbox" ng-model="hook.type_document" id="type_document"><label for="type_document">Document</label></div></td>\n                        <td><div class="ui toggle checkbox"><input type="checkbox" ng-model="hook.type_task" id="type_task"><label for="type_task">Task</label></div></td>\n                    </tr>\n                    <tr>\n                        <td><div class="ui toggle checkbox"><input type="checkbox" ng-model="hook.type_watch" id="type_watch"><label for="type_watch">Watch</label></div></td>\n                        <td><div class="ui toggle checkbox"><input type="checkbox" ng-model="hook.type_star" id="type_star"><label for="type_star">Star</label></div></td>\n                    </tr>\n                </table>\n            </div>\n            <div>\n                <input ng-show="!submit_loading" type="submit" value="确定" class="ui dark gray medium submit button">\n\n                <div ng-show="submit_loading" class="ui dark gray medium submit button" style="width: 90px"><i class="loading icon" style="margin:0"></i></div>\n            </div>\n        </form>\n    </div>\n</div>'),
        $templateCache.put("app/project/setting/webhook/index.html", '<div class="webhooks" ng-controller="ProjectWebHookIndexController">\n    <div class="clearfix" style="padding-bottom: 12px;max-width:800px;min-width:800px">\n        <a href="/help/doc/git/webhook.html" target="_blank" style="float: right"><i class="icon help tip"></i></a>\n        <a class="ui small white button floated right" ng-href="{{PROJECT.project_path}}/setting/webhook/new">新建 Hook</a>\n    </div>\n    <div class="webhook-title">\n        <table>\n            <tr>\n                <td class="webhook-title url">地址</td>\n                <td class="webhook-title token">令牌</td>\n                <td class="webhook-title status">状态</td>\n                <td class="webhook-title oper">操作</td>\n            </tr>\n        </table>\n    </div>\n    <div ng-if="webHooks.length == 0">\n      <span style="font-size:12px;color:#333">\n        还未添加 WebHook 。<a ng-href="{{PROJECT.project_path}}/setting/webhook/new">点击添加</a>\n      </span>\n    </div>\n    <div ng-if="webHooks.length != 0" ng-repeat="hook in webHooks">\n        <div class="webhook">\n            <table>\n                <tr>\n                    <td class="webhook url">{{hook.hook_url}}</td>\n                    <td class="webhook token">{{hook.token || \'\'}}</td>\n                    <td class="webhook status">\n                        <i ng-if="hook.status == 1" class="checkmark green icon"></i>\n                        <i ng-if="hook.status != 1" class="remove red icon"></i>\n                    </td>\n                    <td class="webhook oper">\n                        <a class="ui small white button" ng-href="{{PROJECT.project_path}}/setting/webhook/edit/{{hook.id}}">修改</a>\n                        <a class="ui small white button" href="javascript:void(0);" ng-click="testWebhook(hook.id)">测试</a>\n                        <a href="javascript:void(0);" class="ui small white button" ng-click="deleteWebhook(hook.id)">删除</a>\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </div>\n\n    <div style="margin-top:30px;margin-bottom:10px">发送记录</div>\n    <div class="webhook-title">\n        <table>\n            <tr>\n                <td class="webhook-title send-time">发送时间</td>\n                <td class="webhook-title reason">触发原因</td>\n                <td class="webhook-title result">结果信息</td>\n                <td class="webhook-title url">地址</td>\n                <td class="webhook-title content">内容</td>\n            </tr>\n        </table>\n    </div>\n    <div ng-if="webHooks.length == 0">\n      <span style="font-size:12px;color:#333">\n        暂无发送记录\n      </span>\n    </div>\n    <div ng-if="webHookLogs.length != 0" ng-repeat="log in webHookLogs">\n        <div class="webhook">\n        <table>\n            <tr>\n                <td class="webhook send-time">\n                    <i ng-if="log.status == 1" class="checkmark green icon"></i>\n                    <i ng-if="log.status == 0" class="time yellow icon"></i>\n                    <i ng-if="log.status == -1" class="remove red icon"></i>\n                <time ng-if="log.status != 0" cg-friendly-time="log.send_at"></time>\n                <span ng-if="log.status == 0">待发送</span>\n                </td>\n                <td class="webhook reason">{{log.reason}}</td>\n                <td class="webhook result">{{log.result_msg}}</td>\n                <td class="webhook url">\n                <span ng-if="log.webhook_url">{{log.webhook_url}}</span>\n                <span ng-if="!log.webhook_url">WebHook 已删除</span>\n                </td>\n                <td class="webhook content">{{log.content}}</td>\n            </tr>\n        </table>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/project/setting/webhook/new.html", '<div class="webhooks" ng-controller="ProjectWebHookNewController">\n    <div class="git-main-form">\n        <form class="ui form setting" ng-submit="submit(hook)">\n            <div class="field">\n                <div class="input">\n                    <input type="text" ng-model="hook.hook_url" name="hook_url" placeholder="url">\n                </div>\n            </div>\n            <div class="field">\n                <div class="input">\n                    <input type="text" ng-model="hook.token" name="token" placeholder="token(非必填)">\n                </div>\n            </div>\n            <div class="field">\n                <table style="color: #666">\n                    <tr>\n                        <td><div class="ui toggle checkbox"><input type="checkbox" ng-model="hook.type_push" id="type_push"><label for="type_push">Push</label></div></td>\n                        <td><div class="ui toggle checkbox"><input type="checkbox" ng-model="hook.type_mr_pr" id="type_mr_pr"><label for="type_mr_pr">MR/PR</label></div></td>\n                        <td><div class="ui toggle checkbox"><input type="checkbox" ng-model="hook.type_topic" id="type_topic"><label for="type_topic">Topic</label></div></td>\n                    </tr>\n                    <tr>\n                        <td><div class="ui toggle checkbox"><input type="checkbox" ng-model="hook.type_member" id="type_member"><label for="type_member">Member</label></div></td>\n                        <td><div class="ui toggle checkbox"><input type="checkbox" ng-model="hook.type_document" id="type_document"><label for="type_document">Document</label></div></td>\n                        <td><div class="ui toggle checkbox"><input type="checkbox" ng-model="hook.type_task" id="type_task"><label for="type_task">Task</label></div></td>\n                    </tr>\n                    <tr>\n                        <td><div class="ui toggle checkbox"><input type="checkbox" ng-model="hook.type_watch" id="type_watch"><label for="type_watch">Watch</label></div></td>\n                        <td><div class="ui toggle checkbox"><input type="checkbox" ng-model="hook.type_star" id="type_star"><label for="type_star">Star</label></div></td>\n                    </tr>\n                </table>\n            </div>\n            <div>\n                <input ng-show="!submit_loading" type="submit" value="确定" class="ui dark gray medium submit button">\n\n                <div ng-show="submit_loading" class="ui dark gray medium submit button" style="width: 90px"><i class="loading icon" style="margin:0"></i></div>\n            </div>\n        </form>\n    </div>\n</div>'),
        $templateCache.put("app/public_projects/index.html", '<cg-new-year></cg-new-year>\n<div id="projects_index">\n    <div cg-multi-ad="[\'public_project_banner_1\',\'public_project_banner_2\',\'public_project_banner_3\']" speed="3000" width="100%" style="display: inline-block; margin-bottom: 10px;background: #F7F6F2">\n    </div>\n    <div class="list">\n        <ul>\n            <div class="ui active loader" ng-if="loading"></div>\n            <li class="project" ng-repeat="project in projects">\n                <div class="thumb">\n                    <a ng-href="{{project.project_path}}"><img ng-src="{{project.icon || \'/static/d2ab4f6de747ad169160d3caaf82132e.png\'}}"></a>\n                </div>\n                <div class="info">\n                    <div class="name"><a ng-href="{{project.project_path}}">{{project.name}}</a></div>\n                    <div class="description">{{project.description || \'无项目描述\'}}</div>\n                    <div class="when">\n                           <span class="avatar">\n                              <img ng-src="{{project.owner_user_picture}}"></span>\n\n                        <span class="username" cg-bind-html="project.owner_user_home"></span>\n                        <span class="time">最后更新于\n                            <span cg-friendly-time="project.last_updated"></span>\n                        </span>\n                    </div>\n                    <div class="stat">\n                        <span><i class="icon fork code"></i>{{project.fork_count}}</span>\n                        <span><i class="icon unhide"></i>{{project.watch_count}}</span>\n                    </div>\n                </div>\n            </li>\n        </ul>\n        <div class="empty list center more" ng-click="loadMore()" ng-if="!over && projects.length > 0">\n            <i class="icon double angle down" ng-class="{\'loading\':loading,\'double angle down\':!loading}"></i>查看更多公开项目\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/qc/duplications.html", '<div ng-class="{\'public-project-view\': PROJECT.is_public}" ng-style="{\'display\':PROJECT.is_public?\'block\':\'initial\'}">\n    <div ng-include="\'app/git/public_view/inner_menu.html\'" ng-if="PROJECT.is_public"></div>\n    <cg-qc-versions username="{{username}}" project-name="{{project_name}}" project="PROJECT" current-ref="{{project_ref}}">\n\n    </cg-qc-versions>\n    <div class="container" ng-class="{\'public-qc-container\':PROJECT.is_public}" id="qc-container">\n        <cg-qc-task-info task="task" project="PROJECT" current-ref="{{project_ref}}" inner-menu="{{inner_menu}}"></cg-qc-task-info>\n        <cg-monkey-loading image-size="30" container-margin="120" ng-if="loading"></cg-monkey-loading>\n        <cg-qc-analysis-result task="task" project="PROJECT" ng-if="!loading"></cg-qc-analysis-result>\n        <div ng-if="task.task.status==3">\n            <section class="min-w">\n                <div class="issues code list">\n                    <div class="ui grid">\n                        <cg-qc-folders username="{{username}}" project-name="{{project_name}}" resource-key="resource_key" current-ref="project_ref" current-type="current_type" current-rule="current_rule" current-file="current_file" current-folder="current_folder" current-lang="current_lang" code-full="code_full" filename="filename" type="duplication" title="违规文件列表"></cg-qc-folders>\n                        <cg-qc-code username="{{username}}" project-name="{{project_name}}" resource-key="resource_key" current-ref="project_ref" current-type="current_type" current-rule="current_rule" current-file="current_file" current-folder="current_folder" current-lang="current_lang" code-full="code_full" filename="filename" type="duplication"></cg-qc-code>\n                    </div>\n                </div>\n            </section>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/qc/init.html", '<div ng-class="{\'public-project-view\': PROJECT.is_public}" ng-style="{\'display\':PROJECT.is_public?\'block\':\'initial\'}">\n    <div ng-include="\'app/git/public_view/inner_menu.html\'" ng-if="PROJECT.is_public"></div>\n    <cg-qc-versions username="{{username}}" project-name="{{project_name}}" project="PROJECT" current-ref="{{project_ref}}">\n\n    </cg-qc-versions>\n    <div class="container" ng-class="{\'public-qc-container\':PROJECT.is_public}" ng-class="{\'public-qc-container\':PROJECT.is_public}" id="qc-container">\n        <div class="qc init" ng-class="{\'public-qc-init\':PROJECT.is_public}">\n            <div class="ui error form segment" ng-class="{loading:isPosting}">\n                <div class="ui error message" ng-if="errorMsg">\n                    <div class="header">Tip</div>\n                    <p ng-bind-html="errorMsg"></p>\n                </div>\n                <div class="field">\n                    <label>项目版本</label>\n\n                    <input placeholder="项目版本，不填则为默认分支" type="text" name="projectVersion" ng-model="projectVersion">\n                </div>\n                <div class="two fields">\n                    <div class="field">\n                        <label>源码目录</label>\n                        <input placeholder="如src,src/main/java,根目录无需填写,多个目录请用逗号隔开,根目录无需填写" type="text" name="sources" ng-model="sources">\n                    </div>\n                    <div class="field"></div>\n                </div>\n                <div class="three fields">\n                    <div class="field">\n                        <label>项目编码</label>\n\n                        <div class="ui fluid selection dropdown" cg-dropdown="">\n                            <input placeholder="项目编码如UTF-8" type="text" name="sourceEncoding" ng-model="sourceEncoding" maxlength="20">\n\n                            <div class="menu">\n                                <div class="item" data-value="UTF-8" ng-click="sourceEncoding=\'UTF-8\'" ng-class="{\'active\':sourceEncoding==\'UTF-8\'}">UTF-8\n                                </div>\n                                <div class="item" data-value="GBK" ng-click="sourceEncoding=\'GBK\'" ng-class="{\'active\':sourceEncoding==\'GBK\'}">GBK\n                                </div>\n                                <div class="item" data-value="UTF-16" ng-click="sourceEncoding=\'UTF-16\'" ng-class="{\'active\':sourceEncoding==\'UTF-16\'}">UTF-16\n                                </div>\n                                <div class="item" data-value="GB2312" ng-click="sourceEncoding=\'GB2312\'" ng-class="{\'active\':sourceEncoding==\'GB2312\'}">GB2312\n                                </div>\n                                <div class="item" data-value="GB18030" ng-click="sourceEncoding=\'GB18030\'" ng-class="{\'active\':sourceEncoding==\'GB18030\'}">GB18030\n                                </div>\n                                <div class="item" data-value="ISO-8859-1" ng-click="sourceEncoding=\'ISO-8859-1\'" ng-class="{\'active\':sourceEncoding==\'ISO-8859-1\'}">ISO-8859-1\n                                </div>\n                                <div class="item" data-value="UTF-16BE" ng-click="sourceEncoding=\'UTF-16BE\'" ng-class="{\'active\':sourceEncoding==\'UTF-16BE\'}">UTF-16BE\n                                </div>\n                                <div class="item" data-value="UTF-16LE" ng-click="sourceEncoding=\'UTF-16LE\'" ng-class="{\'active\':sourceEncoding==\'UTF-16LE\'}">UTF-16LE\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="three fields">\n                    <div class="field">\n                        <label>项目语言</label>\n\n                        <div class="ui fluid selection dropdown" cg-dropdown="changeLanguage" cg-on-change="changeLanguage">\n                            <div class="text">选择语言</div>\n                            <i class="dropdown icon"></i>\n                            <input type="hidden" name="language" ng-model="language">\n\n                            <div class="menu">\n                                <div class="item" data-value="java">Java</div>\n                                <div class="item" data-value="js">Javascript</div>\n                                <div class="item" data-value="php">PHP</div>\n                                <div class="item" data-value="cs">C#</div>\n                                <div class="item" data-value="grvy">Groovy</div>\n                                <div class="item" data-value="xml">XML</div>\n                                <div class="item" data-value="web">Web</div>\n                                <div class="item" data-value="flex">Flex</div>\n                                <div class="item" data-value="erlang">Erlang</div>\n                                <div class="item" data-value="css">Css</div>\n                                <div class="item" data-value="py">Python</div>\n                                <div class="item" data-value="ruby">Ruby</div>\n                                <div class="item" data-value="go">Go</div>\n                                <div class="item" data-value="c++">C/C++</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="field"></div>\n                    <div class="field"></div>\n                </div>\n                <div class="ui blue submit button" ng-click="submitAnalysisTask()" ng-if="!isPosting">提交分析任务</div>\n                <div class="ui blue submit button" ng-if="isPosting">正在提交中...</div>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/qc/issues.html", '<div ng-class="{\'public-project-view\': PROJECT.is_public}" ng-style="{\'display\':PROJECT.is_public?\'block\':\'initial\'}">\n    <div ng-include="\'app/git/public_view/inner_menu.html\'" ng-if="PROJECT.is_public"></div>\n    <cg-qc-versions username="{{username}}" project-name="{{project_name}}" project="PROJECT" current-ref="{{project_ref}}">\n\n    </cg-qc-versions>\n    <div class="container" ng-class="{\'public-qc-container\':PROJECT.is_public}" id="qc-container">\n        <cg-qc-task-info task="task" project="PROJECT" current-ref="{{project_ref}}" inner-menu="{{inner_menu}}"></cg-qc-task-info>\n        <cg-monkey-loading image-size="30" container-margin="120" ng-if="loading"></cg-monkey-loading>\n        <cg-qc-analysis-result task="task" project="PROJECT" ng-if="!loading"></cg-qc-analysis-result>\n        <div ng-if="task.task.status==3">\n            <cg-qc-rules username="{{username}}" project-name="{{project_name}}" resource-key="resource_key" current-ref="project_ref" current-type="current_type" current-rule="current_rule">\n\n            </cg-qc-rules>\n            <section class="min-w">\n                <div class="issues code list">\n                    <div class="ui grid">\n                        <cg-qc-folders username="{{username}}" project-name="{{project_name}}" resource-key="resource_key" current-ref="project_ref" current-type="current_type" current-rule="current_rule" current-file="current_file" current-folder="current_folder" current-lang="current_lang" code-full="code_full" filename="filename" type="issue" title="违规文件列表"></cg-qc-folders>\n                        <cg-qc-code username="{{username}}" project-name="{{project_name}}" resource-key="resource_key" current-ref="project_ref" current-type="current_type" current-rule="current_rule" current-file="current_file" current-folder="current_folder" current-lang="current_lang" code-full="code_full" filename="filename" type="issue"></cg-qc-code>\n                    </div>\n                </div>\n            </section>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/qc/report.html", '<div ng-class="{\'public-project-view\': PROJECT.is_public}" ng-style="{\'display\':PROJECT.is_public?\'block\':\'initial\'}">\n<div ng-include="\'app/git/public_view/inner_menu.html\'" ng-if="PROJECT.is_public"></div>\n<cg-qc-versions username="{{username}}" project-name="{{project_name}}" project="PROJECT" current-ref="{{project_ref}}">\n\n</cg-qc-versions>\n\n<div class="container" ng-class="{\'public-qc-container\':PROJECT.is_public}" id="qc-container">\n<cg-qc-task-info task="task" project="PROJECT" current-ref="{{project_ref}}" inner-menu="{{inner_menu}}"></cg-qc-task-info>\n<cg-monkey-loading image-size="30" container-margin="120" ng-if="loading"></cg-monkey-loading>\n<cg-qc-analysis-result task="task" project="PROJECT" ng-if="!loading"></cg-qc-analysis-result>\n<div class="ui vertically divided grid qc-dashboard min-w" ng-if="task.task.status==3">\n<div class="two column row">\n<div class="column">\n    <section>\n        <div class="report-box">\n            <h3 class="report-header">\n                <span class="title">大小指标&nbsp;<i class="help icon" data-html="<div class=\'pointer\'></div><div class=\'content\'>{{help.size.html}}</div>" cg-help-popup="\'hover\'"></i></span>\n                <span class="num">{{dashboard.lines.formatValue || 0}}</span><span class="desc">（总行数）</span></h3>\n\n            <div class="report-content clearfix three column">\n                <div class="box-item vr-dashes hb-dashes">\n                    <p>{{dashboard.ncloc.formatValue || 0}}</p>\n\n                    <p>有效代码行数</p>\n                </div>\n                <div class="box-item vr-dashes hb-dashes">\n                    <p>{{dashboard.statements.formatValue || 0}}</p>\n\n                    <p>语句</p>\n                </div>\n                <div class="box-item hb-dashes">\n                    <p>{{dashboard.classes.formatValue || 0}}</p>\n\n                    <p>类</p>\n                </div>\n                <div class="box-item vr-dashes">\n                    <p>{{dashboard.packages.formatValue || 0}}</p>\n\n                    <p>包</p>\n                </div>\n                <div class="box-item vr-dashes">\n                    <p>{{dashboard.functions.formatValue || 0}}</p>\n\n                    <p>方法</p>\n                </div>\n                <div class="box-item">\n                    <p>{{dashboard.accessors.formatValue || 0}}</p>\n\n                    <p>存取(Getter/Setter)</p>\n                </div>\n            </div>\n        </div>\n    </section>\n    <section>\n        <div class="report-box">\n            <h3 class="report-header"><span class="title">文档和注释&nbsp;<i class="help icon" data-html="<div class=\'pointer\'></div><div class=\'content\'>{{help.document.html}}</div>" cg-help-popup="\'hover\'"></i></span>\n                   <span class="num">{{dashboard.comment_lines.formatValue || 0}}</span><span class="desc">（注释行数）</span>\n                <span class="num">{{dashboard.public_api.formatValue || 0}}</span><span class="desc">（公共API数）</span>\n            </h3>\n\n            <div class="report-content clearfix two column">\n                <div class="box-item">\n                    <div cg-qc-arc="dashboard.comment_lines_density_arc" cg-arc-x="20" cg-arc-y="25" ng-if="dashboard.comment_lines_density_arc" cg-arc-w="250" cg-arc-h="150" cg-arc-r="45" cg-show-border="true" cg-v-font-size="\'20px\'" cg-c-font-size="\'13px\'" cg-dot-radius="3" cg-center-comment="\'注释\'"></div>\n                </div>\n                <div class="box-item">\n                    <div cg-qc-arc="dashboard.public_documented_api_density_arc" cg-arc-x="20" cg-arc-y="25" ng-if="dashboard.public_documented_api_density_arc" cg-arc-w="250" cg-arc-h="150" cg-arc-r="45" cg-show-border="true" cg-v-font-size="\'20px\'" cg-c-font-size="\'13px\'" cg-dot-radius="3" cg-center-comment="\'Public\'"></div>\n                </div>\n            </div>\n        </div>\n    </section>\n    <section>\n        <div class="report-box">\n            <h3 class="report-header"><span class="title">违反规则&nbsp;<i class="help icon" data-html="<div class=\'pointer\'></div><div class=\'content\'>{{help.issues.html}}</div>" cg-help-popup="\'hover\'"></i></span><span class="num">{{dashboard.violations.formatValue || 0}}</span><span class="desc">（共存在问题）</span></h3>\n\n            <div class="report-content clearfix one column" ng-if="dashboard">\n                <div class="box-item">\n                    <div class="rect" cg-qc-rect="dashboard.blocker_violations.value" cg-width="200" ng-if="dashboard.minor_violations" cg-max-violation="dashboard.violations.value"></div>\n                    <i class="red ban circle icon"></i><span class="label">阻断错误</span><span class="num"><a ng-href="/u/{{username}}/p/{{project_name}}/qc/issues/{{project_ref}}?type=blocker">{{dashboard.blocker_violations.formatValue\n                    || 0}}</a></span></div>\n                <div class="box-item">\n                    <div class="rect" cg-qc-rect="dashboard.critical_violations.value" cg-width="200" ng-if="dashboard.minor_violations" cg-max-violation="dashboard.violations.value"></div>\n                    <i class="red frown icon"></i><span class="label">严重问题</span><span class="num"><a ng-href="/u/{{username}}/p/{{project_name}}/qc/issues/{{project_ref}}?type=critical">{{dashboard.critical_violations.formatValue\n                    || 0}}</a></span></div>\n                <div class="box-item">\n                    <div class="rect" cg-qc-rect="dashboard.major_violations.value" cg-width="200" ng-if="dashboard.minor_violations" cg-max-violation="dashboard.violations.value"></div>\n                    <i class="green attention icon"></i><span class="label">主要问题</span><span class="num"><a ng-href="/u/{{username}}/p/{{project_name}}/qc/issues/{{project_ref}}?type=major">{{dashboard.major_violations.formatValue\n                    || 0}}</a></span></div>\n                <div class="box-item">\n                    <div class="rect" cg-qc-rect="dashboard.minor_violations.value" cg-width="200" ng-if="dashboard.minor_violations" cg-max-violation="dashboard.violations.value"></div>\n                    <i class="gray exclamation icon"></i><span class="label">次要问题</span><span class="num"><a ng-href="/u/{{username}}/p/{{project_name}}/qc/issues/{{project_ref}}?type=minor">{{dashboard.minor_violations.formatValue\n                    || 0}}</a></span></div>\n                <div class="box-item">\n                    <div class="rect" cg-qc-rect="dashboard.info_violations.value" cg-width="200" ng-if="dashboard.minor_violations" cg-max-violation="dashboard.violations.value"></div>\n                    <i class="info icon"></i><span class="label">提示信息</span><span class="num"><a ng-href="/u/{{username}}/p/{{project_name}}/qc/issues/{{project_ref}}?type=info">{{dashboard.info_violations.formatValue\n                    || 0}}</a></span></div>\n            </div>\n        </div>\n    </section>\n</div>\n<div class="column">\n    <section>\n        <div class="report-box">\n            <h3 class="report-header"><span class="title">复杂度&nbsp;<i class="help icon" data-html="<div class=\'pointer\'></div><div class=\'content\'>{{help.complexity.html}}</div>" cg-help-popup="\'hover\'"></i></span><span class="num">{{dashboard.complexity.formatValue || 0}}</span><span class="desc">（整体复杂度）</span></h3>\n\n            <div class="report-content clearfix two column">\n                <p class="alone">类均值：{{dashboard.class_complexity.formatValue || 0}}</p>\n\n                <div class="box-item vr-dashes">\n                    <p class="">方法均值：{{dashboard.function_complexity.formatValue || 0}}</p>\n\n                    <p>\n\n                    </p><p class="chart" cg-qc-chart="dashboard.function_complexity_distribution" ng-if="dashboard.function_complexity_distribution" cg-chart-w="180" cg-chart-h="90" cg-chart-margin-left="40" cg-chart-margin-top="20" cg-chart-margin-right="10" cg-chart-margin-bottom="20">\n                    </p>\n                    \n\n                    <p>复杂度(x)/方法数量(y)</p>\n                </div>\n                <div class="box-item">\n                    <p>文件均值：{{dashboard.file_complexity.formatValue || 0}}</p>\n\n                    <p class="chart" cg-qc-chart="dashboard.file_complexity_distribution" ng-if="dashboard.file_complexity_distribution" cg-chart-w="180" cg-chart-h="90" cg-chart-margin-left="40" cg-chart-margin-top="20" cg-chart-margin-right="10" cg-chart-margin-bottom="20">\n                    </p>\n\n                    <p>复杂度(x)/文件数量(y)</p>\n                </div>\n            </div>\n        </div>\n    </section>\n    <section ng-if="false">\n        <div class="report-box">\n            <h3 class="report-header"><span class="title">测试覆盖率&nbsp;<i class="help icon" data-html="<div class=\'pointer\'></div><div class=\'content\'>{{help.coverage.html}}</div>" cg-help-popup="\'hover\'"></i></span><span class="num">{{dashboard.tests.formatValue||0}}</span><span class="desc">（运行测试总数）</span>\n                        <span class="num">{{dashboard.test_execution_time.formatValue || 0}}</span><span class="desc">（运行测试耗时）</span></h3>\n\n            <div class="report-content clearfix two-split column">\n                <div class="box-item">\n                    <div cg-qc-arc="coverage.test_density_arc" cg-arc-x="105" cg-arc-y="55" cg-arc-w="300" cg-arc-h="200" cg-arc-r="45" cg-show-border="true" cg-v-font-size="\'18px\'" cg-c-font-size="\'13px\'" cg-dot-radius="3" cg-center-comment="\'测试\'" ng-if="dashboard.test_density_arc"></div>\n                </div>\n                <div class="box-item">\n                    <div cg-qc-arc="coverage.branch_coverage_arc" cg-arc-x="30" cg-arc-y="40" cg-arc-w="150" cg-arc-h="100" cg-arc-r="20" cg-show-border="true" cg-v-font-size="\'16px\'" cg-c-font-size="\'12px\'" cg-dot-radius="2" cg-center-comment="\'\'" ng-if="dashboard.branch_coverage_arc"></div>\n                    <div cg-qc-arc="coverage.line_coverage_arc" cg-arc-x="30" cg-arc-y="40" cg-arc-w="150" cg-arc-h="100" cg-arc-r="20" cg-show-border="true" cg-v-font-size="\'16px\'" cg-c-font-size="\'12px\'" cg-dot-radius="2" cg-center-comment="\'\'" ng-if="dashboard.branch_coverage_arc"></div>\n                </div>\n            </div>\n        </div>\n    </section>\n    <section>\n        <div class="report-box">\n            <h3 class="report-header"><span class="title">重复率&nbsp;<i class="help icon" data-html="<div class=\'pointer\'></div><div class=\'content\'>{{help.duplication.html}}</div>" cg-help-popup="\'hover\'"></i></span><span class="num">{{dashboard.duplicated_lines_density.formatValue || \'0%\'}}</span><span class="desc">（总重复率）</span></h3>\n\n            <div class="report-content clearfix three column">\n                <div class="box-item vr-dashes">\n                    <p><a ng-href="/u/{{username}}/p/{{project_name}}/qc/duplications/{{project_ref}}">{{dashboard.duplicated_lines.formatValue\n                        || 0}}行</a>\n                    </p>\n\n                    <p>重复行数</p>\n                </div>\n                <div class="box-item vr-dashes">\n                    <p><a ng-href="/u/{{username}}/p/{{project_name}}/qc/duplications/{{project_ref}}">{{dashboard.duplicated_blocks.formatValue\n                        || 0}}块</a>\n                    </p>\n\n                    <p>重复块数</p>\n                </div>\n                <div class="box-item">\n                    <p><a ng-href="/u/{{username}}/p/{{project_name}}/qc/duplications/{{project_ref}}">{{dashboard.duplicated_files.formatValue\n                        || 0}}文件</a>\n                    </p>\n\n                    <p>重复文件数</p>\n                </div>\n            </div>\n        </div>\n    </section>\n</div>\n</div>\n</div>\n</div>\n</div>'),
        $templateCache.put("app/search/search.html", '<div id="search-body">\n  <div class="search-input">\n    <div class="ui action large input">\n        <a class="project-label gray" ng-href="{{ search_project.project_path }}" ng-if="search_project">\n            <img width="36" ng-src="{{ search_project.icon }}">\n            <span ng-bind="search_project[\'owner_user_name\'] + \'/\' + search_project.name"></span>\n        </a>\n        <input id="page-search-input" type="text" ng-model="keyword" cg-enter="gotoSearch(keyword)" cg-esc-blur cg-auto-focus>\n        <a class="ui large gray button" ng-click="gotoSearch(keyword)">搜索</a>\n    </div>\n  </div>\n  <div class="center empty list" ng-show="allPageLoading">\n    <i class="loading icon"></i>\n    读取中\n  </div>\n  <div ng-show="!allPageLoading">\n    <div style="margin-top: 10px" ng-if="simple_key_word">您要搜索的是不是“\n        <a href="javascript:void(0)" ng-click="gotoSearch(simple_key_word)">{{simple_key_word}}</a>”\n    </div>\n    <div class="search-tab">\n      <div class="ui small tabular menu" ng-class="{\'project-search\': search_project}">\n          <a class="item project" ng-class="{active:tab == \'project\'}" ng-click="changeTab(\'project\')">\n              项目 <span class="item-num">{{projects.totalRow || 0}}</span>\n          </a>\n          <a class="item topic" ng-class="{active:tab == \'topic\'}" ng-click="changeTab(\'topic\')">\n              讨论 <span class="item-num">{{project_topics.totalRow || 0}}</span>\n          </a>\n          <a class="item task" ng-show="USER" ng-class="{active:tab == \'task\'}" ng-click="changeTab(\'task\')">\n              任务 <span class="item-num">{{tasks.totalRow || 0}}</span>\n          </a>\n          <a class="item tweet" ng-class="{active:tab == \'tweet\'}" ng-click="changeTab(\'tweet\')">\n              冒泡 <span class="item-num">{{tweets.totalRow || 0}}</span>\n          </a>\n          <a class="item friend" ng-show="USER" ng-class="{active:tab == \'friend\'}" ng-click="changeTab(\'friend\')">\n              好友 <span class="item-num">{{friends.totalRow || 0}}</span>\n          </a>\n      </div>\n    </div>\n\n\n    <!-- project -->\n    <div class="search-content" ng-show="tab == \'project\' && key.length > 0">\n      <div class="result" ng-if="key.length !== 0">共搜索到 {{projects.totalRow || 0}} 个与 "{{key}}" 相关的项目</div>\n      <div ng-repeat="project in projects.list" class="search-item">\n        <div class="thumb"><a ng-href="{{project.project_path}}"><img ng-src="{{project.icon}}"></a></div>\n        <div class="info">\n          <div class="name ellipsis" ng-if="project.name">\n              <a ng-href="{{project.project_path}}" cg-search-highlight="project.name"></a>\n          </div>\n          <div class="description ellipsis" cg-search-highlight="project.description"></div>\n          <div class="when">\n            <span class="avatar"><img ng-src="{{project.owner_user_picture}}"></span>\n            <span class="username" cg-bind-html="project.owner_user_home"></span>\n            <span class="time">最后更新于 <span cg-friendly-time="project.updated_at"></span></span>\n          </div>\n        </div>\n        <div class="stat">\n          <span><i class="icon fork code"></i>{{project.fork_count | friendlyNumber}}</span>\n          <span><i class="icon unhide"></i>{{project.watch_count | friendlyNumber}}</span>\n        </div>\n      </div>\n      <a class="down center more" ng-show="hasMore(projects) && !loading" href="javascript:void(0);" ng-click="loadMoreProjects()">显示更多</a>\n      <div ng-show="hasMore(projects) && loading" class="center empty list"><i class="loading icon"></i>读取中</div>\n    </div>\n\n\n    <!-- topic -->\n    <div class="search-content" ng-show="tab == \'topic\' && key.length > 0">\n      <div class="result">共搜索到 {{project_topics.totalRow || 0}} 个与 "{{key}}" 相关的讨论</div>\n      <div ng-repeat="topic in project_topics.list" class="search-item">\n        <div class="thumb-avatar"><a ng-href="{{topic.owner.path}}"><img ng-src="{{topic.owner.avatar}}"></a></div>\n        <div class="info">\n          <div class="name"><a ng-href="{{topic.project.project_path}}/topic/{{topic.id}}" cg-show-more="topic.title" can-show-more="false" limit-to="48"></a></div>\n          <div class="when2">\n            <span class="username"><a ng-href="{{topic.owner.path}}">{{topic.owner.name}}</a></span>\n            <span class="time"><i class="icon time" style="margin: 0"></i> <span cg-friendly-time="topic.created_at"></span></span>\n          </div>\n        </div>\n      </div>\n      <a class="down center more" ng-show="hasMore(project_topics) && !loading" href="javascript:void(0);" ng-click="loadMoreProjectTopics()">显示更多</a>\n      <div ng-show="hasMore(project_topics) && loading" class="center empty list"><i class="loading icon"></i>读取中</div>\n    </div>\n\n    <!-- task -->\n    <div class="search-content" ng-show="tab == \'task\' && key.length > 0 && USER">\n      <div class="result">共搜索到 {{tasks.totalRow || 0}} 个与 "{{key}}" 相关的任务</div>\n      <div ng-repeat="task in tasks.list" class="search-item">\n        <div class="thumb-avatar"><a ng-href="{{task.owner.path}}"><img ng-src="{{task.owner.avatar}}"></a></div>\n        <div class="info">\n          <div class="name"><a ng-href="{{task.project.project_path}}/task/{{task.id}}" cg-show-more="task.content" can-show-more="false" limit-to="48"></a></div>\n          <div class="when2">\n            <!-- <span class="avatar"><img ng-src="{{project.owner_user_picture}}"></span> -->\n            <span class="username"><a ng-href="{{task.owner.path}}">{{task.owner.name}}</a></span>\n            <span class="time"><i class="icon time" style="margin: 0"></i> <span cg-friendly-time="task.created_at"></span></span>\n          </div>\n        </div>\n      </div>\n      <a class="down center more" ng-show="hasMore(tasks) && !loading" href="javascript:void(0);" ng-click="loadMoreTasks()">显示更多</a>\n      <div ng-show="hasMore(tasks) && loading" class="center empty list"><i class="loading icon"></i>读取中</div>\n    </div>\n\n    <!-- pp -->\n    <div class="search-content" ng-show="tab == \'tweet\' && key.length > 0">\n      <div class="result">共搜索到 {{tweets.totalRow || 0}} 个与 "{{key}}" 相关的冒泡</div>\n      <div ng-repeat="tweet in tweets.list" class="search-item">\n        <div class="thumb-avatar"><a ng-href="{{tweet.owner.path}}"><img ng-src="{{tweet.owner.avatar}}"></a></div>\n        <div class="info">\n          <div class="name"><a ng-href="{{tweet.path}}" ng-init="content = htmlToPlaintext(tweet.content);" cg-show-more="content" can-show-more="false" limit-to="48"></a></div>\n          <div class="when2">\n            <span class="username"><a ng-href="{{tweet.owner.path}}">{{tweet.owner.name}}</a></span>\n            <span class="time"><i class="icon time" style="margin: 0"></i> <span cg-friendly-time="tweet.created_at"></span></span>\n            <span>\n              <a ng-href="{{tweet.path}}" style="margin:0 0 0 5px;color:#666">\n                  <i class="chat outline icon" style="margin:0px 0px"></i>\n                  {{tweet.comments || 0}}</a>\n            </span>\n            &nbsp;&nbsp;\n            <span style="cursor: pointer; margin:0 0 0 5px;color:#666">\n               <i class="heart icon" ng-class="{\'empty\' : !tweet.liked,\'red\': tweet.liked}" style="margin:0px 0px"></i>\n                {{tweet.likes || 0}}\n            </span>\n          </div>\n        </div>\n      </div>\n      <a class="down center more" ng-show="hasMore(tweets) && !loading" href="javascript:void(0);" ng-click="loadMoreTweets()">显示更多</a>\n      <div ng-show="hasMore(tweets) && loading" class="center empty list"><i class="loading icon"></i>读取中</div>\n    </div>\n\n    <!-- friend -->\n    <div class="search-content" ng-show="tab == \'friend\' && key.length > 0 && USER">\n      <div class="result">共搜索到 {{friends.totalRow || 0}} 个与 "{{key}}" 相关的好友</div>\n      <div ng-repeat="friend in friends.list" class="search-item">\n        <div class="thumb-avatar"><a ng-href="{{friend.path}}"><img ng-src="{{friend.avatar}}"></a></div>\n        <div class="info">\n          <div class="name"><a ng-href="{{friend.path}}" cg-search-highlight="friend.name"></a></div>\n          <div class="description">{{friend.tags_str}}</div>\n          <div class="stat">\n            <div ng-if="user.id != USER.id" class="ui down black tiny button" ng-click="showSendMsgDialog(friend)">\n                给TA私信\n            </div>\n            <div ng-if="user.id == USER.id" class="ui green label self" style="line-height: 14px">\n                你自己\n            </div>\n          </div>\n        </div>\n      </div>\n      <a class="down center more" ng-show="hasMore(friends) && !loading" href="javascript:void(0);" ng-click="loadMoreFriends()">显示更多</a>\n      <div ng-show="hasMore(friends) && loading" class="center empty list">\n          <i class="loading icon"></i>玩命获取搜索结果中...\n      </div>\n    </div>\n\n    <div class="empty list center" ng-show="!loading && !key || key.length === 0">\n        <i class="coffee icon"></i>我是不会告诉你搜索需要先输入一个关键字的...\n    </div>\n\n  </div>\n</div>'),
        $templateCache.put("app/share/index.html", '<div id="shareSection">\n    <div class="empty center list" ng-if="showError">\n        Sorry，您访问的资源不存在或者您无权访问\n    </div>\n    <div ng-if="!loaded && !showError" class="empty center list">\n        <i class="icon loading"></i>正在加载...\n    </div>\n    <div ng-if="loaded && !showError">\n        <div class="share-header">\n            <div>{{file.name}}</div>\n        </div>\n        <div class="share-content">\n            <ng-include src="\'app/share/tpl/\' + resourceType + \'.html\'"></ng-include>\n            <div class="share-buttons">\n                <a class="button" ng-href="{{downloadUrl}}" target="_self"><i class="cloud download icon"></i></a>\n                <a class="button" ng-mouseenter="showDetail = true" ng-mouseleave="showDetail = false" href="javascript:void(0);"><i class="info circle icon"></i></a>\n            </div>\n            <div ng-show="showDetail" ng-mouseenter="showDetail = true" ng-mouseleave="showDetail = false" class="share-detail empty list">\n                <div>文件信息</div>\n                <div class="title">文件类型</div><div class="content">{{file.fileType}}</div>\n                <div class="title">文件大小</div><div class="content">{{file.size | bytes}}</div>\n                <div class="title">创建时间</div><div class="content" cg-friendly-time="file.created_at"></div>\n                <div class="title">最近更新</div><div class="content" cg-friendly-time="file.updated_at"></div>\n                <div class="title">创建人</div><div class="content">{{file.owner.name}}</div>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/share/tpl/attachment.html", '<style>\n    #pdf-preview {\n        display: inline-block;\n        position: relative\n    }\n\n    #pdf-preview .resize {\n        display: none;\n        position: absolute;\n        top: 5px;\n        right: 5px;\n        width: 50px;\n        height: 50px;\n        font-size: 25px;\n        text-align: center;\n        line-height: 55px;\n        cursor: pointer;\n        border-radius: 3px;\n        background: rgba(0,0,0,0.1);\n        color: #FFF;\n        z-index: 3;\n    }\n    #pdf-preview:hover .resize { display: inline; }\n\n    #pdf-preview .prev,\n    #pdf-preview .next {\n        position: absolute;\n        width: 50%;\n        height: 100%;\n        z-index: 2;\n        font-size: 50px;\n    }\n    #pdf-preview .prev { left: 0; }\n    #pdf-preview .next { right: 0; }\n    #pdf-preview .prev > i.icon { left: 20px; }\n    #pdf-preview .next > i.icon { right: 20px; }\n    #pdf-preview .button i.icon {\n        position: absolute;\n        top: 50%;\n        margin-top: -25px;\n        color: #FFF;\n    }\n    #pdf-preview .button:hover {\n        background: rgba(0,0,0,0.1);\n        cursor: pointer;\n    }\n\n    #pdf-preview .count {\n        border-radius: 3px;\n        position: absolute;\n        bottom: 5px;\n        left: 50%;\n        margin-left: -40px;\n        width: 100px;\n        font-size: 16px;\n        color: #FFF;\n        background: rgba(0,0,0,0.3);\n        text-align: center;\n    }\n</style>\n<div ng-switch="file_type">\n    <!-- txt -->\n    <div ng-switch-when="txt">\n        <pre style="word-wrap: break-word; white-space: pre-wrap">{{content}}</pre>\n    </div>\n\n    <!-- markdown -->\n    <div ng-switch-when="md">\n        <div class="markdown content" clip-copy-code="pre" cg-highlight="markdown_preview" cg-page-scroll></div>\n    </div>\n\n    <!-- 图片 -->\n    <div ng-switch-when="image" class="coding aligned center" style="margin-top:20px; margin-bottom:20px">\n        <img style="max-width: 820px" id="preview-image" ng-src="{{imageUrl}}?width=1440&type=2" alt="">\n    </div>\n\n    <!-- 二进制文件 -->\n    <a ng-switch-when="binary" href="{{downloadUrl}}" target="_self" class="binary-content">\n        <i class="cloud download icon"></i>\n        <div class="binary-type" cg-file-icon-src cg-file-icon="typeIcon"></div>\n    </a>\n\n    <!-- pdf -->\n    <div ng-switch-when="pdf" class="coding aligned center">\n        <div id="pdf-preview" ng-class="{full: pdf_resize == \'full\'}">\n            <div ng-click="togglePdfResize()" ng-if="!pdf_loading && pdf && screenfull_enabled">\n                <i class="resize icon" ng-class="{full: pdf_resize == \'small\', small: pdf_resize == \'full\'}"></i>\n            </div>\n            <div class="prev button" title="上一页" ng-click="loadPdf(pdf_page-1);" ng-if="!pdf_loading && pdf && pdf_page>1">\n                <i class="angle left icon"></i>\n            </div>\n            <div class="next button" title="下一页" ng-click="loadPdf(pdf_page+1);" ng-if="!pdf_loading && pdf && pdf_page<pdf.totalRow">\n                <i class="angle right icon"></i>\n            </div>\n            <div class="count">\n                <div ng-if="!pdf_loading && pdf">{{pdf_page}}/{{pdf.totalRow}}</div>\n                <div ng-if="pdf_loading">\n                    <i class="loading icon"></i>加载中...\n                </div>\n            </div>\n            <img style="display: block;max-width: 100%;margin:auto" ng-style="{\'height\': pdf_fullscreen_height}" ng-if="pdf" ng-src="{{pdf.url}}">\n        </div>\n    </div>\n\n    <!-- office -->\n    <div ng-switch-when="office" style="overflow:hidden">\n        <iframe ng-src="{{office_src}}" style="width:100%;height:700px;border:none;position:relative;margin-top:-80px"></iframe>\n    </div>\n</div>'),
        $templateCache.put("app/tags/index.html", '<style>\n\n</style>\n<div class="container" id="search_tags">\n    <div class="content">\n        <div class="tag_content">\n            <div class="header">寻找志同道合的人....</div>\n            <div class="ui divider"></div>\n            <div class="tag" bindonce ng-repeat="tag in TAGs" ng-class="{my_tag: tag.my, selected_tag: tag.name == TAG}">\n                <a href="javascript:void(0)" ng-click="loadUserByTag(tag.name)"><span>{{tag.name}}</span></a>\n            </div>\n        </div>\n        <div class="result_content">\n            <div class="header"><span class="target_tag">{{TAG}}</span></div>\n            <div class="ui default dark gray button right_tip" ng-click="loadUserByTag(TAG)">\n                <span><i class="refresh icon white"></i>换一组</span>\n            </div>\n            <div class="ui divider"></div>\n            <div class="empty center list" ng-if="user_loading">\n                <i class="loading icon"></i>正在加载数据...\n            </div>\n            <div class="empty center list" ng-if="users.length == 0 && !user_loading">\n                尚未有任何人标记为“<span>{{TAG}}</span>”\n            </div>\n            <div class="result_user" bindonce ng-repeat="user in users" ng-if="users.length > 0 && !user_loading">\n                <div class="avatar">\n                    <a bo-href="user.path">\n                        <img class="ui circular image avatar64" bo-src="user.avatar ">\n                    </a>\n                </div>\n                <div class="info">\n                    <a bo-href="user.path" bo-title="user.name"><span>{{user.name}}</span></a>\n                    <span class="join-in-at">\n                        <i class="time icon" style="margin: 0px 0px 0px 5px"></i>\n                        <span class="created-time" cg-friendly-time="user.created_at"></span>\n                        加入 Coding\n                    </span>\n                </div>\n                <div class="ui small white button right_tip" ng-if="!user.followed && USER && USER.global_key != user.global_key && !user.following && !following" ng-click="follow(user)">\n                    <span>+关注</span>\n                </div>\n                <div class="ui small white button right_tip" ng-if="!user.followed && USER && USER.global_key != user.global_key && !user.following && following">\n                    <span>+关注</span>\n                </div>\n                <div class="ui small white button right_tip" ng-if="!user.followed && USER && USER.global_key != user.global_key && user.following">\n                    <i class="icon" ng-class="{loading: user.following}" click="return false;"></i>\n                </div>\n                <span ng-if="user.followed && user.follow && USER" class="right_tip">\n                    <i class="green exchange icon"></i>相互关注\n                </span>\n                <span ng-if="user.followed && !user.follow && USER" class="right_tip">\n                    <i class="blue checkmark icon"></i>已关注\n                </span>\n                <div class="user_tag">\n                    <div class="tag" ng-repeat="tag in user.taggings track by $index" ng-class="{selected_tag: tag == TAG}">\n                        <a href="javascript:void(0)" ng-click="loadUserByTag(tag, 1)"><span>{{tag}}</span></a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/task/detail.html", '<div ng-controller="TaskDetailController">\n    <!-- 任务简单头部 -->\n    <div class="task-detail-header" style="min-width: 750px" ng-if="task" bindonce="task">\n        <div cg-task-detail-header="task" members="members" tags="tags"></div>\n    </div>\n    <div class="layout-content-right-menu" id="task-detail-menu" style="min-width: 750px;table-layout: auto">\n        <div class="layout-content">\n            <!-- 任务详情 -->\n            <div class="task-detail-description" style="min-width: 600px" ng-if="task">\n                <div class="icon">\n                    <i class="icon align right rotate180"></i>\n                </div>\n                <div class="detail">\n                    <cg-task-description class="task-description" ng-model="task" can-edit="true" show="!!task">\n                    </cg-task-description>\n                </div>\n            </div>\n            <!-- 关联资源 -->\n            <cg-task-resource-reference-list self="task">\n            </cg-task-resource-reference-list>\n            <!-- 动态筛选 -->\n            <div class="task-activity-filter">\n                <a class="gray" href="javascript:void(0);" ng-click="toggleTaskDetailUrl();">\n                    <i class="icon check-icon" ng-class="checkIconClass(just_show_comment)"></i>只看评论\n                </a>\n            </div>\n            <!-- 动态列表（包含评论）-->\n            <div class="task-detail-activity" ng-show="activities.length > 0">\n                <div class="task-activity" bindonce ng-repeat="activity in activities" ng-if="showActivity(activity);" cg-task-comment-activity="activity" data-anchor=".task-comment-creator" editor-id="project-task-comment-editor" on-remove="onRemove"></div>\n            </div>\n            <!-- 评论框 -->\n            <div class="task-comment-creator" id="task-comment-creator">\n                <div cg-light-md-editor="onComment" editor-id="project-task-comment-editor" at-item="task" at-context-type="\'task_comment\'" data-ng-model="content" img-compression="false" project_dependency="task.project"></div>\n            </div>\n        </div>\n        <!-- 右侧各种任务参数更新操作 -->\n        <div class="layout-menu" ng-controller="TaskDetailMenuController" style="width: 150px">\n            <div class="task-create-menu" ng-if="form">\n                <div class="task-menu-item">\n                    <header>引用 ID</header>\n                    <span class="selected-content" ng-bind="\'#\' + task.number"></span>\n                </div>\n                <div class="task-menu-item">\n                    <div ng-include="\'app/task/modal/snippets/detail/select_project.html\'"></div>\n                </div>\n                <div class="task-menu-item">\n                    <div ng-include="\'app/task/modal/snippets/detail/select_member.html\'"></div>\n                </div>\n                <div class="task-menu-item">\n                    <div ng-include="\'app/task/modal/snippets/detail/select_urgency.html\'"></div>\n                </div>\n                <div class="task-menu-item">\n                    <div ng-include="\'app/task/modal/snippets/detail/select_deadline.html\'"></div>\n                </div>\n                <div class="task-menu-item with-top-separator" style="margin-bottom: 5px">\n                    <div ng-include="\'app/task/modal/snippets/detail/select_label.html\'"></div>\n                </div>\n                <div class="task-menu-item with-top-separator task-detail-watchlist" id="task-member-selector" style="margin-bottom: 5px">\n                    <div ng-include="\'app/task/modal/snippets/detail/select_watcher.html\'"></div>\n                </div>\n                <div class="task-menu-item with-top-separator" style="padding-top: 10px; margin-top: 10px" ng-if="task.creator_id === USER.id">\n                    <a ng-click="removeTask(task)" href="javascript:void(0);" class="ui small red button">删除任务</a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/task/edit_tag.html", '<div id="task-all-tags" ng-controller="ProjectTaskEditTagController">\n    <div class="header" ng-click="toggleShowTags()" ng-class="{active: tagActive()}">\n        <i class="tags icon"></i>所有标签 <span ng-if="tags.length > 0" ng-bind="\'(\' + tags.length + \')\'"></span>\n        <a href="javascript:void(0);" class="coding floated right gray" ng-click="enableTagEditable($event);" ng-if="!tag_editable && can_edit">\n            <i class="setting icon"></i>\n        </a>\n        <a class="coding floated right gray" href="javascript:void(0);" ng-click="disableTagEditable($event);" ng-if="tag_editable">\n            <i class="ok circle icon"></i>\n        </a>\n    </div>\n    <div class="task-tags" ng-if="!tag_editable && just_show">\n        <a class="tag-item" href="javascript:void(0);" bindonce ng-repeat="tag in tags | orderBy:\'name\'" ng-class="{active: tag.id == task_label_id}" ng-click="selectTag(tag);">\n            <div class="tag">\n                <i class="tag icon" ng-style="{color: tag.color}"></i>\n            </div>\n            <div class="tag-description" ng-bind-html="tagName(tag)" title="标签 (未完成/全部任务)"></div>\n        </a>\n    </div>\n    <div id="task-tag-editor" ng-if="tag_editable">\n        <div class="added-tags">\n            <div class="tag" ng-repeat="tag in tags | orderBy:\'name\'">\n                <div class="ui input">\n                    <input type="text" ng-model="tag.reverted_name" cg-enter="updateTag(tag);">\n                </div>\n                <div class="tag-color" ng-model="tag" cg-tag-color-picker can-change-color="true" on-color-change="onColorChange">\n                </div>\n                <a class="remove gray tag-icon" href="javascript:void(0);" ng-click="removeTag(tag);">\n                    <i class="icon" ng-class="{\'red remove\': !tag.updating, \'loading\': tag.updating}"></i>\n                </a>\n            </div>\n        </div>\n        <div class="new-tag">\n            <div class="tag">\n                <div class="ui input">\n                    <input type="text" placeholder="回车新增标签" ng-model="new_tag.name" cg-enter="addTaskTag(new_tag)">\n                </div>\n                <div class="tag-color" ng-model="new_tag" cg-tag-color-picker can-change-color="true">\n                </div>\n                <i class="loading icon tag-icon" ng-if="new_tag.saving"></i>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/task/index.html", '<style type="text/css">\n#inner-menu {\n    width: 230px;\n    z-index: 4;\n    background: #F7F6F2;\n}\n\n#inner-menu ~ .container {\n    margin-left: 230px!important;\n}\n\n#members {\n    position: relative;\n}\n\n#members .member {\n    position: relative;\n    display: block;\n    height: auto;\n    width: 100%;\n    cursor: pointer;\n    margin: 0;\n    padding: 3px 8px!important;\n}\n\n#members .member div.avatar {\n    position: absolute;\n    left: 20px;\n    top: 50%;\n    width: 32px;\n    height: 32px;\n    margin-top: -16px;\n}\n\n#members .member img.avatar {\n    width: 32px;\n    height: 32px;\n    margin: 0;\n}\n\n#members .member .name {\n    padding: 0 50px 0 60px;\n    line-height: 40px;\n    height: 40px;\n    width: 88px;\n    font-size: 14px;\n}\n\n#members .member .rate{\n    position: absolute;\n    right: 15px;\n}\n\n.project.tasks {\n    position: relative;\n    margin:20px 0;\n}\n\n#member-search {\n    padding-top: 0;\n    padding-bottom: 5px;\n    font-size: 12px;\n}\n\n#member-search .input{\n    padding-top: 0;\n    margin: 0 11px;\n    width: 91%;\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n}\n\n#member-search .input input{\n    background-color: #FFFFFF;\n    border: 1px solid rgba(0, 0, 0, 0.15);\n    width: 100%;\n}\n\n#member-search .ui.input.icon > .icon{\n    padding-top: 9px;\n}\n</style>\n\n<div class="ui secondary vertical fixed menu active" id="inner-menu">\n    <header class="header item">\n        任务列表\n        <article>\n            在此可以查看项目所有的任务，以及某成员的任务。\n        </article>\n    </header>\n    <a class="item" ng-click="loadTasks(\'all\')" ng-class="{active:isActive(\'all\')}">\n        <i class="tasks icon"></i>所有任务\n        (<span ng-bind="tasks_count.done + tasks_count.processing"></span>)\n    </a>\n    <a class="item" ng-click="loadTasks(\'processing\')" ng-class="{active:isActive(\'processing\')}">\n        <i class="time icon"></i>正在进行\n        (<span ng-bind="tasks_count.processing"></span>)\n    </a>\n    <a class="item" ng-click="loadTasks(\'done\')" ng-class="{active:isActive(\'done\')}">\n      <i class="green ok circle icon"></i>已完成\n      (<span ng-bind="tasks_count.done"></span>)\n    </a>\n    <a class="item" ng-click="loadTasks(\'watch\')" ng-class="{active:isActive(\'watch\')}">\n      <i class="unhide icon"></i>我关注的\n      (<span ng-bind="tasks_count.watch || 0"></span>)\n    </a>\n    <a class="item" ng-click="loadTasks(\'create\')" ng-class="{active:isActive(\'create\')}">\n      <i class="add sign icon"></i>我创建的\n      (<span ng-bind="tasks_count.create || 0"></span>)\n    </a>\n    <div ng-include="\'app/task/edit_tag.html\'"></div>\n    <div class="sep"></div>\n    <div id="member-search" class="search item">\n        <div class="ui icon input">\n            <input type="text" placeholder="Search..." ng-model="searchMember">\n            <i class="search icon"></i>\n        </div>\n    </div>\n    <div id="members" class="menu">\n        <a class="member item" bindonce ng-repeat="member in members | filter:searchMember" ng-click="loadTasks(\'user\',member.user.global_key,\'all\')" ng-class="{active:task_user == member.user.global_key && view === \'list\'}">\n            <div class="avatar"><img class="ui avatar32 image" bo-src="member.user.avatar "></div>\n            <div class="name ellipsis">\n                <!-- 有备注名则显示备注名，否则显示昵称 -->\n                <span ng-if="member.alias">{{member.alias}}</span>\n                <span ng-if="!member.alias">{{member.user.name}}</span>\n                <span class="rate" title="未完成/全部任务">\n                    {{member.count.processing || 0}}/{{(member.count.processing || 0) + (member.count.done || 0)}}\n                </span>\n            </div>\n        </a>\n        <div class="scroll-holder"></div>\n    </div>\n</div>\n<div class="container" ng-include="\'app/task/\' + view + \'.html\'"></div>'),
        $templateCache.put("app/task/list.html", '<style type="text/css">\n    #task-list {\n        position: relative;\n    }\n\n    .owner-task-title{\n        float:left;margin-right:5px;\n    }\n</style>\n<div id="task-list" ng-controller="TaskListController">\n\n  <div id="related-task-tips" style="display: none">\n        <span style="font-size: 14px;line-height: 20px">\n          我 “创建” 的以及我 “指派” 给其他成员的任务，让你从此不错过任何一个管理的任务。\n        </span>\n  </div>\n\n  <div class="ui dividing header">\n        <span ng-bind-html="task_header_title"></span><i ng-if="inner_menu === \'related\'" class="help icon" style="padding:0;margin: 0;font-size: 14px" cg-popup template="#related-task-tips"></i>（{{tasks_total_count || 0}}）\n        <div ng-if="inner_menu==\'user\'" class="ui simple dropdown" style="float:right;font-size:14px;width:80px;margin-top: 10px">\n            <div class="owner-task-title" ng-if="user_task_status == \'all\'">全部任务</div>\n            <div class="owner-task-title" ng-if="user_task_status == \'done\'">已完成</div>\n          <div class="owner-task-title" ng-if="user_task_status == \'processing\'">正在进行</div>\n          <div class="owner-task-title" ng-if="user_task_status == \'related\'">与我相关</div>\n            <i class="dropdown icon" style="margin-left: 10px"></i>\n            <div class="menu">\n                <a class="item" ng-class="{active: user_task_status == \'all\'}" ng-click="changeOwnerStatus(\'all\');">全部任务</a>\n                <a class="item" ng-class="{active: user_task_status == \'done\'}" ng-click="changeOwnerStatus(\'done\');">已完成</a>\n                <a class="item" ng-class="{active: user_task_status == \'processing\'}" ng-click="changeOwnerStatus(\'processing\');">正在进行</a>\n            </div>\n        </div>\n    </div>\n    <div ng-if="inner_menu != \'done\'" cg-task-creator="task" project-dependency="PROJECT" multiple="false" username="username" project_name="project_name" members="members" insert-image="true"></div>\n    <div class="project tasks">\n        <div bindonce ng-repeat="task in tasks" cg-task-item="task" tags="tags" hide-watch="inner_menu === \'watch\'" members="members">\n            <cg-task-comment ng-model="task" show="task.commenting" class="comment-list"></cg-task-comment>\n            <cg-task-description class="task-description" ng-if="task.show_description" ng-model="task" show="task.show_description" can-edit="false" project-dependency="PROJECT">\n            </cg-task-description>\n            <div cg-task-member-picker="task.owner" members="members" multiple="false" active="task.status === 1"></div>\n        </div>\n        <div class="empty center list" ng-switch="inner_menu" ng-if="tasks.length == 0 && tasks_loaded">\n            <span ng-switch-when="done">还没有完成任何任务，加勒个油！</span>\n            <span ng-switch-when="processing"><i class="coffee icon"></i>没有正在处理的任务，喝杯茶休息下！</span>\n            <span ng-switch-when="related"><i class="coffee icon"></i>你这是还没开始协作吧？速速给别人创建个任务吧！</span>\n            <span ng-switch-when="all">没有任务的项目稍显寥落，别让这空着哦！</span>\n            <span ng-switch-when="user">为何你这么叼，一个任务都没有！</span>\n            <span ng-switch-when="project">为何你这么叼，一个任务都没有！</span>\n        </div>\n        <div class="empty center list" ng-if="tasks_loading">\n            <span><i class="loading icon"></i>正在加载数据...</span>\n        </div>\n        <div cg-pager="{{task_pager_id}}" class="center"></div>\n    </div>\n</div>'),
        $templateCache.put("app/task/modal/create_task_modal.html", '<div class="ui tiny modal" id="create-task-modal">\n    <i class="close icon"></i>\n    <div class="header">创建任务</div>\n    <div class="content flex-box flex-direction-row">\n        <form class="ui form" method="POST" ng-if="projects.length > 0">\n            <div class="layout-content-right-menu">\n                <div class="layout-content flex-auto-justify">\n                    <div class="field">\n                        <label>任务内容<i class="icon asterisk red"></i></label>\n\n                        <div class="ui medium input fluid">\n                            <input type="text" name="name" cg-auto-focus tabindex="1001" placeholder="添加任务内容" ng-model="form.content" cg-ctrl-enter="createTask(task)">\n                        </div>\n                    </div>\n                    <div class="field">\n                        <label>任务描述</label>\n                        <div class="ui input fluid">\n                            <div cg-light-md-editor="onSubmit" editor-id="project-task-create-modal" placeholder="添加任务描述（支持 Markdown）" on-change="onDescriptionChange" at-item="form.project" at-context-type="\'task_description\'" project-dependency="form.project" img-compression="false" image-picker-mode="\'md-editor up\'" tab-index="1002"></div>\n                        </div>\n                    </div>\n                </div>\n                <div class="layout-menu flex-none">\n                    <div class="task-create-menu">\n                        <div class="task-menu-item">\n                            <div ng-include="\'app/task/modal/snippets/select/select_project.html\'"></div>\n                        </div>\n                        <div class="task-menu-item">\n                            <div ng-include="\'app/task/modal/snippets/select/select_member.html\'"></div>\n                        </div>\n                        <div class="task-menu-item">\n                            <div ng-include="\'app/task/modal/snippets/select/select_urgency.html\'"></div>\n                        </div>\n                        <div class="task-menu-item">\n                            <div ng-include="\'app/task/modal/snippets/select/select_deadline.html\'"></div>\n                        </div>\n                        <div class="task-menu-item with-top-separator">\n                            <div ng-include="\'app/task/modal/snippets/select/select_label.html\'"></div>\n                        </div>\n                        <div class="task-menu-item with-top-separator" id="task-create-member-select">\n                            <div ng-include="\'app/task/modal/snippets/select/select_watcher.html\'"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n        <div class="without-projects" ng-if="projects.length === 0" style="text-align: center;padding: 100px 0">\n            <div ng-if="supplies_loading">\n                <i class="loading icon"></i>加载数据中...\n            </div>\n            <div ng-if="!supplies_loading">\n                <p><i class="coffee icon"></i>尚未创建或参与任何项目</p>\n                <article>\n                    <p><a href="/user/projects/create" class="ui green medium button" ng-click="hideModal()">创建一个项目</a></p>\n                </article>\n            </div>\n        </div>\n    </div>\n    <div class="action-buttons">\n        <a class="ui cancel borderless button" ng-click="hideModal()">取消</a>\n        <a class="ui ok button green" ng-click="createTask(form);">\n            <i class="loading icon" ng-if="creating"></i>创建\n        </a>\n    </div>\n</div>'),
        $templateCache.put("app/task/modal/snippets/detail/select_deadline.html", '<header>\n    <div cg-task-deadline="task" options="{class_name: \'task-creating-select-deadline\', offset: {left: -80, top: 3}}" mode="deadline_creating_task">\n    </div>\n</header>'),
        $templateCache.put("app/task/modal/snippets/detail/select_label.html", '<header class="select-label-dropdown" ng-controller="TaskDetailSelectLabelController">\n    <div class="task-detail-tags" cg-tag-editor="task.labels" mode="task-description-tags" tags="tags" on-tag-add="onTagAdd" on-tag-remove="onTagRemove" on-tag-create="onTagCreate" on-tag-select="onDetailTagSelect">\n    </div>\n</header>'),
        $templateCache.put("app/task/modal/snippets/detail/select_member.html", '<div class="select-member-dropdown" ng-controller="TaskDetailSelectMemberController">\n    <div cg-task-member-picker="owner" mode="member_picker_header" members="members" active="true">\n        <header>\n            执行者\n            <i class="triangle down icon"></i>\n        </header>\n        <div ng-if="form.owner">\n            <div class="task-select-member selected-content" title="{{ form.owner.name }}">\n                <img ng-src="{{ form.owner.avatar }}">\n                <span class="ellipsis" style="font-size: 14px" ng-bind="form.owner.name"></span>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/task/modal/snippets/detail/select_project.html", '<div class="select-project-dropdown" cg-dropdown="projects" ng-controller="TaskDetailSelectProjectController">\n    <header style="padding-top: 0">\n        所属项目\n    </header>\n    <div style="width: 160px" ng-if="form.project">\n        <div class="task-select-project selected-content" title="{{ form.project[\'owner_user_name\'] + \'/\' + form.project.name }}">\n            <img ng-src="{{ form.project.icon }}">\n            <span class="ellipsis" style="font-size: 14px" ng-bind="form.project[\'owner_user_name\'] + \'/\' + form.project.name"></span>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/task/modal/snippets/detail/select_urgency.html", '<div class="ui dropdown" cg-dropdown="priorities" ng-controller="TaskDetailSelectUrgencyController">\n    <header>\n        紧急程度 <i class="triangle down icon"></i>\n    </header>\n    <div class="task-select-urgency selected-content" ng-if="form.urgency">\n        <cg-task-urgency-head priority="form.urgency.value"></cg-task-urgency-head>\n        <span style="font-size: 14px" ng-bind="form.urgency.text"></span>\n    </div>\n    <div class="menu">\n        <div class="item" bindonce ng-repeat="priority in priorities" ng-click="selectUrgency($index)">\n            <div class="task-select-urgency">\n                <cg-task-urgency-head priority="$index"></cg-task-urgency-head>\n                <span bo-text="priority"></span>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/task/modal/snippets/detail/select_watcher.html", '<div style="margin-bottom: 0.5em">\n    关注者 (<span ng-bind="watchers.length"></span>)\n    <i class="icon add sign" style="float: right"></i>\n</div>\n<div cg-member-selector cg-ms-selected="watchers" cg-ms-onselect="addWatcher(member)" cg-ms-oncancel="removeWatcher(member)" cg-ms-width="140" cg-ms-has-self="true" cg-ms-opener="\'#task-member-selector\'" cg-ms-project="task.project" class="hover-remove check-mode check-toggle-mode no-dropdown"></div>'),
        $templateCache.put("app/task/modal/snippets/select/select_deadline.html", '<header ng-controller="CreateTaskSelectDeadlineController" style="padding-bottom: 0">\n    <div cg-task-deadline="task" on-deadline-change="onDeadlineChange" options="{class_name: \'task-detail-select-deadline\', offset: {left: -115, top: 0}}" mode="deadline_creating_task">\n    </div>\n</header>'),
        $templateCache.put("app/task/modal/snippets/select/select_label.html", '<header ng-show="labels.length >= 0" class="select-label-dropdown" ng-controller="CreateTaskSelectLabelController">\n    <div class="task-detail-tags" cg-tag-editor="form.labels" mode="task-creating-tags" tags="labels" on-tag-add="onTagAdd" on-tag-remove="onTagRemove" on-tag-create="onTagCreate">\n    </div>\n</header>'),
        $templateCache.put("app/task/modal/snippets/select/select_member.html", '<div class="select-member-dropdown" ng-controller="CreateTaskSelectMemberController">\n    <div cg-task-member-picker="form.owner" mode="member_picker_header" members="members" active="true">\n        <header>\n            执行者<i class="icon asterisk red"></i>\n            <i class="triangle down icon"></i>\n        </header>\n        <div ng-if="form.owner">\n            <div class="task-select-member" title="{{ form.owner.name }}">\n                <img ng-src="{{ form.owner.avatar }}">\n                <span class="ellipsis" style="font-size: 14px" ng-bind="form.owner.name"></span>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/task/modal/snippets/select/select_project.html", '<div class="select-project-dropdown" cg-dropdown="projects" ng-controller="CreateTaskSelectProjectController">\n    <div cg-task-project-picker="form.project" projects="projects" active="true">\n        <header style="padding-top: 0">\n            所属项目<i class="icon asterisk red"></i>\n            <i class="triangle down icon"></i>\n        </header>\n        <div style="width: 160px" ng-if="form.project">\n            <div class="task-select-project" title="{{ form.project[\'owner_user_name\'] + \'/\' + form.project.name }}">\n                <img ng-src="{{ form.project.icon }}">\n            <span class="ellipsis" style="font-size: 14px" ng-bind="form.project[\'owner_user_name\'] + \'/\' + form.project.name"></span>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/task/modal/snippets/select/select_urgency.html", '<div class="ui dropdown" cg-dropdown="priorities" ng-controller="CreateTaskSelectUrgencyController">\n    <header>\n        紧急程度 <i class="triangle down icon"></i>\n    </header>\n    <div class="task-select-urgency" ng-if="form.urgency">\n        <cg-task-urgency-head priority="form.urgency.value"></cg-task-urgency-head>\n        <span style="font-size: 14px" ng-bind="form.urgency.text"></span>\n    </div>\n    <div class="menu">\n        <div class="item" bindonce ng-repeat="priority in priorities" ng-click="selectUrgency($index)">\n            <div class="task-select-urgency">\n                <cg-task-urgency-head priority="$index"></cg-task-urgency-head>\n                <span bo-text="priority"></span>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/task/modal/snippets/select/select_watcher.html", '<div class="task-detail-watchlist" ng-controller="CreateTaskSelectWatcherController">\n    <div style="margin-bottom: 0.5em" id="task-detail-member-select">\n        关注者 (<span ng-bind="watchers.length"></span>)\n        <i class="icon add sign" style="float: right"></i>\n    </div>\n    <div cg-member-selector cg-ms-selected="watchers" cg-ms-members="members" cg-ms-onselect="addWatcher(member)" cg-ms-oncancel="removeWatcher(member)" cg-ms-width="140" cg-ms-has-self="true" cg-ms-opener="\'#task-create-member-select\'" mode="task-creating-watchers" class="hover-remove check-mode check-toggle-mode no-dropdown"></div>\n</div>'),
        $templateCache.put("app/task/modal/snippets/select_member.html", '<div class="select-member-dropdown" ng-controller="CreateTaskSelectMemberController">\n    <div cg-task-member-picker="form.owner" mode="member_picker_header" members="members" active="true">\n        <header>\n            执行者<i class="icon asterisk red"></i>\n            <i class="triangle down icon"></i>\n        </header>\n        <div ng-if="form.owner">\n            <div class="task-select-member" title="{{ form.owner.name }}">\n                <img ng-src="{{ form.owner.avatar }}">\n                <span class="ellipsis" style="font-size: 14px" ng-bind="form.owner.name"></span>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/task/modal/snippets/select_project.html", '<div class="select-project-dropdown" cg-dropdown="projects" ng-controller="CreateTaskSelectProjectController">\n    <div cg-task-project-picker="form.project" projects="projects" active="true">\n        <header style="padding-top: 0">\n            所属项目<i class="icon asterisk red"></i>\n            <i class="triangle down icon"></i>\n        </header>\n        <div style="width: 160px" ng-if="form.project">\n            <div class="task-select-project" title="{{ form.project[\'owner_user_name\'] + \'/\' + form.project.name }}">\n                <img ng-src="{{ form.project.icon }}">\n            <span class="ellipsis" style="font-size: 14px" ng-bind="form.project[\'owner_user_name\'] + \'/\' + form.project.name"></span>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/topic/create.html", '<style type="text/css">\n    #topic-create textarea[id*=\'wmd-input-\'] {\n        min-height: 500px !important;\n        font-size: 14px;\n    }\n\n    #topic-create .local-storage-info{\n        font-size: 14px;\n        color: #13b04f;\n        line-height: 30px;\n        margin-right: 20px;\n    }\n</style>\n\n\n<form class="ui form" id="topic-create" ng-class="{loading: sending}" ng-controller="TopicCreateController">\n    <div class="ui medium fluid input" style="margin-bottom: 20px">\n        <input name="title" type="text" ng-model="topic.title" placeholder="输入讨论标题">\n    </div>\n\n    <div class="topic-labels tag-editor" ng-if="can_edit_tag" style="margin-bottom: 20px">\n        标签：\n        <span class="add" title="添加标签" cg-tag-dropdown="tags" on-tag-add="onTagAdd" on-tag-remove="onTagRemove">\n            <i class="icon" ng-class="{\'add sign\': !tag_editing, \'loading\': tag_editing}"></i>\n        </span>\n        <span class="tag editable" bindonce ng-repeat="tag in topic.selected_tags" cg-tag-color="tag.color">\n            <span bo-html="tag.name"></span> <i class="remove icon" ng-click="onTagRemove(tag);"></i>\n        </span>\n    </div>\n\n    <div cg-pagedown="contentUpdate($content)" min-height="500" id="-1" ng-model="topic.content">\n        <textarea placeholder="讨论内容" ng-model="topic.content" cg-refer-resource="PROJECT" cg-at-context at-context-type="\'project_topic\'" at-item="PROJECT" cg-at-emoji cg-textarea-editable></textarea>\n    </div>\n\n    <div class="action clearfix" style="margin-top:20px; margin-bottom: 20px">\n        <a class="ui dark gray button floated right" href="javascript:void(0);" ng-click="createTopic(topic);" ng-if="!editing">立即发布</a>\n        <a class="ui dark gray button floated right" href="javascript:void(0);" ng-click="updateTopic(topic);" ng-if="editing">立即更新</a>\n        <a class="ui button floated right" style="background: none;box-shadow: none;margin-right: 20px" href="javascript:void(0);" ng-click="cancelTopic(topic);">取消</a>\n        <span class="ui coding floated right local-storage-info" ng-if="draft_saving_time > 0 && !fetch_draft_at">\n            <i class="ok sign icon"></i>本地草稿保存于：<span cg-friendly-time="draft_saving_time" cg-friendly-time-format="\'YYYY-MM-DD HH:mm:ss\'"></span>\n        </span>\n        <span class="ui coding floated right local-storage-info" ng-if="fetch_draft_at">\n            <i class="ok sign icon"></i>取出本地 <span cg-friendly-time="fetch_draft_at" cg-friendly-time-format="\'YYYY-MM-DD HH:mm:ss\'"></span> 的草稿\n        </span>\n    </div>\n</form>'),
        $templateCache.put("app/topic/detail.html", '<div ng-controller="TopicDetailController" id="project-topic-detail-wrapper">\n\n    <div id="project-topic-detail" bindonce="topic.owner">\n        <div class="topic-title" ng-if="topic.owner">\n            <a class="avatar" bo-href="topic.owner.path">\n                <img class="ui avatar42 image" bo-src="topic.owner.avatar">\n            </a>\n            <h2 class="title" bo-html="topic.title"></h2>\n            <div class="toolbar">\n                <span class="mr10 number"><a class="gray" bo-text="\'#\' + topic.number"></a></span>\n                <span class="mr10 owner"><a class="gray" bo-href="topic.owner.path" bo-text="topic.owner.name"></a></span>\n                <span class="mr10 time"><i class="time icon"></i><span cg-friendly-time="topic.created_at"></span></span>\n                <span class="mr10 comment"><i class="chat outline icon"></i><span ng-bind="topic.child_count"></span></span>\n                <span class="mr10 action" ng-if="canEdit()">\n                    <a class="gray" ng-href="{{PROJECT.project_path}}/topic/{{topic.id}}/edit"><i class="edit icon"></i>编辑</a>\n                </span>\n                <span class="mr10 action" ng-if="canDelete()">\n                    <a class="gray" href="javascript:void(0);" ng-click="deleteTopic(topic);"><i class="remove icon"></i>删除</a>\n                </span>\n                <span ng-if="!PROJECT.is_public" class="mr10 watch" id="topic-member-selector-up">\n                    <span>\n                        <i class="icon unhide"></i>\n                        <span>关注</span>\n                        <i class="icon add sign"></i>\n                    </span>\n                    <div cg-member-selector cg-ms-selected="watchers" cg-ms-onselect="addWatcher(member)" cg-ms-oncancel="removeWatcher(member)" cg-ms-has-self="true" cg-ms-width="150" cg-ms-opener="\'#topic-member-selector-up\'" cg-ms-project="PROJECT" class="arrow-mode check-mode check-toggle-mode no-dropdown no-selected" style="height: 0"></div>\n                </span>\n                <span class="mr10 tags-show" ng-if="!can_edit_tag && topic.labels.length > 0">\n                    <i class="tag icon"></i>标签:&nbsp;&nbsp;\n                    <a style="display: inline-block" bindonce ng-repeat="tag in topic.labels" bo-href="PROJECT.project_path + \'/topic/tag/\' + tag.id + \'/\' + tag.name">\n                        <span class="tag" bo-html="tag.name" cg-tag-color="tag.color"></span>\n                    </a>\n                </span>\n                <span class="mr10 tags" ng-if="can_edit_tag">\n                    <i class="tags icon"></i>\n                    标签:\n                    <span class="topic-labels" cg-tag-editor="topic.labels" tags="tags" on-tag-create="onTagCreate" on-tag-add="onTagAdd" on-tag-remove="onTagRemove"></span>\n                </span>\n            </div>\n        </div>\n        <div class="topic-content">\n            <div class="markdown content" clip-copy-code="pre" cg-highlight="topic.content" cg-page-scroll></div>\n            <div cg-gallery="topic.content"></div>\n            <div class="empty list" ng-if="detail_loading"><i class="loading icon"></i>正在加载讨论内容...</div>\n        </div>\n\n\n    </div>\n\n    <div id="project-topic-detail-bottom">\n        <div ng-if="!PROJECT.is_public" id="follower" class="topic-follow-header">\n            关注者<span ng-if="!detail_loading">（<span ng-bind="watchers.length"></span>）</span>\n            <span id="topic-member-selector-down" style="float: right">\n                <i class="icon add sign" style="margin-top: 4px"></i>\n                <div cg-member-selector cg-ms-selected="watchers" cg-ms-onselect="addWatcher(member)" cg-ms-oncancel="removeWatcher(member)" cg-ms-has-self="true" cg-ms-width="150" cg-ms-opener="\'#topic-member-selector-down\'" cg-ms-project="PROJECT" class="avatar-mode arrow-mode no-remove check-mode check-toggle-mode no-dropdown no-selected" style="width: 0; margin-left: 18px; margin-top: 5px"></div>\n            </span>\n        </div>\n        <div ng-if="!PROJECT.is_public" cg-member-selector cg-ms-selected="watchers" cg-ms-onselect="addWatcher(member)" cg-ms-oncancel="removeWatcher(member)" cg-ms-has-self="true" cg-ms-width="150" cg-ms-project="PROJECT" class="avatar-mode arrow-mode no-remove check-mode check-toggle-mode no-dropdown"></div>\n\n        <div class="topic-comments-header">\n            评论<span ng-if="!detail_loading">（<span ng-bind="topic.child_count"></span>）</span>\n            <div class="ui simple dropdown coding floated right" ng-if="comments.length > 0">\n                排序\n                <i class="dropdown icon" style="margin-left: 5px"></i>\n                <div class="menu" style="left: -40px">\n                    <a class="item" href="javascript:void(0);" ng-class="{active: comment_type === 0}" ng-click="loadCommentsOfType(0);">\n                        <i class="checkmark icon"></i>\n                        最旧评论\n                    </a>\n                    <a class="item" href="javascript:void(0);" ng-class="{active: comment_type === 1}" ng-click="loadCommentsOfType(1);">\n                        <i class="checkmark icon"></i>\n                        最新评论\n                    </a>\n                </div>\n            </div>\n        </div>\n\n        <div class="comments" id="topic-comments">\n            <div class="comment" bindonce ng-repeat="item in comments">\n                <a bo-href="item.owner.path">\n                    <img class="ui avatar image" height="32" bo-src="item.owner.avatar ">\n                </a>\n                <div class="content-wrapper">\n                    <div class="content markdown" clip-copy-code="pre" cg-highlight="item.content">\n                    </div>\n                    <div cg-gallery="item.content"></div>\n                    <div class="time">\n                    <span class="mr10">\n                        <a class="gray" bo-href="item.owner.path" bo-text="item.owner.name"></a>\n                    </span>\n                    <span class="mr10">\n                        <i class="time icon"></i><span cg-friendly-time="item.created_at"></span>\n                    </span>\n                    <span class="mr10" ng-if="USER">\n                        <a class="gray reply" href="javascript:void(0);" ng-click="replyTopic(item);" cg-scroll-to="topic-comment-editor">\n                            <i class="chat outline icon"></i>回复\n                        </a>\n                    </span>\n                    <span class="mr10" bo-if="canDeleteComment(item)">\n                        <a class="gray remove" href="javascript:void(0);" ng-click="deleteComment(item);">\n                            <i class="remove icon"></i>删除\n                        </a>\n                    </span>\n                    </div>\n                </div>\n            </div>\n            <div class="empty list" ng-if="comments_loaded && comments.length == 0"><i class="coffee icon"></i>还没人评论<span ng-if="USER">，来一发？</span></div>\n            <div class="empty list" ng-if="comments_loading"><i class="loading icon"></i>正在加载评论~</div>\n            <div cg-pager="{{topic_detail_pager_id}}"></div>\n        </div>\n\n        <form id="comment-form" ng-if="USER">\n            <div id="topic-comment-editor" editor-id="project-topic-comment-editor" cg-light-md-editor="commentTopic" data-ng-model="comment.content" at-item="topic" at-context-type="\'topic_comment\'" img-compression="false" project_dependency="topic.project">\n            </div>\n        </form>\n    </div>\n\n</div>'),
        $templateCache.put("app/topic/edit_tag.html", '<div id="topic-all-tags" ng-controller="ProjectTopicEditTagController">\n    <div class="header">\n        所有标签\n        <a href="javascript:void(0);" class="coding floated right gray" ng-click="enableTagEditable();" ng-if="!tag_editable && can_edit">\n            <i class="setting icon"></i>\n        </a>\n        <a class="coding floated right gray" href="javascript:void(0);" ng-click="disableTagEditable();" ng-if="tag_editable">\n            <i class="ok circle icon"></i>\n        </a>\n    </div>\n    <div class="topic-tags" ng-if="!tag_editable">\n        <a class="tag-item" href="javascript:void(0);" bindonce ng-repeat="tag in tags | orderBy:\'name\'" ng-click="selectTag(tag);">\n            <div class="tag">\n                <i class="tag icon" ng-style="{color: tag.color}"></i>\n            </div>\n            <div class="tag-description" ng-bind-html="tagName(tag)"></div>\n        </a>\n    </div>\n    <div id="topic-tag-editor" ng-if="tag_editable">\n        <div class="added-tags">\n            <div class="tag" ng-repeat="tag in tags | orderBy:\'name\'">\n                <div class="ui input">\n                    <input type="text" ng-model="tag.reverted_name" cg-enter="updateTag(tag);">\n                </div>\n                <div class="tag-color" ng-model="tag" cg-tag-color-picker can-change-color="true" on-color-change="onColorChange">\n                </div>\n                <a class="remove gray tag-icon" href="javascript:void(0);" ng-click="removeTag(tag);">\n                    <i class="icon" ng-class="{\'red remove\': !tag.updating, \'loading\': tag.updating}"></i>\n                </a>\n            </div>\n        </div>\n        <div class="new-tag">\n            <div class="tag">\n                <div class="ui input">\n                    <input type="text" placeholder="新增标签(回车确认)" ng-model="new_tag.name" cg-enter="addIssuesTag(new_tag)">\n                </div>\n                <div class="tag-color" ng-model="new_tag" cg-tag-color-picker can-change-color="true">\n                </div>\n                <i class="loading icon tag-icon" ng-if="new_tag.saving"></i>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/topic/index.html", '<style type="text/css">\n    #inner-menu {\n        width: 260px;\n    }\n\n    #topic-content {\n        margin-left: 0!important;\n    }\n\n    #create_topic {\n        float: right;\n    }\n\n    #inner-menu > .topics {\n        height: 450px;\n        width: 330px;\n        overflow-y: auto;\n        overflow-x: hidden;\n        border-top: 1px solid #CCC;\n        position: relative;\n    }\n\n    #inner-menu > .topics .topic {\n        height: 70px !important;\n        position: relative;\n        padding: 10px 20px 0 20px !important;\n    }\n\n    #inner-menu > .topics .avatar {\n        position: absolute;\n        left: 20px;\n        top: 15px;\n    }\n\n    #inner-menu > .topics .wrapper {\n        height: 100%;\n        color: #000;\n        padding-left: 45px;\n    }\n\n    #inner-menu > .topics .wrapper .title {\n        height: 50%;\n        font-size: 16px;\n        line-height: 30px;\n    }\n\n    #inner-menu > .topics .wrapper .time {\n        height: 50%;\n        font-size: 12px;\n        color: #999;\n        line-height: 20px;\n    }\n\n    #topic-container {\n        display: -webkit-flex;\n        display: flex;\n        width: 100%;\n    }\n\n    #topic-container #inner-menu {\n        border: 0 !important;\n        margin: 0;\n        position: relative;\n        width: 260px;\n    }\n\n    #topic-container #topic-content {\n        border-left: 1px solid #DDD;\n        min-height: 500px;\n        width: auto;\n        -webkit-flex: 1;\n                flex: 1;\n    }\n</style>\n\n<div ng-class="{\'public-project-view\': PROJECT.is_public}">\n    <div ng-if="PROJECT.is_public" ng-include="\'app/git/public_view/inner_menu.html\'"></div>\n    <div id="topic-container" ng-if="!watcher_page">\n        <div class="ui secondary vertical menu active" id="inner-menu" ng-class="{\'fixed\':!PROJECT.is_public, \'topic-inner-menu\': PROJECT.is_public}">\n            <header class="header item" bindonce="PROJECT">\n                项目讨论\n                <a id="create_topic" bo-href="PROJECT.project_path + \'/topic/create\'" bo-if="canCreate()">\n                    <i class="right add icon"></i>\n                </a>\n                <i class="icon help tip" style="cursor: pointer;float: inherit;margin: 0px!important" data-html="<div class=\'content\'>项目讨论是只有项目成员可见的互动交流区域。该项目上的所有成员都可以在讨论区创建新的讨论帖，评论或者回复讨论。只有项目创建者和该讨论发起者可以编辑或删除已存在的讨论。<br/><a href=\'/help/doc/project/discuss.html\' target=\'_blank\'>更多帮助<i class=\'icon double angle right\'></i></a></div>" cg-help-popup=""></i>\n                <article>\n                    显示该项目的所有讨论。热门以及推荐讨论。\n                </article>\n            </header>\n            <a class="item" ng-click="changeTopicListSimply(\'all\');" ng-class="{active:inner_menu == \'all\'}">\n                <i class="chat icon"></i>所有讨论 ({{counts.all}})\n            </a>\n            <a class="item" ng-click="changeTopicListSimply(\'mine\');" ng-class="{active:inner_menu == \'mine\'}">\n                <i class="user icon"></i>我的讨论 ({{counts.my}})\n            </a>\n            <a class="item" ng-click="changeTopicListSimply(\'watching\');" ng-class="{active:inner_menu == \'watching\'}">\n                <i class="unhide icon"></i>我关注的 ({{counts.watching}})\n            </a>\n            <!--<a class="item" ng-click="changeTopicList(\'recommend\');" ng-class="{active:inner_menu == \'recommend\'}">-->\n            <!--<i class="heart icon"></i>推荐讨论-->\n            <!--</a>-->\n            <div class="sep" ng-if="region == \'list\' && inner_menu!== \'tag\'"></div>\n            <a class="item" ng-if="region == \'list\' && inner_menu != \'hot\' && inner_menu!== \'tag\'" ng-click="changeTopicList(inner_menu, \'comment\', order);" ng-class="{active:orderBy == \'comment\'}">\n                <i class="comment icon"></i>\n                按最后回答排序\n                <i class="sort order icon" ng-class="{descending: order == \'desc\',ascending: order == \'asc\'}" ng-if="orderBy == \'comment\'"></i>\n            </a>\n            <a class="item" ng-if="region == \'list\' && inner_menu != \'hot\' && inner_menu!== \'tag\'" ng-click="changeTopicList(inner_menu, \'time\', order);" ng-class="{active:orderBy == \'time\'}">\n                <i class="time icon"></i>\n                按发布时间排序\n                <i class="sort order icon" ng-class="{descending: order == \'desc\',ascending: order == \'asc\'}" ng-if="orderBy == \'time\'">\n                </i>\n            </a>\n            <a class="item" href="javascript:void(0);" ng-if="region == \'list\' && inner_menu!== \'tag\'" ng-click="changeTopicList(inner_menu, \'hot\', order);" ng-class="{active: orderBy === \'hot\'}">\n                <i class="fire icon"></i>\n                按热门排序\n                <i class="sort order icon" ng-class="{descending: order == \'desc\',ascending: order == \'asc\'}" ng-if="orderBy == \'hot\'">\n                </i>\n            </a>\n\n            <div class="sep"></div>\n            <!-- tags -->\n            <div ng-include="\'app/topic/edit_tag.html\'"></div>\n        </div>\n        <div class="container" id="topic-content" ng-include="\'app/topic/\' + region + \'.html\'">\n        </div>\n    </div>\n    <div class="container" ng-if="watcher_page" ng-include="\'app/topic/\' + region + \'.html\'">\n    </div>\n</div>'),
        $templateCache.put("app/topic/insert_image_modal.html", '<div class="ui tiny40 responsive modal" id="insert_image_modal">\n    <i class="close icon"></i>\n    <div class="header">插入图片</div>\n    <div class="content" style="padding: 0 1.2em">\n        <div cg-insert-image="insertImages($images);" style="height: 100%"></div>\n    </div>\n    <div class="actions">\n        <div class="ui cancel button">取消</div>\n        <div class="ui dark gray ok button">确认</div>\n    </div>\n</div>'),
        $templateCache.put("app/topic/list.html", '<style type="text/css">\n    #topics-list .topic{\n        position: relative;\n        min-height: 50px;\n        padding:15px 0;\n        border-bottom: 1px solid #CCC;\n    }\n\n    #topics-list .topic:hover,\n    #topics-list .topic.previewed{\n        background: #FFF;\n    }\n\n    #topics-list .topic > img.avatar{\n        position: absolute;\n        height: 32px;\n        top:20px;\n        left:12px;\n    }\n\n    #topics-list .topic > .detail{\n        height: auto;\n        padding:0 60px;\n        line-height: 25px;\n        -moz-user-select:   none;\n    }\n\n    #topics-list .topic > .detail .title{\n        height:50%;\n        font-size:16px;\n        font-weight: bold;\n    }\n\n    #topics-list .topic > .detail .tag{\n        font-size: 12px;\n        font-weight: normal;\n        color: #FFF;\n        -webkit-border-radius: 3px;\n        -moz-border-radius: 3px;\n        border-radius: 3px;\n        padding: 2px 3px;\n        margin-right: 5px;\n        word-break: break-all;\n        vertical-align: text-bottom;\n        line-height: 1.3em;\n    }\n\n    #topics-list .topic > .detail .tag.dark {\n        color: #000;\n    }\n\n    #topics-list .topic > .detail .title a{\n        color: #000;\n    }\n\n    #topics-list .topic > .detail .time{\n        height:50%;\n        font-size:14px;\n        color:#999;\n    }\n\n    #topics-list .topic > .preview{\n        padding:10px 60px;\n    }\n\n    #topics-list .topic > .preview-button{\n        display: none;\n        position: absolute;\n        right:12px;\n        top: 20px;\n    }\n\n    #topics-list .topic:hover > .preview-button{\n        display: inline;\n    }\n\n</style>\n<div id="topics-list" ng-controller="TopicListController" bindonce="inner_menu" bo-switch="inner_menu">\n    <div class="ui dividing header" bo-switch-when="all">\n        所有讨论\n    </div>\n    <div class="ui dividing header" bo-switch-when="mine">\n        我的讨论\n    </div>\n    <div class="ui dividing header" bo-switch-when="tag">\n        标签：<span ng-bind-html="cur_tag"></span>\n    </div>\n    <div class="ui dividing header" bo-switch-when="watching">\n        我关注的\n    </div>\n    <!--<div class="ui dividing header" bo-switch-when="recommend">推荐讨论</div>-->\n    <div class="topics">\n        <div class="topic" bindonce bo-class="{previewed: topic.previewed}" ng-repeat="topic in topics" ng-dblclick="previewTopic($event, topic);">\n            <img class="ui image avatar" bo-src="topic.owner.avatar ">\n            <div class="detail" onselectstart="return false">\n                <div class="title">\n                    <a onselectstart="return true" bo-href="PROJECT.project_path + \'/topic/\' + topic.id">\n                        <span bo-html="topic.title"></span>\n                    </a>\n                    <span ng-repeat="tag in topic.labels" class="tag" cg-tag-color="tag.color" bo-html="tag.name"></span>\n                </div>\n                <div class="time">\n                    <a class="gray" bo-href="topic.owner.path" bo-text="topic.owner.name"></a>\n                    发布于\n                    <span cg-friendly-time="topic.created_at"></span>，有<span bo-text="topic.child_count"></span>条回应\n                </div>\n            </div>\n            <div class="preview markdown content" ng-bind-html="topic.preview" ng-if="topic.previewed">\n            </div>\n            <div class="empty center list" ng-if="topic.previewed && preview_loading">\n                <i class="loading icon"></i>正在加载讨论预览...\n            </div>\n            <div class="empty center list" ng-if="topic.previewed"><i class="double angle up icon" style="font-size:30px;color:#000;cursor: pointer" ng-click="previewTopic($event, topic);"></i></div>\n            <a class="preview-button" href="javascript:void(0);" ng-click="previewTopic($event, topic);" title="预览讨论详情">\n                <i class="icon" ng-class="{hide: topic.previewed, unhide: !topic.previewed}" style="color:#000"></i>\n            </a>\n        </div>\n        <div class="empty center list" ng-if="loaded && topics.length == 0"><i class="coffee icon"></i>没有一条讨论，略显寂寥了，无讨论，不协作！</div>\n        <div class="empty center list" ng-if="loading"><i class="loading icon"></i>正在加载讨论列表...</div>\n    </div>\n    <div class="center" cg-pager="{{topic_pager_id}}"></div>\n</div>'),
        $templateCache.put("app/topic/watchers.html", '<div ng-controller="TopicWatchersController">\n  <h2>关注了讨论 <a ng-href="{{PROJECT.project_path + \'/topic\' + \'/\' + topic.id}}">{{topic.title}}</a> 的人</h2>\n  <div style="padding-top:20px">\n      <div class="public-project-view-watchers" ng-if="watchers.length > 0" ng-repeat="user in watchers">\n        <div class="avatar">\n            <a ng-href="/u/{{user.global_key}}"><img class="ui image avatar64" ng-src="{{user.avatar}}"></a>\n        </div>\n        <div class="info">\n            <a ng-href="/u/{{user.global_key}}">{{user.name}}</a>\n        </div>\n        <div class="action">\n            <div ng-if="user.followed && user.id != USER.id" class="ui down small gray button" ng-click="unfollow(user);">\n                <i class="minus icon"></i>\n                取消关注\n            </div>\n            <div ng-if="!user.followed && user.id != USER.id" class="ui down small green button" ng-click="follow(user);">\n                <i class="add icon"></i>\n                关注\n            </div>\n            <div ng-if="user.id != USER.id" class="ui down black small button" ng-click="showSendMsgDialog(user)">\n                给TA私信\n            </div>\n            <div ng-if="user.id == USER.id" class="ui green label self" style="line-height: 10px">\n                你自己\n            </div>\n        </div>\n    </div>\n  </div>\n</div>'),
        $templateCache.put("app/tweet/index.html", '<cg-new-year></cg-new-year>\n<style type="text/css">\n    a.refresh-public-tweets {\n        float: right;\n        font-size: 14px;\n        margin: 15px 10px 0 0;\n    }\n    a.filter-public-tweets {\n        float: right;\n        font-size: 14px;\n        margin: 0 0 0 5px;;\n    }\n    .item.time .filter-public-tweets.gray i.icon {\n        position: absolute;\n        right:4px;\n        top: 14px;\n    }\n    .item.time .filter-public-tweets.gray.time:hover .filter.icon {\n        opacity: 0;\n    }\n    .item.time .filter-public-tweets.gray.time .time.icon {\n        opacity: 0;\n    }\n    .item.time .filter-public-tweets.time.gray:hover .time.icon {\n        opacity: 1;\n    }\n\n    .item.time .filter-public-tweets.gray.filter:hover .time.icon {\n        opacity: 0;\n    }\n    .item.time .filter-public-tweets.gray.filter .filter.icon {\n        opacity: 0;\n    }\n    .item.time .filter-public-tweets.filter.gray:hover .filter.icon {\n        opacity: 1;\n    }\n    .item.time .filter-public-tweets.gray.time .filter.icon,\n    .item.time .filter-public-tweets.gray.time .time.icon,\n    .item.time .filter-public-tweets.gray.filter .time.icon,\n    .item.time .filter-public-tweets.gray.filter .filter.icon {\n        -webkit-transition: opacity .2s ease-out;\n        -moz-transition: opacity .2s ease-out;\n        -ms-transition: opacity .2s ease-out;\n        -o-transition: opacity .2s ease-out;\n        transition: opacity .2s ease-out;\n    }\n    .item.time .title {\n        margin-right: 14px;\n    }\n</style>\n<div id="tweet-list" class="ui grid" cg-scroll-to-top>\n    <div class="column left-column">\n\n        <!-- tweet editor -->\n        <div ng-controller="TweetFeedEditController" ng-if="USER">\n            <div cg-feed-editor="{{ feed_editor_config.content }}" feed-context="#tweet-list">\n                <textarea cg-feed-editor-textarea ng-model="feed_editor_config.content" cg-at-emoji cg-at-topic cg-at-context at-item="-1" at-context-type="\'tweet\'" placeholder="来，冒个泡吧~" cg-textarea-editable msd-elastic="\\n">\n                </textarea>\n            </div>\n        </div>\n\n        <!-- tweet tab -->\n        <div class="ui tabular menu">\n            <a class="item time" ng-class="{active: sort == \'time\'}" ng-click="switchSort(\'time\')">\n                <span class="title">广场</span>\n                <span ng-show="filter_switch && sort == \'time\'" ng-click="toggleFilter()" class="gray filter-public-tweets time">\n                    <i class="filter icon"></i>\n                    <i class="time icon" data-variation="inverted" data-html="<span>查看所有</span>" cg-popup></i>\n                </span>\n                <span ng-show="!filter_switch && sort == \'time\'" ng-click="toggleFilter()" class="gray filter-public-tweets filter">\n                    <i class="time icon"></i>\n                    <i class="filter icon" data-variation="inverted" data-html="<span>过滤</span>" cg-popup></i>\n                </span>\n            </a>\n            <a class="item" ng-class="{active: sort == \'hot\'}" ng-click="switchSort(\'hot\')">\n                热门\n            </a>\n            <a class="item" ng-class="{active: sort == \'friends\'}" ng-click="switchSort(\'friends\')" ng-if="USER">\n                好友圈\n            </a>\n            <a href="javascript:void(0);" ng-click="refreshPublicTweets();" class="gray refresh-public-tweets">\n                <i class="refresh icon"></i>\n            </a>\n        </div>\n\n\n        <div class="bubble-item" bindonce="tweet" ng-repeat="tweet in tweets">\n            <a class="avatar" cg-hover-card="tweet.owner" bo-href="tweet.owner.path">\n                <img class="ui image avatar42" bo-src="tweet.owner.avatar" bo-title="tweet.owner.name">\n            </a>\n            <div class="arrow" cg-bubble="tweet" on-remove="onBubbleRemove">\n                <div cg-bubble-comment="tweet"></div>\n                <div ng-if="$root.USER" cg-bubble-comment-form="tweet"></div>\n            </div>\n        </div>\n\n        <div class="center empty list" ng-show="tweet_loading && show_more">\n            <i class="loading icon"></i>正在加载泡泡...\n        </div>\n        <div class="show-more" ng-show="!tweet_loading && sort == \'time\'">\n            <span ng-if="show_more"><a class="down more" ng-click="showMore();">更多泡泡</a></span>\n            <span ng-if="!show_more" style="font-size: 14px;color:#999">没有更多泡泡了...</span>\n        </div>\n        <div class="show-more" ng-show="!tweet_loading && sort == \'friends\'">\n            <span><a class="down more" href="/user/activities/tweet">更多泡泡</a></span>\n        </div>\n    </div>\n    <div class="column right-column">\n        <div cg-multi-ad="[\'bubble_banner_1\']" speed="3000" width="100%"></div>\n        <div cg-multi-ad="[\'bubble_banner_2\']" speed="3000" width="100%"></div>\n        <div cg-multi-ad="[\'bubble_banner_3\']" speed="3000" width="100%"></div>\n\n        <div class="ui header dividing">热门话题<a href="/pp/topic" class="gray"><i class="icon right"></i></a></div>\n        <div class="hot-topics">\n            <div class="list" ng-if="!hot_loading && hot_topics.length > 0">\n                <div class="item" ng-repeat="topic in hot_topics">\n                    <a href="/pp/topic/{{topic.id}}" class="gray">#{{topic.name}}#</a>\n                    <a href="javascript:void(0)" ng-show="topic.watched" ng-click="unwatch_topic(topic)">\n                        <i class="icon checkmark green" data-html="<span>取消关注</span>" cg-popup></i>\n                    </a>\n                    <a href="javascript:void(0)" ng-show="!topic.watched" ng-click="watch_topic(topic)">\n                        <i class="icon add gray" data-html="<span>关注话题</span>" cg-popup></i>\n                    </a>\n                </div>\n            </div>\n            <div ng-if="!hot_loading && !hot_topics.length > 0">\n                <span style="color:#999">没有话题。</span>\n            </div>\n            <div ng-if="hot_loading" class="loading block">\n                <span style="color:#999"><i class="icon loading" style="float:none;line-height: inherit"></i>加载中...</span>\n            </div>\n        </div>\n        <div class="ui header dividing">热门用户</div>\n        <div class="hot-users">\n            <a class="user-item" bindonce ng-repeat="user in best_users" bo-href="user.path">\n                <div class="user-avatar">\n                    <img class="ui coding image avatar64" bo-src="user.avatar ">\n                </div>\n                <p class="user-name" bo-text="user.name"></p>\n            </a>\n        </div>\n        <div class="ui header dividing">客户端二维码</div>\n        <div style="padding:0px 50px;padding-top:10px">\n            <div cg-multi-ad="[\'android_app_banner\']" speed="3000" width="100%"></div>\n            <div style="margin: 20px 0px"></div>\n            <div cg-multi-ad="[\'ios_app_banner\']" speed="3000" width="100%"></div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/tweet/prepareTweetReward.html", '<div class="ui tiny40 modal" id="tweet-reward-modal">\n    <i class="close icon"></i>\n    <div class="header">打赏给该用户 0.01 码币</div>\n    <div class="content">\n        <div class="field summary">\n            <div class="item">\n                <span class="title">我的码币余额：</span>\n                <em ng-bind="user.points_left"></em>\n            </div>\n        </div>\n        <form class="ui form" ng-show="!errorMessages.length && need_password">\n            <div class="field inline password">\n                <label>用户密码</label> <input type="password" ng-model="user.password" cg-enter="reward(tweet,$event);">\n            </div>\n        </form>\n        <div class="ui error message ng-hide" ng-show="errorMessages.length">\n            <ul class="list">\n                <li ng-repeat="msg in errorMessages" ng-bind-html="msg"></li>\n            </ul>\n        </div>\n    </div>\n    <div class="action-buttons" ng-show="!errorMessages.length">\n        <a class="ui ok button green" ng-click="reward(tweet);">\n            确认打赏\n        </a>\n    </div>\n</div>'),
        $templateCache.put("app/tweet/project_tweet.html", '<style>\n    #project-tweet > .header { border-bottom: none !important; }\n    #project-tweet .tweets-wrapper { margin-top: 30px; }\n    #project-tweet .tweets-wrapper .header { margin-bottom: 0; }\n    #project-tweet .header > i { float: right; }\n    #project-tweet .header .back { cursor: pointer; }\n    #project-tweet .header .back i.left { margin-right: 0; }\n    #project-tweet .tweets-wrapper .refresh { cursor: pointer; }\n    #project-tweet .dimmer i.icon.loading { position: absolute; top: 50%; margin: -11px; }\n    #project-tweet .tweets-content { position: relative; }\n    #project-tweet .tweet-item { margin-bottom: 30px; margin-right: 2px; box-shadow: 1px 1px 0 0 #EEE; border-radius: 3px; border: 1px solid #EEE; }\n    #project-tweet .tweet-item-content { padding: 20px 20px 0 20px;}\n    #project-tweet .tweet-item .avatar { display: inline-block; float: left; margin-right: 10px; }\n    #project-tweet .tweet-item .avatar img { height: 42px; width :42px; border-radius: 42px; }\n    #project-tweet .tweet-item .avatar-name { font-size: 14px; font-weight: bold; color: 2d87cc; margin-bottom: 5px; margin-top: 2px;}\n    #project-tweet .tweet-item .avatar-name a { padding-left: 3px; }\n    #project-tweet .tweet-item .avatar-stat { font-size: 12px; color: 999999; }\n    #project-tweet .tweet-item .avatar-stat i { margin: 0; }\n    #project-tweet .tweet-item .item-content { color: #000; margin-top: 20px; margin-bottom: 20px; font-size: 14px; word-wrap: break-word; }\n\n    #project-tweet .tweet-item img.bubble-markdown-image,\n    #project-tweet .preview-content img.bubble-markdown-image\n    { width: 120px; padding: 8px; border: 1px solid #EEE; border-radius: 3px; margin-top: 5px; margin-bottom: 5px; }\n\n    #project-tweet .tweet-item-comment { background-color: #fdfcfa; border-top: 1px solid #EEE; padding: 10px 20px 10px 20px; font-size: 12px; color: 999999; }\n    #project-tweet .comment-avatar { position: relative; }\n    #project-tweet .comment-avatar img { position: relative; top: 4px; width: 18px; height: 18x; border-radius: 18px; }\n    #project-tweet .comment-content { margin-bottom: 10px; word-wrap: break-word; }\n    #project-tweet .more-comment { background-color: #fdfcfa; padding: 5px 0 15px 0; text-align: center; }\n    #project-tweet .more-comment a { font-size: 12px; }\n    #project-tweet .more-comment a.more { cursor: pointer; padding-top: 4px; }\n    #project-tweet .tweet-comment-form { width: 100%; border-top: 1px solid #EEE; }\n    #project-tweet .tweet-comment-input { border: none !important; font-size: 12px !important; border-radius: 0 !important; }\n    #project-tweet .comment-button { padding-top: 10px !important; cursor: pointer !important; }\n    #project-tweet .more-pp { text-align: center; padding-bottom: 20px; }\n    #project-tweet .preview-content { border: 1px solid #eee; padding: 7px; border-radius: 3px; }\n\n</style>\n<div id="project-tweet" ng-controller="ProjectTweetController">\n    <div class="ui dividing header">\n        项目内冒泡\n    </div>\n\n    <!--发表冒泡输入框-->\n    <div cg-feed-editor="{{ feed_editor_config.content }}" feed-editor-mode="project_tweet" textarea-elastic="true" markdown-mode="resource_link" feed-context="#project-tweet">\n        <textarea ng-show="!one" cg-feed-editor-textarea ng-model="feed_editor_config.content" cg-at-emoji cg-refer-resource="PROJECT" cg-at-context at-context-type="\'project_member\'" at-item="PROJECT" placeholder="来，在项目里冒个泡吧~" cg-textarea-editable msd-elastic="\\n">\n        </textarea>\n    </div>\n\n    <div class="tweets-wrapper">\n        <!--顶部title和刷新按钮-->\n        <div class="ui dividing header">\n            <span ng-show="!one">全部冒泡</span>\n            <span ng-show="one" ng-click="back()" class="back"><i class="left icon"></i>返回全部冒泡</span>\n            <i class="refresh icon" ng-click="refresh()"></i>\n        </div>\n\n        <!--loading-->\n        <div ng-show="loading" class="empty list center" style="margin-top: 1em">\n            <i class="icon loading"></i>\n            正在努力刷新...\n        </div>\n\n        <!--没有冒泡-->\n        <div ng-show="!loading && (!tweets || tweets.length <= 0)" class="empty list center" style="padding-top: 30px; padding-left: 0">\n            暂时还没有冒泡哦...赶紧说点什么吧~\n        </div>\n\n        <!--冒泡内容-->\n        <div class="tweets-content" ng-show="!loading">\n            <div class="tweet-item" ng-repeat="tweet in tweets" ng-init="tweet._id = rand(); tweet.commentMore = tweet.comments > 5" bindonce>\n\n                <!-- 头像等内容 -->\n                <div class="tweet-item-content" ng-mouseenter="tweet.hovering = true;" ng-mouseleave="tweet.hovering = false;">\n                    <a class="avatar" bo-href="tweet.owner.path">\n                        <img bo-src="tweet.owner.avatar" bo-title="tweet.owner.name">\n                    </a>\n                    <div class="avatar-name">\n                        <a bo-href="tweet.owner.path">\n                            {{tweet.owner.name}}\n                        </a>\n                    </div>\n                    <div class="avatar-stat">\n                        <a class="gray" href="javascript:void(0);" ng-click="detail(tweet)">\n                            <i class="icon time"></i>\n                            <span cg-friendly-time="tweet.created_at"></span>\n                        </a>\n                        <span>\n                            <i class="icon chat outline" style="margin-left: 8px"></i>\n                            {{tweet.comments}}\n                        </span>\n                        <!--冒泡的所有者才限制删除按钮-->\n                        <a ng-show="tweet.hovering && tweet.owner_id === USER.id" ng-click="delete(tweet)" class="coding floated right" href="javascript:void(0);">\n                            <i class="red icon delete" style="margin: 0 0 0 10px"></i>\n                            <span>删除</span>\n                        </a>\n                    </div>\n                    <div class="item-content content markdown" cg-highlight="tweet.content"></div>\n                    <div cg-gallery="tweet.content"></div>\n                </div>\n\n                <!--评论-->\n                <div class="tweet-item-comment" ng-repeat="comment in tweet.comment_list" ng-init="comment._id = rand()" bindonce>\n                    <div class="comment-item" ng-mouseenter="comment.hovering = true;" ng-mouseleave="comment.hovering = false;">\n                        <div class="comment-content" bo-html="comment.content"></div>\n                        <div>\n                            <!--头像-->\n                            <a class="comment-avatar" bo-href="comment.owner.path">\n                                <img bo-src="comment.owner.avatar">\n                                <span>{{comment.owner.name}}</span>\n                            </a>\n\n                            <!--时间-->\n                            <span class="gray">\n                                <i class="icon time" style="margin: 0 0 0 5px"></i>\n                                <span cg-friendly-time="comment.created_at"></span>\n                            </span>\n\n                            <!--删除回复按钮-->\n                            <span ng-show="comment.hovering" class="coding floated right" style="margin-top: 7px">\n                                <a ng-if="comment.owner_id !== USER.id" ng-click="reply(comment, tweet, $event)" href="javascript:void(0);">\n                                    <i class="blue icon edit"></i>\n                                    <span>回复</span>\n                                </a>\n\n                                <a ng-if="tweet.owner_id === USER.id" ng-click="deleteComment(comment, tweet)" href="javascript:void(0);">\n                                    <i class="red icon delete" style="margin: 0 0 0 5px"></i>\n                                    <span>删除</span>\n                                </a>\n                            </span>\n                        </div>\n                    </div>\n                </div>\n\n                <!--更多评论按钮-->\n                <div class="more-comment" ng-show="tweet.commentMore">\n                    <a ng-show="!tweet.commentLoading" ng-click="comments(tweet)" class="gray center down more">\n                        显示全部评论\n                    </a>\n                    <a ng-show="tweet.commentLoading" class="gray center">\n                        <i class="loading icon"></i>\n                        正在刷新\n                    </a>\n                </div>\n\n                <!--发表评论-->\n                <form class="tweet-comment-form ui large form input icon">\n                    <div class="ui inverted dimmer" ng-class="{active: tweet.sending}" style="margin-top: -8px">\n                        <i class="loading icon"></i>\n                    </div>\n                    <input class="tweet-comment-input" type="text" cg-at-emoji cg-refer-resource="PROJECT" cg-at-context at-context-type="\'project_member\'" at-item="PROJECT" cg-placeholder ng-model="tweet.comment_content" cg-ctrl-enter="comment(tweet)">\n                    <i class="right icon comment-button" ng-click="comment(tweet);"></i>\n                </form>\n\n            </div>\n\n            <!--更多冒泡-->\n            <div class="more-pp" ng-show="!loading && !one && tweets.length != 0">\n                <a ng-show="tweets.length >= PAGE_SIZE && show_more" ng-click="more(tweets[tweets.length-1].id)" class="icon down more" href="javascript:void(0);">\n                    更多冒泡\n                </a>\n\n                <span ng-show="tweets.length < PAGE_SIZE || !show_more" class="empty list">没有更多泡泡了</span>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/tweet_topic/content.html", '<div class="topic-content-wrapper">\n    <div class="detail">\n        <a href="javascript:void(0)" class="ui button small" ng-click="watch(topic)" ng-if="show_watch && !topic.watched"><i class="icon loading" ng-if="topic.watching"></i> + 关注</a>\n        <a href="javascript:void(0)" class="ui small gray button" ng-click="unwatch(topic)" ng-if="show_watch && topic.watched"><i class="icon loading" ng-if="topic.unwatching"></i>取消关注</a>\n        <div class="title" ng-class="{\'no1\': $index == 0 }">\n            <a class="gray" href="/pp/topic/{{topic.id}}">#{{topic.name}}#</a>\n        </div>\n        <span style="float:left;color: #999">最热冒泡：</span>\n        <div class="ellipsis" cg-highlight="topic.hot_tweet.content" style="max-width: 400px;display: inline-block"></div>\n        <span class="created-at" cg-friendly-time="topic.created_at" style="color: #999"></span>\n    </div>\n    <div class="join-in">\n        <span style="color: #999">最新参与者：</span>\n        <a bindonce class="avatar" bo-href="user.path" ng-repeat="user in topic.user_list">\n            <img class="ui image avatar18" bo-src="user.avatar" bo-title="user.name">\n        </a>\n        <a style="font-size: 10px" title="查看所有参与者" href="/pp/topic/{{topic.id}}/joins" ng-if="showMoreNew(topic)">\n            ...\n        </a>\n    </div>\n</div>'),
        $templateCache.put("app/tweet_topic/detail.html", '<style>\n    a.refresh-public-tweets {\n        float: right;\n        font-size: 18px;\n        margin: 15px 10px 0 0;\n    }\n</style>\n<div id="tweet-topic-detail" class="ui grid" ng-if="!topic_loading" cg-scroll-to-top>\n    <div class="column left-column">\n\n        <div class="topic-tweets" ng-if="region === \'detail\'">\n            <!--<div cg-feed-editor="feedEditor" ng-if="USER && !topic_loading"></div>-->\n            <div cg-feed-editor="{{ feed_editor_config.content }}" ng-if="USER && !topic_loading" feed-context="#tweet-topic-detail">\n                <textarea cg-feed-editor-textarea ng-model="feed_editor_config.content" cg-at-emoji cg-at-topic cg-at-context at-context-type="\'tweet\'" at-item="-1" placeholder="来，冒个泡吧~" cg-textarea-editable msd-elastic="\\n">\n                </textarea>\n            </div>\n\n            <div class="bubble-item" bindonce="top_tweet" ng-if="top_tweet.owner">\n                <a class="avatar" cg-hover-card="top_tweet.owner" bo-href="top_tweet.owner.path">\n                    <img class="ui image avatar42" bo-src="top_tweet.owner.avatar" bo-title="top_tweet.owner.name">\n                </a>\n\n                <div class="arrow" cg-bubble="top_tweet" on-remove="onTopBubbleRemove">\n                    <div cg-bubble-comment="top_tweet"></div>\n                    <div ng-if="$root.USER" cg-bubble-comment-form="top_tweet"></div>\n                </div>\n            </div>\n\n            <div class="ui tabular menu">\n                <a class="item" ng-class="{active: sort == \'new\'}" ng-click="switchSort(\'new\')">\n                    最新\n                </a>\n                <a class="item" ng-class="{active: sort == \'hot\'}" ng-click="switchSort(\'hot\')">\n                    热门\n                </a>\n                <a href="javascript:void(0);" ng-click="refreshPublicTweets();" class="gray refresh-public-tweets">\n                    <i class="refresh icon"></i>\n                </a>\n            </div>\n\n            <div class="bubble-item" bindonce="tweet" ng-repeat="tweet in topic_tweets">\n                <a class="avatar" cg-hover-card="tweet.owner" bo-href="tweet.owner.path">\n                    <img class="ui image avatar42" bo-src="tweet.owner.avatar" bo-title="tweet.owner.name">\n                </a>\n\n                <div class="arrow" cg-bubble="tweet" on-remove="onBubbleRemove">\n                    <div cg-bubble-comment="tweet"></div>\n                    <div ng-if="$root.USER" cg-bubble-comment-form="tweet"></div>\n                </div>\n            </div>\n\n            <div class="center empty list" ng-show="tweet_loading">\n                <i class="loading icon"></i>正在加载泡泡...\n            </div>\n\n            <div class="show-more" ng-show="!tweet_loading && sort != \'hot\'">\n                <span ng-if="show_more && topic_tweets.length > 0"><a class="down more" ng-click="showMore();">更多冒泡</a></span>\n                <span ng-if="!show_more || !topic_tweets.length > 0" style="font-size: 14px;color:#999">没有更多泡泡了...</span>\n            </div>\n        </div>\n\n        <div class="topic-users" ng-if="region === \'watchers\'">\n            <span class="header">粉丝（{{topic.watchers}}）</span>\n            <div class="topic-user" bindonce ng-repeat="watcher in watchers">\n                <div class="avatar">\n                    <a bo-href="watcher.path">\n                        <img class="ui circular image avatar56" bo-src="watcher.avatar">\n                    </a>\n                </div>\n                <div class="info">\n                    <a class="user-name ellipsis gray" bo-href="watcher.path" style="max-width:80px"><span bo-text="watcher.name"></a>\n                    <span class="join-in-at">\n                        <i class="time icon"></i>\n                        <span class="created-time" cg-friendly-time="watcher.created_at"></span> 加入\n                    </span>\n                    <div class="actions">\n                        <a href="javascript:void(0)" ng-click="follow(watcher)" class="ui button small" ng-if="!watcher.followed && USER.global_key !== watcher.global_key"><i class="icon loading" ng-if="watcher.following"></i>+关注</a>\n                        <span ng-if="watcher.followed && watcher.follow && USER" style="font-size:12px;margin-left: 10px">\n                            <i class="green exchange icon"></i>相互关注\n                        </span>\n                        <span ng-if="watcher.followed && !watcher.follow && USER" style="font-size:12px;margin-left: 10px">\n                            <i class="blue checkmark icon"></i>已关注\n                        </span>\n                    </div>\n                </div>\n            </div>\n            <div cg-pager="{{pager_id}}" class="center"></div>\n        </div>\n        <div class="topic-users" ng-if="region === \'joins\'">\n            <span class="header">参与者（{{topic.speackers}}）</span>\n            <div class="topic-user" bindonce ng-repeat="join in joins">\n                <div class="avatar">\n                    <a bo-href="join.path">\n                        <img class="ui circular image avatar56" bo-src="join.avatar">\n                    </a>\n                </div>\n                <div class="info">\n                    <a class="user-name ellipsis gray" href="join.path" style="max-width:80px"><span bo-text="join.name"></a>\n                    <span class="join-in-at">\n                        <i class="time icon"></i>\n                        <span class="created-time" cg-friendly-time="join.created_at"></span> 加入\n                    </span>\n                    <div class="actions">\n                        <a href="javascript:void(0)" ng-click="follow(join)" class="ui button small" ng-if="!join.followed && USER.global_key !== join.global_key"><i class="icon loading" ng-if="join.following"></i>+关注</a>\n                        <span ng-if="join.followed && join.follow && USER" style="font-size:12px;margin-left: 10px">\n                            <i class="green exchange icon"></i>相互关注\n                        </span>\n                        <span ng-if="join.followed && !join.follow && USER" style="font-size:12px;margin-left: 10px">\n                            <i class="blue checkmark icon"></i>已关注\n                        </span>\n                    </div>\n                </div>\n            </div>\n            <div cg-pager="{{pager_id}}" class="center"></div>\n        </div>\n    </div>\n    <div class="column right-column">\n        <div class="topic-banner area">\n            <a ng-if="topic.image_url">\n                <img ng-src="{{topic.image_url}}">\n            </a>\n            <div class="topic-info">\n                <div class="topic-title">\n                    <a class="gray" href="/pp/topic/{{topic_id}}">#{{topic.name}}#</a>\n                </div>\n                <span class="content">{{topic.description}}</span>\n                <div class="actions">\n                    <a href="javascript:void(0)" class="ui button green small" ng-click="watchTopic()" ng-if="!topic.watched">\n                        + 关注话题<i class="icon loading" ng-if="topic_watching"></i></a>\n                    <a href="javascript:void(0)" class="ui down small gray button" ng-click="unwatchTopic()" ng-if="topic.watched">\n                        取消关注<i class="icon loading" ng-if="topic_unwatching"></i></a>\n                </div>\n                <div class="related">\n                    <a class="joins" href="/pp/topic/{{topic_id}}/joins"><span class="num">{{topic.speackers}}</span> 参与&nbsp;/&nbsp;</a>\n                    <a class="watchers" href="/pp/topic/{{topic_id}}/watchers"><span class="num">{{topic.watchers}}</span> 关注</a>\n                </div>\n            </div>\n        </div>\n        <div class="topic-hot-joins area">\n            <span class="title">热门参与者<a class="gray" href="/pp/topic/{{topic_id}}/joins"><i class="icon right"></i></a></span>\n            <div class="joins" style="margin-top:10px">\n                <a bindonce class="user-item" bo-href="user.path" ng-repeat="user in hot_joins">\n                    <div class="user-avatar">\n                        <img class="ui image avatar48" bo-src="user.avatar" bo-title="user.name">\n                    </div>\n                    <p class="ellipsis" style="color:#666;font-size:12px;max-width:60px">\n                        <span bo-text="user.name">\n                    </p>\n                </a>\n            </div>\n            <div ng-if="hot_joined_loading" class="loading block">\n                <span><i class="icon loading"></i>加载中...</span>\n            </div>\n        </div>\n        <div class="hot-topics area">\n            <span class="title">热门话题<a href="/pp/topic" class="gray"><i class="icon right"></i></a></span>\n            <div class="list">\n                <div bindonce class="item" ng-repeat="topic in hot_topics">\n                    <a bo-href="\'/pp/topic/\' + topic.id" class="gray"><span bo-text="\'#\' + topic.name + \'#\'"></a>\n                    <a href="javascript:void(0)" ng-show="topic.watched" ng-click="unwatch(topic)">\n                        <i class="icon checkmark green" data-html="<span>取消关注</span>" cg-popup></i>\n                    </a>\n                    <a href="javascript:void(0)" ng-show="!topic.watched" ng-click="watch(topic)">\n                        <i class="icon add gray" data-html="<span>关注话题</span>" cg-popup></i>\n                    </a>\n                </div>\n                <div ng-if="hot_loading" class="loading block">\n                    <span><i class="icon loading"></i>加载中...</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/tweet_topic/index.html", '<div id="tweet-topic-list" class="ui grid" cg-scroll-to-top>\n    <div class="marketing-tweet-topic" ng-if="!marketing_loading">\n        <div bindonce class="item" ng-repeat="marketing_topic in marketing_topics">\n            <a bo-href="\'/pp/topic/\' + marketing_topic.id">\n                <img bo-src="marketing_topic.image_url">\n            </a>\n            <div class="topic-name">\n                <a bo-href="\'/pp/topic/\' + marketing_topic.id" class="gray">\n                    <span bo-text="\'#\' + marketing_topic.name + \'#\'"></span></a>\n            </div>\n            <div class="topic-description">\n                <div class="ellipsis" cg-highlight="marketing_topic.description" style="max-width: 300px;display: inline-block"></div>\n            </div>\n        </div>\n    </div>\n    <div ng-if="marketing_loading" class="loading block">\n        <span><i class="icon loading"></i>加载中...</span>\n    </div>\n    <div class="hot-tweet-topic eleven wide column left-column">\n        <div class="header">\n            热门话题榜\n        </div>\n        <div class="bubble-topic-item" bindonce="topic" ng-repeat="topic in topics" ng-if="!hot_loading">\n            <div ng-include="\'app/tweet_topic/content.html\'"></div>\n        </div>\n        <div ng-if="hot_loading" class="loading block">\n            <span><i class="icon loading"></i>加载中...</span>\n        </div>\n    </div>\n    <div class="related-tweet-topic five wide column right-column">\n        <div class="watched" ng-if="user">\n            <div class="header">\n                <span>我的关注<a class="gray" href="/u/{{USER.global_key}}/bubble-topic/watched"><i class="icon right"></i></a></span>\n            </div>\n            <div class="list" ng-if="!watched_loading && watched_topics.length > 0">\n                <div class="item" ng-repeat="topic in watched_topics">\n                    <a href="/pp/topic/{{topic.id}}" class="gray">#{{topic.name}}#</a>\n                    <a href="javascript:void(0)" ng-show="topic.watched" ng-click="unwatch(topic)">\n                        <i class="icon checkmark green" data-html="<span>取消关注</span>" cg-popup></i>\n                    </a>\n                    <a href="javascript:void(0)" ng-show="!topic.watched" ng-click="watch(topic)">\n                        <i class="icon add gray" data-html="<span>关注话题</span>" cg-popup></i>\n                    </a>\n                </div>\n            </div>\n            <div ng-if="!watched_loading && !watched_topics.length > 0">\n                <span>你没有关注</span>\n            </div>\n            <div ng-if="watched_loading" class="loading block">\n                <span><i class="icon loading"></i>加载中...</span>\n            </div>\n        </div>\n        <!--<div class="joined">-->\n            <!--<p class="header">-->\n                <!--<span>我参与的话题<a class="gray" href="/u/{{USER.global_key}}/bubble-topic/joined"><i class="icon right"></i></a></span>-->\n            <!--</p>-->\n            <!--<div class="list" ng-if="!joined_loading">-->\n                <!--<div class="item" ng-repeat="topic in joined_topics">-->\n                    <!--<span><a href="/pp/topic/{{topic.id}}" class="gray">#{{topic.name}}#</a>-->\n                        <!--<a href="javascript:void(0)" ng-show="topic.watched" ng-click="unwatch(topic)">-->\n                            <!--<i class="icon checkmark green" data-html="<span>取消关注</span>" cg-popup ></i>-->\n                        <!--</a>-->\n                        <!--<a href="javascript:void(0)" ng-show="!topic.watched" ng-click="watch(topic)">-->\n                            <!--<i class="icon add gray" data-html="<span>关注话题</span>" cg-popup ></i>-->\n                        <!--</a>-->\n                    <!--</span>-->\n                <!--</div>-->\n            <!--</div>-->\n            <!--<div ng-if="joined_loading" class="loading block">-->\n                <!--<span><i class="icon loading"></i>加载中。。</span>-->\n            <!--</div>-->\n        <!--</div>-->\n    </div>\n</div>'),
        $templateCache.put("app/ui/avatar.html", '<div class="ui header h1">Avatar</div>\n<table class="ui basic table">\n    <thead>\n    <tr>\n        <th>Size</th>\n        <th ng-repeat="size in avatar_sizes" ng-init="is_default_size = default_avatar_size == size;" ng-class="{\'default-ui-style\': is_default_size}">\n            {{size}}px\n        </th>\n    </tr>\n    <tr>\n        <th>Class</th>\n        <th ng-repeat="size in avatar_sizes" ng-init="is_default_size = default_avatar_size == size;" ng-class="{\'default-ui-style\': is_default_size}">\n            ui image avatar{{size}}\n            <div ng-if="is_default_size">ui image avatar</div>\n        </th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr>\n        <td>Preview</td>\n        <td ng-repeat="size in avatar_sizes" ng-init="is_default_size = default_avatar_size == size;" ng-class="{\'default-ui-style\': is_default_size}" style="text-align: center">\n            <img src="/static/d2ab4f6de747ad169160d3caaf82132e.png" class="ui image avatar{{size}}">\n        </td>\n    </tr>\n    </tbody>\n</table>'),
        $templateCache.put("app/ui/button.html", '<div class="ui header h1">Buttons</div>\n<table class="ui basic table" ng-init="button_words = {};">\n    <thead>\n        <tr>\n            <th>Color</th>\n            <th ng-repeat="size in sizes" ng-class="{\'default-ui-style\': size == \'default\'}">\n                {{size}}\n            </th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr ng-repeat="color in colors" ng-init="button_words[color] = {};">\n            <td>{{color}}</td>\n            <td ng-repeat="size in sizes" ng-class="{\'default-ui-style\': size == \'default\'}" ng-init="button_words[color][size]=\'按钮\';">\n                <a class="ui {{size}} {{color}} button" ng-click="button_words[color][size] = button_words[color][size] == \'Button\' ? \'按钮\' : \'Button\'">{{button_words[color][size]}}</a><br><br>\n                ui {{size}} {{color}} button\n            </td>\n        </tr>\n    </tbody>\n</table>'),
        $templateCache.put("app/ui/home.html", '<div class="ui header h1">Coding UI Modules</div>\n<table class="ui basic table">\n    <thead>\n        <tr>\n            <th>Module</th>\n            <th>Preview</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr ng-repeat="module in modules" ng-if="module!=\'home\'" ng-switch="module">\n            <td>\n                <a ng-href="ui/{{module}}">{{module}}</a>\n            </td>\n            <td ng-switch-when="link">\n                <a ng-href="ui/{{module}}">This is a link!</a><br>\n                <a ng-href="ui/{{module}}" class="gray">This is a GRAY link!</a>\n                <a ng-href="ui/{{module}}" class="red">This is a RED link!</a>\n            </td>\n            <td ng-switch-when="button">\n                <a class="ui mini dark gray button">Mini Button</a>\n                <a class="ui blue button">Blue Button</a>\n                <a class="ui red medium button">Red Medium Button</a>\n            </td>\n            <td ng-switch-when="avatar">\n                <img class="ui image avatar32" src="/static/d2ab4f6de747ad169160d3caaf82132e.png">\n                <img class="ui image avatar48" src="/static/d2ab4f6de747ad169160d3caaf82132e.png">\n                <img class="ui image avatar64" src="/static/d2ab4f6de747ad169160d3caaf82132e.png">\n            </td>\n            <td ng-switch-when="loadMore">\n                <a class="right more" ng-href="ui/{{module}}">查看所有</a><br>\n                <a class="right center more" ng-href="ui/{{module}}">查看所有（center）</a><br>\n                <a class="down more" ng-href="ui/{{module}}">显示更多</a><br>\n                <a class="down center more" ng-href="ui/{{module}}">显示更多（center）</a><br>\n                <a class="up more" ng-href="ui/{{module}}">收起</a>\n                <a class="up center more" ng-href="ui/{{module}}">收起(center)</a>\n                <div class="empty list"><i class="loading icon"></i>正在加载数据(left)...</div>\n                <div class="center empty list"><i class="loading icon"></i>正在加载数据(center)...</div>\n            </td>\n            <td ng-switch-when="input">\n                <div class="ui input">\n                    <input type="text">\n                    <a class="ui blue button">提交</a>\n                </div><br><br>\n                <div class="ui action input">\n                    <input type="text">\n                    <a class="ui blue button">提交</a>\n                </div><br>\n                <div class="ui icon input">\n                    <input type="text">\n                    <i class="add icon"></i>\n                </div>\n            </td>\n            <td ng-switch-when="util">\n                floated, aligned, clearfix, display(block, inline-block, inline)\n            </td>\n            <td ng-switch-when="icon">\n                <i class="coding monkey icon"></i>\n                <i class="coding logo icon"></i>\n                <i class="coding logo-v icon"></i>\n                <i class="coding bubble icon"></i>\n                <i class="coding project icon"></i>\n                <i class="coding fork icon"></i>\n            </td>\n        </tr>\n    </tbody>\n</table>'),
        $templateCache.put("app/ui/icon.html", '<div class="ui header h1">Icons</div>\n<table class="ui basic table">\n    <thead>\n    <tr>\n        <th>\n            Preview\n        </th>\n        <th>Class</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr ng-repeat="icon in icons">\n        <td>\n            <i class="coding icon {{icon}}"></i> {{icon}}\n        </td>\n        <td>\n            .coding.icon.{{icon}}\n        </td>\n    </tr>\n    </tbody>\n</table>\n<div class="ui header h1">Activity Icons</div>\n<table class="ui basic table">\n    <thead>\n    <tr>\n        <th>Activity Name</th>\n        <th>\n            Preview\n        </th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr ng-repeat="activity in activity_icons">\n        <td>\n            {{activity.name}}\n        </td>\n        <td>\n            <span ng-repeat="icon in activity.icons">\n                <i class="icon {{icon}}"></i> {{icon}} <span ng-if="!$last" style="margin: 0 10px"> | </span>\n            </span>\n        </td>\n    </tr>\n    </tbody>\n</table>'),
        $templateCache.put("app/ui/index.html", '<style type="text/css">\n    .default-ui-style{background-color:#EEE!important;}\n</style>\n<div class="coding-ui coding" style="margin:50px">\n    <div style="margin-bottom:20px" ng-if="region!=\'home\'">\n        <a href="/ui"><i class="left icon"></i>BACK</a>\n    </div>\n    <div ng-include="\'app/ui/\'+region+\'.html\'"></div>\n</div>'),
        $templateCache.put("app/ui/input.html", '<div class="ui header h1">Buttons</div>\n<table class="ui basic table" ng-init="button_words = {};">\n    <tbody ng-init="color=\'green\';">\n    <tr>\n        <td colspan="4">\n            <strong>ui input:</strong>\n        </td>\n    </tr>\n    <tr ng-repeat="size in sizes" ng-class="{\'default-ui-style\': size == \'default\'}">\n        <td>{{size}}</td>\n        <td ng-init="button_words[size]=\'按钮\';">\n            <div class="ui {{size}} input" style="float: right">\n                <input type="text">\n            </div>\n        </td>\n        <td>\n            <a class="ui {{size}} {{color}} button" ng-click="button_words[size] = button_words[size] == \'Button\' ? \'按钮\' : \'Button\'">{{button_words[size]}}</a>\n        </td>\n        <td>\n            ui {{size}} input\n        </td>\n    </tr>\n    <tr>\n        <td colspan="4">\n            <strong>ui action input:</strong>\n        </td>\n    </tr>\n    <tr ng-repeat="size in sizes" ng-class="{\'default-ui-style\': size == \'default\'}">\n        <td>{{size}}</td>\n        <td ng-init="button_words[size]=\'按钮\';">\n            <div class="ui action {{size}} input">\n                <input type="text">\n                <a class="ui {{size}} {{color}} button" ng-click="button_words[size] = button_words[size] == \'Button\' ? \'按钮\' : \'Button\'">{{button_words[size]}}</a>\n            </div>\n        </td>\n        <td></td>\n        <td>\n            ui action {{size}} input （with button）\n        </td>\n    </tr>\n    <tr>\n        <td colspan="4">\n            <strong>ui icon input:</strong>\n        </td>\n    </tr>\n    <tr ng-repeat="size in sizes" ng-class="{\'default-ui-style\': size == \'default\'}">\n        <td>{{size}}</td>\n        <td ng-init="button_words[size]=\'按钮\';">\n            <div class="ui icon {{size}} input">\n                <input type="text">\n                <i class="blue right icon"></i>\n            </div>\n        </td>\n        <td></td>\n        <td>\n            ui icon {{size}} input （with button）\n        </td>\n    </tr>\n    </tbody>\n</table>'),
        $templateCache.put("app/ui/util.html", '<div class="ui header h1">Utils</div>\n<table class="ui basic table">\n    <tbody>\n    <tr>\n        <td>floated</td>\n        <td style="background: #CCC">\n            <span class="coding floated left">floated left</span>\n        </td>\n        <td style="background: #EEE">\n            <span class="coding floated right">floated right</span>\n        </td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>aligned</td>\n        <td style="background: #CCC" class="coding aligned left">\n            aligned left\n        </td>\n        <td style="background: #DDD" class="coding aligned center">\n            aligned center\n        </td>\n        <td style="background: #EEE" class="coding aligned right">\n            aligned right\n        </td>\n    </tr>\n    <tr>\n        <td>display</td>\n        <td style="background: #CCC">\n            <a class="coding aligned center block" href="/ui">This a BLOCK link,click me but the words!</a>\n        </td>\n        <td style="background: #DDD" class="coding aligned left">\n            <a class="coding inline" href="/ui">This a INLINE link, and aligned left!</a>\n        </td>\n        <td style="background: #EEE" class="coding aligned right">\n            <a class="coding inline block" href="/ui">This a INLINE BLOCK link, and aligned right!</a>\n        </td>\n    </tr>\n    <tr>\n        <td>clearfix</td>\n        <td>\n            <div class="clearfix">\n                <img class="coding floated left ui image avatar32" src="/static/d2ab4f6de747ad169160d3caaf82132e.png">\n                <img class="coding floated left ui image avatar42" src="/static/d2ab4f6de747ad169160d3caaf82132e.png">\n                <img class="coding floated left ui image avatar48" src="/static/d2ab4f6de747ad169160d3caaf82132e.png">\n                <img class="coding floated left ui image avatar56" src="/static/d2ab4f6de747ad169160d3caaf82132e.png">\n                <img class="coding floated left ui image avatar64" src="/static/d2ab4f6de747ad169160d3caaf82132e.png">\n            </div>\n        </td>\n        <td></td>\n        <td></td>\n    </tr>\n    </tbody>\n</table>'),
        $templateCache.put("app/user/account/about.html", '<div class="account-about" ng-controller="AccountAboutController">\n    <span>Copyright&nbsp;&nbsp;&copy;&nbsp;2015&nbsp;Coding.net&nbsp;&nbsp;</span>\n    <a href="/">首页</a>\n    <a href="/about">关于 Coding</a>\n    <a href="/jobs">招贤纳士</a>\n    <a href="/terms">服务条款</a>\n    <a href="/privacy">隐私策略</a>\n    <a href="help">帮助中心</a>\n    <a href="https://blog.coding.net/">Blog</a>\n    <a href="/app">App</a>\n    <a cg-jump-out-angular-href="/shop">Shop</a>\n    <a href="https://mart.coding.net" style="font-weight: bold">码市</a>\n    <a class="photo-by" ng-href="{{photo_by.link}}" target="_blank">Photo by {{photo_by.author}}</a>\n</div>'),
        $templateCache.put("app/user/account/confirm.html", '<div class="account-box confirm" ng-class="{\'phone\': activateType() === \'phone\', \'email\': activateType() === \'email\'}">\n    <form method="POST">\n        <div class="ui form">\n            <div class="field" ng-if="activateType() === \'phone\'">\n                <div class="phone-input ui left labeled icon large input">\n                    <input type="text" ng-model="form.phone" disabled="disabled">\n                    <i class="phone icon"></i>\n                </div>\n            </div>\n            <div class="field global-key" ng-class="{error: !global_key_ok}" ng-if="activateType() === \'phone\'">\n                <div class="ui prefix large input global">\n                    <div class="prefix">\n                        <i class="icon" ng-class="{loading: global_key_checking, url: !global_key_checking}"></i>\n                        <span class="words">coding.net/u/</span>\n                    </div>\n                    <input type="text" ng-model="form.global_key" placeholder="个性后缀" cg-timeout-input="checkGlobalKey(form.global_key)" ng-blur="checkGlobalKey(form.global_key)" style="border: none; padding-left: 180px">\n                </div>\n                <div class="ui red horizontal label arrow_box" ng-if="!global_key_ok">{{gk_error_msg}}</div>\n            </div>\n            <div class="field" ng-class="{error: !email_ok}" ng-if="activateType() === \'phone\'">\n                <div class="ui left labeled icon large input">\n                    <input type="email" pattern="[^ @]*@[^ @]*" ng-model="form.email" placeholder="电子邮箱" cg-timeout-input="checkEmail(form.email)" time="1000" ng-blur="checkEmail(form.email)" ng-disabled="oauth.via" style="border: none">\n                    <i class="mail icon"></i>\n                    <i ng-if="email_checking" class="loading icon"></i>\n                </div>\n                <div class="ui red horizontal label arrow_box" ng-if="!email_ok">{{email_error_msg}}</div>\n                <div class="ui red horizontal label arrow_box" ng-if="showEmailNotice">{{emailNotice}}</div>\n            </div>\n            <div class="field" ng-if="activateType() !== \'phone\'">\n                <div class="ui left labeled icon large input">\n                    <input type="text" ng-model="form.email" placeholder="电子邮箱" disabled="disabled">\n                    <i class="mail icon"></i>\n                </div>\n            </div>\n            <div class="field" ng-class="{error: !password_ok}" ng-if="activateType() !== \'phone\' && activateType() !== \'email\'">\n                <div class="ui left labeled icon large input">\n                    <input type="password" ng-model="form.password" style="display: initial" placeholder="密码" cg-timeout-input="checkPassword(form.password)">\n                    <i class="lock icon"></i>\n                </div>\n                <div class="ui red horizontal label arrow_box" ng-if="!password_ok">{{password_error_msg}}</div>\n            </div>\n            <div class="field" ng-class="{error: !confirm_ok}" ng-if="activateType() !== \'phone\' && activateType() !== \'email\'">\n                <div class="ui left labeled icon large input">\n                    <input type="password" ng-model="form.confirm" style="display: initial" placeholder="重复密码" cg-timeout-input="checkConfirm(form.password, form.confirm)">\n                    <i class="lock icon"></i>\n                </div>\n                <div class="ui red horizontal label arrow_box" ng-if="!confirm_ok">{{confirm_error_msg}}</div>\n            </div>\n            <div class="field">\n                <div class="ui coding large green gray button fluid" ng-click="doConfirm(form)">\n                    <span ng-if="!activating">激 活</span>\n                    <span ng-if="activating"><i class="loading icon" style="margin-right: 0"></i></span>\n                </div>\n                <div class="activate">\n                    <a class="gray" href="javascript:history.back(-1);">返回</a>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>\n<ng-include src="\'app/user/account/about.html\'"></ng-include>'),
        $templateCache.put("app/user/account/input_two_factor_auth_code.html", '<div class="account-box login" style="height: 130px">\n    <iframe src="/login" name="sink" style="display:none"></iframe>\n    <form action="/login" target="sink" method="post" ng-submit="checkCode()" form-autofill-fix>\n        <div class="ui form">\n            <div class="field">\n                <div class="ui left labeled icon large input fluid">\n                    <input id="code" name="code" type="text" ng-model="code" placeholder="请输入两步验证码" cg-timeout-input="check_2FA_code(code)">\n                    <i class="shield icon"></i>\n                </div>\n                <div class="ui red horizontal label arrow_box" ng-if="!code_ok">{{code_error_msg}}</div>\n            </div>\n            <div class="field">\n                <button type="submit" class="ui coding large green gray button fluid" ng-disabled="!code_ok">\n                    <span ng-if="!logining">\n                        <span>登 录</span>\n                    </span>\n                    <span ng-if="logining"><i class="loading icon" style="margin-right: 0"></i></span>\n                </button>\n                <div class="activate">\n                    <a class="gray" href="/help/doc/account/2fa.html" target="_blank">两步验证遇到问题？查看帮助文档</a>\n                </div>\n                <input type="submit" style="display: none">\n            </div>\n        </div>\n    </form>\n</div>\n<ng-include src="\'app/user/account/about.html\'"></ng-include>'),
        $templateCache.put("app/user/account/login.html", '<div class="account-box login" ng-class="{\'with-captcha\': show_captcha, \'oauth\': search.via === \'github\'}" bindonce="search">\n    <iframe src="/empty.html" name="sink" style="display:none"></iframe>\n\n    <!--oauth绑定的email-->\n    <div class="oauth-info">\n        <div class="oauth-email github ellipsis" bo-text="search.email" bo-title="search.via"></div>\n        <div class="oauth-link">\n            <span>\n                <i class="url icon"></i>\n            </span>\n        </div>\n    </div>\n\n    <!--登录form-->\n    <form action="/login" target="sink" method="post" ng-submit="dologin(form)" form-autofill-fix>\n        <div class="ui form">\n            <!--email or global_key or phone-->\n            <div class="field" ng-if="!search.via">\n                <div class="ui left labeled icon large input fluid">\n                    <input id="email" name="email" type="text" cg-auto-focus ng-model="form.email" placeholder="电子邮箱 / 手机号码 / 个性后缀" required>\n                    <i class="user icon"></i>\n                </div>\n            </div>\n\n            <!--oauth绑定只支持email和global_key-->\n            <div class="field" ng-if="search.via">\n                <div class="ui left labeled icon large input fluid">\n                    <input id="email" name="email" type="text" ng-model="form.email" placeholder="电子邮箱 / 个性后缀">\n                    <i class="mail icon"></i>\n                </div>\n            </div>\n\n            <!--密码-->\n            <div class="field">\n                <div class="ui left labeled icon large input fluid">\n                    <input id="password" name="password" type="password" style="display: initial" ng-model="form.password" placeholder="密码" required>\n                    <i class="lock icon"></i>\n                </div>\n            </div>\n\n            <!--验证码-->\n            <div class="field captcha" ng-show="show_captcha">\n                <div class="ui left labeled icon large input captcha">\n                    <input id="captcha" name="captcha" type="text" placeholder="验证码" ng-model="form.j_captcha">\n                    <i class="shield icon"></i>\n                </div>\n                <img class="captcha" ng-src="{{captcha}}" ng-click="refreshCaptcha()">\n            </div>\n\n            <div class="field words">\n                <div class="ui checkbox">\n                    <input type="checkbox" id="form.remember_me" ng-model="form.remember_me">\n                    <label class="remember" for="form.remember_me">记住我</label>\n                </div>\n                <a class="forget-password gray" href="/resetPassword">忘记密码?</a>\n            </div>\n\n            <div class="field">\n                <button type="submit" class="ui coding large green gray button fluid" ng-class="{disabled: !enableSubmit(form) }">\n                    <span ng-if="!logining">\n                        {{loginType() === \'oauth\' ? \'绑 定\' : \'登 录\'}}\n                    </span>\n                    <span ng-if="logining">\n                        <i class="loading icon" style="margin-right: 0"></i>\n                    </span>\n                </button>\n                <div class="activate">\n                    <a class="gray" href="/user/activate">已注册？未设置密码</a>\n                </div>\n                <input type="submit" style="display: none">\n            </div>\n        </div>\n    </form>\n\n    <ng-include src="\'app/user/account/oauth_entrance.html\'"></ng-include>\n</div>\n<ng-include src="\'app/user/account/about.html\'"></ng-include>'),
        $templateCache.put("app/user/account/oauth_entrance.html", '<ul class="third-party-login" ng-controller="OAuthController" ng-show="!isOAuth">\n    <li>\n        <a href="javascript:void(0);" ng-click="oauthLogin(\'github\')" class="github"></a>\n    </li>\n</ul>'),
        $templateCache.put("app/user/account/phone_entrance.html", '<div id="phone-icon" ng-controller="PhoneController" ng-click="toggle()" ng-class="{green : type() === \'phone\'}">\n\n    <i class="icon mobile"></i>\n</div>'),
        $templateCache.put("app/user/account/reactivate.html", '<div class="account-box reactivate" ng-class="{\'email\' : step() === \'email\', \'phone\': step() === \'phone\'}">\n    <form method="POST">\n        <div class="ui form">\n\n            <!--第一步，判断是email还是手机-->\n            <div class="field" ng-class="{error: !judge_ok}" ng-if="step() === \'judge\'">\n                <div class="ui left labeled icon large input">\n                    <input type="text" ng-model="form.judge" placeholder="电子邮箱 / 手机号码" cg-timeout-input="checkJudge(form.judge)" time="1000" ng-blur="checkJudge(form.judge)">\n                    <i class="user icon"></i>\n                </div>\n                <div class="ui red horizontal label arrow_box" ng-if="!judge_ok">{{judge_error_msg}}</div>\n            </div>\n\n            <!--下一步-->\n            <div class="field" ng-if="step() === \'judge\'">\n                <div class="ui coding large green gray button fluid" ng-click="next()">\n                    <span>下一步</span>\n                    <span ng-if="logining"><i class="loading icon" style="margin-right: 0"></i></span>\n                </div>\n                <div class="activate">\n                    <a class="gray" href="javascript:history.back(-1);">返回</a>\n                </div>\n            </div>\n\n            <!--email-->\n            <div class="field" ng-class="{error: !email_ok}" ng-if="step() === \'email\'">\n                <div class="ui left labeled icon large input">\n                    <input type="text" ng-model="form.email" placeholder="电子邮箱" disabled="disabled">\n                    <i class="mail icon"></i>\n                    <i ng-if="email_checking" class="loading icon"></i>\n                </div>\n                <div class="ui red horizontal label arrow_box" ng-if="!email_ok">{{email_error_msg}}</div>\n                <div class="ui red horizontal label arrow_box" ng-if="show_email_notice">{{email_notice}}</div>\n            </div>\n\n            <!--手机号-->\n            <div class="field" ng-class="{error: !phone_ok}" ng-if="step() === \'phone\'">\n                <div class="phone-input ui left labeled icon large input">\n                    <input type="text" ng-model="form.phone" placeholder="手机号" disabled="disabled">\n                    <i class="phone icon"></i>\n                    <a class="ui button" ng-click="sendCode()" ng-disabled="code_btn_disabled" ng-class="{disabled: code_btn_disabled}">\n                        {{code_btn_text}}\n                    </a>\n                </div>\n                <div class="ui red horizontal label arrow_box" ng-if="!phone_ok">{{phone_error_msg}}</div>\n            </div>\n\n            <!--手机验证码-->\n            <div class="field" ng-class="{error: !code_ok}" ng-if="step() === \'phone\'">\n                <div class="ui left labeled icon large input">\n                    <input type="text" ng-model="form.code" placeholder="手机验证码" cg-timeout-input="checkCode(form.code)" time="1000" ng-blur="checkCode(form.code)">\n                    <i class="mail outline icon"></i>\n                    <i ng-if="code_checking" class="loading icon"></i>\n                </div>\n                <div class="ui red horizontal label arrow_box" ng-if="!code_ok">{{code_error_msg}}</div>\n            </div>\n\n            <!--密码-->\n            <div class="field" ng-class="{error: !password_ok}" ng-if="step() === \'phone\'">\n                <div class="ui left labeled icon large input">\n                    <input type="password" ng-model="form.password" style="display: initial" placeholder="密码" cg-timeout-input="checkPassword(form.password)" time="1000" ng-blur="checkPassword(form.password)">\n                    <i class="lock icon"></i>\n                </div>\n                <div class="ui red horizontal label arrow_box" ng-if="!password_ok">{{password_error_msg}}</div>\n            </div>\n            <div class="field" ng-class="{error: !confirm_ok}" ng-if="step() === \'phone\'">\n                <div class="ui left labeled icon large input">\n                    <input type="password" ng-model="form.confirm" style="display: initial" placeholder="重复密码" cg-timeout-input="checkConfirm(form.password, form.confirm)" time="1000" ng-blur="checkConfirm(form.password, form.confirm)">\n                    <i class="lock icon"></i>\n                </div>\n                <div class="ui red horizontal label arrow_box" ng-if="!confirm_ok">{{confirm_error_msg}}</div>\n            </div>\n\n            <!--网页验证码-->\n            <div class="field captcha" ng-if="step() !== \'judge\'">\n                <div class="ui left labeled icon large input captcha">\n                    <input id="captcha" name="captcha" type="text" ng-model="form.j_captcha" placeholder="验证码" required>\n                    <i class="shield icon"></i>\n                </div>\n                <img class="captcha" ng-src="{{captcha}}" ng-click="refreshCaptcha()">\n            </div>\n\n            <div class="field" ng-if="step() !== \'judge\'">\n                <div class="ui coding large green gray button fluid" ng-click="doactivate(form)">\n                     <span ng-if="!activating">\n                         {{step() === "phone" ? "设置密码": "重发激活邮件"}}\n                     </span>\n                     <span ng-if="activating">\n                         <i class="loading icon" style="margin-right: 0"></i>\n                     </span>\n                </div>\n                <div class="activate">\n                    <a class="gray" href="javascript:history.back(-1);">返回</a>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>\n<ng-include src="\'app/user/account/about.html\'"></ng-include>'),
        $templateCache.put("app/user/account/register.html", '<div class="account-box register" ng-class="{\'with-captcha\': show_captcha, \'oauth\': registerType() === \'oauth\', \'phone\': registerType() === \'phone\'}">\n\n    <div ng-switch="registerType()">\n        <!-- normal -->\n        <h2 ng-switch-when="normal">加入Coding, 体验云端开发之美!</h2>\n        <h2 ng-switch-when="phone">加入Coding, 体验云端开发之美!</h2>\n\n        <!-- github -->\n        <p ng-switch-when="oauth" class="oauth-words">\n            感谢您使用 GitHub 账号登录 Coding<br>\n            请填写个性后缀 “完成注册”\n        </p>\n\n        <!-- invite -->\n        <h2 ng-switch-when="invite">\n            欢迎您受邀来到 Coding! <br>\n        </h2>\n        <h2 ng-switch-when="invite_not_limited">\n            欢迎您受邀来到 Coding! <br>\n        </h2>\n    </div>\n\n    <form method="POST">\n        <div class="ui form">\n            <!--email-->\n            <div class="field" ng-class="{error: !email_ok}" ng-if="registerType() !== \'phone\'">\n                <div class="ui left labeled icon large input">\n                    <input type="email" pattern="[^ @]*@[^ @]*" ng-model="form.email" placeholder="电子邮箱" cg-timeout-input="checkEmail(form.email)" time="1000" ng-blur="checkEmail(form.email)" ng-disabled="oauth.via" style="border: none">\n                    <i class="mail icon"></i>\n                    <i ng-if="email_checking" class="loading icon"></i>\n                </div>\n                <div class="ui red horizontal label arrow_box" ng-if="!email_ok">{{email_error_msg}}</div>\n                <div class="ui red horizontal label arrow_box" ng-if="showEmailNotice">{{emailNotice}}</div>\n            </div>\n\n            <!--global_key-->\n            <div class="field global-key" ng-class="{error: !global_key_ok}" ng-if="registerType() !== \'phone\'">\n                <div class="ui prefix large input global">\n                    <div class="prefix">\n                        <i class="icon" ng-class="{loading: global_key_checking, url: !global_key_checking}"></i>\n                        <span class="words">coding.net/u/</span>\n                    </div>\n                    <input type="text" ng-model="form.global_key" placeholder="个性后缀(用户名)" cg-timeout-input="checkGlobalKey(form.global_key)" ng-blur="checkGlobalKey(form.global_key)" style="border: none">\n                </div>\n                <div class="ui red horizontal label arrow_box" ng-if="!global_key_ok">{{gk_error_msg}}</div>\n            </div>\n\n            <!--手机号-->\n            <div class="field" ng-class="{error: !phone_ok}" ng-if="registerType() === \'phone\'">\n                <div class="phone-input ui left labeled icon large input">\n                    <input type="text" ng-model="form.phone" placeholder="手机号" cg-timeout-input="checkPhone(form.phone)" time="1000" ng-blur="checkPhone(form.phone)">\n                    <i class="phone icon"></i>\n                    <i ng-if="phone_checking" class="loading icon"></i>\n                    <a class="ui button" ng-click="sendCode()" ng-disabled="code_btn_disabled" ng-class="{disabled: code_btn_disabled}">\n                        {{code_btn_text}}\n                    </a>\n                </div>\n                <div class="ui red horizontal label arrow_box" ng-if="!phone_ok">{{phone_error_msg}}</div>\n            </div>\n\n            <!--验证码-->\n            <div class="field" ng-class="{error: !code_ok}" ng-if="registerType() === \'phone\'">\n                <div class="ui left labeled icon large input">\n                    <input type="text" ng-model="form.code" placeholder="手机验证码" cg-timeout-input="checkCode(form.code)" time="1000" ng-blur="checkCode(form.code)">\n                    <i class="mail outline icon"></i>\n                    <i ng-if="code_checking" class="loading icon"></i>\n                </div>\n                <div class="ui red horizontal label arrow_box" ng-if="!code_ok">{{code_error_msg}}</div>\n            </div>\n\n            <!--密码确认密码-->\n            <div class="field" ng-class="{error: !password_ok}" ng-if="registerType() === \'phone\'">\n                <div class="ui left labeled icon large input">\n                    <input type="password" ng-model="form.password" style="display: initial" placeholder="密码" cg-timeout-input="checkPassword(form.password)" time="1000" ng-blur="checkPassword(form.password)">\n                    <i class="lock icon"></i>\n                </div>\n                <div class="ui red horizontal label arrow_box" ng-if="!password_ok">{{password_error_msg}}</div>\n            </div>\n            <div class="field" ng-class="{error: !confirm_ok}" ng-if="registerType() === \'phone\'">\n                <div class="ui left labeled icon large input">\n                    <input type="password" ng-model="form.confirm" style="display: initial" placeholder="重复密码" cg-timeout-input="checkConfirm(form.password, form.confirm)" time="1000" ng-blur="checkConfirm(form.password, form.confirm)">\n                    <i class="lock icon"></i>\n                </div>\n                <div class="ui red horizontal label arrow_box" ng-if="!confirm_ok">{{confirm_error_msg}}</div>\n            </div>\n\n            <div class="field captcha" ng-show="show_captcha">\n                <div class="ui left labeled icon large input captcha">\n                    <input id="captcha" name="captcha" type="text" ng-model="form.j_captcha" placeholder="验证码" required>\n                    <i class="shield icon"></i>\n                </div>\n                <img class="captcha" ng-src="{{captcha}}" ng-click="refreshCaptcha()">\n            </div>\n            <div class="field">\n                <div class="ui coding large green gray button fluid" ng-click="doRegister(form)">\n                    <span ng-if="!registering">\n                        <span ng-if="!oauth.via">注 册</span>\n                        <span ng-if="oauth.via">完成注册</span>\n                    </span>\n                    <span ng-if="registering"><i class="loading icon" style="margin-right: 0"></i></span>\n                </div>\n                <div class="activate" ng-switch="registerType()">\n                    <a class="gray" href="/user/activate" ng-switch-when="normal">\n                        已经注册？重发激活邮件\n                    </a>\n                    <a class="gray" href="/login?phone=phone" ng-switch-when="phone">\n                        已经注册？点击登录\n                    </a>\n                    <a class="ui button medium fluid oauth-binding-button" href="/login?via={{oauth.via}}&email={{oauth.email}}" ng-switch-when="oauth">已有 Coding 账号，直接绑定</a>\n                </div>\n            </div>\n        </div>\n    </form>\n\n    <ng-include src="\'app/user/account/phone_entrance.html\'" ng-if="registerType() === \'phone\' || registerType() === \'normal\'"></ng-include>\n\n    <ng-include src="\'app/user/account/oauth_entrance.html\'"></ng-include>\n</div>\n<ng-include src="\'app/user/account/about.html\'"></ng-include>'),
        $templateCache.put("app/user/account/resetPassword.html", '<style type="text/css">\n    #reset-region{\n        margin:80px auto;\n    }\n    #reset-region .header {\n        color: white;\n        text-align: center;\n        font-size: 40px;\n        font-weight: normal;\n    }\n    #reset-region .button {\n        width: 100%;\n        margin-top: 20px;\n    }\n    #reset-region form {\n        width: 350px;\n        margin: 0 auto;\n    }\n    #reset-region .footer {\n        margin-top: 10px;\n        text-decoration: none;\n        text-align: center;\n    }\n    #reset-region .footer a{\n        color: #FFF;\n    }\n    #reset-region input {\n        opacity: 0.9;\n    }\n    #reset-region .ui.red.horizontal.label {\n        background: #D95C5C;\n        left: 360px;\n        top: -28px;\n    }\n    #reset-region .arrow_box {\n        position: relative;\n        background: #d50000;\n    }\n    #reset-region .arrow_box:after {\n        right: 100%;\n        top: 50%;\n        border: solid transparent;\n        content: " ";\n        height: 0;\n        width: 0;\n        position: absolute;\n        pointer-events: none;\n        border-color: rgba(213, 0, 0, 0);\n        border-right-color: #D95C5C;\n        border-width: 5px;\n        margin-top: -5px;\n    }\n</style>\n<div class="ui basic" id="reset-region">\n    <h2 class="header">重设密码</h2>\n    <form>\n        <div class="ui form">\n            <input type="hidden" ng-model="form.email">\n            <input type="hidden" ng-model="form.key">\n            <div class="field">\n                <div class="ui left labeled icon large input">\n                    <input type="text" ng-model="form.email" disabled="disabled">\n                    <i class="mail icon"></i>\n                </div>\n            </div>\n            <div class="field" ng-class="{error: !canPassword}">\n                <div class="ui left labeled icon large input">\n                    <input type="password" ng-model="form.password" style="display: initial" placeholder="密码" cg-timeout-input="checkPassword(form.password)" ng-blur="checkPassword(form.password)">\n                    <i class="lock icon"></i>\n                </div>\n                <div class="ui red horizontal label arrow_box" ng-if="!canPassword">{{passwordError}}</div>\n            </div>\n            <div class="field" ng-class="{error: !canConfirm}">\n                <div class="ui left labeled icon large input">\n                    <input type="password" ng-model="form.confirm_password" style="display: initial" placeholder="重复密码" cg-timeout-input="checkConfirm(form.password, form.confirm_password)" ng-blur="checkConfirm(form.password, form.confirm_password)">\n                    <i class="lock icon"></i>\n                </div>\n                <div class="ui red horizontal label arrow_box" ng-if="!canConfirm">{{confirmError}}</div>\n            </div>\n            <div>\n                <input type="submit" value="确定" class="ui coding large dark gray button" ng-click="doreset(form)">\n            </div>\n        </div>\n    </form>\n</div>'),
        $templateCache.put("app/user/account/sendResetPassword.html", '<div class="account-box reset" ng-class="{\'email\' : step() === \'email\', \'phone\' : step() === \'phone\'}">\n    <form method="POST">\n        <div class="ui form">\n\n            <!--第一步，判断是email还是手机-->\n            <div class="field" ng-class="{error: !judge_ok}" ng-if="step() === \'judge\'">\n                <div class="ui left labeled icon large input">\n                    <input type="text" ng-model="form.judge" placeholder="电子邮箱 / 手机号码" cg-timeout-input="checkJudge(form.judge)" time="1000" ng-blur="checkJudge(form.judge)">\n                    <i class="user icon"></i>\n                </div>\n                <div class="ui red horizontal label arrow_box" ng-if="!judge_ok">{{judge_error_msg}}</div>\n            </div>\n\n            <!--下一步-->\n            <div class="field" ng-if="step() === \'judge\'">\n                <div class="ui coding large green gray button fluid" ng-click="next()">\n                    <span>下一步</span>\n                    <span ng-if="logining"><i class="loading icon" style="margin-right: 0"></i></span>\n                </div>\n                <div class="activate">\n                    <a class="gray" href="javascript:history.back(-1);">返回</a>\n                </div>\n            </div>\n\n            <!--email-->\n            <div class="field" ng-class="{error: !email_ok}" ng-if="step() === \'email\'">\n                <div class="ui left labeled icon large input">\n                    <input type="text" ng-model="form.email" placeholder="电子邮箱" disabled="disabled">\n                    <i class="mail icon"></i>\n                </div>\n                <div class="ui red horizontal label arrow_box" ng-if="!email_ok">{{email_error_msg}}</div>\n                <div class="ui red horizontal label arrow_box" ng-if="show_email_notice">{{email_notice}}</div>\n            </div>\n\n            <!--手机号-->\n            <div class="field" ng-class="{error: !phone_ok}" ng-if="step() === \'phone\'">\n                <div class="phone-input ui left labeled icon large input">\n                    <input type="text" ng-model="form.phone" placeholder="手机号" cg-timeout-input="checkPhone(form.phone)" time="1000" ng-blur="checkPhone(form.phone)" disabled="disabled">\n                    <i class="phone icon"></i>\n                    <a class="ui button" ng-click="sendCode()" ng-disabled="code_btn_disabled" ng-class="{disabled: code_btn_disabled}">\n                        {{code_btn_text}}\n                    </a>\n                </div>\n                <div class="ui red horizontal label arrow_box" ng-if="!phone_ok">{{phone_error_msg}}</div>\n            </div>\n\n            <!--手机验证码-->\n            <div class="field" ng-class="{error: !code_ok}" ng-if="step() === \'phone\'">\n                <div class="ui left labeled icon large input">\n                    <input type="text" ng-model="form.code" placeholder="手机验证码" cg-timeout-input="checkCode(form.code)" time="1000" ng-blur="checkCode(form.code)">\n                    <i class="mail outline icon"></i>\n                    <i ng-if="code_checking" class="loading icon"></i>\n                </div>\n                <div class="ui red horizontal label arrow_box" ng-if="!code_ok">{{code_error_msg}}</div>\n            </div>\n\n            <!--密码确认密码-->\n            <div class="field" ng-class="{error: !password_ok}" ng-if="step() === \'phone\'">\n                <div class="ui left labeled icon large input">\n                    <input type="password" ng-model="form.password" style="display: initial" placeholder="密码" cg-timeout-input="checkPassword(form.password)" time="1000" ng-blur="checkPassword(form.password)">\n                    <i class="lock icon"></i>\n                </div>\n                <div class="ui red horizontal label arrow_box" ng-if="!password_ok">{{password_error_msg}}</div>\n            </div>\n            <div class="field" ng-class="{error: !confirm_ok}" ng-if="step() === \'phone\'">\n                <div class="ui left labeled icon large input">\n                    <input type="password" ng-model="form.confirm" style="display: initial" placeholder="重复密码" cg-timeout-input="checkConfirm(form.password, form.confirm)" time="1000" ng-blur="checkConfirm(form.password, form.confirm)">\n                    <i class="lock icon"></i>\n                </div>\n                <div class="ui red horizontal label arrow_box" ng-if="!confirm_ok">{{confirm_error_msg}}</div>\n            </div>\n\n            <!--网页验证码-->\n            <div class="field captcha" ng-if="step() !== \'judge\'">\n                <div class="ui left labeled icon large input captcha">\n                    <input id="captcha" name="captcha" type="text" ng-model="form.j_captcha" placeholder="验证码" required>\n                    <i class="shield icon"></i>\n                </div>\n                <img class="captcha" ng-src="{{captcha}}" ng-click="refreshCaptcha()">\n            </div>\n\n            <div class="field" ng-if="step() !== \'judge\'">\n                <div class="ui coding large green gray button fluid" ng-click="dosendreset(form)">\n                     <span ng-if="!resetting">\n                         {{step() === \'phone\' ? \'重设密码\' : \'发送重置邮件\'}}\n                     </span>\n                     <span ng-if="resetting">\n                         <i class="loading icon" style="margin-right: 0"></i>\n                     </span>\n                </div>\n                <div class="activate">\n                    <a class="gray" href="javascript:history.back(-1);">返回</a>\n                </div>\n            </div>\n\n        </div>\n    </form>\n</div>\n<ng-include src="\'app/user/account/about.html\'"></ng-include>'),
        $templateCache.put("app/user/account/supplement.html", "<ng-include src=\"'app/user/account/register2.html'\"></ng-include>"),
        $templateCache.put("app/user/account_setting/account/account.html", '<div class="user-account-wrapper">\n    <section class="summary" ng-controller="AccountSummaryCtrl">\n        <img class="ui image avatar96" ng-src="{{ USER.lavatar }}">\n        <article>\n            <h2 ng-bind="USER.name"></h2>\n\n            <div class="detail">\n                <div class="ui two column stackable grid" bindonce="summary.balance">\n                    <div class="row">\n                        <div class="column" style="border-right: 1px solid #EEE">\n                            <div class="inner-item">\n                                <i class="archive icon"></i>\n                                拥有项目：<span bo-text="summary.private + summary.public"></span>\n                                （公开 <span bo-text="summary.public"></span>/私有 <span bo-text="summary.private"></span>）\n                            </div>\n                            <div class="inner-item">\n                                <i class="bar chart icon"></i>\n                                免费演示内存：\n                                <div class="progress-bar" bo-title="memoryRate(summary)">\n                                    <div class="progress" bo-style="{width: memoryRate(summary)}"></div>\n                                </div>\n                                <strong><span bo-text="summary.used_memory"></span>M</strong> / <span bo-text="summary.total_memory"></span>M\n                            </div>\n                        </div>\n                        <div class="column" style="padding-left: 50px">\n                            <div class="inner-item">\n                                <i class="us dollar icon"></i>余额：<em bo-text="summary.balance"></em> 元\n                                <a class="ui small green button" href="/user/account/top-up">充值</a>\n                            </div>\n                            <div class="inner-item">\n                                <i class="ui coding icon coding-gold"></i>码币\n                                <sup>\n                                    <a class="gray" href="/help/doc/account/shop.html" target="_blank">\n                                        <i class="help icon" style="color: #666;font-size: 12px"></i>\n                                    </a>\n                                </sup>\n                                ：<a href="/user/account/credit"><em bo-text="summary.point_left" style="vertical-align: middle"></em></a>\n                                <a href="javascript:void(0)" class="ui small green button" ng-click="exchangeCoin()">购买码币</a>\n                                <div class="ui tiny40 modal account-exchange-coin-modal" ng-controller="AccountExchangeCoinCtrl" cg-modal="exchange_coin_modal" ng-include="\'app/user/account_setting/account/modal/exchange-coin-modal.html\'"></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </article>\n    </section>\n    <section class="projects" ng-controller="UserPayedProjectCtrl">\n        <h3>\n            <a class="gray" href="{{ PROJECT.project_path + \'/user/account/payed-project\' }}">\n                付费项目（<span ng-bind="total_size"></span>）\n            </a>\n        </h3>\n        <article class="markdown content">\n            <table class="text-align-left-th">\n                <thead>\n                <tr>\n                    <th width="20%">项目名</th>\n                    <th width="20%">类型</th>\n                    <th width="20%">剩余天数</th>\n                    <th width="20%">续费</th>\n                    <th width="20%">操作</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr bindonce ng-repeat="project in projects">\u2028\n                    <td><a bo-href="project.project_path" bo-text="project.name"></a></td>\n                    <td ng-if="project.expired_plan">\u2028\n                        <span bo-text="versions[project.expired_plan].name"></span>\u2028\n                        <em class="project-expired-label">已到期</em>\u2028\n                    </td>\n                    <td bo-text="versions[project.plan].name" ng-if="!project.expired_plan"></td>\n                    <td bo-text="project.remain_day || 0"></td>\n                    <td bo-text="renewalStatus(project)"></td>\n                    <td>\u2028\n                        <a ng-if="!project.expired_plan" bo-href="project.project_path + \'/setting/summary\'">设置</a>\u2028\n                        <a ng-if="project.expired_plan" class="ui small button green" bo-href="project.project_path + \'/setting/summary/upgrade\'">重新升级</a>\u2028\n                    </td>\n                </tr>\n                <tr ng-if="projects.length === 0">\n                    <td colspan="6" align="center">\n                    <span ng-if="loaded">\n                        尚无付费项目 <a class="ui small green button" style="margin-left: 10px" href="/upgrade">马上升级</a>\n                    </span>\n                    <span ng-if="loading">\n                        <i class="loading icon"></i>正在加载数据...\n                    </span>\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n        </article>\n    </section>\n    <section class="history" ng-controller="AccountPaymentHistoryCtrl">\n        <h3>\n            <a class="gray" href="{{ PROJECT.project_path + \'/user/account/payment-history/pay\' }}">\n                最近消费记录（<span ng-bind="total_size.pay"></span>）\n            </a>\n        </h3>\n        <article class="markdown content">\n            <table class="text-align-left-th">\n                <thead>\n                <tr>\n                    <th width="10%">消费编号</th>\n                    <th width="40%">消费内容</th>\n                    <th width="20%">消费金额</th>\n                    <th width="30%">消费时间</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr bindonce ng-repeat="log in pay_logs">\n                    <td bo-text="log.id"></td>\n                    <td bo-html="log.remark"></td>\n                    <td bo-text="\'￥\' + log.price"></td>\n                    <td bo-text="log.created_at | date : \'yyyy-MM-dd HH:mm:ss\'"></td>\n                </tr>\n                </tbody>\n                <tr ng-if="pay_logs.length === 0">\n                    <td colspan="4" align="center">\n                    <span ng-if="load.pay.loaded">\n                        尚无消费记录\n                    </span>\n                    <span ng-if="load.pay.loading">\n                        <i class="loading icon"></i>正在加载数据...\n                    </span>\n                    </td>\n                </tr>\n            </table>\n        </article>\n    </section>\n</div>'),
        $templateCache.put("app/user/account_setting/account/credit.html", '<div class="score-wrapper" ng-controller="AccountPointCtrl">\n    <div ng-if="tab !== \'gift\'">\n        <section class="summary">\n            <div class="ui three column divided grid">\n                <div class="row">\n                    <div class="column">\n                        <h4>码币余额</h4>\n                        <strong ng-if="points_loading"><i class="icon loading"></i></strong>\n                        <strong class="green" ng-if="!points_loading">{{points.points_left}}</strong>\n                    </div>\n                    <div class="column consume">\n                        <a class="ui green button" href="javascript:void(0)" ng-click="exchangeCoin()">购买码币</a>\n                        <a class="ui red button" href="/shop" target="_blank">商城</a>\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section class="detail">\n            <article class="markdown content">\n                <div class="tips">\n                    <span ng-if="loading"><i class="icon loading"></i>正在加载。。。</span>\n                    <span ng-if="!loading && point_records.length <= 0">无记录。</span>\n                </div>\n                <table ng-if="point_records.length > 0">\n                    <thead>\n                    <tr>\n                        <th class="time">时间</th>\n                        <th class="change">交易</th>\n                        <th class="left">余额</th>\n                        <th class="comments">备注</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr ng-repeat="record in point_records">\n                        <td class="time">{{record.created_at | date: \'yyyy-MM-dd HH:mm:ss\'}}</td>\n\n                        <td class="change">\n                            <span ng-if="record.action === 1">+</span>\n                            <span ng-if="record.action === 2">-</span>\n                            {{record.points_change}}\n                        </td>\n                        <td class="left">\n                            {{record.points_left}}\n                        </td>\n                        <td class="comments" ng-bind-html="record.usage"></td>\n                    </tr>\n                    </tbody>\n                </table>\n            </article>\n        </section>\n        <div cg-pager="{{pager_id}}" class="center"></div>\n    </div>\n    <div ng-if="tab === \'gift\' && !gift_id">\n        <div class="gift-wrapper">\n            <div class="title">\n                <span>购买码币</span>\n                <span class="points-left">（码币余额：{{points.points_left}}）</span>\n            </div>\n            <div class="gift-item" ng-repeat="gift in gifts">\n                <div class="content">\n                    <img ng-src="{{gift.image}}">\n                    <span class="gift-name">{{gift.name}}</span>\n                    <span class="gift-cost">{{gift.points_cost}} 码币</span>\n                    <span></span>\n                </div>\n                <div class="action">\n                    <a href="javascript:void(0)" ng-click="exchange(gift.id)" class="ui button medium exchange">立即兑换</a>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div ng-if="gift_id" ng-include="\'app/user/account_setting/account/gift-exchange.html\'"></div>\n    <div class="ui tiny40 modal account-exchange-coin-modal" ng-controller="AccountExchangeCoinCtrl" cg-modal="exchange_coin_modal" ng-include="\'app/user/account_setting/account/modal/exchange-coin-modal.html\'"></div>\n</div>'),
        $templateCache.put("app/user/account_setting/account/gift-exchange.html", '<div ng-controller="GiftExchangeController">\n    <div class="exchange-wrapper">\n        <div class="header">\n            <span>兑换确认</span>\n        </div>\n        <div class="gift-info">\n            <span class="title">兑换商品</span>\n            <img ng-src="{{gift.image}}" width="100">\n            <span style="margin-bottom: 20px;color: #333">{{gift.name}}</span>\n        </div>\n        <div class="exchange-info">\n            <span class="title">收件信息</span>\n            <form>\n                <div class="field">\n                    <label>收件人：</label>\n                    <div class="ui small input" style="text-indent: 15px">\n                        <input type="text" ng-model="exchange_user.name">\n                    </div>\n                </div>\n                <div class="field">\n                <label>收件地址：</label>\n                    <div class="ui small input">\n                        <input type="text" ng-model="exchange_user.address">\n                    </div>\n                </div>\n                <div class="field">\n                    <label>手机号码：</label>\n                    <div class="ui small input">\n                        <input type="text" ng-model="exchange_user.phone">\n                    </div>\n                </div>\n            </form>\n        </div>\n        <div class="confirm">\n            <span class="title">输入用户密码以确认兑换</span>\n            <form>\n                <div class="field" style="margin-bottom:20px">\n                    <label>用户密码：</label>\n                    <div class="ui small input">\n                        <input type="password" ng-model="exchange_user.password">\n                    </div>\n                </div>\n                <a href="javascript:void(0)" class="ui default green button" ng-click="submit(exchange_user)">\n                    <i class="icon loading" ng-if="submitting || sending"></i>确认兑换</a>\n                <a href="/user/account/score/gift" class="gray">取消</a>\n            </form>\n            <span class="exchange-tip">* 确认兑换后，你的兑换信息将私信给 Coding</span>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/user/account_setting/account/invoice.html", '<div class="invoice-wrapper" ng-controller="AccountInvoiceCtrl">\n    <header class="ui dividing header">发票管理</header>\n    <div class="invoice-available">\n        可开发票总额：<em ng-bind="available_invoice_price"></em> 元\n    </div>\n    <form class="invoice-form ui small form" method="POST">\n        <div class="inline field">\n            <label>发票金额：</label>\n            <input type="text" ng-model="invoice_price" style="width: 100px;margin-right: 5px">\n            元 <span class="tips">* 开票金额最小额度 100 元</span>\n        </div>\n        <div class="field">\n            <button class="ui green button" ng-click="createInvoice();">\n                开具发票\n            </button>\n        </div>\n    </form>\n    <section class="invoice-list">\n        <h2>已开具发票列表</h2>\n        <article class="markdown content">\n            <table class="text-align-left-th">\n                <thead>\n                <tr>\n                    <th>发票金额(元)</th>\n                    <th>发票抬头</th>\n                    <th>配送地址</th>\n                    <th>申请时间</th>\n                    <th>状态</th>\n                    <th>快递公司/单号</th>\n                    <th>操作</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr bindonce ng-repeat="invoice in invoices">\n                    <td bo-text="invoice.price"></td>\n                    <td bo-text="invoice.title"></td>\n                    <td bo-text="invoice.receiver_address"></td>\n                    <td bo-text="invoice.created_at | date : \'yyyy-MM-dd HH:mm:ss\'"></td>\n                    <td bo-text="invoice_status[invoice.status]"></td>\n                    <td>\n                        <a bo-if="invoice.express_order_id.length > 0" bo-href="\'http://www.baidu.com/s?wd=\'+invoice.express_company + \'+\' + invoice.express_order_id" target="_blank" bo-text="expressInfo(invoice)">\n                        </a>\n                        <span bo-if="invoice.express_order_id.length === 0" bo-text="expressInfo(invoice)"></span>\n                    </td>\n                    <td bo-switch="invoice.status">\n                        <span bo-switch-when="1">\n                            <a href="javascript:void(0);" ng-click="editInvoice(invoice);">编辑</a> |\n                            <a href="javascript:void(0);" ng-click="removeInvoice(invoice);">删除</a>\n                        </span>\n                        <span bo-switch-when="3">\n                            <a href="javascript:void(0);" ng-click="signInvoice(invoice);">签收</a>\n                        </span>\n                    </td>\n                </tr>\n                <tr ng-if="invoices.length === 0">\n                    <td colspan="7" align="center">\n                    <span ng-if="loaded">\n                        尚未开具发票\n                        <span ng-if="available_invoice_price > 100">\n                            ，现在马上\n                            <a class="ui small green button" style="margin-left: 10px" href="javascript:void(0);" ng-click="createInvoice();">开具发票</a>\n                        </span>\n                    </span>\n                    <span ng-if="loading">\n                        <i class="loading icon"></i>正在加载数据...\n                    </span>\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n            <div cg-pager="{{ invoice_pager_id }}" class="center"></div>\n        </article>\n    </section>\n    <div class="ui modal account-invoice-modal" ng-controller="AccountAddInvoiceCtrl" cg-modal="invoice_modal" ng-include="\'app/user/account_setting/account/modal/invoice-modal.html\'"></div>\n</div>'),
        $templateCache.put("app/user/account_setting/account/modal/exchange-coin-modal.html", '<i class="close icon"></i>\n<div class="header">\n    购买码币\n</div>\n<div class="content">\n    <div class="field summary">\n        <div class="item">\n            <span class="title">账户余额：</span>\n            <em>{{summary.balance}}</em> 元\n        </div>\n        <div class="item">\n            <span class="title">码币余额：</span>\n            <em>{{summary.point_left}}</em>\n        </div>\n    </div>\n    <form class="ui small form">\n        <div class="inline field exchange-rate">\n            <span class="summary">{{summary.exchange_message}}</span>\n        </div>\n        <div class="inline field">\n            <label>码币金额</label>\n            <input type="text" placeholder="{{available}}" decimals="1" decimal-point="." cg-enter="exchange()" ng-model="form.num">\n        </div>\n        <div class="inline field password">\n            <label>用户密码</label>\n            <input type="password" cg-enter="exchange()" ng-model="form.password">\n        </div>\n    </form>\n</div>\n<div class="action-buttons">\n    <a class="ui green button" ng-click="exchange()">确认购买\n        <i class="icon loading" ng-if="exchanging"></i></a>\n</div>'),
        $templateCache.put("app/user/account_setting/account/modal/invoice-modal.html", '<div class="header" ng-switch="invoice_edit_type">\n    <span ng-switch-when="add">开具发票</span>\n    <span ng-switch-when="update">更新发票</span>\n</div>\n<div class="content">\n    <form class="ui small form" ng-class="{loading: saving}">\n        <div class="field">\n            <h4>发票信息</h4>\n        </div>\n        <div class="inline field">\n            <label>发票金额：</label>\n            <em class="invoice-price" ng-if="invoice_edit_type === \'add\'" ng-bind="form.price"></em>\n            <input type="text" style="width: 15%;margin-right: 10px" ng-if="invoice_edit_type === \'update\'" ng-model="form.price"> 元\n            <span ng-if="invoice_edit_type === \'update\'">\n                <span class="tips">\n                    * 开票金额最小额度 100 元\n                    <span ng-if="available_invoice_price">，当前可开发票总额：<em ng-bind="current_available_invoice_price"></em> 元</span>\n                </span>\n            </span>\n        </div>\n        <div class="inline field">\n            <label>发票抬头：</label>\n            <input type="text" name="title" ng-model="form.title">\n        </div>\n        <div class="field">\n            <h4>配送信息</h4>\n        </div>\n        <div class="inline field">\n            <label>收件人：</label>\n            <input type="text" name="receiver" ng-model="form.receiver">\n        </div>\n        <div class="inline field">\n            <label>收件地址：</label>\n            <input type="text" name="receiver_address" ng-model="form.receiver_address">\n        </div>\n        <div class="inline field">\n            <label>手机号码：</label>\n            <input type="text" name="receiver_phone" ng-model="form.receiver_phone">\n        </div>\n    </form>\n</div>\n<div class="action-buttons">\n    <a class="ui button borderless close">取消</a>\n    <a class="ui green button" ng-if="invoice_edit_type === \'add\'" ng-click="addInvoice(form);">开具发票</a>\n    <a class="ui green button" ng-if="invoice_edit_type === \'update\'" ng-click="updateInvoice(form);">更新发票</a>\n</div>'),
        $templateCache.put("app/user/account_setting/account/modal/top-up-modal.html", '<div class="header">网上支付提示</div>\n<div class="content">\n    <article>\n        <p>\n            支付完成前，请不要关闭此支付窗口。<br>\n            支付完成后，请根据支付情况点击下面的按钮。\n        </p>\n        <div>\n            <div class="ui button cancel" ng-click="payError();">支付遇到问题</div>\n            <div class="ui green button ok" ng-click="paySuccess();">支付成功</div>\n        </div>\n    </article>\n</div>'),
        $templateCache.put("app/user/account_setting/account/modal/top-up-result-modal.html", '<div class="header">网上支付提示</div>\n<div class="content">\n    <h2 class="green" ng-if="chargeResult.result">\n        充值成功！（<span ng-bind="chargeResult.price + \'元\'"></span>）\n    </h2>\n</div>'),
        $templateCache.put("app/user/account_setting/account/payed-project.html", '<div class="payed-project-wrapper" ng-controller="UserPayedProjectCtrl">\n    <header class="ui dividing header">我的付费项目（<span ng-bind="total_size"></span>）</header>\n    <article class="markdown content">\n        <table class="text-align-left-th">\n            <thead>\n            <tr>\n                <th width="20%">项目名</th>\n                <th width="20%">类型</th>\n                <th width="20%">剩余天数</th>\n                <th width="20%">续费</th>\n                <th width="20%">操作</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr bindonce ng-repeat="project in projects">\u2028\n                <td><a bo-href="project.project_path" bo-text="project.name"></a></td>\n                <td ng-if="project.expired_plan">\u2028\n                    <span bo-text="versions[project.expired_plan].name"></span>\u2028\n                    <em class="project-expired-label">已到期</em>\u2028\n                </td>\n                <td bo-text="versions[project.plan].name" ng-if="!project.expired_plan"></td>\n                <td bo-text="project.remain_day || 0"></td>\n                <td bo-text="renewalStatus(project)"></td>\n                <td>\u2028\n                    <a ng-if="!project.expired_plan" bo-href="project.project_path + \'/setting/summary\'">设置</a>\u2028\n                    <a ng-if="project.expired_plan" class="ui small button green" bo-href="project.project_path + \'/setting/summary/upgrade\'">重新升级</a>\u2028\n                </td>\n            </tr>\n            <tr ng-if="projects.length === 0">\n                <td colspan="6" align="center">\n                    <span ng-if="loaded">\n                        尚无付费项目，<a class="ui small green button" style="margin-left: 10px" href="/upgrade">马上升级</a> 付费项目\n                    </span>\n                    <span ng-if="loading">\n                        <i class="loading icon"></i>正在加载数据...\n                    </span>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n\n    </article>\n</div>'),
        $templateCache.put("app/user/account_setting/account/payment-history.html", '<div class="payment-history-wrapper" ng-controller="AccountPaymentHistoryCtrl">\n    <div class="ui tabular menu">\n        <a class="item" ng-class="{active: tab === \'pay\'}" href="/user/account/payment-history/pay">\n            消费记录 <span class="ui circular label" ng-if="load.pay.loaded" ng-bind="total_size.pay"></span>\n        </a>\n        <a class="item" ng-class="{active: tab === \'top-up\'}" href="/user/account/payment-history/top-up">\n            充值记录<span class="ui circular label" ng-if="load.top_up.loaded" ng-bind="total_size.top_up"></span>\n        </a>\n    </div>\n    <article class="markdown content" ng-if="tab === \'pay\'" style="overflow: inherit">\n        <table class="text-align-left-th">\n            <thead>\n            <tr>\n                <th width="10%">消费编号</th>\n                <th width="40%">消费内容</th>\n                <th width="20%">消费金额</th>\n                <th width="30%">消费时间</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr bindonce ng-repeat="log in pay_logs">\n                <td bo-text="log.id"></td>\n                <td bo-html="log.remark"></td>\n                <td bo-text="\'￥\' + log.price"></td>\n                <td bo-text="log.created_at | date : \'yyyy-MM-dd HH:mm:ss\'"></td>\n            </tr>\n            </tbody>\n            <tr ng-if="pay_logs.length === 0">\n                <td colspan="4" align="center">\n                    <span ng-if="load.pay.loaded">\n                        尚无消费记录\n                    </span>\n                    <span ng-if="load.pay.loading">\n                        <i class="loading icon"></i>正在加载数据...\n                    </span>\n                </td>\n            </tr>\n        </table>\n        <div cg-pager="{{ payment_pager_id }}" class="center"></div>\n    </article>\n    <article class="markdown content" ng-if="tab === \'top-up\'" style="overflow: inherit">\n        <table class="text-align-left-th">\n            <thead>\n            <tr>\n                <th width="15%">流水号</th>\n                <th>充值时间</th>\n                <th width="15%">充值金额</th>\n                <th width="15%">充值渠道</th>\n                <th width="15%">状态</th>\n                <th width="15%">操作</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr bindonce ng-repeat="log in charge_logs">\n                <td bo-text="log.id" width=""></td>\n                <td bo-text="log.created_at | date : \'yyyy-MM-dd HH:mm:ss\'"></td>\n                <td bo-text="\'￥\' + log.price"></td>\n                <td bo-text="payment_platforms[log.platform]"></td>\n                <td bo-text="payment_status[log.status]"></td>\n                <td>\n                    <div class="ui simple dropdown" bo-if="log.status === 0">\n                        <a class="ui small button" ng-href="{{\'/api/payment/charge/\' + log.id + \'/url\' }}" target="_blank" ng-click="goPay(log)">继续支付</a>\n                        <i class="dropdown icon"></i>\n\n                        <div class="menu">\n                            <div class="item" ng-click="cancelPay(log.id, log.price)"><i class="off icon"></i>取消支付</div>\n                        </div>\n                    </div>\n                </td>\n            </tr>\n            <tr ng-if="charge_logs.length === 0">\n                <td colspan="6" align="center">\n                    <span ng-if="load.top_up.loaded">\n                        尚无充值记录 <a class="ui small green button" style="margin-left: 10px" href="/user/account/top-up">马上充值</a>\n                    </span>\n                    <span ng-if="load.top_up.loading">\n                        <i class="loading icon"></i>正在加载数据...\n                    </span>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n        <div cg-pager="{{ charge_pager_id }}" class="center"></div>\n        <div class="ui modal top-up-modal" cg-modal="top_up_modal" ng-include="\'app/user/account_setting/account/modal/top-up-modal.html\'"></div>\n    </article>\n</div>'),
        $templateCache.put("app/user/account_setting/account/top-up.html", '<div class="top-up-wrapper" ng-controller="AccountTopUpCtrl">\n    <header class="ui dividing header">账户充值</header>\n    <p class="description">\n        用户充值后不仅能升级项目，而且能购买 Coding 旗下的其他服务和产品。\n    </p>\n    <div class="balance">\n        账户余额：<em ng-bind="balance"></em> 元\n    </div>\n    <form class="top-up-form ui small form" action="/api/payment/charge" target="_blank" method="POST" ng-submit="topUp($event, form)">\n        <div class="inline field">\n            <label>充值金额：</label>\n            <input type="text" name="price" ng-model="form.price" decimals="2" decimal-point="." style="width: 100px;margin-right: 5px" cg-auto-focus>\n            元 <!--<span class="tips">* 最少充值金额 100 元</span>-->\n        </div>\n        <div class="inline field">\n            <label>充值方式：</label>\n            <input type="radio" id="top-up-method-alipay" value="alipay" name="platform" ng-model="form.platform" placeholder="" checked="checked">\n            <label for="top-up-method-alipay">\n                <img class="top-up-method-img" src="/static/baf1cf414bd43a036b8b15c589e66694.gif" alt="alipay">\n            </label>\n            <input type="radio" id="top-up-method-weixin" value="weixin" name="platform" ng-model="form.platform" placeholder="" style="margin-left: 30px">\n            <label for="top-up-method-weixin">\n                <img class="top-up-method-img" src="/static/5965fe18cd6c1951fe15884b2f3e54a6.jpg" style="height: 37px" alt="weixin">\n            </label>\n        </div>\n        <div class="field">\n            <input class="ui green button" type="submit" value="马上充值">\n        </div>\n    </form>\n    <div class="ui modal top-up-modal" cg-modal="top_up_modal" ng-include="\'app/user/account_setting/account/modal/top-up-modal.html\'"></div>\n    <div ng-if="chargeResult.result" class="ui modal top-up-result-modal" cg-modal="result_modal" ng-include="\'app/user/account_setting/account/modal/top-up-result-modal.html\'"></div>\n</div>'),
        $templateCache.put("app/user/account_setting/index.html", '<div class="ui secondary vertical fixed menu active" id="inner-menu">\n    <header class="header item">\n        账户\n        <article>\n            包括用户账户、码币以及个人设置信息\n        </article>\n    </header>\n    <a class="item" ng-href="/user/account" ng-class="{active:inner_menu == \'account\'}">\n        <i class="dashboard icon"></i>概览\n    </a>\n    <a class="item" ng-href="/user/account/top-up" ng-class="{active:inner_menu == \'top-up\'}">\n        <i class="japanese yen icon"></i>账户充值\n    </a>\n    <a class="item" ng-href="/user/account/payed-project" ng-class="{active:inner_menu == \'payed-project\'}">\n        <i class="coding project icon"></i>付费项目\n    </a>\n    <a class="item" ng-href="/user/account/payment-history" ng-class="{active:inner_menu == \'payment-history\'}">\n        <i class="unordered list icon"></i>充值/消费记录\n    </a>\n    <a class="item" ng-href="/user/account/invoice" ng-class="{active:inner_menu == \'invoice\'}">\n        <i class="us dollar icon"></i>发票管理\n    </a>\n    <a class="item" ng-href="/user/account/credit" ng-class="{active:inner_menu == \'credit\'}">\n        <i class="ui coding icon coding-gold"></i>码币\n    </a>\n    <div class="sep"></div>\n    <a class="item" ng-href="/user/account/setting/basic" ng-class="{active:tab == \'basic\'}">\n        <i class="user icon"></i>个人设置\n    </a>\n    <a class="item" ng-href="/user/account/setting/keys" ng-class="{active:tab == \'keys\'}" ng-if="USER.status == 1">\n        <i class="key icon"></i>SSH 公钥\n    </a>\n    <a class="item" ng-href="/user/account/setting/security" ng-class="{active:tab == \'security\'}" ng-if="USER.status == 1">\n        <i class="lock icon"></i>密码设置\n    </a>\n    <a class="item" ng-href="/user/account/setting/two_factor_authentication" ng-class="{active:tab == \'two_factor_authentication\'}" ng-if="USER.status == 1">\n        <i class="shield icon"></i>两步验证\n    </a>\n    <a class="item" ng-href="/user/account/setting/notification" ng-class="{active:tab == \'notification\'}" ng-if="USER.status == 1">\n        <i class="bell icon"></i>提醒设置\n    </a>\n    <a class="item" ng-href="/user/account/setting/oauth" ng-class="{active:tab == \'oauth\'}" ng-if="USER.status == 1">\n        <i class="url icon"></i>绑定设置\n    </a>\n    <a class="item" ng-href="/user/account/setting/applications" ng-class="{active:tab == \'applications\'}" ng-if="USER.status == 1">\n        <i class="briefcase icon"></i>应用管理\n    </a>\n    <div class="scroll-holder"></div>\n</div>\n<div class="container" id="user-setting" ng-include="keysPath()">\n</div>'),
        $templateCache.put("app/user/account_setting/setting/applications.html", '<style>\n    #app-setting .fields .field input {margin-bottom:10px}\n    #app-setting .button {margin-right:10px}\n    #app-setting .actions {\n        float:right;\n    }\n    #app-setting .actions a span {\n        color: #df5a5a!important;\n    }\n    #app-setting .actions {\n        margin-top: 20px\n    }\n    #app-setting input[type="file"] {\n        display: inline-block;\n        position: absolute;\n        margin: 0;\n        opacity: 0;\n        direction: ltr;\n        cursor: pointer;\n        z-index: 999;\n        width: 140px;\n        height: 140px;\n    }\n    #app-setting .form {\n        box-shadow: none;\n    }\n    #app-setting .list {\n\n    }\n    #app-setting .list .tips {\n        text-align:center;\n        color: #999;\n    }\n    #app-setting .list article.markdown.content table {\n        table-layout: fixed;\n    }\n    #app-setting .list article.markdown.content table th {\n        color: #666;\n        text-align: left;\n    }\n    #app-setting .list article.markdown.content table th.name,\n    #app-setting .list article.markdown.content table th.homepage,\n    #app-setting .list article.markdown.content table th.callback {\n        width: 20%;\n    }\n    #app-setting .list article.markdown.content table td {\n        border: none !important;\n        vertical-align: top;\n    }\n    #app-setting .list article.markdown.content table td.name {\n        color: #333;\n        line-height: 23px;\n    }\n    #app-setting .list article.markdown.content table tbody {\n        border: 1px solid #CCC;\n    }\n    #app-setting .list article.markdown.content table tbody {\n        border: 1px solid #DDD;\n    }\n    #app-setting .list article.markdown.content table tbody .auth-app img {\n        padding: 0;\n    }\n    #app-setting .list article.markdown.content table th.auth-app,\n    #app-setting .list article.markdown.content table th.scope,\n    #app-setting .list article.markdown.content table th.operation {\n        width: 20%;\n    }\n    #app-setting .list article.markdown.content table td.operation .ui.mini {\n        color: #df5a5a!important\n    }\n    #app-setting .list article.markdown.content table td.scope,\n    #app-setting .list article.markdown.content table td.last-used{\n        color: #999\n    }\n    #app-setting .list.auth-app-list {\n        margin-top: 20px\n    }\n</style>\n\n<div class="container" id="app-setting" ng-controller="ApplicationController">\n    <div ng-if="type === \'list\' && !current_app_id" class="list">\n        <article class="markdown content">\n            <table>\n                <thead>\n                    <tr>\n                        <th class="name">\n                            我的应用\n                            <i class="icon help tip" style="cursor: pointer" data-html="<div class=\'content\'>Coding-OpenAPI 采用 OAuth2 协议对第三方平台进行授权，安全而开放。与以往的授权方式不同之处是 OAuth 的授权不会使第三方触及到用户的帐号信息（如用户名与密码），因此 OAuth 是安全的。同时，任何第三方都可以使用 OAuth 认证服务，任何服务提供商都可以实现自身的 OAuth 认证服务，因而 OAuth 是开放的。<br/><a href=\'/help/doc/account/oauth.html\' target=\'_blank\' >更多帮助<i class=\'icon double angle right\'></i></a></div>" cg-help-popup=""></i>\n                        </th>\n                        <th class="homepage">主页</th>\n                        <th class="callback">回调地址</th>\n                        <th class="description">描述</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr ng-repeat="app in app_list" ng-if="!loading && app_list.length > 0">\n                        <td class="name"><a ng-href="/user/account/setting/applications/{{app.id}}">{{app.name}}</a></td>\n                        <td class="homepage">{{app.homepage_url}}</td>\n                        <td class="callback">{{app.callback_url}}</td>\n                        <td class="description">{{app.description}}</td>\n                    </tr>\n                    <tr ng-if="!loading && app_list.length > 0">\n                        <td colspan="4" style="text-align: center">\n                            <span style="font-size:14px;color:#999">\n                                <a href="javascript:void(0)" ng-click="switch(\'create\')" class="ui button dark gray default">添加应用</a>\n                            </span>\n                        </td>\n                    </tr>\n                    <tr ng-if="!loading && app_list.length === 0">\n                        <td colspan="4">\n                            <div style="text-align: center;margin-top:10px">\n                                <span style="font-size:14px;color:#999">\n                                    <i class="coffee icon"></i>没有应用？赶紧\n                                    <a style="text-decoration: underline" href="javascript:void(0)" ng-click="switch(\'create\')">创建</a>一个。\n                                </span>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </article>\n        <div class="tips" ng-if="loading">\n            <span><i class="icon loading"></i>正在加载。。。</span>\n        </div>\n    </div>\n    <div class="list auth-app-list" ng-if="type === \'list\' && !current_app_id">\n        <article class="markdown content" ng-if="!authorized_loading && authorized_list.length > 0">\n            <table>\n                <thead>\n                <tr>\n                    <th class="auth-app">已授权的应用</th>\n                    <th class="scope">权限</th>\n                    <th class="last-used">最后使用时间</th>\n                    <th class="operation">操作</th>\n                </tr>\n                </thead>\n                <tbody>\n                    <tr bindonce ng-repeat="authorized in authorized_list">\n                        <td class="auth-app">\n                            <a bo-href="authorized.homepage_url">\n                                <img width="20" height="20" bo-src="authorized.icon"></a>\n                            <a bo-href="authorized.homepage_url" bo-text="authorized.name" class="ellipsis" style="max-width: 70%;display: inline-block"></a>\n                        </td>\n                        <td class="scope"><span bo-text="authorized.scopes"></td>\n                        <td class="last-used"><span bo-text="authorized.last_activity_at | date:\'yyyy-MM-dd\'"></td>\n                        <td class="operation">\n                            <a href="javascript:void(0)" ng-click="revokeAuthorized(authorized)" class="ui button mini"><i class="icon loading" ng-if="authorized.revoking"></i>撤销权限</a>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </article>\n    </div>\n\n    <div ng-if="(type === \'list\' && !!current_app_id) || type === \'create\'">\n        <div class="ui form segment setting" ng-if="!!current_app_id">\n            <div class="two fields column">\n                <div class="field" style="padding: 15px">\n                    <span style="font-size: 40px">{{current_app.user_count}}</span> 用户数\n                </div>\n                <div class="field">\n                    <label>Client ID</label>\n                    <input type="text" ng-model="current_app.client_id" disabled="disabled">\n                    <label>Client Secret</label>\n                    <input type="text" ng-model="current_app.secret_key" disabled="disabled">\n                    <div class="actions">\n                        <a href="javascript:void(0)" class="ui button default" ng-click="revokeAllUsers(current_app)">\n                            <i class="icon loading" ng-if="revoking"></i><span>撤销所有授权用户的 Token</span></a>\n                        <a href="javascript:void(0)" class="ui button default" ng-click="resetSecretKey(current_app)" style="margin-right: 0">\n                            <i class="icon loading" ng-if="reseting"></i><span>重置密钥</span></a>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class="ui form segment setting">\n            <div class="two fields column">\n                <div class="field three column">\n                    <label>应用名称</label>\n                    <input type="text" ng-model="current_app.name">\n                    <label>应用主页</label>\n                    <input type="text" ng-model="current_app.homepage_url">\n                    <label>回调地址</label>\n                    <input type="text" ng-model="current_app.callback_url">\n                </div>\n                <div class="field" style="text-align:center;margin-top:45px">\n                    <i ng-if="uploading" class="icon loading" style="position:absolute;margin:60px"></i>\n                    <input id="application-icon" ng-show="!uploading" type="file" name="file" cg-file-upload="uploadSetting">\n                    <img ng-src="{{current_app.icon}}" style="width:140px;height:140px" ng-if="current_app.icon">\n                    <div style="width:140px;height:140px;background:#EDEDED;display:inline-block;color: #989898" ng-if="!current_app.icon">\n                        <div style="margin-top: 54px"><i class="icon upload"></i>上传图标</div>\n                    </div>\n                </div>\n            </div>\n            <div class="field">\n                <label>应用描述</label>\n                <textarea ng-model="current_app.description"></textarea>\n            </div>\n            <div class="field">\n                <div class="ui gray dark default button" ng-click="updateApplication(current_app)" ng-if="type === \'list\'">\n                    <i class="icon loading" ng-if="updating"></i>更新信息</div>\n                <div class="ui gray dark default button" ng-click="createApplication(current_app)" ng-if="type === \'create\'">\n                    <i class="icon loading" ng-if="creating"></i>创建应用</div>\n                <a href="javascript:void(0)" class="gray" ng-click="switch(\'list\')">取消</a>\n                <div class="ui button default" ng-click="deleteApplication(current_app)" ng-if="type === \'list\'" style="float:right;margin-right:0">\n                     <i class="icon loading" ng-if="deleting"></i>\n                    <span style="color:#df5a5a!important">删除应用</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/user/account_setting/setting/avatar.html", '<style>\n    #edit-avatar {\n        min-width: 900px;\n        max-width: 900px;\n    }\n\n    #edit-avatar input[type="file"] {\n        display: block;\n        position: absolute;\n        margin: 0;\n        opacity: 0;\n        -ms-filter: \'alpha(opacity=0)\';\n        direction: ltr;\n        cursor: pointer;\n        z-index: 999;\n        width: 570px;\n        height: 55px;\n    }\n\n    #edit-avatar .avatar {\n        border: 1px solid #F7F6F2;\n        width: 80px;\n        height: 80px;\n        display: inline-block;\n        margin: 2px;\n        position: relative;\n    }\n\n    #edit-avatar .avatar:hover {\n        border: 1px solid #ddd;\n        cursor: pointer;\n    }\n\n    #edit-avatar .avatar > img {\n        margin: 0;\n    }\n\n    #edit-avatar .avatar.active {\n        border: 1px solid red;\n    }\n\n    #edit-avatar .info {\n        display: inline;\n        font-size: 10px;\n        color: #333;\n    }\n\n    #edit-avatar .avatar-preview {\n        width: 200px;\n        position: absolute;\n    }\n\n    #edit-avatar .avatar-preview > .ui.default.dark.gray.button {\n        position: absolute;\n        top: 254px;\n        left: 54px;\n    }\n\n    #edit-avatar .avatar-preview > .gray {\n        position: absolute;\n        top: 294px;\n        left: 90px;\n        font-size: 14px;\n    }\n\n    #edit-avatar .avatar-preview > h3 {\n        position: initial;\n        text-align: center;\n    }\n\n    #edit-avatar .avatar-preview img {\n        width: 200px;\n    }\n\n    #edit-avatar .system-avatar {\n        margin-left: 250px;\n    }\n\n    #edit-avatar .system-avatar .avatar-title {\n        font-size: 18px;\n        font-weight: normal;\n        margin: 10px\n    }\n\n    #edit-avatar .avatar-upload-zone {\n        border: 2px dashed #ccc;\n        margin-left: 250px;\n        border-radius: 15px;\n        line-height: 100px;\n        cursor: pointer;\n        width: 570px;\n    }\n\n    #edit-avatar .avatar-upload-zone p {\n        line-height: 25px;\n    }\n\n    #edit-avatar .system-avatar .ui.small .loading.icon {\n        position:absolute;\n        left:620px;\n        top:590px;\n        color: #fff;\n        z-index: 99;\n    }\n\n    #edit-avatar .system-avatar .ui.small .cover {\n        width: 80px;\n        height: 80px;\n        background: rgba(0, 0, 0, .5);\n        position: absolute;\n    }\n\n    #avatar-upload-zone {\n\n    }\n</style>\n<div ng-controller="UserAvatarSettingController" id="edit-avatar">\n    <div class="avatar-preview">\n        <div style="font-size: 18px;font-weight: normal;margin: 10px;text-align: center">当前头像</div>\n        <div class="avatar-preview preview">\n            <img ng-src="{{current_avatar}}">\n        </div>\n        <div class="ui default dark gray button" ng-click="changeAvatar()">\n            <i class="loading icon" ng-if="changing"></i><span ng-if="!changing">保存修改</span></div>\n        <a href="/user/account/setting" class="gray">取消</a>\n    </div>\n    <div id="avatar-upload-zone">\n        <div class="empty center list avatar-upload-zone">\n            <input ng-show="!uploading" type="file" name="file" cg-file-upload="uploadSetting">\n\n            <div ng-show="!uploading">\n                <p><i class="upload cloud icon"></i>点击或将图片拖拽至此上传！</p>\n            </div>\n            <div ng-show="uploading">\n                <i class="loading icon"></i>正在上传！\n            </div>\n        </div>\n    </div>\n    <div class="system-avatar">\n        <div class="avatar-title">使用水果头像</div>\n        <div class="ui small images">\n            <div class="avatar" ng-repeat="n in array" ng-click="choiceAvatar(n)" id="{{n}}" ng-class="{active:selected==n}">\n                <img ng-src="/static/fruit_avatar/Fruit-{{n}}.png">\n                <a ng-if="selected==n" class="small like red ui corner label">\n                    <i class="checkmark icon"></i>\n                </a>\n            </div>\n        </div>\n        <div class="clearfix"></div>\n    </div>\n    <div class="system-avatar">\n        <div class="avatar-title">使用 Gravatar 头像</div>\n        <div class="ui small" ng-if="!gravatar">\n            <i class="loading icon" ng-if="refresh_gravatar"></i>\n            <div class="avatar" ng-class="{active:selected == \'none\'}" ng-click="choiceAvatar(\'none\')">\n                <div class="cover" ng-if="refresh_gravatar"></div>\n                <img ng-src="/static/fruit_avatar/none.jpg">\n                <a ng-if="selected == \'none\'" class="small like red ui corner label">\n                    <i class="checkmark icon"></i>\n                </a>\n            </div>\n        </div>\n        <div class="ui small" ng-if="gravatar">\n            <i class="loading icon" ng-if="refresh_gravatar"></i>\n            <div class="avatar" ng-class="{active:selected == gravatar}" ng-click="choiceAvatar(gravatar)">\n                <div class="cover" ng-if="refresh_gravatar"></div>\n                <img ng-src="{{gravatar}}" style="width:80px;height:80px">\n                <a ng-if="selected == gravatar" class="small like red ui corner label">\n                    <i class="checkmark icon"></i>\n                </a>\n            </div>\n        </div>\n        <div class="ui default button" ng-click="refreshGravatar()" style="margin-top:10px">\n            <i class="refresh icon" ng-class="{loading: refresh_gravatar, refresh: !refresh_gravatar}"></i>同步\n        </div>\n    </div>\n    <input type="hidden" ng-model="new_avatar">\n</div>'),
        $templateCache.put("app/user/account_setting/setting/basic.html", '<style>\n    #user-setting {\n        position: relative;\n    }\n\n    #user-setting .avatar {\n        position: absolute;\n    }\n\n    #user-setting .ui.form.segment.setting {\n        max-width: 700px;\n        margin-left: 170px;\n        min-width: 700px;\n        -webkit-box-shadow: none;\n        box-shadow: none;\n        padding: 1.5em;\n    }\n\n    #user-setting .ui.textarea, .ui.form textarea {\n        min-height: 4em;\n        height: 5em;\n        max-height: 6em;\n    }\n\n    #user-setting .avatar i {\n        float: right;\n        position: absolute;\n        width: 128px;\n        height: 128px;\n        background: rgba(0, 0, 0, .7);\n        webkit-border-radius: 128px;\n        -moz-border-radius: 128px;\n        -ms-border-radius: 128px;\n        -o-border-radius: 128px;\n        border-radius: 128px;\n        display: table;\n        z-index: 99;\n        color: #fff;\n        opacity: 0;\n        -webkit-transition: all 0.5s ease-out;\n        -moz-transition: all 0.5s ease-out;\n        -o-transition: all 0.5s ease-out;\n        -ms-transition: all 0.5s ease-out;\n        transition: all 0.5s ease-out;\n    }\n\n    #user-setting .avatar i.icon.edit:before {\n        display: table-cell;\n        vertical-align: middle;\n    }\n\n    #user-setting .avatar:hover i {\n        -webkit-transition: all 0.5s ease-out;\n        -moz-transition: all 0.5s ease-out;\n        -o-transition: all 0.5s ease-out;\n        -ms-transition: all 0.5s ease-out;\n        transition: all 0.5s ease-out;\n        opacity: 1;\n    }\n\n    #user-setting .tag {\n        border: 1px solid #ddd;\n        padding: 10px;\n        border-radius: 5px;\n        width: 600px;\n        background: white;\n        position: absolute;\n    }\n\n    #user-setting .tag > a {\n        font-size: 13px;\n        list-style: none;\n        display: inline-block;\n        margin: 5px 7px;\n        cursor: pointer;\n        color: black;\n    }\n\n    #user-setting .select2-container .select2-choice {\n        border: 1px solid rgba(0, 0, 0, 0.15);\n        padding: 0.4em 1em;\n    }\n\n    #user-setting .select2-container .select2-choice .select2-arrow {\n        border-left: 1px solid #ddd;\n        background-image: -webkit-gradient(linear, left bottom, left top, color-stop(0, #eeeeee), color-stop(0.6, #ffffff));\n        background-image: -webkit-linear-gradient(center bottom, #eeeeee 0%, #ffffff 60%);\n        background-image: -moz-linear-gradient(center bottom, #eeeeee 0%, #ffffff 60%);\n        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=\'#ffffff\', endColorstr=\'#eeeeee\', GradientType=0);\n        background-image: linear-gradient(to top, #eeeeee 0%, #ffffff 60%);\n    }\n\n    #user-setting .select2-container .select2-choice .select2-arrow b {\n        background: url("/static/2ca61b76e22053571dd8611e5aac4900.png") no-repeat 0 7px;\n    }\n\n    #user-setting .ui.checkbox .box, #user-setting .ui.checkbox label {\n        padding-left: 1.5em;\n    }\n\n    #user-setting .phone-code {-webkit-box-shadow: none;border-bottom-left-radius: 0;border-top-left-radius: 0;width:30%;}\n    #user-setting .phone-input {border-top-right-radius: 0;border-bottom-right-radius: 0;width: 70%;border-right: 0;float:left;}\n    #user-setting .phone-error {margin-left:10px;color: #DF5A5A;vertical-align: middle}\n    #user-setting .item-passed {background-color: #DEFCD5;color: #52A954;vertical-align: middle;margin-left: 4px;font-size: 12px;padding: 2px 3px;border-radius: 3px;}\n    #user-setting .item-notpassed {background-color: #F7EBAF;color: #F2AE3E;vertical-align: middle;margin-left: 4px;font-size: 12px;padding: 2px 3px;border-radius: 3px;}\n    #user-setting .phone-button {float:right}\n    #user-setting .phone-button .disabled {color: #999 !important;}\n    #user-setting .phone-timer {float:right;color: #999;font-size:12px;}\n\n    .reset-email-modal .title {font-size:20px;display:inline-block;margin:20px}\n    .reset-email-modal .content {text-align:center}\n    .reset-email-modal .label {font-size:14px}\n    .reset-email-modal .actions {float:right;margin:10px;}\n    .reset-email-modal .ui.labeled.input {display: block;}\n\n    .pickmeup {\n        left: 920px !important;\n    }\n</style>\n<div ng-if="user" class="ui dividing header">个人设置</div>\n<div id="user-setting" ng-controller="UserBasicSettingController">\n    <div class="ui warning message" ng-if="USER.status == 0">\n        <strong>注意</strong>：请到邮箱查询邮件，激活后，才能更改密码，设置 SSH 公钥。\n    </div>\n    <a href="/user/account/setting/avatar">\n        <div class="avatar">\n            <i class="edit icon"></i>\n            <img class="ui image avatar128" width="128px" ng-src="{{user.lavatar}}">\n        </div>\n    </a>\n\n    <div class="ui form segment setting" ng-class="{loading: updating}">\n        <div class="two fields">\n            <div class="field">\n                <label>邮箱\n                    <span class="item-passed" ng-if="USER.email_validation">已验证</span>\n                    <span class="item-notpassed" ng-if="!USER.email_validation">未验证</span>\n                    <a href="javascript:void(0)" ng-if="USER.email_validation || phone_passed" ng-click="beforeResetEmail()" style="font-size: 14px;float:right">修改邮箱</a>\n                    <a href="javascript:void(0)" ng-if="!USER.email_validation" ng-click="activateEmail()" style="font-size: 14px;float: right; margin-right: 5px">激活邮箱</a>\n                </label>\n                <input type="text" ng-model="USER.email" disabled="disabled">\n            </div>\n            <div class="field">\n                <label>个性后缀（Global Key）</label>\n                <input type="text" ng-model="USER.global_key" disabled="disabled">\n            </div>\n        </div>\n        <div class="two fields" style="height: 76px">\n            <div class="field" style="padding-bottom: 0; margin-bottom:0">\n                <label>昵称</label>\n                <input placeholder="昵称" ng-model="user.name" type="text">\n            </div>\n            <div class="tow fields" style="display: inline">\n                <div class="field" style="padding-left: 1%;margin-bottom: 0">\n                    <label>性别</label>\n\n                    <div class="grouped inline fields">\n                        <div>\n                            <div class="field" style="display: inline-block;margin-right: 5px">\n                                <div class="ui radio checkbox">\n                                    <input type="radio" name="sex" ng-model="user.sex" id="known" value="2">\n                                    <label for="known">未知</label>\n                                </div>\n                            </div>\n                            <div class="field" style="display: inline-block;margin-right: 10px">\n                                <div class="ui radio checkbox">\n                                    <input type="radio" name="sex" ng-model="user.sex" checked="checked" id="male" value="0">\n                                    <label for="male">男</label>\n                                </div>\n                            </div>\n                            <div class="field" style="display: inline-block;margin-right: 0px">\n                                <div class="ui radio checkbox">\n                                    <input type="radio" name="sex" ng-model="user.sex" id="female" value="1">\n                                    <label for="female">女</label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="field" style="float: right;margin-bottom: 0; width: 145px">\n                    <label>生日</label>\n                    <input id="birthday" placeholder="生日" type="text" ng-model="user.birthday" cg-pickmeup="onDateChange($date);" pickmeup-options="pickmeup_opts">\n                </div>\n            </div>\n        </div>\n        <div class="two fields">\n            <div class="field" style="height:0">\n                <label style="height: 22px">\n                    <span style="vertical-align: middle">手机</span>\n                    <span class="phone-error" ng-if="phone_validate_error">格式不对！</span>\n                    <span class="item-passed" ng-if="phone_passed">已验证</span>\n                    <span class="item-notpassed" ng-if="!phone_passed">未验证</span>\n                    <a href="javascript:void(0)" class="ui button small phone-button" ng-class="{\'disabled\': phone_validate_error || phone_passed}" ng-if="phone_validator_showed && !resend_second" ng-click="sendCode(user)">发送验证码</a>\n                    <span class="phone-timer" ng-if="show_timer && !$scope.phone_validate_error">验证码已发送，\n                        <span>{{resend_second}}</span>s后可重新发送</span>\n                </label>\n                <input placeholder="手机" ng-model="user.phone" tabindex="999" ng-focus="showPhoneValidator()" cg-not-click="hidePhoneValidator()" cg-timeout-input="checkPhoneNumber(user.phone)" ng-blur="checkPhoneNumber(user.phone)" type="text" ng-class="{\'phone-input\': phone_validator_showed}">\n                <input tabindex="1000" placeholder="验证码" type="text" ng-if="phone_validator_showed" ng-model="user.code" class="phone-code">\n            </div>\n            <div class="field">\n                <label style="height: 22px">地区</label>\n                <cg-cascading-address placeholder="地区" ng-model="user.location" type="text" province="province" city="city"></cg-cascading-address>\n            </div>\n        </div>\n        <div class="two fields">\n            <div class="field">\n                <label>公司</label>\n                <input placeholder="公司" ng-model="user.company" type="text">\n            </div>\n            <div class="field">\n                <label>我的工作是</label>\n                <select ui-select2="{width: \'319px\'}" ng-model="user.job" id="job-select">\n                    <option value="0">请选择</option>\n                    <option bindonce ng-repeat="job in JOBs" bo-value="$index + 1" bo-text="job"></option>\n                </select>\n            </div>\n        </div>\n        <div class="field">\n            <label>座右铭(50字以内)</label>\n            <input placeholder="个性签名" ng-model="user.slogan" type="text">\n        </div>\n        <div class="field">\n            <label>个性标签</label>\n            <select ui-select2="{\'width\': \'653px\'}" id="tag-select" ng-model="tags" multiple="multiple" ng-change="selectTags(tags)" data-placeholder="个性标签">\n                <option bindonce ng-repeat="t in TAGs" bo-value="t.id" bo-text="t.name"></option>\n            </select>\n        </div>\n        <div class="ui dark gray medium submit button" ng-click="submit(user)">提交</div>\n        <div class="ui error message"></div>\n    </div>\n    <div class="ui small modal coding-modal reset-email-modal" cg-modal="reset_email_modal" ng-include="\'app/user/setting/email/reset_email_modal.html\'" ng-controller="ResetEmailModalCtrl">\n    </div>\n    <div class="ui modal account-charge-modal" ng-controller="PasswordRequiredModalCtrl" cg-modal="password_required_modal" ng-include="\'app/project/setting/summary/modal/password_required_modal.html\'"></div>\n     <div class="ui modal small coding-modal reset-email-modal" ng-controller="ActivateEmailModalCtrl" cg-modal="activate_email_modal" ng-include="\'app/user/activate_email_modal.html\'"></div>\n</div>'),
        $templateCache.put("app/user/account_setting/setting/crop_avatar_modal.html", '<style>\n    .jcrop-centered\n    {\n        display: inline-block;\n        vertical-align: middle;\n        background-color: inherit !important;\n    }\n    .crop-image-wrapper\n    {\n        text-align: center;\n    }\n    .crop-image-wrapper:before {\n        content: \'\';\n        display: inline-block;\n        height: 100%;\n        vertical-align: middle;\n    }\n</style>\n<div class="ui small modal coding-modal" id="crop-avatar-modal">\n    <i class="close icon"></i>\n    <div class="header">\n        截取头像\n    </div>\n    <div class="content">\n        <div class="image-crop crop-image-wrapper" style="height:400px">\n            <img cg-image-crop="onImgChange($img)" cg-image-crop-src="avatar" ng-model="img" cg-box-width="400" cg-box-height="400" id="crop-avatar-zone" width="400" height="200">\n        </div>\n    </div>\n    <div style="margin:10px;text-align:center">\n        <a href="javascript:void(0)" class="ui default button" ng-click="closeModal()" style="width:96px">取消</a>\n        <a href="javascript:void(0)" class="ui default dark gray button" style="width:96px" ng-click="doImageCrop(img)"><i class="loading icon" ng-if="uploading"></i><span ng-if="!uploading">确认</span></a>\n    </div>\n    <form>\n        <input type="hidden" name="img.src" id="img.src" ng-model="img.src">\n        <input type="hidden" name="img.left" id="img.left" ng-model="img.left">\n        <input type="hidden" name="img.top" id="img.top" ng-model="img.top">\n        <input type="hidden" name="img.size" id="img.size" ng-model="img.size">\n    </form>\n    <input type="hidden" ng-model="new_avatar">\n</div>'),
        $templateCache.put("app/user/account_setting/setting/notification.html", '<style>\n  #notification-setting {\n    min-width: 600px;\n    max-width: 700px;\n    -webkit-box-shadow: none;\n    box-shadow: none; \n    background-color: #FFFFFF;\n    padding: 1.5em;\n    border-radius: 5px;\n  }\n  #notification-setting table tr {\n    height: 40px;\n  }\n  #notification-setting table tr td {\n    width: 200px;\n  }\n  #notification-setting a{\n    color: #333;\n  }\n</style>\n<!--<div class="ui dividing header">提醒设置</div>-->\n<div class="ui segment" id="notification-setting" ng-controller="UserNotificationSettingController">\n    <table>\n      <tr>\n        <td></td>\n        <td>系统提醒</td>\n        <td>邮件提醒</td>\n      </tr>\n    </table>\n    <table ng-if="settings" ng-repeat="setting in sets" style="color: #666">\n      <tr ng-if="setting.flag == 0">\n        <td ng-if="setting.flag == 0">{{setting.name}}</td>\n        <td ng-if="setting.flag == 0"><div class="ui toggle checkbox"><input type="checkbox" ng-model="settings[setting.notification_key]" id="{{setting.notification_key}}" ng-change="submit(setting.notification_key, settings[setting.notification_key])"><label for="{{setting.notification_key}}"></label></div></td>\n        <td ng-if="setting.flag == 0"><div class="ui toggle checkbox"><input type="checkbox" ng-model="settings[setting.email_key]" id="{{setting.email_key}}" ng-change="submit(setting.email_key, settings[setting.email_key])"><label for="{{setting.email_key}}"></label></div></td>\n      </tr>\n    </table>\n    <a ng-if="!showMore" class="down center more" href="javascript:void(0)" ng-click="changeShowMore()" style="margin-top: 10px">更多设置</a>\n    <table ng-if="settings && showMore" ng-repeat="setting in sets" style="color: #666">\n      <tr ng-if="setting.flag == 1">\n        <td ng-if="setting.flag == 1">{{setting.name}}</td>\n        <td ng-if="setting.flag == 1"><div class="ui toggle checkbox"><input type="checkbox" ng-model="settings[setting.notification_key]" id="{{setting.notification_key}}" ng-change="submit(setting.notification_key, settings[setting.notification_key])"><label for="{{setting.notification_key}}"></label></div></td>\n        <td ng-if="setting.flag == 1"><div class="ui toggle checkbox"><input type="checkbox" ng-model="settings[setting.email_key]" id="{{setting.email_key}}" ng-change="submit(setting.email_key, settings[setting.email_key])"><label for="{{setting.email_key}}"></label></div></td>\n      </tr>\n    </table>\n    <!--<a ng-if="showMore" ng-click="changeShowMore()" href="javascript:void(0)" class="up center more">收起</a>-->\n</div>'),
        $templateCache.put("app/user/account_setting/setting/oauth.html", '<style type="text/css">\n    #user-oauth-setting {\n        width: 600px;\n    }\n\n    #user-oauth-setting .oauth-list {\n        margin: 0;\n        padding: 0;\n        list-style: none;\n    }\n\n    #user-oauth-setting .oauth-list > li {\n        height: 60px;\n        line-height: 60px;\n        margin: 0 20px;\n        border-bottom: 1px solid #EEE;\n    }\n\n    #user-oauth-setting .oauth-list > li:last-child {\n        border-bottom: none;\n    }\n\n    #user-oauth-setting .oauth-list .name i.oauth-icon {\n        font-size: 24px;\n        color: #000;\n    }\n\n    #user-oauth-setting .oauth-list .name {\n        font-size: 18px;\n        color: #333;\n    }\n    #user-oauth-setting .oauth-list .bind-account {\n        margin-right: 15px;\n        color: #333;\n    }\n    #user-oauth-setting .ui.loading.button{\n        color: #333333!important;\n    }\n    #user-oauth-setting .ui.loading.button:after {\n        content: "\\f110";\n        color: #FFF;\n        font-family: Icons;\n        -webkit-animation: icon-loading 2s linear infinite;\n        background: none!important;\n    }\n</style>\n<div class="ui segment borderless" id="user-oauth-setting" ng-controller="OAuthSettingController">\n    <ul class="oauth-list">\n        <li bindonce ng-repeat="platform in platforms">\n            <span class="name coding floated left">\n                <i class="icon oauth-icon" bo-class="oauthIcon(platform.en_name)"></i><span bo-text="platform.cn_name"></span>\n            </span>\n            <span class="action coding floated right" ng-if="platform.is_bound">\n                <span class="bind-account" bo-text="platform.platform_account"></span>\n                <a class="ui button" href="javascript:void(0);" ng-class="{loading: unbinding}" ng-click="unbind(platform.en_name)">\n                    取消绑定\n                </a>\n            </span>\n            <span class="action coding floated right" ng-if="!platform.is_bound">\n                <a class="ui dark gray button" ng-class="{loading: binding}" ng-click="rebind(platform.en_name)">\n                    绑定\n                </a>\n            </span>\n        </li>\n        <li ng-if="platforms.length === 0">\n            <span class="name" ng-show="loaded">\n                尚未绑定任何第三方账号\n            </span>\n            <span class="name" ng-show="loading">\n                <i class="loading icon"></i>正在加载绑定的第三方账号...\n            </span>\n        </li>\n    </ul>\n</div>'),
        $templateCache.put("app/user/account_setting/setting/secret_question.html", '<div class="ui form segment" style="width: 375px; padding: 24px" ng-controller="SecretQuestionController">\n    <div class="field">\n        <label>问题1：</label>\n        <select ui-select2="{width: \'319px\'}" ng-model="question1">\n            <option value="0">请选择</option>\n            <option bindonce ng-repeat="question in questions" bo-value="question" bo-text="question"></option>\n            <option value="1">自定义</option>\n        </select>\n\n        <div ng-show="question1 == 1" class="ui left input" style="width: 320px;  margin-top: 15px">\n            <input type="text" ng-model="custom_question1">\n        </div>\n    </div>\n    <div class="field">\n        <label>答案1：</label>\n\n        <div class="ui left input" style="width: 320px">\n            <input type="text" ng-model="answer1">\n        </div>\n    </div>\n    <div class="field">\n        <label>问题2：</label>\n        <select ui-select2="{width: \'319px\'}" ng-model="question2">\n            <option value="0">请选择</option>\n            <option bindonce ng-repeat="question in questions" bo-value="question" bo-text="question"></option>\n            <option value="1">自定义</option>\n        </select>\n\n        <div ng-show="question2 == 1" class="ui left input" style="width: 320px;  margin-top: 15px">\n            <input type="text" ng-model="custom_question2">\n        </div>\n    </div>\n    <div class="field">\n        <label>答案2：</label>\n\n        <div class="ui left input" style="width: 320px">\n            <input type="text" ng-model="answer2">\n        </div>\n    </div>\n    <div class="field">\n        <label>问题3：</label>\n        <select ui-select2="{width: \'319px\'}" ng-model="question3">\n            <option value="0">请选择</option>\n            <option bindonce ng-repeat="question in questions" bo-value="question" bo-text="question"></option>\n            <option value="1">自定义</option>\n        </select>\n\n        <div ng-show="question3 == 1" class="ui left input" style="width: 320px;  margin-top: 15px">\n            <input type="text" ng-model="custom_question3">\n        </div>\n    </div>\n    <div class="field">\n        <label>答案3：</label>\n\n        <div class="ui left input" style="width: 320px">\n            <input type="text" ng-model="answer3">\n        </div>\n    </div>\n    <div class="ui dark gray medium submit button" ng-click="setting_secret_question()">提交</div>\n    <div class="ui modal account-charge-modal" ng-controller="PasswordRequiredModalCtrl" cg-modal="password_required_modal" ng-include="\'app/project/setting/summary/modal/password_required_modal.html\'"></div>\n</div>'),
        $templateCache.put("app/user/account_setting/setting/security.html", '<style>\n  #security-setting {\n    max-width: 400px;\n    min-width: 400px;\n  }\n  #security-setting .ui.segment{\n    -webkit-box-shadow: none;\n    box-shadow: none;\n    background-color: #FFFFFF;\n    padding: 1.5em;\n    border-radius: 5px;\n  }\n</style>\n\n<!-- <div class="ui dividing header">密码设置</div>  -->\n<div id="security-setting" ng-controller="UserSecuritySettingController">\n  <div class="ui form segment">\n    <div class="field">\n      <label>当前密码</label>\n      <input placeholder="" type="password" style="display: initial" ng-model="passwd.current_password" name="passwd.current_password">\n    </div>\n    <div class="field">\n      <label>新密码</label>\n      <input placeholder="" type="password" style="display: initial" ng-model="passwd.password" name="passwd.password">\n    </div>\n    <div class="field">\n      <label>确认密码</label>\n      <input placeholder="" type="password" style="display: initial" ng-model="passwd.confirm_password" name="passwd.confirm_password">\n    </div>\n    <div class="ui dark gray medium submit button" ng-click="submit(passwd)">确定</div>\n  </div>\n</div>'),
        $templateCache.put("app/user/account_setting/setting/totp_setting_modal.html", '<div class="ui small modal send-message coding-modal" id="totp-setting-modal">\n\n    <div class="ui form segment">\n        <p><b>设置身份验证器</b></p>\n        <hr>\n        <img ng-src="{{image_url}}" style="width: 150px">\n        <br>\n        <label>验证码</label>\n        <input placeholder="输入收到的验证码" type="text" style="display: initial;width:200px" ng-model="two_factor_code" name="two_factor_code">\n    </div>\n\n    <div class="actions">\n        <div class="ui negative button">取消</div>\n        <div class="ui positive blue button" ng-click="verifyCode()" style="width:130px">\n            验证并保存\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/user/account_setting/setting/two_factor_authentication.html", '<style>.two-factor-auth .description {\n    font-size: 14px;\n    color: #333;\n    line-height: 25px;\n    padding-right: 30px;\n}\n.two-factor-auth .status {\n    font-size: 15px;\n    margin-bottom: 25px;\n}\n.two-factor-auth .status i {\n    font-size: 14px;\n}\n.two-factor-auth .status span {\n    font-size: 12px;\n}\n</style>\n<div ng-controller="UserTwoFactorAuthSettingController">\n    <div class="two-factor-auth" ng-hide="opening">\n        <header class="ui dividing header">两步验证</header>\n        <p class="description">\n            Coding 两步验证指的是用户登录账户的时候，除了要输入用户名和密码，还要求用户输入一个手机生成的动态验证码，为账户额外添加一层保护，即使入侵者窃取了用户的密码，也会因不能使用用户的手机而无法登录账户。\n        </p>\n\n        <div class="status" ng-show="method !== \'\'">\n            <i class="info icon"></i> 当前状态：\n            <span ng-if="method !== \'password\'" style="color: green"><i class="icon checkmark"></i>已开启</span>\n            <span ng-if="method === \'password\'" style="color: red"><i class="icon remove"></i>关闭</span>\n        </div>\n        <div class="action" ng-show="method !== \'\'">\n            <span class="ui green button" ng-class="{disabled:!USER.is_phone_validated}" ng-show="method === \'password\'" ng-click="openTotp()">开启两步验证</span>\n            <span class="ui red button" ng-hide="method === \'password\'" ng-click="closeTwoFactorAuth()">关闭两步验证</span>\n        </div>\n        <div class="ui warning message" ng-show="!USER.is_phone_validated">\n            <strong>注意：</strong>\n            <span>你必须验证手机号才能开启两步验证，点击即可跳转到“<a href="/user/account/setting/basic">个人设置</a>”页</span>\n        </div>\n    </div>\n    <div ng-show="opening">\n        <div class="ui three steps" style="margin-bottom: 20px">\n            <div class="ui step" ng-class="{active: step === 1}">\n                安装 Coding 身份验证器\n            </div>\n            <div class="ui step" ng-class="{active: step === 2}">\n                配置生成验证码\n            </div>\n            <div class="ui step" ng-class="{active: step === 3}">\n                验证并开启\n            </div>\n        </div>\n        <div ng-show="step === 1">\n            <div style="float: left">\n                <img style="width: 250px;" src="/static/2af97a35497c5f4638bceeee0a41650d.png" alt="">\n            </div>\n            <div style="margin-left: 300px">\n                <p style="font-size: 14px; color: #333; line-height: 38px; padding-top: 20px">Coding 身份验证器内嵌在 Coding 客户端上，用于动态生成验证码。<br>\n                    如果你尚未安装 Coding 客户端，你可以直接点击 <a target="_blank" href="https://coding.net/app">APP 下载</a>，<br>\n                    或者在各大应用市场搜索“Coding”下载。<br>\n                    如果你已经安装了 Coding 客户端，你可以直接点击下一步。\n                </p>\n                <div>\n                    <span class="ui button" ng-show="step > 1" ng-click="prevStep()">上一步</span>\n                    <span class="ui green button" ng-show="step <3" ng-click="nextStep()">下一步</span>\n                </div>\n            </div>\n        </div>\n        <div ng-show="step === 2">\n            <div style="float: left">\n                <img style="width: 250px;" src="/static/e5a8860babb339a08479396fd0f18d05.png" alt="">\n            </div>\n            <div style="float: left;margin-left: 50px">\n                <p style="font-size: 14px; color: #333; line-height: 24px">打开 Coding\n                    客户端，点击“+”，选择扫描二维码，使用手机上的相机扫描二维码。</p>\n                <img style="width: 200px;border: solid 1px #ddd" ng-src="{{image_url}}" alt=""><br>\n\n                <div class="ui teal inverted segment" style="background-color: #D9EDF7 !important; color: #6898B4 !important; border-color: #BDDEEF; font-size: 12px; line-height: 20px;width: 320px;margin-bottom: 20px">\n                    <p><i class="icon info"></i>身份验证器不能扫描验证码？手动添加以下账户：<br>\n                    账户：{{username}}<br>\n                    密钥：{{secret}}</p>\n                </div>\n                <div>\n                    <span class="ui button" ng-show="step > 1" ng-click="prevStep()">上一步</span>\n                    <span class="ui green button" ng-show="step <3" ng-click="nextStep()">下一步</span>\n                </div>\n            </div>\n        </div>\n        <div ng-show="step === 3">\n            <div style="float: left">\n                <img style="width: 250px;" src="/static/4450c8b275a8e9980128fbe26031b753.png" alt="">\n            </div>\n            <div style="float: left;margin-left: 50px">\n                <p style="font-size: 14px; color: #333; line-height: 24px">请输入身份验证器自动生成的动态验证码，确认开启两步验证。</p>\n\n                <div class="ui action input" style="margin-bottom: 20px">\n                    <input ng-model="two_factor_code" type="text">\n\n                    <div class="ui teal right labeled green button" ng-class="{disabled : two_factor_code === \'\'}" ng-click="verifyCode()">\n                        验证并开启\n                    </div>\n                </div>\n                <div>\n                    <span class="ui button" ng-show="step > 1" ng-click="prevStep()">上一步</span>\n                    <span class="ui green button" ng-show="step <3" ng-click="nextStep()">下一步</span>\n                </div>\n            </div>\n        </div>\n        <div style="clear: both"></div>\n    </div>\n    <div class="ui modal account-charge-modal" ng-controller="PasswordRequiredModalCtrl" cg-modal="password_required_modal" ng-include="\'app/project/setting/summary/modal/password_required_modal.html\'"></div>\n</div>'),
        $templateCache.put("app/user/activate_email_modal.html", '<i class="close icon"></i>\n<span class="title">激活邮箱</span>\n<div class="content">\n    <div class="ui warning message">\n        重新发送激活邮件到你的账号，请注意查收\n    </div>\n    <div class="ui medium left labeled icon input" style="margin:20px">\n        <i class="icon mail" style="left:auto"></i>\n        <input type="text" ng-model="form.email" disabled="disabled" style="color: #ccc; width: 300px">\n    </div>\n    <div class="ui medium left labeled icon input" style="margin:20px">\n        <i class="icon shield" style="left:auto"></i>\n        <input type="text" ng-model="form.j_captcha" style="width: 215px">\n        <img class="captcha" ng-src="{{captcha}}" ng-click="refreshCaptcha()" style="width: 80px; height: 36px; cursor: pointer">\n    </div>\n</div>\n<div class="actions">\n    <a href="javascript:void(0)" class="gray" ng-click="closeModal(activate_email_modal)" style="margin-right: 10px">取消</a>\n    <div ng-click="activateEmail()" class="ui approve dark gray default button">\n       <i class="icon loading" ng-if="sending"></i>\n       确定\n   </div>\n</div>'),
        $templateCache.put("app/user/activities_wall.html", '<style type="text/css">\n\n    #activity-wall {\n        margin-left: 200px;\n    }\n\n    #activity-wall .feed-editor pre {\n        min-height: 70px;\n    }\n\n    #new-tweets {\n        margin: 0;\n        padding-left: 0;\n        padding-right: 0;\n        padding-top: 5px;\n    }\n\n</style>\n<div class="ui secondary vertical fixed menu active" id="inner-menu">\n    <header class="header item">\n        动态\n        <article>\n            荟萃各类动态，在这里你可以纵览一切活动动向！\n        </article>\n    </header>\n    <a class="item" ng-click="switchType(\'all\')" ng-class="{active:mode == \'all\'}">\n        <i class="basic lightning icon"></i>所有\n    </a>\n    <a class="item" ng-click="switchType(\'tweet\')" ng-class="{active:mode == \'tweet\'}">\n        <i class="coding bubble icon"></i>冒泡\n    </a>\n    <a class="item" ng-click="switchType(\'project_update\')" ng-class="{active:mode == \'project_update\'}">\n        <i class="coding project icon"></i>项目更新\n    </a>\n    <a class="item" ng-click="switchType(\'topic\')" ng-class="{active:mode == \'topic\'}">\n        <i class="chat icon"></i>项目讨论\n    </a>\n    <a class="item" ng-click="switchType(\'task\')" ng-class="{active:mode == \'task\'}">\n        <i class="tasks icon"></i>任务动态\n    </a>\n    <a class="item" ng-click="switchType(\'watched_project\')" ng-class="{active:mode == \'watched_project\'}">\n        <i class="icon unhide"></i>关注的项目\n    </a>\n    <a class="item" ng-click="switchType(\'following\')" ng-class="{active:mode == \'following\'}">\n        <i class="user icon"></i>关注的人\n    </a>\n    <a class="item" ng-click="switchType(\'other\')" ng-class="{active:mode == \'other\'}">\n        <i class="asterisk icon"></i>其他\n    </a>\n\n    <div class="sep"></div>\n</div>\n\n<div class="container" id="activity-wall">\n    <div class="ui basic segment" id="new-tweets">\n        <div cg-activities="activities">\n        </div>\n    </div>\n    <div class="center empty list" ng-if="activity_loading">\n        <i class="loading icon"></i>正在加载动态...\n    </div>\n    <div class="ui coding aligned center" ng-if="!activities || activities.length == 0 && !activity_loading">\n        暂无动态\n    </div>\n    <div class="aligned center">\n        <a class="center down more" ng-click="showMore();" ng-if="!no_more_data && activities && activities.length > 0 &&!activity_loading">加载更多</a>\n        <a class="center more" style="cursor: auto" ng-if="no_more_data">没有更多的动态了~</a>\n    </div>\n</div>'),
        $templateCache.put("app/user/add_friends_modal.html", '<style type="text/css">\n\n    #add-friends {\n        border-bottom-right-radius: 5px;\n        border-bottom-left-radius: 5px;\n    }\n\n    #add-friends .friends {\n        margin: 10px 0;\n        height: 200px;\n        overflow-y: auto;\n    }\n\n    #add-friends .friend {\n        position: relative;\n        padding: 10px 15px;\n        border: 1px dashed #CCC;\n        width: auto;\n        margin: 0 0 10px 0;\n        border-radius: 3px;\n        cursor: pointer;\n    }\n\n    #add-friends .friend:hover {\n        background: #EEE;\n    }\n\n    #add-friends .friend > .avatar {\n        position: absolute;\n        left: 15px;\n        top: 10px;\n    }\n\n    #add-friends .friend > .info {\n        height: 100%;\n        width: auto;\n        line-height: 32px;\n        padding: 0 52px;\n    }\n\n    #add-friends .friend > .action {\n        position: absolute;\n        right: 15px;\n        top: 10px;\n        height: 32px;\n        line-height: 32px;\n        font-size: 13px;\n    }\n\n    #add-friends .invite-friend{\n        margin-top: 20px;\n    }\n</style>\n<div class="ui tiny40 modal" id="add-friend-modal">\n    <i class="close icon"></i>\n    <div class="header">关注好友</div>\n    <div class="content" id="add-friends">\n        <div class="ui fluid medium input">\n            <input type="text" ng-model="key" cg-timeout-input="loadFriend(key);" cg-enter="doFollow(single_user);" placeholder="输入 email、用户名 或 用户标识 来搜索用户">\n        </div>\n        <div class="friends">\n            <div class="friend" ng-repeat="user in friends" ng-click="!user.followed && doFollow(user);">\n                <div class="avatar">\n                    <a class="avatar" ng-href="{{user.path}}">\n                        <img class="ui circular image" width="32" height="32" ng-src="{{user.avatar}}">\n                    </a>\n                </div>\n                <div class="info ellipsis">{{user.name}} - {{user.global_key}}</div>\n                <div class="ui green corner label" ng-show="user.selected">\n                    <i class="checkmark icon"></i>\n                </div>\n                <div class="action" ng-switch="user.status">\n                    <span ng-switch-when="0" ng-if="user.followed" style="color: #A1CF64"><i class="checkmark icon"></i>已关注</span>\n                    <span ng-if="!user.followed && user.status == 0" class="blue hovered"><i class="unhide icon"></i>关注</span>\n                    <span ng-switch-when="1" style="color: #A1CF64"><i class="checkmark icon"></i>成功</span>\n                    <span ng-switch-when="2" style="color: #D95C5C"><i class="attention icon"></i>{{user.msg.user_is_friend || \'失败\'}}</span>\n                </div>\n            </div>\n            <div class="empty list center" ng-if="loading">\n                <i class="loading icon"></i>正在加载数据...\n            </div>\n            <div class="empty list center" ng-if="loaded && friends.length === 0 && key.length > 0">\n                <div>\n                    <i class="frown icon"></i>没有找到符合条件的好友，邀请好友加入 Coding ？\n                </div>\n                <div class="invite-friend">\n                    <button class="ui default green button" ng-click="inviteFriend();">马上邀请好友</button>\n                </div>\n            </div>\n            <div class="empty list center" ng-if="!loaded && !loading && friends.length === 0 && key.length === 0">\n                <div>\n                    <i class="smile icon"></i>我的好友没在 Coding，直接邀请好友加入？\n                </div>\n                <div class="invite-friend">\n                    <button class="ui default green button" ng-click="inviteFriend();">马上邀请好友</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/user/feed_editor.html", '<div class="feed-editor" data-limit="{{words_limit || 1000}}">\n    <div class="avatar">\n        <img class="ui avatar image" ng-src="{{USER.avatar}}">\n    </div>\n    <div class="ui dimmer" ng-class="{active:loading}"><i class="inverted loading icon"></i></div>\n    <div class="editor">\n        <textarea ng-model="tweet_content" placeholder="说点什么?" cg-ctrl-enter="tweetPub(tweet_content);"></textarea>\n        <div class="ui red pointing above ui label" style="position: absolute;bottom: -37px;left: -3px" ng-if="msg.tweet_content_not_empty">{{msg.tweet_content_not_empty}}</div>\n        <div class="toolbar">\n            <ul>\n                <li title="preview" class="btn-preview"><i class="ui unhide icon"></i></li>\n                <li title="insert image" class="btn-photo"><i class="ui photo icon"></i></li>\n                <li title="upload attachment" class="btn-attachment"><i class="ui attachment icon"></i></li>\n                <li title="submit" class="btn-submit" ng-click="tweetPub(tweet_content);"><i class="clockwise rotated level down icon" style="margin: 0"></i></li>\n            </ul>\n        </div>\n    </div>\n    <div class="right preview">\n        <div style="text-align: center;font-size:14px"><i class="ui unhide icon"></i>预览</div>\n        <div class="action">\n            <i class="ui teal refresh icon"></i>\n            <i class="ui red remove sign icon"></i>\n        </div>\n        <div class="markdown content bubble"></div>\n    </div>\n</div>'),
        $templateCache.put("app/user/following/activities.html", '<div class="activity" ng-if="activity && (activity.target_type == \'ProjectTopic\' || activity.target_type == \'Project\')">\n    <div class="user-avatar" ng-if="!activity.show_icon">\n        <a ng-href="{{activity.user.path}}">\n            <img ng-src="{{activity.user.avatar}}" class="ui avatar image" width="48px" height="48px" alt="{{tweet.owner.name}}">\n        </a>\n    </div>\n    <div class="activity-icon" ng-if="activity.show_icon">\n        <i class="circular comment icon"></i>\n    </div>\n    <div class="tweet-content">\n\n        <div class="tweet-detail">\n            <div class="markdown content bubble" ng-if="activity.target_type == \'ProjectTopic\'">\n                <div>\n                    <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                    在项目\n                    <a ng-href="{{activity.project.path}}">{{activity.project.full_name}}</a>\n                <span ng-if="activity.action == \'create\'">\n                    <span>{{activity.action_msg}}</span>\n                    讨论\n                    <a ng-href="{{activity.project_topic.path}}">{{activity.project_topic.title}}</a>\n                </span>\n                <span ng-if="activity.action == \'comment\'">\n                    <span>{{activity.action_msg}}</span>\n                    讨论\n                    <a ng-href="{{activity.project_topic.parent.path}}">{{activity.project_topic.parent.title}}</a>\n                </span>\n\n                    <div ng-if="activity.action == \'comment\'" ng-bind-html="activity.project_topic.content">\n                    </div>\n                </div>\n            </div>\n            <div class="markdown content bubble" ng-if="activity.target_type == \'Project\'">\n                <div ng-switch="activity.action">\n                <span ng-switch-when="create">\n                <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                    创建了新项目 <a ng-href="{{activity.project.path}}">{{activity.project.full_name}}</a></span>\n                <span ng-switch-when="update">\n                <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                    更新了项目信息 <a ng-href="{{activity.project.path}}">{{activity.project.full_name}}</a></span>\n                <span ng-switch-when="delete">\n                <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                    删除了项目 {{activity.project.full_name}}</span>\n                </div>\n            </div>\n            <div class="author-time">\n                <span><a ng-href="{{activity.user.path}}">{{activity.user.name}}</a></span>\n                &nbsp;&nbsp;\n                <i class="icon time" style="margin:0px 0px"></i>\n                <span class="created-time" cg-friendly-time="activity.created_at"></span>\n                &nbsp;&nbsp;\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/user/gitignore.html", '<option selected="selected" value="no">添加.gitignore文件</option>\n<option value="Actionscript">Actionscript - .gitignore</option>\n<option value="Android">Android - .gitignore</option>\n<option value="AppceleratorTitanium">AppceleratorTitanium - .gitignore</option>\n<option value="Autotools">Autotools - .gitignore</option>\n<option value="C">C - .gitignore</option>\n<option value="C++">C++ - .gitignore</option>\n<option value="CakePHP">CakePHP - .gitignore</option>\n<option value="CFWheels">CFWheels - .gitignore</option>\n<option value="Clojure">Clojure - .gitignore</option>\n<option value="CMake">CMake - .gitignore</option>\n<option value="CodeIgniter">CodeIgniter - .gitignore</option>\n<option value="Concrete5">Concrete5 - .gitignore</option>\n<option value="Coq">Coq - .gitignore</option>\n<option value="Dart">Dart - .gitignore</option>\n<option value="Delphi">Delphi - .gitignore</option>\n<option value="Django">Django - .gitignore</option>\n<option value="Drupal">Drupal - .gitignore</option>\n<option value="Eagle">Eagle - .gitignore</option>\n<option value="Erlang">Erlang - .gitignore</option>\n<option value="ExpressionEngine">ExpressionEngine - .gitignore</option>\n<option value="Finale">Finale - .gitignore</option>\n<option value="ForceDotCom">ForceDotCom - .gitignore</option>\n<option value="FuelPHP">FuelPHP - .gitignore</option>\n<option value="Gcov">Gcov - .gitignore</option>\n<option value="Go">Go - .gitignore</option>\n<option value="Grails">Grails - .gitignore</option>\n<option value="GWT">GWT - .gitignore</option>\n<option value="Haskell">Haskell - .gitignore</option>\n<option value="Java">Java - .gitignore</option>\n<option value="Jboss">Jboss - .gitignore</option>\n<option value="Jekyll">Jekyll - .gitignore</option>\n<option value="Joomla">Joomla - .gitignore</option>\n<option value="Jython">Jython - .gitignore</option>\n<option value="Kohana">Kohana - .gitignore</option>\n<option value="Leiningen">Leiningen - .gitignore</option>\n<option value="LemonStand">LemonStand - .gitignore</option>\n<option value="Lilypond">Lilypond - .gitignore</option>\n<option value="Lithium">Lithium - .gitignore</option>\n<option value="Magento">Magento - .gitignore</option>\n<option value="Maven">Maven - .gitignore</option>\n<option value="Nanoc">Nanoc - .gitignore</option>\n<option value="Node">Node - .gitignore</option>\n<option value="Objective-C">Objective-C - .gitignore</option>\n<option value="OCaml">OCaml - .gitignore</option>\n<option value="Opa">Opa - .gitignore</option>\n<option value="OpenCart">OpenCart - .gitignore</option>\n<option value="OracleForms">OracleForms - .gitignore</option>\n<option value="Perl">Perl - .gitignore</option>\n<option value="PlayFramework">PlayFramework - .gitignore</option>\n<option value="Plone">Plone - .gitignore</option>\n<option value="Python">Python - .gitignore</option>\n<option value="Qooxdoo">Qooxdoo - .gitignore</option>\n<option value="Qt">Qt - .gitignore</option>\n<option value="R">R - .gitignore</option>\n<option value="Rails">Rails - .gitignore</option>\n<option value="RhodesRhomobile">RhodesRhomobile - .gitignore</option>\n<option value="Ruby">Ruby - .gitignore</option>\n<option value="Scala">Scala - .gitignore</option>\n<option value="Sdcc">Sdcc - .gitignore</option>\n<option value="SeamGen">SeamGen - .gitignore</option>\n<option value="SketchUp">SketchUp - .gitignore</option>\n<option value="SugarCRM">SugarCRM - .gitignore</option>\n<option value="SymphonyCMS">SymphonyCMS - .gitignore</option>\n<option value="Textpattern">Textpattern - .gitignore</option>\n<option value="TurboGears2">TurboGears2 - .gitignore</option>\n<option value="Typo3">Typo3 - .gitignore</option>\n<option value="Unity">Unity - .gitignore</option>\n<option value="VisualStudio">VisualStudio - .gitignore</option>\n<option value="Waf">Waf - .gitignore</option>\n<option value="WordPress">WordPress - .gitignore</option>\n<option value="Yii">Yii - .gitignore</option>\n<option value="ZendFramework">ZendFramework - .gitignore</option>\n<option value="Global/Archives">Archives - .gitignore</option>\n<option value="Global/CVS">CVS - .gitignore</option>\n<option value="Global/Eclipse">Eclipse - .gitignore</option>\n<option value="Global/Emacs">Emacs - .gitignore</option>\n<option value="Global/Espresso">Espresso - .gitignore</option>\n<option value="Global/FlexBuilder">FlexBuilder - .gitignore</option>\n<option value="Global/Linux">Linux - .gitignore</option>\n<option value="Global/Matlab">Matlab - .gitignore</option>\n<option value="Global/Mercurial">Mercurial - .gitignore</option>\n<option value="Global/ModelSim">ModelSim - .gitignore</option>\n<option value="Global/MonoDevelop">MonoDevelop - .gitignore</option>\n<option value="Global/NetBeans">NetBeans - .gitignore</option>\n<option value="Global/OSX">OSX - .gitignore</option>\n<option value="Global/JetBrains">JetBrains - .gitignore</option>\n<option value="Global/Redcar">Redcar - .gitignore</option>\n<option value="Global/SASS">SASS - .gitignore</option>\n<option value="Global/SBT">SBT - .gitignore</option>\n<option value="Global/SublimeText">SublimeText - .gitignore</option>\n<option value="Global/SVN">SVN - .gitignore</option>\n<option value="Global/Tags">Tags - .gitignore</option>\n<option value="Global/TextMate">TextMate - .gitignore</option>\n<option value="Global/Vim">Vim - .gitignore</option>\n<option value="Global/VirtualEnv">VirtualEnv - .gitignore</option>\n<option value="Global/Windows">Windows - .gitignore</option>\n<option value="Global/XilinxISE">XilinxISE - .gitignore</option>'),
        $templateCache.put("app/user/group_create.html", '<section ng-controller="MyGroupController">\n    <form class="ui form segment" ng-class="{loading:project_creating}">\n\n        <div class="field">\n            <div class="ui input">\n                <input type="text" ng-model="group.name" placeholder="群组名称">\n                <div class="ui red pointing above ui label" ng-if="msg.group_name_empty">{{msg.group_name_empty}}</div>\n            </div>\n        </div>\n\n        <div class="field">\n            <div class="ui input">\n                <input type="text" ng-model="group.description" placeholder="群组描述">\n                <div class="ui red pointing above ui label" ng-if="msg.group_description_empty">{{msg.group_description_empty}}</div>\n            </div>\n        </div>\n\n        <div>\n            <input type="submit" value="保存" class="ui small blue submit button" ng-click="createGroup(group);">\n        </div>\n\n    </form>\n</section>'),
        $templateCache.put("app/user/groups.html", '<style type="text/css">\n    #inner-menu a.item img.avatar{width:30px;height:30px;display: inline-block;margin-right: 10px;}\n    #group-activity{margin-left: 230px;}\n\n    #group-activity .dividing.header{margin-bottom: 20px;}\n    #group-activity .activity{padding:20px 0;position: relative;}\n    #group-activity .activity .logo{position: absolute;top:20px;}\n    #group-activity .activity .wrapper{padding-left:65px;font-size:14px;}\n    #group-activity .activity .wrapper .title{font-size:18px;margin-bottom: 5px;}\n    #group-activity .activity .wrapper .time{color:#999;}\n    #group-activity .activity .update{float:left;margin:10px 30px 5px 0;}\n\n    #group-activity .activity .update .content{margin-bottom:5px;border-radius:3px;width:145px;height:145px;border:1px solid #EFEEEA;box-shadow: 0 0 8px #EDECE8;overflow:hidden;}\n    #group-activity .activity .update .content:hover{box-shadow: 0 0 8px #42b3ff;cursor: pointer;}\n    #group-activity .activity .update .content.text{padding:20px 10px;width:125px;height:105px;line-height: 23px;}\n    #group-activity .activity .update .content.text .inner{height:100%;width:100%;overflow: hidden;}\n    #group-activity .activity .update .content.attachment{font-size:80px;text-align: center;line-height: 145px;}\n    #group-activity .activity .update .content.attachment i.icon{margin:0;}\n    #group-activity .activity .update .content img{height:100%;}\n    #group-activity .activity .update .author{margin-bottom: 3px;}\n    #group-activity .activity .update .action{font-size:12px;color:#999;}\n\n</style>\n<div class="ui secondary vertical fixed menu active" id="inner-menu">\n    <header class="header item">\n        我的群<a ng-href="/user/groups/create" id="create-group"><i class="add icon right"></i></a>\n    </header>\n    <a class="item" ng-repeat="group in groups.list" ng-href="{{group.group_path}}" target="_self">\n        <img class="ui tiny avatar image" src="/static/5948a62ac58950a0e01e4117080d3028.png">{{group.name}}\n    </a>\n    <div class="sep"></div>\n</div>\n<div class="container" id="group-activity">\n    <div class="ui dividing header">群动态列表</div>\n    <div class="group activities">\n        <div class="activity">\n            <div class="logo">\n                <img class="ui circular image" width="40" height="40" src="/static/5948a62ac58950a0e01e4117080d3028.png">\n            </div>\n            <div class="wrapper">\n                <div class="title">Coding</div>\n                <div class="time">最近更新 2014年4月16日</div>\n                <div class="updates clearfix">\n                    <div class="update">\n                        <div class="content text">\n                            <div class="inner">\n                                干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你\n                            </div>\n                        </div>\n                        <div class="author">曾沙</div>\n                        <div class="action">发起了讨论：xxxx</div>\n                    </div>\n                    <div class="update">\n                        <div class="content">\n                            <img src="/static/d2ab4f6de747ad169160d3caaf82132e.png">\n                        </div>\n                        <div class="author">曾沙</div>\n                        <div class="action">上传了图片：2.jpg</div>\n                    </div>\n                    <div class="update">\n                        <div class="content">\n                            <img src="http://static.oschina.net/uploads/img/201404/10172712_BiQj.jpg">\n                        </div>\n                        <div class="author">曾沙</div>\n                        <div class="action">上传了图片：1.jpg</div>\n                    </div>\n                    <div class="update">\n                        <div class="content attachment">\n                            <i class="file icon"></i>\n                        </div>\n                        <div class="author">曾沙</div>\n                        <div class="action">上传了文件：1.doc</div>\n                    </div>\n                    <div class="update">\n                        <div class="content">\n                            <img src="http://static.oschina.net/uploads/img/201404/10172712_BiQj.jpg">\n                        </div>\n                        <div class="author">曾沙</div>\n                        <div class="action">上传了图片：1.jpg</div>\n                    </div>\n                    <div class="update">\n                        <div class="content attachment">\n                            <i class="file icon"></i>\n                        </div>\n                        <div class="author">曾沙</div>\n                        <div class="action">上传了文件：1.doc</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class="activity">\n            <div class="logo">\n                <img class="ui circular image" width="40" height="40" src="/static/d2ab4f6de747ad169160d3caaf82132e.png">\n            </div>\n            <div class="wrapper">\n                <div class="title">OSChina.NET</div>\n                <div class="time">最近更新 2014年4月16日</div>\n                <div class="updates clearfix">\n                    <div class="update">\n                        <div class="content">\n                            <img src="/static/d2ab4f6de747ad169160d3caaf82132e.png">\n                        </div>\n                        <div class="author">曾沙</div>\n                        <div class="action">上传了图片：2.jpg</div>\n                    </div>\n                    <div class="update">\n                        <div class="content text">\n                            <div class="inner">\n                                干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你\n                            </div>\n                        </div>\n                        <div class="author">曾沙</div>\n                        <div class="action">发起了讨论：xxxx</div>\n                    </div>\n                    <div class="update">\n                        <div class="content">\n                            <img src="http://static.oschina.net/uploads/img/201404/10172712_BiQj.jpg">\n                        </div>\n                        <div class="author">曾沙</div>\n                        <div class="action">上传了图片：1.jpg</div>\n                    </div>\n                    <div class="update">\n                        <div class="content attachment">\n                            <i class="photo icon"></i>\n                        </div>\n                        <div class="author">曾沙</div>\n                        <div class="action">上传了文件：1.doc</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class="activity">\n            <div class="logo">\n                <img class="ui circular image" width="40" height="40" src="/static/5948a62ac58950a0e01e4117080d3028.png">\n            </div>\n            <div class="wrapper">\n                <div class="title">Coding</div>\n                <div class="time">最近更新 2014年4月16日</div>\n                <div class="updates clearfix">\n                    <div class="update">\n                        <div class="content text">\n                            <div class="inner">\n                                干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你干啥啊你\n                            </div>\n                        </div>\n                        <div class="author">曾沙</div>\n                        <div class="action">发起了讨论：xxxx</div>\n                    </div>\n                    <div class="update">\n                        <div class="content attachment">\n                            <i class="file icon"></i>\n                        </div>\n                        <div class="author">曾沙</div>\n                        <div class="action">上传了文件：1.doc</div>\n                    </div>\n                    <div class="update">\n                        <div class="content">\n                            <img src="/static/d2ab4f6de747ad169160d3caaf82132e.png">\n                        </div>\n                        <div class="author">曾沙</div>\n                        <div class="action">上传了图片：2.jpg</div>\n                    </div>\n                    <div class="update">\n                        <div class="content">\n                            <img src="http://static.oschina.net/uploads/img/201404/10172712_BiQj.jpg">\n                        </div>\n                        <div class="author">曾沙</div>\n                        <div class="action">上传了图片：1.jpg</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/user/index.html", '<style type="text/css">\n    .refresh-tweets {\n        float: right;\n        margin-top: 2px;\n    }\n    .wrapper.project.tasks {\n        background: #fff;\n        padding: 20px;\n    }\n    .my-projects, .project-activities {\n        background:#fff;padding:20px\n    }\n    .project-activities {\n        margin-top: 20px\n    }\n    .ui.ten.wide.column {\n        padding:0;\n    }\n</style>\n<section class="ui grid user-index" style="margin: 0; padding: 12px 20px">\n    <div class="ui ten wide column">\n        <div class="my-projects">\n            <div class="ui dividing header">\n                我的项目\n                <a ng-href="/user/projects" class="more-link">查看所有</a>\n                <a href="/user/projects/create" class="more-link">+创建项目&nbsp;</a>\n            </div>\n            <div class="ui relaxed horizontal selection list" id="project-list">\n                <a class="item" bindonce ng-repeat="project in projects" bo-href="project.project_path">\n                    <div>\n                        <img bo-src="project.icon" width="120px" height="120px">\n                    </div>\n                    <p class="project-name">\n                        <i bo-if="!project.is_public" class="lock icon"></i>\n                        <span bo-text="project.owner_user_name + \'/\' + project.name"></span>\n                    </p>\n                    <i class="message-tip" bo-if="project.un_read_activities_count" bo-text="project.un_read_activities_count | unreadCount">\n                    </i>\n                </a>\n                <a ng-if="projects_loading" class="item loading" href="javascript:void(0);">\n                    <span><i class="loading icon" style="float: none;display: inline"></i>加载项目中...</span>\n                </a>\n                <a class="item" href="/user/projects/create" ng-if="projects.length < project_count">\n                    <div class="create-project">\n                        <i class="huge add icon"></i>\n                    </div>\n                    <p class="project-name">创建新项目</p>\n                </a>\n            </div>\n        </div>\n        <div class="project-activities">\n            <div class="ui dividing header">\n                动态\n            </div>\n\n            <div class="activity tabs">\n                <div class="tab" ng-class="{active:activity_type==1}" ng-click="switchProjectActivities(1)">我的项目\n                </div>\n                <div class="tab" ng-class="{active:activity_type==2}" ng-click="switchProjectActivities(2)">关注的项目\n                </div>\n                <div class="tab" ng-class="{active:activity_type==3}" ng-click="switchProjectActivities(3)">关注的人\n                </div>\n            </div>\n\n            <div class="ui basic segment" id="project-activities" ng-if="!prj_activities_loading">\n                <div class="wrapper" cg-timeline="project_activities" show-project="true">\n                </div>\n            </div>\n\n            <div class="center empty list">\n                <div ng-if="prj_activities_loading">\n                    <i class="loading icon"></i>正在加载动态...\n                </div>\n                <div ng-if="project_activities && project_activities.length > 0 && !prj_activities_loading">\n                    <a class="center down more" ng-href="/user/activities" ng-if="activity_type==1">更多项目动态</a>\n                    <a class="center down more" ng-href="/user/activities/watched_project" ng-if="activity_type==2">更多项目动态</a>\n                    <a class="center down more" ng-href="/user/activities/following" ng-if="activity_type==3">更多关注动态</a>\n                </div>\n                <div ng-if="(prj_activities_loaded && project_activities.length == 0) || !project_activities">\n                    <span ng-if="activity_type==1"><i class="coffee icon"></i>还没有任何项目动态，马上 <a ng-href="/user/projects/create"><i class="add icon"></i>创建个项目</a> 吧！</span>\n                    <span ng-if="activity_type==2"><i class="coffee icon"></i>还没有任何项目动态，马上到 <a ng-href="/projects">项目列表</a> 关注几个项目吧！</span>\n                    <span ng-if="activity_type==3"><i class="coffee icon"></i>尚未关注任何人，马上 <a ng-href="/user/relationship/friends"><i class="add user basic icon"></i>查找好友</a></span>\n                </div>\n            </div>\n        </div>\n\n    </div>\n    <div class="ui six wide column">\n        <div class="wrapper project tasks just-show">\n            <div class="ui dividing header">\n                我的任务\n            </div>\n            <div bindonce ng-if="!task_loading && tasks.length > 0" ng-repeat="task in tasks" cg-task-show="task">\n            </div>\n            <div class="center empty list" ng-if="!task_loading && !tasks.length > 0">\n                <span>没有任务</span>\n            </div>\n            <div class="center empty list" ng-if="task_loading">\n                <i class="icon loading"></i>加载中...\n            </div>\n            <a class="right more gray" ng-href="/user/tasks?owner={{USER.id}}" style="text-align:center;margin-top:10px">查看我的任务</a>\n        </div>\n    </div>\n</section>\n<style type="text/css">\n    #first-login-info .welcome-info-wrapper {\n        max-width: 800px;\n        background: rgba(0, 0, 0, 0.7);\n        border-radius: 5px;\n        -webkit-border-radius: 5px;\n        margin: auto;\n        padding: 20px 10px;\n    }\n\n    #first-login-info .welcome-info {\n        margin: 0 10px;\n        text-align: left;\n        line-height: 38px;\n        text-indent: 30px;\n        font-size: 18px;\n    }\n\n    #coding-start-button {\n        margin: 60px 0 30px 0;\n    }\n</style>\n<div class="ui page dimmer" id="first-login-info">\n    <div class="content">\n        <div class="center">\n            <div class="welcome-info-wrapper">\n                <div class="welcome-info">\n                    <p>\n                        Hi there,\n                    </p>\n\n                    <p>\n                        Coding is here!\n                    </p>\n\n                    <p>\n                        Coding 致力于打造一个云端的软件开发平台，目前提供的功能有代码托管，运行空间，质量分析，项目管理，社交等功能。我们致力于提供简洁，高效的功能和操作体验。\n                    </p>\n\n                    <p>\n                        您可以点击 “进入 Coding” 按钮，开始使用 Coding 的各项功能。同时请尽快去您的邮箱查收激活邮件。\n                    </p>\n\n                    <p>\n                        如您有任何疑问，请通过顶部的帮助链接获取信息或者与我们联系。\n                    </p>\n                </div>\n                <div id="coding-start-button">\n                    <a href="javascript:void(0);" ng-click="hideWelcomeInfo();" class="ui large green button">进入\n                        Coding</a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/user/invite/invite_friend_modal.html", '<style type="text/css">\n    #invite-friend-modal .content textarea{height: 6em; min-height: 6em;}\n    #invite-friend-modal .content {\n        border-bottom-right-radius: 5px;\n        border-bottom-left-radius: 5px;\n    }\n    #invite-friend-modal .content .submit.field{text-align: center;}\n    #invite-friend-modal .content .invite-not-limited-field {\n        text-align: center;\n        padding-top: 1em;\n        border-top: 1px dashed #ddd;\n    }\n    #invite-friend-modal .content .invite-not-limited-field .input-wrapper {\n        display: inline-block;\n        vertical-align: middle;\n    }\n\n    #invite-friend-modal .content .invite-not-limited-field .input-wrapper .ui.action.input input {\n        width: 270px;\n    }\n\n    @media only screen and (max-width: 1280px) {\n        #invite-friend-modal .content .invite-not-limited-field .input-wrapper .ui.action.input input{\n            width: auto;\n        }\n    }\n</style>\n<div class="ui tiny40 modal" id="invite-friend-modal">\n    <i class="close icon"></i>\n    <div class="header">邀请好友</div>\n    <div class="content">\n        <div class="ui form">\n            <div class="field">\n                <div class="ui fluid medium input">\n                    <input type="text" placeholder="好友的 Email" ng-model="form.email" cg-enter="inviteFriend();">\n                </div>\n            </div>\n            <div class="field">\n                <textarea ng-model="form.content"></textarea>\n            </div>\n            <div class="field submit">\n                <a class="ui default green button" ng-click="inviteFriend();" href="javascript:void(0);">发送邀请邮件</a>\n            </div>\n        </div>\n        <div class="invite-not-limited-field">\n            <span>你的专属邀请链接</span>\n            <div class="input-wrapper">\n                <div class="ui action input">\n                    <input type="text" ng-value="invite_url" readonly="readonly" onclick="this.select()">\n                    <div class="ui right icon button" clip-copy="getCopy()" clip-click="doCopy()">\n                        <i class="paste icon" ng-class="{\'green checkmark\': copied, \'paste\': !copied}" style="vertical-align: middle"></i>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/user/license.html", '<option selected="selected" value="no">添加开源许可证</option>\n<option value="Apache v2 License">Apache v2 License</option>\n<option value="MIT License">MIT License</option>\n<option value="GPL v2">GPL v2</option>\n<option value="Artistic License 2.0">Artistic License 2.0</option>\n<option value="BSD 2-Clause License">BSD 2-Clause License</option>\n<option value="Affero GPL">Affero GPL</option>\n<option value="LGPL v2.1">LGPL v2.1</option>\n<option value="BSD (3-Clause) License">BSD (3-Clause) License</option>\n<option value="Eclipse Public License v1.0">Eclipse Public License v1.0</option>\n<option value="LGPL v3">LGPL v3</option>\n<option value="Mozilla Public License Version 2.0">Mozilla Public License Version 2.0</option>\n<option value="GPL v3">GPL v3</option>\n<option value="WTFPL">WTFPL</option>\n<option value="Zlib">Zlib</option>'),
        $templateCache.put("app/user/messages.html", '<div class="ui secondary vertical fixed menu active" id="inner-menu">\n    <header class="header item">\n        私信\n        <article>\n            和其它用户间的私密聊天\n        </article>\n    </header>\n    <a class="item" href="/user/messages/basic" ng-class="{active:inner_menu == \'basic\'}"><i class="mail icon"></i>所有</a>\n    <a class="item" href="/user/messages/unread" ng-class="{active:inner_menu == \'unread\'}"><i class="mail outline icon"></i>未读 ({{$root.unread.messages}})</a>\n</div>\n\n<script type="text/ng-template" id="/user/tpl-message-list.html">\n    <div class="ui small feed messages">\n        <h3 class="ui dividing header">\n            <div class="right floated small ui button" ng-click="showSendMsgDialog()">发送私信</div>\n            <div class="right floated red small ui button" ng-click="clearAllMessages()">清空所有</div>\n            {{header}}\n        </h3>\n        <p class="empty center list" ng-if="loading"><i class="loading icon"></i>正在加载</p>\n\n        <div class="event" ng-class="{\'read\': conversation.status == 1}" ng-repeat="conversation in conversations"\n             ng-click="loadConversation(conversation, $event)" bindonce="conversation">\n            <i class="red minus sign alternate icon remove" title="删除"\n               ng-click="delConversation(conversation, $index)"></i>\n\n            <div class="label">\n                <!--<img class="ui avatar image" ng-src="{{conversation.friend.avatar}}">-->\n                <a ng-href="/u/{{conversation.friend.global_key}}" target="_blank">\n                    <img class="ui avatar image" bo-src="conversation.friend.avatar"/>\n                </a>\n            </div>\n            <div class="content">\n                <div class="date">\n                    <i class="comment icon" style="float:left"></i>\n                    <span bo-text="conversation.count"/>\n                    <i class="time icon"></i>\n                    <time cg-friendly-time="conversation.created_at"></time>\n                </div>\n                <div class="header">\n                    <!--<a ng-href="{{\'/u/\' + conversation.friend.global_key}}" target="_blank">{{conversation.friend.name}}</a>-->\n                    <span bo-text="conversation.friend.name"></span>\n                </div>\n                <div class="summary">\n                    <i class="reply mail icon" ng-if="USER.id == conversation.sender.id"></i>\n                    <span cg-bind-html="conversation.content"></span>\n                </div>\n            </div>\n        </div>\n        <div cg-pager="{{pager_id}}"></div>\n        <p class="nothing" style="padding: 10px 0;text-align: center;color: #555;font-size: 16px;"\n           ng-if="conversations.length == 0">{{empty_msg}}</p>\n    </div>\n</script>\n\n<script type="text/ng-template" id="/user/tpl-message-history.html">\n    <div class="ui diveded list messages">\n        <h3 class="ui dividing header">\n            {{header || \'加载中..\'}}\n            <a href="javascript:void(0)" ng-click="refreshMessages(1)" style="float:right">\n                <i class="refresh icon"></i>\n            </a>\n        </h3>\n        <div cg-feed-editor="{{ feed_editor.content }}" feed-editor-mode="message_editor" feed-context="#messages-pane">\n            <textarea cg-feed-editor-textarea\n                      ng-model="feed_editor.content"\n                      placeholder="回复 Ta 点什么吧~"\n                      msd-elastic="\\n"\n                      cg-at-emoji\n                      cg-at-context\n                      at-item="-1"\n                      at-context-type="\'message\'"\n                      cg-textarea-editable></textarea>\n        </div>\n\n        <div class="unread-tips" ng-if="unread_messages_count >0" ng-click="showUnreadMessages()">\n            您有 {{ unread_messages_count }} 条未读信息，点击查看\n        </div>\n        <p class="empty center list" ng-if="loading"><i class="loading icon"></i>正在加载</p>\n        <div class="date" ng-repeat-start="conversation in conversations" ng-if="!loading">\n            <time title="{{conversation.created_at | date: \'yyyy-MM-dd HH:mm:ss Z\'}}">{{conversation.created_at | date:\n                \'MM月dd日 HH:mm\'}}\n            </time>\n        </div>\n        <div class="item" ng-if="!loading"\n             ng-class="{\'left\': conversation.sender.id != USER.id, \'right\': conversation.sender.id == USER.id}"\n             ng-repeat-end>\n            <a class="sender" ng-href="{{\'/u/\' + conversation.sender.global_key}}">\n                <img class="ui avatar image" ng-src="{{conversation.sender.avatar}}">\n            </a>\n            <div class="content arrow" ng-init="msg = multipleLines(conversation.content)">\n                <i class="red minus sign alternate icon remove" title="删除" ng-click="delMessage(conversation.id, $index)"></i>\n                <div class="detail content markdown" clip-copy-code="pre" ng-show="conversation.type == 0" cg-highlight="conversation.content" style="overflow:visible"></div>\n                <div class="detail content markdown" ng-show="conversation.type == 1" style="overflow:visible">\n                    <a title="这是一个语音消息，网页暂时不支持播放">语音消息，网页暂时不支持播放</a>\n                </div>\n            </div>\n        </div>\n        <div cg-pager="{{cpager_id}}"></div>\n    </div>\n</script>\n<div class="container" ng-include src="currentTpl" id="messages-pane">\n</div>'),
        $templateCache.put("app/user/notifications.html", '<style>\n    .ui.feed.notifications .content .summary {\n        white-space: pre-wrap;\n        max-width: 70%;\n        min-width: 400px;\n        padding-left: 6px;\n    }\n    .ui.feed .label {\n        vertical-align: middle;\n    }\n    .damn-notification-tip {\n        text-align: center;\n        margin-bottom: 10px;\n    }\n    .damn-notification-tip .damn-notification {\n        padding: 10px 20px;\n        border: 1px solid #d9caab;\n        border-radius: 4px;\n        color: #876a38;\n        font-size: 14px;\n        display: inline-block;\n        background: #fffbe6;\n    }\n    .damn-notification-tip .damn-notification .ui.small.green.button {\n        margin-left: 10px;\n    }\n    .damn-notification-tip .damn-notification .close.icon {\n        margin-left: 10px;\n        color: #000;\n    }\n</style>\n<div class="ui secondary vertical fixed menu active" id="inner-menu">\n    <header class="header item">\n        通知中心\n        <article>\n            这里显示了整站的提醒信息\n        </article>\n    </header>\n    <a class="item" href="/user/notifications/basic" ng-class="{active:inner_menu == \'basic\'}"><i class="inbox icon"></i>所有通知</a>\n    <a class="item" href="/user/notifications/unread" ng-class="{active:inner_menu == \'unread\'}"><i class="mail outline icon"></i>未读通知</a>\n    <a class="item" href="/user/notifications/atme" ng-class="{active:inner_menu == \'atme\'}"><i class="basic email icon"></i>提到我的</a>\n    <a class="item" href="/user/notifications/comments" ng-class="{active:inner_menu == \'comments\'}"><i class="comment icon"></i>评论</a>\n    <a class="item" href="/user/notifications/system" ng-class="{active:inner_menu == \'system\'}"><i class="bell icon"></i>系统通知</a>\n</div>\n<div class="container">\n  <div class="damn-notification-tip" ng-if="annoy">\n    <div class="damn-notification">\n        <span>通知太多觉得很烦？快去“个人设置”进行“提醒设置”吧!</span>\n        <a href="/user/setting/notification" class="ui small green button">马上去设置</a>\n        <a href="javascript:void(0)"><i class="close icon" ng-click="closeAnnoy()"></i></a>\n    </div>\n  </div>\n  <div class="ui small feed notifications">\n    <h3 class="ui dividing header">\n      <div class="right floated small ui button" ng-click="markPageRead()">标记本页为已读</div>\n      <div class="right floated red small ui button" ng-click="markAllRead()">标记所有为已读</div>\n      {{header}}\n      <span class="count" ng-if="unreadCount > 0">({{unreadCount}} 未读)</span>\n    </h3>\n    <p class="empty center list" ng-if="loading"><i class="loading icon"></i>正在加载</p>\n    <div class="event" ng-class="{\'read\': notification.status == 1}" ng-repeat="notification in notifications" ng-click="markRead(notification, $event)">\n      <div class="label">\n        <i class="circular {{eventIcon(notification)}} icon"></i>\n      </div>\n      <div class="content">\n        <div class="date">\n          <i class="time icon"></i><span cg-friendly-time="notification.created_at"></span>\n        </div>\n        <div class="summary" ng-bind-html="notification.content"></div>\n      </div>\n    </div>\n    <div cg-pager="{{pager_id}}"></div>\n    <p class="nothing" style="padding: 10px 0;text-align: center;color: #555;font-size: 16px" ng-if="notifications.length == 0">无数据</p>\n  </div>\n</div>\n'),
        $templateCache.put("app/user/payment/weixin.html", '<div style="margin: 0 auto;width: 300px" ng-show="qr">\n    <div ng-show="status == 0">\n        <div style="margin-top: 50px">\n            <img ng-src="{{qr}}" alt="微信支付二维码" style="width: 300px">\n        </div>\n        <p style="font-size: 18px;margin-left: 20px">请使用微信扫一扫 进行扫码支付</p>\n    </div>\n    <div ng-show="status == 1" style="margin-top: 100px; font-size: 25px; color: #32be77">\n        <p>成功支付{{price}}元！</p>\n    </div>\n</div>'),
        $templateCache.put("app/user/project_create.html", '<style>\n.select2-container .select2-choice{\n  border: 1px solid #ddd;\n}\n.select2-container .select2-choice .select2-arrow{\n  border-left: 1px solid #ddd;\n}\n.select2-search input{\n  border: 1px solid #ddd;\n}\n.select2-drop{\n  border: 1px solid #ddd;\n}\n.coding .select2-container a:active, .coding .select2-container a:hover{\n  color: #222;\n}\n</style>\n<form id="project-create-form" class="ui form segment" ng-class="{loading:project_creating}">\n\n    <div class="field">\n        <h1 class="ui dividing header">基础选项</h1>\n    </div>\n\n    <div class="field">\n        <div class="ui input">\n            <input type="text" ng-model="project.name" placeholder="项目名称" style="padding: .65em 1em;font-family: \'微软雅黑\', \'Helvetica Neue\', sans-serif, SimHei">\n            <div class="ui red pointing above ui label" ng-if="msg.project_name_not_empty || msg.project_name_exists || msg.project_name_error">\n                {{msg.project_name_not_empty}}\n                {{msg.project_name_exists}}\n                {{msg.project_name_error}}\n            </div>\n        </div>\n    </div>\n\n    <div class="field">\n        <div class="ui input">\n            <textarea ng-model="project.description" placeholder="项目描述"></textarea>\n            <div class="ui red pointing above ui label" ng-if="msg.project_description_not_empty">{{msg.project_description_not_empty}}</div>\n        </div>\n    </div>\n\n    <div class="grouped inline fields" style="margin-bottom: 2em">\n        <div class="field" style="margin: 1.2em 0">\n            <div ng-init="project.type = 2">\n                <div class="ui radio checkbox" style="margin-right: 1em">\n                    <input type="radio" name="type" value="2" ng-model="project.type" id="type2">\n                    <label for="type2" style="padding-left: 1.5em">私有</label>\n                </div>\n                <div class="ui radio checkbox" style="margin-right: 1em">\n                    <input type="radio" name="type" value="1" ng-model="project.type" ng-change="" id="type1">\n                    <label for="type1" style="padding-left: 1.5em">公开</label>\n                </div>\n                <div id="project-create-form-tip" class="ui red horizontal label pointing left">项目创建后，无法修改此属性</div>\n                <i class="icon help tip" style="cursor: pointer" data-html="<div class=\'content\'>公开项目是完全公开的，包括源码，项目讨论，质量控制等，只有项目成员可以编辑该项目，但任何用户都可以进行 fork，关注，收藏等操作。<br/>私有项目只对项目成员可见，并不会公开展示于项目成员的个人页面上。只有项目创建者才能添加项目成员，项目的所有内容和更新都只有项目上的成员可以进行操作和查看。<br/><a href=\'/help/faq/git/git.html\' target=\'_blank\'>更多帮助<i class=\'icon double angle right\'></i></a></div>" cg-help-popup=""></i>\n            </div>\n            <div class="ui red pointing above ui label" ng-if="msg.project_type_error">{{msg.project_type_error}}</div>\n        </div>\n\n        <div class="ui tabular menu">\n            <a class="item" ng-class="{active: project.gitEnabled}" ng-click="project.gitEnabled = true;">\n                初始化仓库\n            </a>\n            <a class="item" ng-class="{active: !project.gitEnabled}" ng-click="project.gitEnabled = false;">\n                导入仓库\n            </a>\n        </div>\n\n      <div ng-if="project.gitEnabled">\n        <div class="field" style="margin: 1.2em 0">\n          <div>\n            <div class="ui checkbox">\n              <input type="checkbox" ng-model="project.gitReadmeEnabled" id="git-readme-enabled">\n              <label for="git-readme-enabled">启用README.md文件初始化项目</label>\n            </div>\n          </div>\n        </div>\n        <select ui-select2="{width: \'280px\'}" ng-model="project.gitLicense" id="git-license-enabled" ng-include="\'app/user/license.html\'"></select>\n        -\n         <select ui-select2="{width: \'280px\'}" ng-model="project.gitIgnore" id="git-ignore-enabled" ng-include="\'app/user/gitignore.html\'"></select>\n      </div>\n      <div ng-if="!project.gitEnabled">\n          <div class="field">\n            <div class="ui radio checkbox" style="margin-right: 1em">\n              <input id="git_vcs_type" type="radio" value="git" name="vcsType" ng-change="" ng-model="project.vcsType">\n              <label for="git_vcs_type" style="padding-left: 1.5em">Git</label>\n            </div>\n\n            <div class="ui radio checkbox" style="margin-right: 1em">\n              <input id="svn_vcs_type" type="radio" value="svn" ng-model="project.vcsType" name="vcsType">\n              <label for="svn_vcs_type" style="padding-left: 1.5em">SVN/Subversion</label>\n            </div>\n\n            <div class="ui radio checkbox" style="margin-right: 1em">\n                <input id="hg_vcs_type" type="radio" name="vcsType" ng-model="project.vcsType" value="hg">\n                <label for="hg_vcs_type" style="padding-left: 1.5em">Hg/Mercurial</label>\n            </div>\n\n\n                    <i class="icon help tip" style="cursor: pointer" data-html="<div class=\'content\'>Coding.net 支持用户在创建项目的时候，导入外部的公开仓库（不需要提供认证的）。目前支持 Git 、SVN、Hg 三种类型仓库的导入。注意：为防止滥用，我们对单个仓库的导入时间做了限制，另外导入过程中请不要 Push 到远程仓库，导入结果会发送相关通知告知您。</div>" cg-help-popup=""></i>\n        </div>\n        <div class="field">\n            <div class="ui fluid input" style="display:block;margin-top:20px">\n                <input type="text" ng-model="project.importFrom" placeholder="导入公开项目地址" style="padding: .65em 1em" ng-change="checkUrl(project.importFrom)">\n            </div>\n        </div>\n\n        <div ng-show="show_warn_osc">\n            <label class="ui red label ng-binding">\n                因 Oschina 方服务器屏蔽 Coding 访问，可能导致您无法正常导入 git.oschina.net 的仓库。\n            </label>\n        </div>\n      </div>\n    </div>\n\n    <div ng-show="!enterise_plan">\n        <div class="field senior-title">\n            <h1 class="ui dividing header cursor-pointer" ng-click="showSenior = !showSenior">高级选项</h1>\n            <i class="double angle up icon cursor-pointer" ng-click="showSenior = false" ng-show="showSenior == true"></i>\n            <i class="double angle down icon cursor-pointer" ng-click="showSenior = true" ng-show="showSenior == false"></i>\n        </div>\n        <div class="field" style="margin-bottom: 2em" ng-show="showSenior == false">\n            <p style="color: #777" class="cursor-pointer" ng-click="showSenior = !showSenior">点击进行更多高级操作...</p>\n        </div>\n        <div ng-show="showSenior == true && project.type == 2" class="senior-form">\n            <div class="field">\n                <h2>项目版本</h2>\n            </div>\n            <div class="field">\n                <p class="description">\n                    Coding 升级项目可选择 “开发版” 和 “高级版”，使你的项目拥有更多的功能、更少的限制。<br>\n                    <a href="/upgrade" target="_blank">查看项目 免费版、开发版 和 高级版 对比详情 »</a>\n                </p>\n            </div>\n            <div class="field">\n                <p>选择项目版本：</p>\n                <ul class="versions clearfix">\n                    <li>\n                        <input name="version" type="radio" id="version-{{ project_versions.free.id }}" value="{{ project_versions.free.id }}" ng-model="seniorForm.version" checked="checked">\n                        <label for="version-{{ project_versions.free.id }}">\n                            <a class="ui right green corner label">\n                                <i class="checkmark icon"></i>\n                            </a>\n                            <i class="circular inverted icon" ng-class="project_versions.free.icon"></i>\n                            <h2 ng-bind="project_versions.free.name"></h2>\n                        </label>\n                    </li>\n                    <li>\n                        <input name="version" type="radio" id="version-{{ project_versions.dev.id }}" value="{{ project_versions.dev.id }}" ng-model="seniorForm.version">\n                        <label for="version-{{ project_versions.dev.id }}">\n                            <a class="ui right green corner label">\n                                <i class="checkmark icon"></i>\n                            </a>\n                            <i class="circular inverted icon" ng-class="project_versions.dev.icon"></i>\n                            <h2 ng-bind="project_versions.dev.name"></h2>\n                        </label>\n                    </li>\n                    <li>\n                        <input name="version" type="radio" id="version-{{ project_versions.pro.id }}" value="{{ project_versions.pro.id }}" ng-model="seniorForm.version">\n                        <label for="version-{{ project_versions.pro.id }}">\n                            <a class="ui right green corner label">\n                                <i class="checkmark icon"></i>\n                            </a>\n                            <i class="circular inverted icon" ng-class="project_versions.pro.icon"></i>\n                            <h2 ng-bind="project_versions.pro.name"></h2>\n                        </label>\n                    </li>\n                </ul>\n            </div>\n            <div class="inline fields payment-period" ng-show="seniorForm.version != \'free\'">\n                <div class="field">\n                    <div class="ui radio checkbox">\n                        <input name="period" id="price-1" type="radio" value="month" ng-model="seniorForm.period" checked="checked">\n                        <label for="price-1">\n                            <em ng-bind="periods[seniorForm.version].month"></em>/月\n                        </label>\n                    </div>\n                </div>\n                <div class="field">\n                    <div class="ui radio checkbox">\n                        <input name="period" id="price-2" type="radio" value="half_year" ng-model="seniorForm.period">\n                        <label for="price-2">\n                            <em ng-bind="periods[seniorForm.version].half_year"></em>/半年\n                            <strong>买5个月送1个月</strong>\n                        </label>\n                    </div>\n                </div>\n                <div class="field">\n                    <div class="ui radio checkbox">\n                        <input name="period" id="price-3" type="radio" value="full_year" ng-model="seniorForm.period">\n                        <label for="price-3">\n                            <em ng-bind="periods[seniorForm.version].full_year"></em>/一年\n                            <strong>买9个月送3个月</strong>\n                        </label>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n        <div ng-show="showSenior == true" class="select-member-form">\n            <h1 class="ui dividing header" ng-show="project.type == 2"></h1>\n            <div class="field">\n                <h2>添加成员</h2>\n            </div>\n            <div class="content">\n                <div id="add-members">\n                    <div class="wrapper">\n                        <table width="100%">\n                            <tr>\n                                <td class="search-region">\n                                    <div class="ui medium fluid icon input">\n                                        <input type="text" ng-model="key" cg-timeout-input="loadFriend(key);" placeholder="email、用户名或用户标识">\n                                        <i class="search icon"></i>\n                                    </div>\n                                    <div class="member-folder">\n                                        <div class="ui secondary vertical menu active">\n                                            <a class="item" href="javascript:void(0);" ng-class="{active: selectMenuIs(\'friend\')}" ng-click="loadFriends();">\n                                                <i class="unhide icon"></i>我关注的人\n                                            </a>\n                                            <a class="item" href="javascript:void(0);" ng-class="{active: selectMenuIs(\'follower\')}" ng-click="loadFollowers();">\n                                                <i class="heart icon"></i>粉丝\n                                            </a>\n                                            <a class="item ellipsis" href="javascript:void(0);" ng-repeat="project in projects" bindonce ng-class="{active: selectMenuIs(\'member\', project.id)}" ng-click="loadProjectMembers(project.id);">\n                                                <img class="ui image avatar24" bo-src="project.icon" bo-attr bo-attr-alt="project.name">\n                                                <span bo-text="project.name"></span>\n                                            </a>\n                                            <a class="item" href="javascript:void(0);" ng-if="loading_projects">\n                                                <i class="loading icon"></i>正在加载项目列表...\n                                            </a>\n                                        </div>\n                                    </div>\n                                </td>\n                                <td class="select-region">\n                                    <div class="select-nothing" ng-if="loading">\n                                        <span class="words">\n                                            <i class="loading icon"></i>正在搜索好友...\n                                        </span>\n                                    </div>\n                                    <div class="select-users" ng-if="!loading && friends.length > 0">\n                                        <ul class="clearfix">\n                                            <li class="ellipsis" ng-repeat="friend in friends" bindonce ng-click="selectFriend(friend);" bo-class="{\'is-member\': friend.is_member}" bo-title="selectUserTitle(friend)">\n                                                <div class="ui corner label" ng-class="{\'green\': friend.selected && friend.global_key != USER.global_key}" ng-show="friend.is_member || friend.selected">\n                                                    <i class="checkmark icon"></i>\n                                                </div>\n                                                <img class="ui image avatar32" bo-src="friend.avatar">\n                                                <span bo-text="friend.name"></span>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </td>\n                            </tr>\n                            <tr class="selected-region">\n                                <td class="selected-region" colspan="2">\n                                    <ul class="ui circular labels clearfix">\n                                        <li>已选成员： </li>\n                                        <li class="ui label" bindonce="">\n                                            <span bo-text="USER.name"></span>\n                                        </li>\n                                        <li class="ui green label" ng-repeat="friend in selected_users" bindonce="">\n                                            <span bo-text="friend.name"></span>\n                                            <i class="remove icon" title="取消选定" ng-if="friend.global_key != USER.global_key" ng-click="removeSelected(friend, $event);"></i>\n                                        </li>\n                                    </ul>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n            </div>\n            <div class="actions">\n                <div class="max-member">\n                    <span ng-if="member_size>0">你还可以添加 <span style="color:#32be77" ng-bind="member_size || 0"></span> 个项目成员</span>\n                    <span ng-if="member_size<=0" class="max-member-warning" ng-bind="max_member_warning_info"></span>\n                    <span class="max-member-warning" ng-if="selected_users.length - max_member + 1 > 0">超出了 <span style="color:#32be77">{{ selected_users.length - max_member + 1 }}</span> 位人员，请移除。</span>\n                </div>\n            </div>\n        </div>\n\n        <div ng-show="showSenior == true && seniorForm.version != \'free\'">\n            <h1 class="ui dividing header"></h1>\n            <div class="field">\n                <h2>金额</h2>\n            </div>\n            <div style="margin-top: 30px" ng-include="\'app/project/setting/summary/voucher/voucher.html\'"></div>\n            <div class="field money">\n                <span>实付款：￥</span> <span>{{version_price}}</span>\n            </div>\n        </div>\n    </div>\n\n    <div style="margin-top: 30px">\n        <input type="submit" value="{{seniorForm.version == \'free\' ? \'创建项目\' : \'支付并创建项目\'}}" class="ui dark green submit medium button" ng-click="createProject(project);">\n    </div>\n</form>\n<div class="ui modal account-charge-modal" ng-controller="PasswordRequiredModalCtrl" cg-modal="password_required_modal" ng-include="\'app/project/setting/summary/modal/password_required_modal.html\'"></div>'),
        $templateCache.put("app/user/projects.html", '<style type="text/css">\n    #project-group-dropdown .menu {\n        width: 160px;\n        margin-top: 5px;\n    }\n\n    #project-group-dropdown .menu .item {\n        padding: 10px;\n        font-size: 14px;\n    }\n\n    #project-group-dropdown .fluid.button {\n        margin: 0;\n        padding: 0;\n    }\n\n    #project-group-dropdown .fluid.button .icon {\n        margin-right: 0;\n        padding-right: 0;\n    }\n</style>\n<div class="ui secondary vertical fixed menu active" id="inner-menu">\n    <header class="header item">\n        项目\n        <a href="/user/projects/create"><i class="right add icon"></i></a>\n        <article>\n            按我创建的、参与的和归档的项目分类\n        </article>\n    </header>\n    <a class="item" ng-click="switchTab(\'all\');" ng-class="{active:inner_menu == \'all\'}">\n        <i class="coding project icon"></i>\n        <span>所有项目 ({{count.all}})</span>\n    </a>\n    <a class="item" ng-click="switchTab(\'created\');" ng-class="{active:inner_menu == \'created\'}">\n        <i class="edit sign icon"></i>\n        <span>我创建的 ({{count.created}})</span>\n    </a>\n    <a class="item" ng-click="switchTab(\'joined\');" ng-class="{active:inner_menu == \'joined\'}">\n        <i class="umbrella icon"></i>\n        <span>我参与的 ({{count.joined}})</span>\n    </a>\n    <a class="item" ng-click="switchTab(\'deploy\');" ng-class="{active:inner_menu == \'deploy\'}">\n        <i class="play sign icon"></i>\n        <span>已开启演示 ({{count.deploy}})</span>\n    </a>\n    <a class="item" ng-click="switchTab(\'archive\');" ng-class="{active:inner_menu == \'archive\'}">\n        <i class="archive icon"></i>\n        <span>归档项目 ({{count.archive}})</span>\n    </a>\n\n    <div class="sep"></div>\n    <a class="item" ng-click="switchTab(\'watched\')" ng-class="{active:inner_menu == \'watched\'}">\n        <i class="unhide icon"></i>\n        <span>我关注的 ({{count.watched}})</span>\n    </a>\n    <a class="item" ng-click="switchTab(\'stared\')" ng-class="{active:inner_menu == \'stared\'}">\n        <i class="star icon"></i>\n        <span>我收藏的 ({{count.stared}})</span>\n    </a>\n\n    <div class="sep"></div>\n    <a class="item" style="cursor: pointer!important;font-size: 12px;padding: 2px 25px;opacity: 1;cursor: default" href="/projects" target="_blank">\n        <i class="circular icon globe inverted" style="background-color: #527D9D!important;color:#FFF;opacity: 1;position: relative">\n        </i> 项目广场\n    </a>\n</div>\n\n<!-- project list -->\n<div class="container" ng-if="inner_menu !== \'create\'">\n\n    <div class="ui dividing header projects-header">\n        <span ng-if="inner_menu == \'all\' && search.key.length <= 0">\n            <span>所有项目</span>（<em ng-bind="count.all"></em>）\n        </span>\n        <span ng-if="inner_menu == \'created\'  && search.key.length <= 0">\n            <span>我创建的</span>（<em ng-bind="count.created"></em>）\n        </span>\n        <span ng-if="inner_menu == \'joined\'  && search.key.length <= 0">\n            <span>我参与的</span>（<em ng-bind="count.joined"></em>）\n        </span>\n        <span ng-if="inner_menu == \'watched\'">\n            <span>我关注的</span>（<em ng-bind="count.watched"></em>）\n        </span>\n        <span ng-if="inner_menu == \'stared\'">\n            <span>我收藏的</span>（<em ng-bind="count.stared"></em>）\n        </span>\n        <span ng-if="inner_menu == \'deploy\'">\n            <span>已开启演示</span>（<em ng-bind="count.deploy"></em>）\n        </span>\n        <span ng-if="inner_menu == \'archive\'">\n            <span>归档项目</span>（<em ng-bind="count.archive"></em>）\n        </span>\n         <span ng-if="search.key.length > 0 && (inner_menu == \'all\' || inner_menu == \'created\' || inner_menu == \'joined\')">\n            <span>搜索结果</span>（<em ng-bind="search.count"></em>）\n        </span>\n        <span ng-show="editable" ng-bind="\'(已选 \' + selectedProjectCount() +\' 个项目)\'"></span>\n\n        <!-- normal -->\n        <span ng-if="!editable" class="coding floated right projects-edit">\n            <div class="coding floated left projects-search" ng-show="inner_menu == \'all\' || inner_menu ==\'created\' || inner_menu == \'joined\'">\n                <div class="ui icon small form input tiny font" ng-show="search.list.length > 0">\n                    <input type="text" placeholder="项目名搜索" ng-model="search.key" cg-enter="enterFirst()" tabindex="100" cg-tab="tabFirst()" ng-keyup="searchPress($event,search.key)">\n                    <i class="remove sign icon search-right-icon" ng-show="search.key.length > 0" ng-click="clearSearch()"></i>\n                    <i class="search icon search-right-icon" ng-show="search.key.length <= 0"></i>\n                </div>\n            </div>\n            <a class="ui button" href="javascript:void(0);" title="对项目进行分组" style="margin-right: 5px; padding: 0 12px!important" ng-show="inner_menu === \'all\' && view_type === \'icon\' && search.key.length <=0 " ng-click="toggleEditable();">\n                <i class="circle blank icon" style="margin: 0;padding: 0"></i>分组\n            </a>\n            <a class="gray" href="javascript:void(0);" title="列表视图" cg-popup ng-show="view_type === \'icon\'" ng-click="toggleViewType(\'list\');">\n                <i class="list layout icon"></i>\n            </a>\n            <a class="gray" href="javascript:void(0);" title="图标视图" cg-popup ng-show="view_type === \'list\'" ng-click="toggleViewType(\'icon\');">\n                <i class="block layout icon"></i>\n            </a>\n        </span>\n\n        <!-- editing: project group -->\n        <span ng-if="editable" class="coding floated right">\n            <a class="ui gray dark button" href="javascript:void(0);" ng-show="groups.length === 0" ng-click="createGroup(\'新分组\', 0);">\n                移动至新分组\n            </a>\n            <div id="project-group-dropdown" class="ui dropdown item" cg-dropdown>\n                <a class="ui dark gray button" href="javascript:void(0);" ng-show="groups.length > 0">\n                    移动至..\n                </a>\n\n                <div class="menu" ng-show="groups.length > 0">\n                    <div class="item active" ng-click="moveOutGroup();">\n                        <i class="sign out icon" style="margin-right:0"></i>组外\n                    </div>\n                    <div class="item ellipsis" bindonce ng-repeat="group in groups" ng-click="moveToGroup(group.id);" bo-title="group.name" bo-text="group.name">\n                    </div>\n                    <div class="item" ng-show="groups.length === 0">尚未创建任何分组</div>\n                    <div class="item active" style="padding: 6px!important">\n                        <button class="ui fluid button" ng-click="createGroup(\'新分组\', groups.length);">\n                            <i class="add icon"></i> 新分组\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <a class="ui button" href="javascript:void(0);" ng-click="toggleEditable();">返回</a>\n        </span>\n    </div>\n\n    <div ng-switch="view_type" class="projects-view">\n\n\n        <div ng-switch-when="icon" class="projects-icon-view">\n\n            <div ng-if="inner_menu === \'all\'">\n                <div class="group-project-wrapper loading" cg-items-group="groups" group-items="projects" on-project-select="onProjectSelect" editable="editable" loading="projects_loading">\n                    <a ng-if="showCreateButton(inner_menu)" class="gray" ng-href="/user/projects/create" ng-hide="search.key.length > 0">\n                        <div class="create-project">\n                            <i class="huge add icon"></i>\n                        </div>\n                        <div class="title">创建项目</div>\n                    </a>\n                </div>\n            </div>\n\n            <div ng-if="inner_menu !== \'all\' && inner_menu !== \'archive\'">\n                <div class="group-project-wrapper loading" cg-items-group="[]" group-items="projects" editable="false" loading="projects_loading">\n                    <a ng-if="showCreateButton(inner_menu)" class="gray" ng-href="/user/projects/create" ng-hide="search.key.length > 0">\n                        <div class="create-project">\n                            <i class="huge add icon"></i>\n                        </div>\n                        <div class="title">创建项目</div>\n                    </a>\n                </div>\n            </div>\n\n            <!--归档项目-->\n            <div ng-if="inner_menu === \'archive\'">\n                <div class="group-project-wrapper loading" cg-items-group="[]" group-items="projects" editable="false" pin-disabled="true" cg-project-archiver-enable="true" loading="projects_loading">\n                    <a ng-if="showCreateButton(inner_menu)" class="gray" ng-href="/user/projects/create" ng-hide="search.key.length > 0">\n                        <div class="create-project">\n                            <i class="huge add icon"></i>\n                        </div>\n                        <div class="title">创建项目</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n\n        <div class="ui relaxed horizontal selection list projects-list-view" ng-switch-when="list" id="project-list" style="display: block">\n\n            <ul style="padding: 0">\n                <li class="list view projects-item" ng-repeat="project in projects track by $index" tabindex="{{$index+100}}" ng-focus="listItemFocus()" cg-enter="enterItem($event)">\n                    <div class="icon">\n                        <a ng-href="{{project.project_path}}">\n                            <img ng-if="project.icon" ng-src="{{project.icon}}" width="56px" height="56px">\n                            <img ng-if="!project.icon" ng-src="/static/d2ab4f6de747ad169160d3caaf82132e.png" width="56px" height="56px">\n                        </a>\n                        <i class="message-tip tiny" ng-if="project.un_read_activities_count" ng-bind="project.un_read_activities_count">\n                        </i>\n                        <!--解除项目归档-->\n                        <div class="projects-item-archiver list" ng-if="inner_menu === \'archive\'" ng-click="unarchive(project.id)" title="解除归档">\n                            <i class="ui icon unlock"></i>\n                        </div>\n                    </div>\n                    <div class="info">\n                        <p class="name">\n                            <a class="gray" ng-href="{{inner_menu === \'archive\' ? \'\' : project.project_path}}">\n                                <i ng-if="!project.is_public" class="lock icon"></i>\n                                <span ng-bind="project.owner_user_name + \'/\' + project.name"></span>\n                                <span style="color: #2D59A2" ng-if="project.deploy_memory" ng-bind="\'( \' + project.deploy_memory + \'M )\'"></span>\n                            </a>\n                        </p>\n\n                        <p class="description ellipsis" ng-bind="project.description"></p>\n                    </div>\n                </li>\n            </ul>\n            <div class="center empty list" ng-if="projects.length == 0 && search.key.length <= 0">\n                <p ng-if="projects_loading"><i class="loading icon"></i>加载项目中...</p>\n\n                <p ng-if="!projects_loading">尚无任何项目，马上<a href="/user/projects/create">创建一个</a>吧!</p>\n            </div>\n            <div class="create list view" style="line-height: 56px;text-align: center" ng-hide="search.key.length > 0">\n                <a ng-href="/user/projects/create" class="gray" style="font-size: 48px;line-height: 65px;display: block"><i class="add icon"></i></a>\n            </div>\n        </div>\n\n    </div>\n    <div ng-if="projects.length <= 0 && search.key.length > 0">\n        <p class="projects-empty">没有符合条件的项目</p>\n    </div>\n\n    <div class="ui coding aligned center" style="font-size: 14px;padding: 30px" ng-if="!showCreateButton(inner_menu) && projects.length == 0 && !projects_loading">\n        <p ng-switch="inner_menu">还没有{{staredOrWatched(inner_menu);}}项目哦，<a ng-href="/projects">去广场看看</a>？</p>\n    </div>\n\n    <div cg-pager="{{pager_id}}" class="center" style="margin-top: 40px"></div>\n</div>\n\n\n<!-- create project -->\n<div class="container" ng-if="inner_menu === \'create\'" ng-controller="ProjectCreateController" ng-include="\'app/user/project_create.html\'">\n</div>'),
        $templateCache.put("app/user/relationship.html", '<style type="text/css">\n    #add-friend{\n        float:right;\n    }\n\n    #relationship{\n        position: relative;\n    }\n\n    #relationship > .header.dividing{\n        margin-bottom: 20px;\n    }\n\n    #relationship .friend{\n        padding:20px 10px;\n        position: relative;\n        height:64px;\n        width: 380px;\n        display: inline-block;\n        background-color: #fff;\n        margin:10px 10px;\n        border: 1px solid #ddd;\n        border-radius: 3px;\n    }\n\n    #relationship .friend .avatar{\n        position:absolute;\n        left:10px;\n        top:50%;\n        margin-top:-30px;\n    }\n\n    #relationship .friend .info {\n        margin-top: 5px;\n\n    }\n\n   #relationship .friend .info > a {\n       margin-right: 10px;\n    }\n    #relationship .friend .join-in-at{\n        font-size: 14px;\n        color:#999;\n    }\n\n    #relationship .friend .info,\n    #relationship .friend .action{\n        height:50%;\n        padding-left:74px;\n        line-height: 30px;\n\n    }\n\n    #relationship .friend .info .email{\n        font-size:14px;\n        margin-left:5px;\n    }\n\n    #relationship .friend .action{\n        font-size:12px;\n    }\n\n    #relationship .friend .action > .button{\n        margin-right:10px;\n    }\n\n    #relationship .friend .action i.icon{\n        margin-right:0;\n    }\n    #relationship .ui.button.small{\n        padding: 0 1em;\n    }\n    #inner-menu .invite-not-limited {\n        font-size: 12px;\n    }\n    #inner-menu .invite-not-limited input[type="text"] {\n        width: 120px;\n        margin-left: 10px;\n        height: 35px;\n    }\n    #inner-menu .invite-not-limited .ui.right.icon.button {\n        width:48px;\n        height: 35px;\n    }\n    #inner-menu .invite-tip {\n        font-size: 14px;\n        margin:10px;\n    }\n\n</style>\n<div class="ui secondary vertical fixed menu active" id="inner-menu">\n    <header class="header item">\n        关系中心<a href="javascript:void(0);" ng-click="addFriend();" id="add-friend"><i class="add user basic icon right"></i></a>\n        <article>\n            包括我关注的人以及关注我的人\n        </article>\n    </header>\n    <a class="item" ng-href="/user/relationship/friends" ng-class="{active:inner_menu == \'friends\'}"><i class="unhide icon"></i>关注 ({{USER.follows_count || 0}})</a>\n    <a class="item" ng-href="/user/relationship/fans" ng-class="{active:inner_menu == \'fans\'}"><i class="heart icon"></i>粉丝 ({{USER.fans_count || 0}})</a>\n    <div class="sep"></div>\n    <div class="invite-tip">你的专属邀请链接</div>\n    <div class="ui action input invite-not-limited">\n        <input type="text" ng-value="invite_url" readonly="readonly" onclick="this.select()">\n        <div class="ui right icon button" clip-copy="getCopy()" clip-click="doCopy()">\n            <i class="paste icon" ng-class="{\'green checkmark\': copied, \'paste\': !copied}" style="vertical-align: middle"></i>\n        </div>\n    </div>\n</div>\n\n<div class="container" id="relationship">\n    <div class="ui dividing header" ng-bind="relation_header_title">我关注的人</div>\n    <div class="friends">\n        <div class="friend" bindonce ng-repeat="user in friends" ng-if="friends.length>0" ng-switch="inner_menu">\n            <div class="avatar">\n                <a bo-href="user.path">\n                    <img class="ui circular image avatar64" bo-src="user.avatar ">\n                </a>\n            </div>\n            <div class="info">\n                <a bo-href="user.path" class="ellipsis" style="max-width: 80px;display: inline-block;vertical-align: middle">\n                    <span bo-text="user.name"></span></a>\n                <span class="join-in-at">\n                    <span class="created-time" cg-friendly-time="user.created_at"></span>\n                    加入Coding\n                </span>\n            </div>\n            <div class="action" ng-switch-when="friends">\n                <span ng-if="user.follow && user.followed"><i class="green exchange icon"></i>互相关注</span>\n                <span ng-if="!user.follow && user.followed"><i class="blue checkmark icon"></i>已关注</span>\n                &nbsp;&nbsp;\n                <div class="ui down small gray button" ng-click="unfollow(user);">\n                    <div ng-show="user.unfollowing">\n                        <i class="icon loading" style="margin: 0 10px"></i>\n                    </div>\n                    <div ng-show="!user.unfollowing">\n                      <i class="minus icon"></i>\n                      取消关注\n                    </div>\n                </div>\n                <div class="ui down black small button" ng-click="showSendMsgDialog(user)">\n                    给TA私信\n                </div>\n            </div>\n            <div class="action" ng-switch-when="fans" ng-switch="user.followed">\n                <span ng-if="user.follow && user.followed"><i class="green exchange icon"></i>互相关注</span>\n                <span ng-if="!user.follow && user.followed"><i class="blue checkmark icon"></i>已关注</span>\n                &nbsp;&nbsp;\n                <div class="ui down green small button" ng-switch-when="false" ng-click="follow(user);">\n                    <div ng-show="user.following">\n                        <i class="icon loading" style="margin: 0 10px"></i>\n                    </div>\n                    <div ng-show="!user.following">\n                        <i class="add icon"></i>\n                        马上关注\n                    </div>\n                </div>\n                <div class="ui down small gray button" ng-switch-when="true" ng-click="unfollow(user);">\n                    <div ng-show="user.unfollowing">\n                        <i class="icon loading" style="margin: 0 10px"></i>\n                    </div>\n                    <div ng-show="!user.unfollowing">\n                      <i class="minus icon"></i>\n                      取消关注\n                    </div>\n                </div>\n                <div class="ui down black small button" ng-click="showSendMsgDialog(user)">\n                    给TA私信\n                </div>\n\n            </div>\n        </div>\n        <div ng-if="friends.list.length==0" ng-switch="loading">\n            <div class="empty center list" ng-switch-when="true">\n                <i class="loading icon"></i>正在加载数据...\n            </div>\n            <div class="empty center list" ng-if="inner_menu === \'friends\'" ng-switch-when="false">\n                尚未关注任何人，马上 <a href="javascript:void(0);" ng-click="addFriend();"><i class="add icon"></i>查找好友</a>！\n            </div>\n            <div class="empty center list" ng-if="inner_menu === \'fans\'" ng-switch-when="false">\n                没人关注？， 多<a href="javascript:void(0);" ng-click="addFriend();"><i class="add icon"></i>关注些好友</a>，总会有人被你打动的！\n            </div>\n        </div>\n        <div ng-if="inner_menu == \'friends\'" cg-pager="{{friends_pager_id}}" class="center"></div>\n        <div ng-if="inner_menu == \'fans\'" cg-pager="{{fans_pager_id}}" class="center"></div>\n    </div>\n</div>'),
        $templateCache.put("app/user/request_valid.html", '<style>\n    #request-valid-modal {width:40%;margin-left:-20%}\n    #request-valid-modal > .tips {text-align:center;margin: 16px 30px;color:#333;height: 60px;line-height: 32px;}\n    #request-valid-modal > .tips > span{display:block;}\n    #request-valid-modal > .content{border-bottom-left-radius:6px;border-bottom-right-radius:6px;text-align: center;padding-top:30px}\n    #request-valid-modal > .content > .ui.medium.left.labeled.icon.input{width:10em;}\n    #request-valid-modal > .content > img{height:36px;cursor: pointer;border-radius:3px;vertical-align:middle;}\n    #request-valid-modal > .content > .ui.medium.left.labeled.icon.input > input{border-radius:3px;}\n    #request-valid-modal > .content > .ui.medium.left.labeled.icon.input {display:inline-block;vertical-align:middle;}\n    #request-valid-modal > .content > img {margin:10px}\n</style>\n\n<div class="ui small modal coding-modal" id="request-valid-modal">\n    <i class="close icon"></i>\n    <div class="tips">\n        <span ng-show="type == POST_LIMIT">亲，你操作这么快，不会是机器人吧？！</span>\n        <span ng-show="type == MESSAGE_LIMIT">亲，你们不是好友关系，不能直接发私信哦！</span>\n        <span>来，输个验证码先！</span>\n    </div>\n    <div class="content">\n        <div class="ui medium left labeled icon input">\n            <i class="icon shield"></i>\n            <input placeholder="验证码" type="text" ng-model="j_captcha" cg-enter="doValid(j_captcha)">\n        </div>\n        <img ng-src="{{captcha}}" alt="验证码" title="看不清？点击换另一张" ng-click="refreshCaptcha()">\n        <div ng-show="type == POST_LIMIT" class="ui medium green button" ng-click="doValid(j_captcha)">还真不是！</div>\n        <div ng-show="type == MESSAGE_LIMIT" class="ui medium green button" ng-click="doValid(j_captcha)">好的！</div>\n    </div>\n</div>'),
        $templateCache.put("app/user/send_bobble_modal.html", '<style>\n    #send-bobble-modal{width:46%;}\n    #send-bobble{border-bottom-left-radius:6px;border-bottom-right-radius:6px;}\n    #send-bobble-modal .ui.top.right.pointing.dropdown .menu{top:auto;bottom:160%;z-index:99;}\n    #send-bobble-modal .ui.top.right.pointing.emotion.box .menu:after{display:none;}\n    #send-bobble textarea{height:96px; max-height:96px;}\n    #send-bobble-modal .feed-editor .toolbar .topic .content {padding:0}\n</style>\n<div class="ui tiny40 modal coding-modal" id="send-bobble-modal">\n    <i class="close icon"></i>\n    <div class="header">冒个泡</div>\n    <div class="content" id="send-bobble">\n        <div cg-feed-editor="{{ bobble_editor_options.content }}" feed-context="#send-bobble-modal" emoji-tabs-bottom="true">\n                <textarea cg-feed-editor-textarea ng-model="bobble_editor_options.content" cg-at-emoji cg-at-context at-context-type="\'tweet\'" at-item="-1" placeholder="来，冒个泡吧~" cg-textarea-editable msd-elastic="\\n">\n                </textarea>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("app/user/send_message_modal.html", '<div class="ui small modal send-message coding-modal" id="send-message-modal">\n  <i class="close icon"></i>\n  <div class="header">\n    发送私信\n  </div>\n  <div class="content">\n    <div class="ui small form" ng-class="{\'error\': receiver_not_found}">\n      <div class="field" ng-class="{\'error\': user_empty}" ng-show="no_receiver">\n        <label>接收者</label>\n        <input placeholder="对方昵称，输入@可以补全" type="text" ng-model="receiver" cg-at-context at-context-type="\'message\'" at-item="-1" insert_without_symbol="true">\n      </div>\n      <div class="field">\n        <label ng-show="no_receiver">消息内容</label>\n        <label ng-show="!no_receiver" style="padding: 6px 0 6px 0">发送给 <a ng-href="{{$root.send_msg_target.path}}" target="_blank">{{htmlToPlaintext($root.send_msg_target.name)}}</a></label>\n        <div cg-feed-editor="{{ feed_editor.content }}" feed-context="#send-message-modal" feed-editor-mode="message_editor_modal" emoji-tabs-bottom="true">\n            <textarea class="send-message-text" placeholder="说点什么~" cg-feed-editor-textarea="getUserByName()" ng-model="feed_editor.content" cg-at-emoji cg-at-context at-context-type="\'message\'" at-item="-1" cg-textarea-editable msd-elastic="\\n">\n            </textarea>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="actions">\n      <div class="ui negative button">取消</div>\n      <div class="ui positive blue button" ng-click="getUserByName()" ng-if="!sending" style="width:109px">发送</div>\n      <div class="ui positive blue button" ng-if="sending"><i class="loading icon"></i>发送中</div>\n  </div>\n</div>'),
        $templateCache.put("app/user/setting/email/reset_email.html", '<style type="text/css">\n    #reset-region{\n        margin:80px auto;\n    }\n    #reset-region .header {\n        color: white;\n        text-align: center;\n        font-size: 40px;\n        font-weight: normal;\n    }\n    #reset-region .button {\n        width: 100%;\n        margin-top: 20px;\n    }\n    #reset-region form {\n        width: 350px;\n        margin: 0 auto;\n    }\n    #reset-region .footer {\n        margin-top: 10px;\n        text-decoration: none;\n        text-align: center;\n    }\n    #reset-region .footer a{\n        color: #FFF;\n    }\n    #reset-region input {\n        opacity: 0.9;\n    }\n    #reset-region .ui.red.horizontal.label {\n        background: #D95C5C;\n        left: 360px;\n        top: -28px;\n    }\n    #reset-region .arrow_box {\n        position: relative;\n        background: #d50000;\n    }\n    #reset-region .arrow_box:after {\n        right: 100%;\n        top: 50%;\n        border: solid transparent;\n        content: " ";\n        height: 0;\n        width: 0;\n        position: absolute;\n        pointer-events: none;\n        border-color: rgba(213, 0, 0, 0);\n        border-right-color: #D95C5C;\n        border-width: 5px;\n        margin-top: -5px;\n    }\n</style>\n<div class="ui basic" id="reset-region">\n    <h2 class="header">重设邮箱</h2>\n    <form>\n        <div class="ui form">\n            <input type="hidden" ng-model="form.email">\n            <input type="hidden" ng-model="form.key">\n            <div class="field">\n                <div class="ui left labeled icon large input">\n                    <input type="text" ng-model="form.email" disabled="disabled">\n                    <i class="mail icon"></i>\n                </div>\n            </div>\n            <div class="field" ng-if="is_activated">\n                <div class="ui left labeled icon large input">\n                    <input type="password" style="display: initial" ng-model="form.password" placeholder="密码">\n                    <i class="lock icon"></i>\n                </div>\n            </div>\n            <div>\n                <input type="submit" value="确定" class="ui coding large dark gray button" ng-click="doreset(form)">\n            </div>\n        </div>\n    </form>\n</div>'),
        $templateCache.put("app/user/setting/email/reset_email_modal.html", '<i class="close icon"></i>\n<span class="title">修改邮箱</span>\n<div class="content">\n    <div class="ui warning message">\n        <strong>注意：</strong>\n        邮箱用于用户登录 Coding 和同步其项目代码，并接受与账户相关的通知等，修改邮箱，将导致之前的 git client 中记住的账号和密码无效。\n    </div>\n    <div class="ui medium left labeled icon input" style="margin:20px">\n        <i class="icon mail" style="left:auto"></i>\n        <input type="text" style="width:18em" ng-model="form.email" cg-enter="resetEmail(form)" placeholder="输入新邮箱">\n    </div>\n</div>\n<div class="actions">\n    <a href="javascript:void(0)" class="gray" ng-click="closeModal(reset_email_modal)" style="margin-right: 10px">取消</a>\n    <div id="reset-email-submit" ng-click="resetEmail(form)" class="ui approve dark gray default button">\n        <i class="icon loading" ng-if="reseting"></i>提交</div>\n</div>'),
        $templateCache.put("app/user/space/followers_and_friends.html", '<style type="text/css">\n    #add-friend{\n        float:right;\n    }\n\n    #relationship{\n        position: relative;\n    }\n\n    #relationship > .header.dividing{\n        margin-bottom: 20px;\n    }\n\n    #relationship .friend{\n        height: 84px;\n        width: 292px;\n        display: inline-block;\n        background-color: #fff;\n        border-bottom: 1px solid;\n        border-color: #f2f2f2;\n        margin: 0 14px 20px 0px;\n        vertical-align: top;\n    }\n\n    #relationship .friend .avatar{\n        float: left;\n    }\n\n    #relationship .friend .info {\n        margin-left: 12px\n    }\n\n    #relationship .friend .join-in-at{\n        font-size: 12px;\n        color:#999;\n        display: inline-block;\n        width: 200px;\n    }\n\n    #relationship .friend .info,\n    #relationship .friend .action{\n        padding-left:60px;\n    }\n\n    #relationship .friend .info .email{\n        font-size:14px;\n        margin-left:5px;\n    }\n\n    #relationship .friend .action{\n        font-size:12px;\n    }\n\n    #relationship .friend .action > .button{\n        margin-right:10px;\n    }\n\n    #relationship .friend .action i.icon{\n        margin-right:0;\n    }\n    #relationship .ui.button.small{\n        padding: 0 1em;\n        margin-left: 6px;\n    }\n    #relationship .friends .friend .user-followed {\n        font-size:12px;\n        margin-left: 10px;\n        display: inline-block;\n    }\n    #relation_header_title {\n        margin: 0 0 30px 0;\n        font-size:18px;\n        color:#333\n    }\n\n</style>\n<div ng-bind="relation_header_title" id="relation_header_title">{{relation_header_title}}</div>\n<div class="friends">\n    <div class="friend" bindonce ng-repeat="user in follower_list" ng-if="follower_list.length>0 && !follower_loading" ng-switch="inner_menu">\n        <div class="avatar">\n            <a bo-href="user.path">\n                <img class="ui circular image avatar64" bo-src="user.avatar ">\n            </a>\n        </div>\n        <div class="info">\n            <div style="max-width: 160px; float:left" class="ellipsis">\n                <a bo-href="user.path" bo-title="user.name"><span>{{user.name}}</span></a>\n            </div>\n            <span class="join-in-at">\n                <i class="time icon" style="margin:0"></i>\n                <span class="created-time" cg-friendly-time="user.created_at"></span>\n                加入\n            </span>\n        </div>\n        <div ng-if="!user.followed && USER && USER.global_key != user.global_key && !user.open_following && !open_following" ng-click="open_follow(user)" class="ui small white button" style="margin-left: 6px"><span>+关注</span></div>\n        <div ng-if="!user.followed && USER && USER.global_key != user.global_key && !user.open_following && open_following" class="ui small white button" style="margin-left: 6px"><span>+关注</span></div>\n        <div ng-if="!user.followed && USER && USER.global_key != user.global_key && user.open_following" class="ui small white button" style="margin-left: 6px">\n            <i class="icon" ng-class="{loading: user.open_following}" click="return false;"></i>\n        </div>\n        <span class="user-followed" ng-if="user.followed && user.follow && USER">\n            <i class="green exchange icon"></i>相互关注\n        </span>\n        <span class="user-followed" ng-if="user.followed && !user.follow && USER">\n            <i class="blue checkmark icon"></i>已关注\n        </span>\n    </div>\n    <div class="empty center list" ng-if="follower_loading">\n        <i class="loading icon"></i>正在加载数据...\n    </div>\n    <div class="empty center list" ng-if="inner_menu == \'follower\' && !follower_loading && !follower_list.length>0">\n        尚未有任何人关注TA\n    </div>\n    <div class="empty center list" ng-if="inner_menu === \'friend\' && !follower_loading && !follower_list.length>0">\n        TA尚未关注任何人\n    </div>\n    <div cg-pager="{{pager_id}}" class="center"></div>\n</div>'),
        $templateCache.put("app/user/space/index.html", '<div id="user-space" class="ui grid">\n     <div class="five wide column info-column" ng-include="\'app/user/space/left_column.html\'"></div>\n     <div ng-if="!show_follower_list" class="eleven wide column content-column">\n        <div class="ui tabular menu">\n            <a class="item" ng-class="{active: show_tab == \'project\'}" ng-click="switch_tab(\'project\')">\n                项目\n            </a>\n            <a class="item" ng-class="{active: show_tab == \'bubble\'}" ng-click="switch_tab(\'bubble\')">\n                冒泡\n            </a>\n            <a class="item" ng-class="{active: show_tab == \'bubble-topic\'}" ng-click="switch_tab(\'bubble-topic\')">\n                话题\n            </a>\n            <a class="item" ng-class="{active: show_tab == \'activity\'}" ng-click="switch_tab(\'activity\')">\n                动态\n            </a>\n        </div>\n        <div class="user-projects" ng-if="show_tab == \'project\'">\n            <div class="ui text menu filter-menu">\n              <a class="item" ng-class="{active: show_joined}" ng-click="switch_projects(\'joined\')">\n                TA 参与的\n              </a>\n              <a class="item" ng-class="{active: !show_joined}" ng-click="switch_projects(\'stared\')">\n                TA 收藏的\n              </a>\n            </div>\n            <div class="ui divider"></div>\n            <table class="projects" border="0" cellspacing="0" cellpadding="0" style="border-collapse:collapse">\n                <tr ng-repeat="project in projects track by $index">\n                    <td class="avatar">\n                        <a href="{{project.project_path}}">\n                            <img ng-src="{{project.icon || \'/static/d2ab4f6de747ad169160d3caaf82132e.png\'}}" width="44px" width="44px">\n                        </a>\n                    </td>\n                    <td class="project-info">\n                        <div class="project-name"><a href="{{project.project_path}}">{{project.name}}</a></div>\n                        <div class="project-description" cg-show-more="project.description | projectDescription" can-show-more="false" limit-to="150">\n                        </div>\n                    </td>\n                    <td class="star-count" style="width: 150px">\n                        <span class="star-count-item"><a ng-href="{{project.project_path}}/stargazers"><i class="icon star"></i>&nbsp;&nbsp;{{project.star_count}}\n                        </a></span>\n                        <span class="fork-count-item"><a ng-href="{{project.depot_path}}/forks"><i class="icon fork code"></i>{{project.fork_count}}\n                        </a></span>\n                    </td>\n                </tr>\n            </table>\n            <div class="center empty list" ng-if="projects.length === 0 && project_loading">\n                <i class="loading icon"></i>正在加载项目...\n            </div>\n            <div ng-if="projects.length === 0 && !project_loading" class="ui coding aligned center">\n                <p>暂无项目</p>\n            </div>\n            <div cg-pager="{{pager_id}}" class="center"></div>\n        </div>\n\n        <div class="user-tweets" ng-if="show_tab == \'bubble\'">\n            <div>\n                <div class="ui text menu filter-menu">\n                    <a class="item" ng-class="{active: tweet_mode === \'my\'}" ng-click="switch_tweets(\'my\')">\n                        TA 自己的\n                    </a>\n                    <a class="item" ng-class="{active: tweet_mode === \'liked\'}" ng-click="switch_tweets(\'liked\')">\n                        TA 赞过的\n                    </a>\n                    <a class="item" ng-class="{active: tweet_mode === \'commented\'}" ng-click="switch_tweets(\'commented\')">\n                        TA 评论过的\n                    </a>\n                </div>\n                <div class="ui divider"></div>\n                <div class="bubble-item" bindonce="tweet" ng-repeat="tweet in tweets">\n                    <a class="avatar" bo-href="tweet.owner.path" cg-hover-card="tweet.owner">\n                        <img class="ui image avatar42" bo-src="tweet.owner.avatar" bo-title="tweet.owner.name">\n                    </a>\n                    <div>\n                      <div class="arrow" cg-bubble="tweet" on-remove="onBubbleRemove">\n                        <div cg-bubble-comment="tweet"></div>\n                        <div ng-if="$root.USER" cg-bubble-comment-form="tweet"></div>\n                      </div>\n                    </div>\n                </div>\n\n                <div class="center empty list" ng-if="!no_more_tweet && tweet_loading">\n                    <i class="loading icon"></i>正在加载泡泡...\n                </div>\n                <div class="show-more ui coding aligned center" ng-if="!no_more_tweet && !tweet_loading">\n                    <a class="down more" style="cursor:pointer" ng-click="show_more_tweet()">更多泡泡</a>\n                </div>\n                <div class="no-more center empty list" ng-if="no_more_tweet">\n                    没有泡泡了\n                </div>\n                <div class="center empty list" ng-if="!tweet_loading && !(tweets && tweets.length > 0)">\n                    <p>他还没有发过泡泡呢~</p>\n                </div>\n            </div>\n        </div>\n\n         <div class="user-tweet-topics" ng-if="show_tab == \'bubble-topic\'">\n             <div>\n                 <div class="ui text menu filter-menu">\n                     <a class="item" ng-class="{active: tweet_topic_mode === \'watched\'}" ng-click="switch_bubble_topic(\'watched\')">\n                         TA 关注的\n                     </a>\n                     <a class="item" ng-class="{active: tweet_topic_mode === \'joined\'}" ng-click="switch_bubble_topic(\'joined\')">\n                         TA 参与的\n                     </a>\n                 </div>\n                 <div class="ui divider"></div>\n\n                <div class="bubble-topic-item" bindonce="topic" ng-repeat="topic in tweet_topics" ng-if="!bubble_topic_loading">\n                    <div ng-include="\'app/tweet_topic/content.html\'"></div>\n                </div>\n                 <div class="center empty list" ng-if="bubble_topic_loading">\n                     <i class="loading icon"></i>正在加载话题...\n                 </div>\n                 <div class="center empty list" ng-if="!bubble_topic_loading && !tweet_topics.length > 0">\n                     <p>没有话题</p>\n                 </div>\n             </div>\n             <div cg-pager="{{pager_id}}" class="center"></div>\n         </div>\n\n        <div class="user-activities" ng-if="show_tab == \'activity\'">\n            <div class="ui text menu filter-menu">\n              <a class="item" ng-class="{active: activities_mode == \'all\'}" ng-click="switch_activities(\'all\')">\n                所有\n              </a>\n              <a class="item" ng-class="{active: activities_mode == \'project\'}" ng-click="switch_activities(\'project\')">\n                项目相关\n              </a>\n              <a class="item" ng-class="{active: activities_mode == \'tweet\'}" ng-click="switch_activities(\'tweet\')">\n                冒泡相关\n              </a>\n            </div>\n            <div>\n                <div ng-repeat="activity in activities track by $index" cg-activity="{{activity.target_type}}">\n                </div>\n                <div class="center empty list" ng-if="activity_loading">\n                    <i class="loading icon"></i>正在加载动态...\n                </div>\n                <div class="ui coding aligned center" ng-if="activities && activities.length > 0 && !activity_loading && !activity_no_more">\n                    <p>\n                    <a ng-click="show_more()" class="show-more-link down more">加载更多动态</a>\n                    </p>\n                </div>\n\n                <div class="center empty list" ng-if="!(activities && activities.length > 0)">\n                    <p>暂无动态</p>\n                </div>\n\n                <div class="center empty list" ng-if="activity_no_more">\n                    <p>没有动态了~</p>\n                </div>\n            </div>\n        </div>\n     </div>\n    <div ng-if="show_follower_list" class="container eleven wide column content-column" ng-include="\'app/user/space/followers_and_friends.html\'" id="relationship"></div>\n</div>'),
        $templateCache.put("app/user/space/left_column.html", '<style>\n    #inner_tags .tag {\n        display:inline-block;\n        background: #d8d8d8;\n        padding: 4px;\n        color: #d8f3e7;\n        opacity: 0.8;\n        border-radius: 4px;\n        margin: 0px 4px 6px 0px;\n        line-height: 18px;\n    }\n    #inner_tags .tag:hover{\n        background: rgba(50, 190, 119, 0.8);\n    }\n    #inner_tags .tag:hover a{\n        color: #ddf7e5;\n    }\n</style>\n\n<div>\n    <a ng-href="/u/{{user.global_key}}"><img class="circular ui image user-avatar avatar208" ng-src="{{user.lavatar}}"></a>\n</div>\n<div class="ui coding aligned center user-name">\n    {{user.name}}\n</div>\n<div class="ui coding aligned center user-slogan" ng-bind-html="user.slogan">\n</div>\n<div class="ui coding aligned center">\n    <a class="ui down green small button" ng-click="follow(user)" ng-if="USER && !user.followed && user.global_key != USER.global_key && !following">关注</a>\n    <a class="ui down small gray button" ng-click="unfollow(user)" ng-if="USER && user.followed && user.global_key != USER.global_key && !following">取消关注</a>\n    <a class="ui down green small button" ng-if="USER && !user.followed && user.global_key != USER.global_key && following" style="width:60px"><i class="icon" ng-class="{loading: following}" click="return false;" style="margin-right:0px"></i></a>\n    <a class="ui down small gray button" ng-if="USER && user.followed && user.global_key != USER.global_key && following" style="width:84px"><i class="icon" ng-class="{loading: following}" click="return false;" style="margin-right:0px"></i></a>\n    <a class="ui down black small button" ng-click="showSendMsgDialog(user)" ng-if="USER && user.global_key != USER.global_key">给TA私信</a>\n</div>\n<div class="ui divider"></div>\n<div class="ui coding aligned center">\n    <p>\n        <a href="javascript:void(0)" class="gray" ng-if="user.global_key != \'coding\'" ng-href="/u/{{user.global_key}}/friends"><span class="number">{{user.follows_count | friendlyNumber}} </span>关注 /</a>\n        <a href="javascript:void(0)" class="gray" ng-if="user.global_key != \'coding\'" ng-href="/u/{{user.global_key}}/followers"><span class="number">{{user.fans_count | friendlyNumber}}</span> 粉丝</a>\n        <a href="javascript:void(0)" class="gray" ng-if="user.global_key == \'coding\'"><span class="number">{{user.follows_count | friendlyNumber}} </span>关注 /</a>\n        <a href="javascript:void(0)" class="gray" ng-if="user.global_key == \'coding\'"><span class="number">{{user.fans_count | friendlyNumber}}</span> 粉丝</a>\n    </p>\n</div>\n\n<div class="ui divider"></div>\n\n<div class="user-created-at">\n    加入时间：<span class="created-time" cg-friendly-time="user.created_at" cg-friendly-time-format="YYYY-MM-DD"></span>\n</div>\n<div class="user-created-at">\n    最后活动：<span class="created-time" cg-friendly-time="user.last_activity_at"></span>\n</div>\n<div class="user-global-key">\n    个性后缀：{{user.global_key}}\n</div>\n<div class="ui divider"></div>\n<div class="clearfix"></div>\n\n<div class="user-more-info">\n    <!--<div class="info-item">\n        <div>昵称：{{user.name}}</div>\n        <div class="ui divider"></div>\n    </div>-->\n    <div class="info-item" ng-if="user.sex == 0 || user.sex == 1">\n        <div>性别：{{user.sex == 0 ? \'男\' : \'女\'}}</div>\n        <div class="ui divider"></div>\n    </div>\n    <div class="info-item" ng-if="user.company">\n        <div>公司：{{user.company}}</div>\n        <div class="ui divider"></div>\n    </div>\n    <div class="info-item" ng-if="user.job_str">\n        <div>工作：{{user.job_str}}</div>\n        <div class="ui divider"></div>\n    </div>\n    <div class="info-item" ng-if="user.location">\n        <div>地区：{{user.location}}</div>\n        <div class="ui divider"></div>\n    </div>\n    <div class="info-item" ng-if="user.tags_str">\n        <div id="inner_tags">\n            <div style="display:inline-block">个人标签：</div>\n            <div class="tag" ng-repeat="tag in tags track by $index"><a class="gray" href="javascript:void(0)" ng-href="/tags/search/{{tag}}"><span>{{tag}}</span></a></div>\n        </div>\n        <div class="ui divider"></div>\n    </div>\n</div>'),
        $templateCache.put("app/user/task/index.html", '<style type="text/css">\n    #inner-menu {\n        width: 230px;\n    }\n\n    #task-list {\n        margin-left: 230px!important;\n    }\n\n    #task_projects {\n        position: relative;\n    }\n\n    #task_projects .project {\n        position: relative;\n        display: block;\n        height: auto;\n        width: 100%;\n        cursor: pointer;\n        margin: 0;\n        padding: 3px 8px!important;\n    }\n\n    #task_projects .project div.logo {\n        position: absolute;\n        left: 20px;\n        top: 50%;\n        width: 32px;\n        height: 32px;\n        margin-top: -16px;\n    }\n\n    #task_projects .project img.logo {\n        width: 32px;\n        height: 32px;\n        margin: 0;\n    }\n\n    #task_projects .project .name {\n        padding: 0 50px 0 60px;\n        line-height: 40px;\n        height: 40px;\n        font-size: 14px;\n    }\n\n    #task_projects .project .rate{\n        position: absolute;\n        right: 15px;\n    }\n\n    #task-list {\n        position: relative;\n    }\n\n    #task-list .search-div1:after {\n        content: ".";\n        display: block;\n        height: 0;\n        clear: both;\n        visibility: hidden;\n        margin-bottom: 10px;\n    }\n\n    #task-list .search-box {\n        border-bottom: 1px solid rgba(128, 128, 128, 0.5);\n        display: table;\n        float: left;\n    }\n\n    #task-list .search-box>i {\n        opacity: 0.5;\n    }\n\n    #task-list .search-box #search-input {\n        border: none;\n        background-color: rgba(255,255,255,0);\n        height: 20px;\n        font-size: 14px;\n        width: 200px;\n        outline: 0;\n    }\n\n    #task-list .filters {\n        font-size: 14px;\n        float: right;\n        margin: 5px 0 10px 5px;\n    }\n\n    #task-list .filters .task-urgency-wrapper {\n        position: relative!important;\n        display: inline-block;\n        width: 1.5em;\n    }\n\n    #task-list .filters i.icon.checkmark {\n        display: inline-block;\n    }\n\n    #task-list .filters .task-urgency-wrapper i.icon {\n        margin: 0;\n        padding: 0;\n    }\n\n    #task-list .filters div.input {\n        display: block;\n        padding: 0.3em;\n        background-color: rgba(0, 0, 0, 0.05);\n        margin-bottom: 0px;\n    }\n\n    #task-list .filters div.input .search.icon {\n        padding-top: 11px;\n    }\n\n    #task-list .filters .ui.dropdown .menu .members-outer {\n        max-height: 200px;\n        overflow-y: auto;\n        max-width: 210px;\n    }\n\n    #task-list .filters .ui.dropdown .menu .members-outer .item {\n        padding: 0.5em 2em 0.5em 1em !important;\n    }\n\n    #task-list #query {\n        float: right;\n        font-size: 14px;\n    }\n\n    #task-list #query i.icon {\n        display: inline-block;\n        margin-left: 5px;\n        cursor: pointer;\n    }\n\n    .owner-task-title{\n        float:left;margin-right:5px;\n    }\n</style>\n<div class="ui secondary vertical fixed menu active" id="inner-menu">\n    <header class="header item">\n        任务中心\n    </header>\n    <a class="item" ng-click="createTask()">\n        <button class="ui small green button">创建任务</button>\n    </a>\n    <a class="item" ng-click="quickLink(\'mine\')" ng-class="{active: left_menu === \'mine\'}">\n        <i class="user icon"></i>我的任务 (<span ng-bind="showNum(tasks_count.processing) + \'/\' + showNum(tasks_count.processing + tasks_count.done)"></span>)\n    </a>\n    <a class="item" ng-click="quickLink(\'watch\')" ng-class="{active: left_menu === \'watch\'}">\n        <i class="unhide icon"></i>我关注的 (<span ng-bind="showNum(tasks_count.watchAllProcessing) + \'/\' + showNum(tasks_count.watchAll)"></span>)\n    </a>\n    <a class="item" ng-click="quickLink(\'create\')" ng-class="{active: left_menu === \'create\'}">\n        <i class="add sign icon"></i>我创建的 (<span ng-bind="showNum(tasks_count.createProcessing) + \'/\' + showNum(tasks_count.create)"></span>)\n    </a>\n    <a class="item" ng-click="quickLink(\'all\')" ng-class="{active: left_menu === \'all\'}">\n        <i class="tasks icon"></i>所有任务 (<span ng-bind="showNum(tasks_count.allProcessing) + \'/\' + showNum(tasks_count.all)"></span>)\n    </a>\n    <div class="sep"></div>\n    <div id="task_projects" class="menu">\n        <a class="project item" ng-repeat="project in projects" ng-click="quickLink(\'project\', project.id)" ng-class="{active: left_menu === (\'project_\' + project.id)}">\n            <div class="logo">\n                <img class="ui avatar image" ng-if="project.icon" ng-src="{{project.icon}}">\n                <img class="ui avatar image" ng-if="!project.icon" ng-src="images/project/2.png ">\n            </div>\n            <div class="name ellipsis">\n                <i ng-if="!project.is_public" class="lock icon"></i>\n                {{project.name}}\n                <span class="rate" title="未完成/全部任务">{{project.count.processing}}/{{project.count.processing + project.count.done}}</span>\n            </div>\n        </a>\n        <div class="scroll-holder"></div>\n    </div>\n</div>\n<div class="container" id="task-list">\n\n    <div class="ui dividing header clearfix" style="position: relative">\n        <div class="search-div1">\n            <div class="search-box">\n                <i class="small search icon"></i>\n                <input id="search-input" type="text" ng-model="keyword" cg-enter="updateSearch()" cg-esc-blur>\n            </div>\n            <div class="filters" ng-repeat="key in filterKeys" cg-search-filter filter="filters[key]" callback="updateSearch()" ng-show="filters[key].data.length > 0"></div>\n        </div>\n        <span>{{tasks_total_count}}个相关任务</span>\n        <div id="query" ng-show="searchQuery != \'\'">\n            <span>搜索条件: </span>\n            <span>{{searchQuery}}</span>\n            <i class="remove circle icon" ng-click="clearSearchQuery()"></i>\n        </div>\n    </div>\n\n    <div class="project tasks" style="margin: 20px 0">\n        <div bindonce ng-repeat="task in tasks" cg-task-simple-item="task" show-project-name="!task_project" on-select-task="onSelectTask" members="members"></div>\n        <div class="empty center list" ng-if="tasks_total_count == 0 && tasks_loaded && keyword != \'\'">\n            关键词可能被过滤或者没有搜索到条件匹配的任务，建议试试其他的搜索条件\n        </div>\n        <div class="empty center list" ng-if="tasks_loading">\n            <span><i class="loading icon"></i>正在加载数据...</span>\n        </div>\n    </div>\n\n    <div cg-pager="{{task_pager_id}}" class="center"></div>\n\n    <div cg-task-detail-modal id="task-detail-modal" show-modal="show_task_detail_modal" task="current_task" on-task-change="onTaskChange" on-modal-close="onModalClose">\n    </div>\n\n</div>'),
        $templateCache.put("app/user/tweet/_tweet.html", '<div class="user-avatar" ng-if="tweet && !tweet.hide_avatar">\n    <a ng-href="{{tweet.owner.path}}" title="{{tweet.owner.name}}">\n        <img ng-src="{{tweet.owner.avatar}}" class="ui image avatar42" width="48px" height="48px" alt="{{tweet.owner.name}}">\n    </a>\n</div>\n<div class="tweet-content" ng-if="tweet.content">\n    <div class="tweet-detail" ng-class="{\'has-comments\':tweet.comment_list && tweet.comment_list.length > 0}" ng-init="tweet_content = restyleEmoji(tweet.content)">\n        <div class="markdown content bubble" clip-copy-code="pre" cg-fancy-overflow cg-highlight="tweet_content">\n        </div>\n        <div class="author-time">\n            <span><a ng-href="{{tweet.owner.path}}" class="author-name">{{tweet.owner.name}}</a></span>\n            &nbsp;&nbsp;\n            <i class="icon time" style="margin:0px 0px"></i>\n            <span class="created-time" cg-friendly-time="tweet.created_at"></span>\n            &nbsp;&nbsp;\n            <span>\n            <a ng-href="{{tweet.path}}" style="margin:0 0 0 5px;color:#666">\n                <i class="chat outline icon" style="margin:0px 0px"></i>\n                {{tweet.comments || 0}}\n            </a>\n            </span>\n            &nbsp;&nbsp;\n            <span ng-click="toggleLike(tweet);" style="cursor: pointer">\n               <i class="heart icon" ng-class="{\'empty\' : !tweet.liked,\'red\': tweet.liked}" style="margin:0px 0px"></i>\n                {{tweet.likes || 0}}\n            </span>\n            &nbsp;&nbsp;\n            <a class="delete action" ng-if="USER.global_key == tweet.owner.global_key" ng-click="removeTweet(tweet);">\n                <i class="icon remove red" style="margin:0px 0px"></i>删除\n            </a>\n        </div>\n        <div class="like-users" ng-if="tweet.like_users && tweet.like_users.length > 0">\n            <a ng-href="{{like_user.path}}" ng-repeat="like_user in tweet.like_users" title="{{like_user.name}}">\n                <img ng-src="{{like_user.avatar}}" class="ui image avatar18" alt="{{like_user.name}}">\n            </a>\n            <span ng-if="tweet.like_users.length < tweet.likes">\n                <a ng-click="showAllLikes(tweet);">...</a>\n            </span>\n        </div>\n    </div>\n    <div class="comment-list" ng-if="tweet.comment_list && tweet.comment_list.length > 0">\n        <div ng-repeat="comment in tweet.comment_list" class="comment-item" ng-class="{last:$index == tweet.comment_list.length -1}">\n            <div class="user-avatar">\n                <a ng-href="{{comment.owner.path}}" title="{{comment.owner.name}}">\n                    <img ng-src="{{comment.owner.avatar}}" class="ui avatar image" width="30px" height="30px" alt="{{comment.owner.name}}">\n                </a>\n            </div>\n            <div class="comment-content">\n                <div cg-bind-html="comment.content"></div>\n                <div class="comment-author">\n                    <span><a ng-href="{{comment.owner.path}}" class="author-name" title="{{comment.owner.name}}">{{comment.owner.name}}</a></span>\n                    <i class="icon time" style="margin:0px 0px"></i>\n                    <span cg-friendly-time="comment.created_at"></span>\n                    <a class="delete action coding floated right" ng-if="USER.id == comment.owner_id" ng-click="removeComment(tweet,comment);" href="javascript:void(0)" style="margin-left:6px">\n                        <i class="icon remove red" style="margin:0px 0px"></i>\n                        删除\n                    </a>\n                    <a class="reply action coding floated right" ng-click="replyComment(tweet,comment);" href="javascript:void(0);">\n                        <i class="icon edit blue" style="margin:0px 0px"></i>\n                        回复</a>\n                </div>\n            </div>\n        </div>\n        <div class="show-all-link" ng-if="tweet.comments > tweet.comment_list.length">\n            <a class="down more" ng-click="showAllComments(tweet,$index)">显示全部评论</a>\n        </div>\n    </div>\n    <form class="ui small form" ng-if="USER" ng-class="{loading: tweet.loading}">\n        <div class="ui large icon input" bindonce="tweet">\n            <input bo-id="\'tweet_comment_\' + tweet.id" placeholder="在此输入评论内容（Ctrl+Enter）" ng-model="tweet_comment_content[tweet.id]" cg-at-context at-context-type="\'tweet_comment\'" at-item="tweet" has-no-monkey="true" cg-at-emoji cg-placeholder cg-ctrl-enter="commentTweet(tweet,tweet_comment_content[tweet.id]);">\n            <i class="right icon" style="cursor:pointer" title="Ctrl/CMD+Enter" ng-click="commentTweet(tweet,tweet_comment_content[tweet.id]);"></i>\n        </div>\n    </form>\n</div>'),
        $templateCache.put("app/user/tweet/index.html", '<div id="user-space" class="ui grid">\n    <div class="five wide column info-column" ng-include="\'app/user/space/left_column.html\'"></div>\n    <div id="tweet-detail" class="eleven wide column content-column tweet-item" ng-if="tweet.owner">\n        <div class="arrow" cg-bubble="tweet" bindonce="tweet" on-remove="onSpaceBubbleRemove">\n            <div cg-bubble-comment="tweet"></div>\n            <div ng-if="$root.USER" cg-bubble-comment-form="tweet"></div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/activities/tpl/CommitLineNote.html", '<div class="activity" ng-if="activity">\n    <div class="avatar" ng-if="!activity.show_icon">\n        <a ng-href="{{activity.user.path}}">\n            <img class="ui avatar image" ng-src="{{activity.user.avatar}}" title="{{tweet.user.name}}">\n        </a>\n    </div>\n    <div class="activity-icon" ng-if="activity.show_icon">\n        <i class="circular comment icon"></i>\n    </div>\n    <div class="inner">\n        <div class="content {{activity.target_type}}_{{activity.action}}" style="font-size:14px">\n            <div>\n                <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                {{activity.action_msg}} 项目 <a ng-href="{{activity.project.path}}">{{activity.project.full_name}}</a> 的\n                <span ng-switch="activity.line_note.noteable_type">\n                    <span ng-switch-when="Commit">提交</span>\n                    <span ng-switch-when="MergeRequestBean">Merge Request</span>\n                    <span ng-switch-when="PullRequestBean">Pull Request</span>\n                </span>\n                <a ng-href="{{activity.line_note.noteable_url}}">{{activity.line_note.noteable_title | limitTo: 30}}</a>\n                <div ng-if="activity.action == \'comment\'" ng-bind-html="activity.line_note.content | limitTo: 100"></div>\n            </div>\n        </div>\n        <div class="toolbar">\n            <span class="time">\n                <i class="time icon"></i><span cg-friendly-time="activity.created_at"></span>\n            </span>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/activities/tpl/Depot.html", '<div class="activity" ng-if="activity">\n    <div class="avatar" ng-if="!activity.show_icon">\n        <a ng-href="{{activity.user.path}}">\n            <img class="ui avatar image" ng-src="{{activity.user.avatar}}" title="{{tweet.user.name}}">\n        </a>\n    </div>\n    <div class="activity-icon" ng-if="activity.show_icon">\n        <i class="circular coding project icon"></i>\n    </div>\n    <div class="inner">\n        <div class="content {{activity.target_type}}_{{activity.action}}" style="font-size:14px">\n            <div>\n                <span ng-if="activity.action == \'push\'">\n                <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                    {{activity.action_msg}} 项目[\n                    <a ng-href="{{activity.depot.path}}">{{activity.depot.name}}</a>\n                    ]\n                    <span ng-if="activity.ref_type == \'branch\'">分支</span>\n                    <span ng-if="activity.ref_type == \'tag\'">标签</span>\n                    :\n                    <a ng-if="activity.push_type != \'delete\'" ng-href="{{activity.ref_path}}">{{activity.ref | encodeUri}}</a>\n                    <span ng-if="activity.push_type == \'delete\'">{{activity.ref}} [{{activity.old_sha | shortCommitId}}]</span>\n                </span>\n\n                <div class="more-info">\n                    <p ng-repeat="commit in activity.commits">\n                        <a ng-href="{{commit.committer.link}}">\n                        {{commit.committer.name}}\n                        </a>\n                        :\n                        <a ng-href="{{activity.depot.path}}/commit/{{commit.sha}}" class="commit-sha">\n                            <code>[{{commit.sha.substring(0,7)}}]</code>\n                        </a>\n                        <a ng-href="{{activity.depot.path}}/commit/{{commit.sha}}" class="commit-message">\n                            {{commit.short_message}}\n                        </a>\n                    </p>\n                </div>\n\n                <span ng-if="activity.action == \'fork\'">\n                <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                    {{activity.action_msg}}项目\n                    <a ng-href="{{activity.source_depot.path}}">{{activity.source_depot.name}}</a>\n                    到\n                    <a ng-href="{{activity.depot.path}}">{{activity.depot.name}}</a>\n                </span>\n            </div>\n        </div>\n        <div class="toolbar">\n            <span class="time">\n                <i class="time icon"></i><span cg-friendly-time="activity.created_at"></span>\n            </span>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/activities/tpl/Empty.html", "{{activity.target_type}} type need to be resolved"),
        $templateCache.put("common/directives/activities/tpl/MergeRequestBean.html", '<div class="activity" ng-if="activity">\n    <div class="avatar" ng-if="!activity.show_icon">\n        <a ng-href="{{activity.user.path}}">\n            <img class="ui avatar image" ng-src="{{activity.user.avatar}}" title="{{tweet.user.name}}">\n        </a>\n    </div>\n    <div class="activity-icon" ng-if="activity.show_icon">\n        <i class="circular fork code icon"></i>\n    </div>\n    <div class="inner">\n        <div class="content {{activity.target_type}}_{{activity.action}}" style="font-size:14px">\n            <div>\n                <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                <span>{{activity.action_msg}}</span>\n                项目\n                <a ng-href="{{activity.depot.path}}">{{activity.depot.name}}</a>\n                中的 Merge request:\n                <a ng-href="{{activity.merge_request_path}}">{{activity.merge_request_title}}</a>\n            </div>\n        </div>\n        <div class="toolbar">\n            <span class="time">\n                <i class="time icon"></i><span cg-friendly-time="activity.created_at"></span>\n            </span>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/activities/tpl/MergeRequestComment.html", '<div class="activity" ng-if="activity">\n    <div class="avatar" ng-if="!activity.show_icon">\n        <a ng-href="{{activity.user.path}}">\n            <img class="ui avatar image" ng-src="{{activity.user.avatar}}" title="{{tweet.user.name}}">\n        </a>\n    </div>\n    <div class="activity-icon" ng-if="activity.show_icon">\n        <i class="circular comment icon"></i>\n    </div>\n    <div class="inner">\n        <div class="content {{activity.target_type}}_{{activity.action}}" style="font-size:14px">\n            <div>\n                <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                <span>评论了项目</span>\n                <a ng-href="{{activity.depot.path}}">{{activity.depot.name}}</a>\n                的 Merge Request\n                <a ng-href="{{activity.pull_request_path}}">{{activity.pull_request_title}}</a>\n                :\n                {{activity.comment_content}}\n            </div>\n        </div>\n        <div class="toolbar">\n            <span class="time">\n                <i class="time icon"></i><span cg-friendly-time="activity.created_at"></span>\n            </span>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/activities/tpl/Project.html", '<div class="activity" ng-if="activity && activity.project">\n    <div class="avatar" ng-if="!activity.show_icon">\n        <a ng-href="{{activity.user.path}}">\n            <img class="ui avatar image" ng-src="{{activity.user.avatar}}" title="{{tweet.user.name}}">\n        </a>\n    </div>\n    <div class="activity-icon" ng-if="activity.show_icon">\n        <i class="circular coding project icon"></i>\n    </div>\n    <div class="inner">\n        <div class="content {{activity.target_type}}_{{activity.action}}" style="font-size:14px">\n            <div ng-switch="activity.action">\n                <span ng-switch-when="create">\n                    <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                    创建了新项目\n                    <a ng-href="{{activity.project.path}}">{{activity.project.full_name}}</a>\n                </span>\n                <span ng-switch-when="update">\n                    <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                    更新了项目信息\n                    <a ng-href="{{activity.project.path}}">{{activity.project.full_name}}</a>\n                </span>\n                <span ng-switch-when="delete">\n                    <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                    删除了项目\n                    {{activity.project.full_name}}</span>\n                <span ng-switch-when="transfer">\n                    <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                    转让了项目\n                    <a ng-href="{{activity.project.path}}">{{activity.project.full_name}}</a>\n                </span>\n                <span ng-switch-when="archive">\n                    <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                    归档了项目\n                    <a ng-href="{{activity.project.path}}">{{activity.project.full_name}}</a>\n                </span>\n                <span ng-switch-when="unarchive">\n                    <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                    取消归档了项目\n                    <a ng-href="{{activity.project.path}}">{{activity.project.full_name}}</a>\n                </span>\n            </div>\n        </div>\n        <div class="toolbar">\n            <span class="time">\n                <i class="time icon"></i><span cg-friendly-time="activity.created_at"></span>\n            </span>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/activities/tpl/ProjectFile.html", '<div class="activity" ng-if="activity && activity.file">\n    <div class="avatar" ng-if="!activity.show_icon">\n        <a ng-href="{{activity.user.path}}">\n            <img class="ui avatar image" ng-src="{{activity.user.avatar}}" title="{{tweet.user.name}}">\n        </a>\n    </div>\n    <div class="activity-icon" ng-if="activity.show_icon">\n        <i class="circular file icon"></i>\n    </div>\n    <div class="inner">\n        <div class="content {{activity.target_type}}_{{activity.action}}" style="font-size:14px">\n            <div>\n                <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                在项目\n                <a ng-href="{{activity.project.path}}">{{activity.project.full_name}}</a>\n                <span>{{activity.action_msg}}</span>\n                <span ng-if="activity.type == \'file\'">文件</span>\n                <span ng-if="activity.type == \'dir\'">文件夹</span>\n                <div ng-repeat="file in activity.files" style="margin: 10px">\n                    <a ng-href="{{file.path}}">{{file.name}}</a>\n                </div>\n            </div>\n        </div>\n        <div class="toolbar">\n            <span class="time">\n                <i class="time icon"></i><span cg-friendly-time="activity.created_at"></span>\n            </span>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/activities/tpl/ProjectFileComment.html", '<div class="activity" ng-if="activity && activity.projectFile">\n    <div class="avatar" ng-if="!activity.show_icon">\n        <a ng-href="{{activity.user.path}}">\n            <img class="ui avatar image" ng-src="{{activity.user.avatar}}" title="{{tweet.user.name}}">\n        </a>\n    </div>\n    <div class="activity-icon" ng-if="activity.show_icon">\n        <i class="circular tasks icon"></i>\n    </div>\n    <div class="inner">\n        <div class="content {{activity.target_type}}_{{activity.action}}" style="font-size:14px">\n            <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n            评论了项目\n            <a ng-href="{{activity.project.path}}">{{activity.project.full_name}}</a>\n            中\n            <a ng-href="{{activity.projectFile.owner.path}}">{{activity.projectFile.owner.name}}</a>\n            的文件\n            <a ng-href="{{activity.projectFile.path}}">{{activity.projectFile.title}}</a>\n            :\n            <span ng-bind-html="commentToText(activity.projectFileComment.content)"></span>\n        </div>\n        <div class="toolbar">\n            <span class="time">\n                <i class="time icon"></i><span cg-friendly-time="activity.created_at"></span>\n            </span>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/activities/tpl/ProjectMember.html", '<div class="activity" ng-if="activity && activity.target_user">\n    <div class="avatar" ng-if="!activity.show_icon">\n        <a ng-href="{{activity.user.path}}">\n            <img class="ui avatar image" ng-src="{{activity.user.avatar}}" title="{{activity.user.name}}">\n        </a>\n    </div>\n    <div class="activity-icon" ng-if="activity.show_icon">\n        <i class="circular user icon"></i>\n    </div>\n    <div class="inner">\n        <div class="content {{activity.target_type}}_{{activity.action}}" style="font-size:14px">\n            <div>\n                <span ng-if="activity.action == \'add\'">\n                    <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                    在\n                    <a ng-href="{{activity.project.path}}">{{activity.project.name}}</a>\n                    项目中添加了成员:\n                    <div ng-repeat="target_user in activity.target_users" style="margin: 10px">\n                        <a ng-href="{{target_user.path}}">{{target_user.name}}</a>\n                    </div>\n                </span>\n                <span ng-if="activity.action == \'remove\'">\n                    <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                    <a ng-href="{{activity.project.path}}">{{activity.project.name}}</a>\n                    移除了成员:\n                    <div ng-repeat="target_user in activity.target_users" style="margin: 10px">\n                        <a ng-href="{{target_user.path}}">{{target_user.name}}</a>\n                    </div>\n                </span>\n            </div>\n        </div>\n        <div class="toolbar">\n            <span class="time">\n                <i class="time icon"></i><span cg-friendly-time="activity.created_at"></span>\n            </span>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/activities/tpl/ProjectStar.html", '<div class="activity" ng-if="activity && activity.project">\n    <div class="avatar" ng-if="!activity.show_icon">\n        <a ng-href="{{activity.user.path}}">\n            <img class="ui avatar image" ng-src="{{activity.user.avatar}}" title="{{activity.user.name}}">\n        </a>\n    </div>\n    <div class="activity-icon" ng-if="activity.show_icon">\n        <i class="circular star icon"></i>\n    </div>\n    <div class="inner">\n        <div class="content {{activity.target_type}}_{{activity.action}}" style="font-size:14px">\n            <div>\n                <span>\n                    <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                    收藏了项目\n                    <a ng-href="{{activity.project.path}}">{{activity.project.full_name}}</a>\n                </span>\n            </div>\n        </div>\n        <div class="toolbar">\n            <span class="time">\n                <i class="time icon"></i><span cg-friendly-time="activity.created_at"></span>\n            </span>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/activities/tpl/ProjectTopic.html", '<div class="activity" ng-if="activity && activity.project_topic">\n    <div class="avatar" ng-if="!activity.show_icon">\n        <a ng-href="{{activity.user.path}}">\n            <img class="ui avatar image" ng-src="{{activity.user.avatar}}" title="{{tweet.user.name}}">\n        </a>\n    </div>\n    <div class="activity-icon" ng-if="activity.show_icon">\n        <i class="circular comment icon"></i>\n    </div>\n    <div class="inner">\n        <div class="content {{activity.target_type}}_{{activity.action}}" style="font-size:14px">\n            <div style="line-height: 20px">\n                <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                在项目\n                <a ng-href="{{activity.project.path}}">{{activity.project.full_name}}</a>\n                <span ng-if="activity.action == \'create\' || activity.action == \'update\' || activity.action == \'delete\'">\n                    <span>{{activity.action_msg}}</span>\n                    讨论\n                    <a ng-href="{{activity.project_topic.path}}">{{activity.project_topic.title}}</a>\n                </span>\n                <span ng-if="activity.action == \'comment\'">\n                    <span>{{activity.action_msg}}</span>\n                    讨论\n                    <a ng-href="{{activity.project_topic.parent.path}}">{{activity.project_topic.parent.title}}</a>：\n                </span>\n\n                <div ng-if="activity.action == \'comment\'" ng-bind-html="commentToText(activity.project_topic.content)">\n                </div>\n\n                <span ng-if="activity.action === \'add_watcher\' || activity.action === \'remove_watcher\'">\n                    {{activity.action === \'add_watcher\' ? \'添加了讨论\' : \'删除了讨论\'}}\n                    <a ng-href="{{activity.project_topic.path}}">{{activity.project_topic.title}}</a>\n                    的关注者\n                    <div ng-repeat="watcher in activity.watchers" style="margin: 10px">\n                        <a ng-href="watcher.path">{{watcher.name}}</a>\n                    </div>\n                </span>\n            </div>\n        </div>\n        <div class="toolbar">\n            <span class="time">\n                <i class="time icon"></i><span cg-friendly-time="activity.created_at"></span>\n            </span>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/activities/tpl/ProjectWatcher.html", '<div class="activity" ng-if="activity">\n    <div class="avatar" ng-if="!activity.show_icon">\n        <a ng-href="{{activity.user.path}}">\n            <img class="ui avatar image" ng-src="{{activity.user.avatar}}" title="{{activity.user.name}}">\n        </a>\n    </div>\n    <div class="activity-icon" ng-if="activity.show_icon">\n        <i class="circular unhide icon"></i>\n    </div>\n    <div class="inner">\n        <div class="content {{activity.target_type}}_{{activity.action}}" style="font-size:14px">\n            <div>\n                <span>\n                    <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                    关注了项目\n                    <a ng-href="{{activity.project.path}}">{{activity.project.full_name}}</a>\n                </span>\n            </div>\n        </div>\n        <div class="toolbar">\n            <span class="time">\n                <i class="time icon"></i><span cg-friendly-time="activity.created_at"></span>\n            </span>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/activities/tpl/PullRequestBean.html", '<div class="activity" ng-if="activity">\n    <div class="avatar" ng-if="!activity.show_icon">\n        <a ng-href="{{activity.user.path}}">\n            <img class="ui avatar image" ng-src="{{activity.user.avatar}}" title="{{tweet.user.name}}">\n        </a>\n    </div>\n    <div class="activity-icon" ng-if="activity.show_icon">\n        <i class="circular fork code icon"></i>\n    </div>\n    <div class="inner">\n        <div class="content {{activity.target_type}}_{{activity.action}}" style="font-size:14px">\n            <div>\n                <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                <span>{{activity.action_msg}}</span>\n                项目\n                <a ng-href="{{activity.depot.path}}">{{activity.depot.name}}</a>\n                中的pull request:\n                <a ng-href="{{activity.pull_request_path}}">{{activity.pull_request_title}}</a>\n            </div>\n        </div>\n        <div class="toolbar">\n            <span class="time">\n                <i class="time icon"></i><span cg-friendly-time="activity.created_at"></span>\n            </span>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/activities/tpl/PullRequestComment.html", '<div class="activity" ng-if="activity">\n    <div class="avatar" ng-if="!activity.show_icon">\n        <a ng-href="{{activity.user.path}}">\n            <img class="ui avatar image" ng-src="{{activity.user.avatar}}" title="{{tweet.user.name}}">\n        </a>\n    </div>\n    <div class="activity-icon" ng-if="activity.show_icon">\n        <i class="circular comment icon"></i>\n    </div>\n    <div class="inner">\n        <div class="content {{activity.target_type}}_{{activity.action}}" style="font-size:14px">\n            <div>\n                <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                <span>评论了项目</span>\n                <a ng-href="{{activity.depot.path}}">{{activity.depot.name}}</a>\n                的 Pull Request\n                <a ng-href="{{activity.pull_request_path}}">{{activity.pull_request_title}}</a>\n                :\n                {{activity.comment_content}}\n            </div>\n        </div>\n        <div class="toolbar">\n            <span class="time">\n                <i class="time icon"></i><span cg-friendly-time="activity.created_at"></span>\n            </span>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/activities/tpl/QcTask.html", '<div class="activity" ng-if="activity">\n    <div class="avatar" ng-if="!activity.show_icon">\n        <a ng-href="{{activity.user.path}}">\n            <img class="ui avatar image" ng-src="{{activity.user.avatar}}" title="{{tweet.user.name}}">\n        </a>\n    </div>\n    <div class="activity-icon" ng-if="activity.show_icon">\n        <i class="circular tasks icon"></i>\n    </div>\n    <div class="inner">\n        <div class="content {{activity.target_type}}_{{activity.action}}" style="font-size:14px">\n            <div ng-if="activity.action == \'create\'">\n                <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                <span>{{activity.action_msg}}</span>\n                项目\n                <a ng-href="{{activity.project.path}}">{{activity.project.full_name}}</a>\n\n                的质量分析任务:\n                [<span cg-bind-html="activity.qc_task.link"></span>]\n            </div>\n        </div>\n        <div class="toolbar">\n            <span class="time">\n                <i class="time icon"></i><span cg-friendly-time="activity.created_at"></span>\n            </span>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/activities/tpl/Task.html", '<div class="activity" ng-if="activity && activity.task">\n    <div class="avatar" ng-if="!activity.show_icon">\n        <a ng-href="{{activity.user.path}}">\n            <img class="ui avatar image" ng-src="{{activity.user.avatar}}" title="{{tweet.user.name}}">\n        </a>\n    </div>\n    <div class="activity-icon" ng-if="activity.show_icon">\n        <i class="circular tasks icon"></i>\n    </div>\n    <div class="inner">\n        <div class="content {{activity.target_type}}_{{activity.action}}" style="font-size:14px">\n            <div ng-if="activity.action !== \'reassign\' &&\n                        activity.action !== \'update_priority\' &&\n                        activity.action !== \'update_deadline\' &&\n                        activity.action !== \'update_description\' &&\n                        activity.action !== \'commit_refer\' &&\n                        activity.action !== \'update_label\' &&\n                        activity.action !== \'add_watcher\' &&\n                        activity.action !== \'remove_watcher\'">\n                <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                <span>{{activity.action_msg}}</span>\n                项目\n                <a ng-href="{{activity.project.path}}">{{activity.project.full_name}}</a>\n                中\n                <a ng-href="{{activity.task.owner.path}}">{{activity.task.owner.name}}</a>\n                的任务:\n                <a ng-href="{{activity.task.path}}">{{activity.task.title}}</a>\n            </div>\n            <div ng-if="activity.action === \'reassign\'">\n                <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                <span>重新指派了</span>\n                项目\n                <a ng-href="{{activity.project.path}}">{{activity.project.full_name}}</a>\n                <span ng-if="activity.origin_task.owner">\n                    中\n                    <a ng-href="{{activity.origin_task.owner.path}}">{{activity.origin_task.owner.name}}</a>\n                </span>\n                的任务给\n                <a ng-href="{{activity.task.owner.path}}">{{activity.task.owner.name}}</a>\n                :\n                <a ng-href="{{activity.task.path}}">{{activity.task.title}}</a>\n            </div>\n            <div ng-if="activity.action === \'update_priority\'">\n                <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                更新了\n                项目\n                <a ng-href="{{activity.project.path}}">{{activity.project.full_name}}</a>\n                中任务的优先级:\n                <span ng-bind="\'[\' + priorities[activity.task.priority] + \']\'"></span>\n                <a ng-href="{{activity.task.path}}">{{activity.task.title}}</a>\n            </div>\n            <div ng-if="activity.action === \'update_deadline\'">\n                <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                更新了项目\n                <a ng-href="{{activity.project.path}}">{{activity.project.full_name}}</a>\n                中任务的截止日期:\n                <span ng-bind="parseDeadline(activity.task.deadline)"></span>\n                <a ng-href="{{activity.task.path}}">{{activity.task.title}}</a>\n            </div>\n            <div ng-if="activity.action === \'update_description\'">\n                <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                更新了项目\n                <a ng-href="{{activity.project.path}}">{{activity.project.full_name}}</a>\n                中任务的描述:\n                <a ng-href="{{activity.task.path}}" ng-bind-html="commentToText(activity.task.description)"></a>\n            </div>\n            <div ng-if="activity.action === \'commit_refer\'">\n                <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                在项目\n                <a ng-href="{{activity.project.path}}">{{activity.project.full_name}}</a>\n                中提交了代码\n                <a ng-href="{{commitLink(activity)}}">{{activity.commit.sha | shortCommitId:7}}</a>\n                提到了任务\n                <a ng-href="{{activity.task.path}}">{{activity.task.title}}</a>\n            </div>\n            <div ng-if="activity.action === \'update_label\'">\n                <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                更新了项目\n                <a ng-href="{{activity.project.path}}">{{activity.project.full_name}}</a>\n                中任务的标签:\n                <a ng-href="{{activity.task.path}}" ng-bind-html="commentToText(activity.task.description)"></a>\n            </div>\n            <div ng-if="activity.action === \'add_watcher\' || activity.action === \'remove_watcher\'">\n                <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                在任务\n                <a ng-href="{{activity.task.path}}">{{activity.task.title}}</a>\n                {{activity.action === \'add_watcher\' ? \'添加了关注者\' : \'删除了关注者\'}}\n                <div ng-repeat="watcher in activity.watchers" style="margin: 10px">\n                    <a ng-href="{{watcher.path}}">{{watcher.name}}</a>\n                </div>\n            </div>\n        </div>\n        <div class="toolbar">\n            <span class="time">\n                <i class="time icon"></i><span cg-friendly-time="activity.created_at"></span>\n            </span>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/activities/tpl/TaskComment.html", '<div class="activity" ng-if="activity && activity.task">\n    <div class="avatar" ng-if="!activity.show_icon">\n        <a ng-href="{{activity.user.path}}">\n            <img class="ui avatar image" ng-src="{{activity.user.avatar}}" title="{{tweet.user.name}}">\n        </a>\n    </div>\n    <div class="activity-icon" ng-if="activity.show_icon">\n        <i class="circular tasks icon"></i>\n    </div>\n    <div class="inner">\n        <div class="content {{activity.target_type}}_{{activity.action}}" style="font-size:14px">\n            <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n            评论了项目\n            <a ng-href="{{activity.project.path}}">{{activity.project.full_name}}</a>\n            中\n            <a ng-href="{{activity.task.owner.path}}">{{activity.task.owner.name}}</a>\n            的任务\n            <a ng-href="{{activity.task.path}}">{{activity.task.title}}</a>\n            :\n            <span ng-bind-html="commentToText(activity.taskComment.content)"></span>\n        </div>\n        <div class="toolbar">\n            <span class="time">\n                <i class="time icon"></i><span cg-friendly-time="activity.created_at"></span>\n            </span>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/activities/tpl/Tweet.html", '<div class="activity" ng-if="activity && activity.tweet && activity.show_icon">\n    <div class="activity-icon">\n        <i class="circular coding bubble icon"></i>\n    </div>\n    <div class="inner">\n        <div class="content {{activity.target_type}}_{{activity.action}}" style="font-size:14px" ng-init="tweet_content = restyleEmoji(activity.tweet.content)">\n            <div style="margin-bottom:15px">\n                <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                <span>冒了个泡</span>\n            </div>\n            <div class="markdown content bubble" clip-copy-code="pre" cg-fancy-overflow cg-highlight="tweet_content"></div>\n        </div>\n        <div class="toolbar" style="margin-top:15px">\n            <span class="time">\n                <i class="time icon"></i><span cg-friendly-time="activity.created_at"></span>\n            </span>\n            <span>\n                <a ng-href="{{activity.tweet.path}}">查看详情>></a>\n            </span>\n        </div>\n    </div>\n</div>\n\n<div class="activity tweet-item clearfix" ng-if="activity && activity.tweet && !activity.show_icon">\n    <div class="user-avatar">\n       <a ng-href="{{activity.user.path}}"><img ng-src="{{activity.user.avatar}}" class="ui avatar image"></a>\n    </div>\n    <div class="tweet-content">\n        <div class="tweet-detail">\n            <div class="markdown content bubble" clip-copy-code="pre" cg-fancy-overflow cg-highlight="activity.tweet.content" enable-sce="true"></div>\n            <div class="author-time">\n                <span><a ng-href="{{activity.user.path}}">{{activity.user.name}}</a></span>\n                &nbsp;&nbsp;\n                <i class="icon time" style="margin:0px 0px"></i>\n                <a class="gray" ng-href="{{activity.tweet.path}}">\n                    <span class="created-time" cg-friendly-time="activity.created_at"></span>\n                </a>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/activities/tpl/TweetComment.html", '<div class="activity" ng-if="activity && activity.tweet">\n    <div class="avatar" ng-if="!activity.show_icon">\n        <a ng-href="{{activity.user.path}}">\n            <img class="ui avatar image" ng-src="{{activity.user.avatar}}" title="{{tweet.user.name}}">\n        </a>\n    </div>\n    <div class="activity-icon" ng-if="activity.show_icon">\n        <i class="circular comment icon"></i>\n    </div>\n    <div class="inner">\n        <div class="content {{activity.target_type}}_{{activity.action}}" style="font-size:14px">\n            <div>\n                <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                <span>评论了</span>\n                <a ng-href="{{activity.tweet.owner.path}}">{{activity.tweet.owner.name}}</a>\n                的泡泡\n                <a ng-href="{{activity.tweet.path}}">{{activity.tweet.content | htmlToPlainText | limitTo: 100}}</a>\n            </div>\n            <div class="more-info">\n                <p ng-bind-html="activity.content"></p>\n            </div>\n        </div>\n        <div class="toolbar">\n            <span class="time">\n                <i class="time icon"></i><span cg-friendly-time="activity.created_at"></span>\n            </span>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/activities/tpl/UserFollow.html", '<div class="activity" ng-if="activity && activity.target_user">\n    <div class="avatar" ng-if="!activity.show_icon">\n        <a ng-href="{{activity.user.path}}">\n            <img class="ui avatar image" ng-src="{{activity.user.avatar}}" title="{{tweet.user.name}}">\n        </a>\n    </div>\n    <div class="activity-icon" ng-if="activity.show_icon">\n        <i class="circular unhide icon"></i>\n    </div>\n    <div class="inner">\n        <div class="content {{activity.target_type}}_{{activity.action}}" style="font-size:14px">\n            <div>\n                <a ng-href="{{activity.user.path}}">{{activity.user.name}}</a>\n                <span>{{activity.action_msg}}</span>\n                用户\n                <a ng-href="{{activity.target_user.path}}">{{activity.target_user.name}}</a>\n            </div>\n        </div>\n        <div class="toolbar">\n            <span class="time">\n                <i class="time icon"></i><span cg-friendly-time="activity.created_at"></span>\n            </span>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/activities/tpl/activities.html", '<div class="activities_flow" ng-repeat="activity in activities track by $index" cg-activity="{{activity.target_type}}">\n</div>'),
        $templateCache.put("common/directives/ad/tpl/ad.html", '<div class="ad-banner" bindonce="ad" bo-id="ad.code" ng-if="ad.status === 1">\n    <a target="_blank" bo-href="ad.link" bo-title="ad.title">\n        <img bo-alt="ad.title" bo-src="ad.image" bo-attr bo-attr-width="width" bo-attr-height="height">\n    </a>\n</div>'),
        $templateCache.put("common/directives/ad/tpl/multi-ad.html", '<div class="multi-ad-container" style="overflow: hidden">\n    <div class="multi-ad-banner" ng-repeat="ad in ads" bindonce="ad" bo-id="ad.code" ng-if="ad.status === 1">\n        <a target="_blank" bo-href="ad.link" bo-title="ad.title">\n            <img bo-alt="ad.title" class="multi-ad-image" bo-src="ad.image" bo-attr bo-attr-width="width" bo-attr-height="height">\n        </a>\n    </div>\n</div>'),
        $templateCache.put("common/directives/attachment/comments/tpl/action.detail.html", '<div class="icon" bo-class="activity.action">\n    <i class="icon" bo-class="actionIconClass()"></i>\n</div>\n<div class="detail">\n    <a class="gray" bo-href="activity.user.path">\n        <span bo-text="activity.user.name"></span>\n    </a>\n    <span bo-text="actionMsg()"></span>\n    <a bo-if="activity.action === \'upload_file\' && activity.version" ng-click="downloadHistory(activity.history_id)" href="javascript:void(0);">\n    <span bo-if="activity.action === \'upload_file\' && activity.version" bo-text="\'V\' + activity.version"></span>\n        <span class="file-name" bo-text="activity.file.name"></span>\n    </a>\n    <span bo-if="!(activity.action === \'upload_file\' && activity.version)">\n    <span bo-if="activity.action === \'delete_history\' && activity.version" bo-text="\'V\' + activity.version"></span>\n    <span class="file-name" bo-if="activity.action === \'create\'" bo-text="activity.file.name"></span>\n    </span>\n    -\n    <span cg-friendly-time="activity.created_at"></span>\n</div>'),
        $templateCache.put("common/directives/attachment/comments/tpl/action.modal.html", '<div class="icon" bo-class="activity.action">\n    <i class="icon" bo-class="actionIconClass()"></i>\n</div>\n<div class="detail">\n    <a class="gray username ellipsis" href="javascript:void(0)" ng-click="toSpace(activity.user.path)">\n        <span bo-text="activity.user.name"></span>\n    </a>\n    <span bo-text="actionMsg()"></span>\n    <a bo-if="activity.action === \'upload_file\' && activity.version && activity.history_id" href="javascript:void(0)" ng-click="downloadHistory(activity.history_id)">\n    <span bo-text="\'V\' + activity.version"></span>\n    </a>\n    <span bo-if="activity.action === \'delete_history\' && activity.version" bo-text="\'V\' + activity.version"></span>\n    <span class="file-name" bo-if="activity.action === \'create\'" bo-text="activity.file.name"></span>\n    <span class="time" cg-friendly-time="activity.created_at"></span>\n</div>'),
        $templateCache.put("common/directives/attachment/comments/tpl/activity.html", '<div bindonce="activity" bo-class="activityClass()" bo-id="\'c\' + activity.id" ng-include="\'common/directives/attachment/comments/tpl/\' + resolveType() + getView() + \'.html\'">\n</div>'),
        $templateCache.put("common/directives/attachment/comments/tpl/comment.detail.html", '<a class="avatar" bo-href="activity.user.path">\n    <img class="ui avatar42 image" width="36px" height="36px" bo-src="activity.projectFileComment.owner.avatar">\n</a>\n<div class="detail">\n    <div class="markdown content" clip-copy-code="pre" cg-highlight="activity.projectFileComment.content"></div>\n    <div cg-gallery="activity.projectFileComment.content"></div>\n    <div class="created-time">\n        <span class="mr10" bo-text="activity.user.name"></span>\n        <span class="mr10">\n            <i class="time icon"></i>\n            <span cg-friendly-time="activity.created_at"></span>\n        </span>\n        <span class="mr10 comment">\n            <a href="javascript:void(0)" ng-click="atPerson(activity.projectFileComment)">\n                <i class="edit icon"></i>回复\n            </a>\n        </span>\n        <span class="mr10 remove" bo-if="canRemove(activity.projectFileComment.owner, $root.USER)">\n            <a href="javascript:void(0)" ng-click="doRemove()">\n                <i class="remove icon"></i>删除\n            </a>\n        </span>\n    </div>\n</div>'),
        $templateCache.put("common/directives/attachment/comments/tpl/comment.modal.html", '<a class="avatar" ng-click="toSpace(activity.user.path)" style="cursor: pointer">\n    <img class="ui avatar24 image" bo-src="activity.projectFileComment.owner.avatar">\n</a>\n<div class="detail" style="margin-bottom: 10px">\n    <span bo-text="activity.user.name" class="comment-username"></span>\n    <span class="created-time" cg-friendly-time="activity.created_at"></span>\n    <span class="actions">\n        <a href="javascript:void(0)" ng-click="atPerson(activity.projectFileComment)">回复</a>\n        <a href="javascript:void(0)" bo-if="canRemove(activity.projectFileComment.owner, $root.USER)" ng-click="doRemove()">删除</a>\n    </span>\n    <div class="markdown content" clip-copy-code="pre" cg-highlight="activity.projectFileComment.content"></div>\n</div>'),
        $templateCache.put("common/directives/attachment/fileActivities/tpl/activities.detail.html", '<div>\n    <div class="project-file-detail-activity">\n        <div class="project-file-activity" bindonce ng-repeat="activity in activities" cg-project-file-comment-activity="activity" cg-project-file-comment-project-id="project.id" cg-project-file-comment-file-id="file_id" cg-project-file-comment-view="view" on-remove="onRemove">\n        </div>\n    </div>\n    <div class="loading" style="text-align: center;font-size:12px;color:#999;margin-bottom:10px" ng-if="!activities.length > 0"><i class="icon loading"></i>加载中...</div>\n    <div class="project-file-comment-creator" id="project-file-comment-creator">\n        <div cg-light-md-editor="onComment" editor-id="project-file-detail-modal-editor" at-item="project" at-context-type="\'project_file_comment\'" data-ng-model="content" img-compression="false" project_dependency="project">\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/attachment/fileActivities/tpl/activities.modal.html", '<div class="file-activities">\n    <div class="file-activity-items" cg-disable-scroll>\n        <div ng-repeat="activity in activities" class="flex-box" style="min-height: 60px" cg-project-file-comment-activity="activity" cg-project-file-comment-project-id="project.id" cg-project-file-comment-file-id="file_id" cg-project-file-comment-view="view" on-remove="onRemove">\n        </div>\n    </div>\n    <div class="file-comment-wrapper">\n        <textarea id="attachment-preview-modal-comment-textarea" class="file-comment-textarea" ng-model="content" msd-elastic="\\n" cg-ctrl-enter="onComment(content)" cg-at-emoji cg-at-context at-item="project" at-context-type="\'project_file_comment\'" cg-placeholder></textarea>\n        <i class="clockwise rotated level down icon" ng-click="onComment(content)" style="position: absolute;\n                    bottom: 15px;\n                    right: 10px;\n                    cursor: pointer;\n                    color: #444"></i>\n    </div>\n</div>'),
        $templateCache.put("common/directives/attachment/fileHistories/tpl/histories.detail.html", '<div class="file-histories detail" style="margin-bottom: 40px">\n    <div class="file-history-wrapper">\n        <div class="file-history-item" ng-class="{\'current\': isCurrentHistory(history)}" bindonce="history" ng-repeat="history in histories">\n            <div class="file-history-column">\n                <div class="file-history-version" bo-if="history.version" style="cursor:pointer" bo-title="\'查看 V\' + history.version" ng-click="selectHistory(history)">\n                    V<span bo-text="history.version"></span>\n                </div>\n                <div class="file-history-name-wrapper" style="cursor:pointer" ng-click="selectHistory(history)" id="edit-file-history-remark-{{history.history_id}}" cg-not-click="history.editing && updateRemark(history)" not-click-class="#edit-file-history-remark-{{history.history_id}}, #edit-file-history-remark-{{history.history_id}} *" not-click-when="history.editing">\n                    <span ng-show="!history.editing" class="file-history-name">{{history.remark}}</span>\n                    <input ng-show="history.editing" id="file-history-remark-editor-{{history.history_id}}" class="ui input file-history-remark-editor" type="text" ng-model="history.remark" cg-enter="updateRemark(history)">\n                </div>\n                <div class="file-history-action">\n                    <span bo-text="history.owner.name"></span>\n                    <span bo-text="\' \' + history.action_msg + \' \'"></span>\n                    <span class="file-history-time" cg-friendly-time="history.created_at"></span>\n                </div>\n                <div class="actions">\n                    <a class="action-item" ng-click="preDelete(history)" ng-if="!isCurrentHistory(history)\n                            && file.copy.history_id !== history.history_id\n                            && ((USER | isOwnerOf : history) || (USER | isOwnerOf : project))" href="javascript:void(0)">删除</a>\n                    <a class="action-item" href="javascript:void(0)" ng-click="setRemarkEditable($event, history);">修改备注</a>\n                    <a class="action-item" href="javascript:void(0)" ng-click="downloadHistory(history);">下载</a>\n                </div>\n            </div>\n            <div class="file-history-confirm" ng-if="history.pre_delete">\n                <span class="tips">\n                    确定删除该版本？删除后将不能恢复。\n                </span>\n                <div class="actions">\n                    <a href="javascript:void(0)" class="ui small white button" ng-click="cancelDelete(history)">取消</a>\n                    <a href="javascript:void(0)" class="ui small red button" ng-click="deleteHistory(history)">\n                        <i class="icon loading" ng-if="history.deleting"></i>删除</a>\n                </div>\n            </div>\n        </div>\n    </div>\n    <span class="upload-tip">上传新版本</span>\n    <form file-upload="projectFileHistoryZoneUploadSetting">\n        <input id="file-history-upload-zone" type="file" name="file" multiple="multiple">\n        <div class="empty center list file-upload-zone" cg-trigger-upload="upload($callback);">\n            <span ng-show="!uploading">\n                <span style="font-size:16px;line-height: 40px"><i class="upload cloud icon"></i><span ng-if="files.length==0">还未上传任何文件，</span><span>点击或将文件拖拽至此上传！</span><br></span><span>支持所有文件格式，单个文件不超过100M。</span>\n            </span>\n            <span ng-show="uploading">\n                <span file-upload-progress="upload_progress">\n                    <i class="loading icon"></i>正在上传（{{num}}%）!\n                </span>\n            </span>\n        </div>\n    </form>\n</div>'),
        $templateCache.put("common/directives/attachment/fileHistories/tpl/histories.modal.html", '<div class="file-histories modal">\n    <div class="file-history-wrapper" cg-disable-scroll>\n        <div class="file-history-item" ng-class="{\'current\': isCurrentHistory(history)}" bindonce="history" ng-repeat="history in histories">\n            <div class="file-history-column">\n                <div class="file-history-version" bo-if="history.version" style="cursor:pointer" bo-title="\'查看 V\' + history.version" ng-click="selectHistory(history)">\n                    V<span bo-text="history.version"></span>\n                </div>\n                <div class="file-history-name-wrapper" style="cursor:pointer" ng-click="selectHistory(history)" id="edit-file-history-remark-{{history.history_id}}" cg-not-click="history.editing && updateRemark(history)" not-click-class="#edit-file-history-remark-{{history.history_id}}, #edit-file-history-remark-{{history.history_id}} *" not-click-when="history.editing">\n                    <span ng-show="!history.editing" class="file-history-name ellipsis">{{history.remark}}</span>\n                    <input ng-show="history.editing" id="file-history-remark-editor-{{history.history_id}}" class="ui input file-history-remark-editor" type="text" ng-model="history.remark" cg-enter="updateRemark(history)">\n                </div>\n                <div class="file-history-action">\n                    <span bo-text="history.owner.name"></span>\n                    <span bo-text="\' \' + history.action_msg + \' \'"></span>\n                    <span class="file-history-time" cg-friendly-time="history.created_at"></span>\n                </div>\n                <div class="actions">\n                    <a class="action-item" ng-click="preDelete(history)" ng-if="!isCurrentHistory(history)\n                            && file.copy.history_id !== history.history_id\n                            && ((USER | isOwnerOf : history) || (USER | isOwnerOf : project))" href="javascript:void(0)">删除</a>\n                    <a class="action-item" href="javascript:void(0)" ng-click="setRemarkEditable($event, history);">修改备注</a>\n                    <a class="action-item" href="javascript:void(0)" ng-click="downloadHistory(history);">下载</a>\n                </div>\n            </div>\n\n        </div>\n    </div>\n    <div class="file-history-confirm" ng-if="deleting_history" style="">\n        <span class="tips">\n            确定删除该版本？删除后将不能恢复。\n        </span>\n        <div class="actions">\n            <a href="javascript:void(0)" class="ui small white button" ng-click="cancelDelete(deleting_history, $event)">取消</a>\n            <a href="javascript:void(0)" class="ui small red button" ng-click="deleteHistory(deleting_history, $event)">\n                <i class="icon loading" ng-if="history.deleting"></i>删除</a>\n        </div>\n    </div>\n    <form file-upload="projectFileHistoryZoneUploadSetting" ng-if="!deleting_history">\n        <input id="file-modal-history-upload-zone" type="file" name="file" multiple="multiple">\n        <div class="upload-picker-wrapper">\n            <div class="upload-picker">\n                <span class="upload-button" cg-trigger-upload="upload($callback);">\n                    <span ng-if="!uploading"><i class="upload cloud icon"></i>点击上传新版本</span>\n                    <span ng-if="uploading">正在上传({{num}}%)</span>\n                </span>\n            </div>\n        </div>\n\n    </form>\n</div>'),
        $templateCache.put("common/directives/attachment/tpl/editor.html", '<style type="text/css">\n    #attachment-create textarea{\n        font-size: 14px;\n        line-height: normal;\n    }\n    #attachment-create textarea {\n        min-height: 400px!important;\n    }\n    #attachment-create textarea.modal {\n        max-height: 580px;\n    }\n    #attachment-create textarea.modal {\n        min-height: 580px!important;\n    }\n    #attachment-create .action {\n        margin-top:20px;\n    }\n    .local-storage-info {\n        line-height: 30px;\n        color: #13b04f;\n        opacity: .7;\n        font-size: 14px;\n    }\n    @media only screen and (max-width: 1420px) {\n        #attachment-create textarea.modal {\n            min-height: 454px!important\n        }\n        #attachment-create textarea.modal {\n            max-height: 454px;\n        }\n        #attachment-create .action {\n            margin-top:10px;\n        }\n    }\n</style>\n<form class="ui form" ng-class="{loading: file_saving}" id="attachment-create">\n\n    <div class="ui medium action input" style="margin-bottom: 20px">\n        <input name="title" type="text" ng-model="current_file.readName" placeholder="文档名">\n        <a class="ui green medium button" style="cursor: default;width:50px">.{{current_file.fileType || editor_type}}</a>\n    </div>\n\n    <div class="editor" ng-switch="editor_type">\n        <textarea ng-switch-when="txt" cg-disable-scroll name="content" ng-model="current_file.content" placeholder="文档内容" msd-elastic="\\n" ng-class="{\'modal\': view == \'modal\'}"></textarea>\n        <div ng-switch-when="md">\n            <div cg-pagedown="contentUpdate($content)" id="-1" min-height="500" ng-model="current_file.content">\n                <textarea placeholder="文档内容" ng-model="current_file.content" cg-textarea-editable></textarea>\n            </div>\n        </div>\n    </div>\n\n    <div class="action clearfix">\n        <a class="ui blue button floated right" href="javascript:void(0);" ng-click="saveFile(current_file);" ng-if="action === \'create\'">保存</a>\n        <a class="ui blue button floated right" href="javascript:void(0);" ng-click="updateFile(current_file, $event);" ng-if="action !== \'create\'">更新</a>\n        <a class="ui button floated right" style="background: none;box-shadow: none;margin-right:10px" ng-if="view === \'detail\'" ng-click="cancel()">取消</a>\n        <a class="ui button floated right" style="background: none;box-shadow: none;margin-right:10px" href="javascript:void(0)" ng-click="cancelEditing($event, \'preview\')" ng-if="view === \'modal\'">取消</a>\n        <span class="ui coding floated right local-storage-info" ng-if="draft_saving_time > 0 && !fetch_draft_at">\n            <i class="ok sign icon"></i>本地草稿保存于：<span cg-friendly-time="draft_saving_time" cg-friendly-time-format="\'YYYY-MM-DD HH:mm:ss\'"></span>\n        </span>\n        <span class="ui coding floated right local-storage-info" ng-if="fetch_draft_at">\n            <i class="ok sign icon"></i>取出本地 <span cg-friendly-time="fetch_draft_at" cg-friendly-time-format="\'YYYY-MM-DD HH:mm:ss\'"></span> 的草稿\n        </span>\n    </div>\n</form>'),
        $templateCache.put("common/directives/attachment/tpl/previewer.html", '<div ng-switch="getFileType(current_file)">\n\n    <!-- 图片 -->\n    <div ng-switch-when="image" class="coding aligned center" style="height: 100%">\n        <div id="image-preview" style="height: 100%">\n            <div id="preview-image-loading" ng-if="image_previewing">\n                <i class="icon loading"></i>正在加载图片...\n            </div>\n            <!--处理前原图不能超过1亿5000万像素 http://developer.qiniu.com/docs/v6/api/reference/fop/image/imageview2.html -->\n            <div ng-if="!image_previewing && current_file.owner_preview" class="white-block" style="height: 95%">\n                <img id="preview-image" ng-show="current_file.image_width * current_file.image_height <= 150000000 " ng-src="{{current_file.owner_preview}}?width=1440&type=2&{{current_file.updated_at}}" alt="">\n                <a target="_blank" ng-show="current_file.image_width * current_file.image_height > 150000000" style="background: #4c4d50;color: #fff;-webkit-box-align: center; display: -webkit-box; height: 100%;text-align: -webkit-center" ng-href="{{current_file.owner_preview}}">无法显示缩略图，点击查看原图</a>\n            </div>\n        </div>\n    </div>\n\n\n    <!-- 文本 -->\n    <div ng-switch-when="text" id="text-preview" ng-switch="current_file.fileType">\n        <pre ng-switch-when="txt" class="txt-preview-wrapper">{{current_file.content}}</pre>\n        <div class="markdown content" clip-copy-code="pre" ng-switch-when="md" ng-if="markdown_preview" cg-page-scroll cg-highlight="markdown_preview"></div>\n    </div>\n    <div ng-switch-when="binary" ng-show="!office_preview">\n        <div id="preview-icon" ng-click="downloadFile(current_file);">\n            <i class="cloud download icon"></i>\n            <div cg-file-icon-src cg-file-icon="current_file.type"></div>\n        </div>\n    </div>\n\n    <!-- office -->\n    <div style="overflow:hidden" ng-show="office_preview">\n        <iframe id="office_preview" style="width:100%;height:700px;border:none;position:relative;margin-top:-90px"></iframe>\n    </div>\n\n    <!-- pdf -->\n    <div class="coding aligned center" id="pdf-preview-wrapper" ng-switch-when="pdf" ng-class="{full: pdf_resize == \'full\'}">\n        <div id="pdf-preview" ng-class="{loaded: pdf_preview_loaded}" cg-prev-and-next="onPdfNavChange($event);">\n            <div class="resize" ng-click="togglePdfResize();" ng-if="!pdf_preview_loading && pdf_preview && screenfull_enabled">\n                <i class="resize icon" ng-class="{full: pdf_resize == \'small\', small: pdf_resize == \'full\'}"></i>\n            </div>\n            <div class="prev button" title="上一页" ng-click="loadPdf(pdf_preview_page-1, $event);" ng-if="!pdf_preview_loading && pdf_preview && pdf_preview_page>1">\n                <i class="angle left icon"></i>\n            </div>\n            <div class="next button" title="下一页" ng-click="loadPdf(pdf_preview_page+1, $event);" ng-if="!pdf_preview_loading && pdf_preview && pdf_preview_page<pdf_preview.totalRow">\n                <i class="angle right icon"></i>\n            </div>\n            <div class="count" ng-if="pdf_preview_loaded">\n                <div ng-if="!pdf_preview_loading && pdf_preview">{{pdf_preview_page}}/{{pdf_preview.totalRow}}</div>\n                <div ng-if="pdf_preview_loading">\n                    <i class="loading icon"></i>加载中...\n                </div>\n            </div>\n            <img style="display: block;max-width: 100%;margin:auto" ng-style="{\'height\': pdf_fullscreen_height !== 0 ? pdf_fullscreen_height : \'auto\'}" ng-if="pdf_preview" ng-src="{{pdf_preview.url}}">\n        </div>\n        <div class="empty list" ng-if="pdf_preview_loading && !pdf_preview_loaded">\n            <i class="loading icon"></i>正在奋力加载中...\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/attachment/tpl/toolbar.html", '<div class="project-file-tool-bar">\n    <a class="tool-button gray" href="javascript:void(0)" ng-click="doSwitch($event, \'edit\')" ng-if="mode != \'edit\'"><i class="edit icon"></i></a>\n    <a class="tool-button gray" href="javascript:void(0)" ng-click="doSwitch($event, \'preview\')" ng-if="mode == \'edit\'"><i class="ui icon unhide"></i></a>\n    <a class="tool-button gray" href="javascript:void(0)" ng-click="downloadFile(file, project.id)"><i class="cloud download icon"></i></a>\n    <a class="tool-button gray" href="javascript:void(0)" ng-click="toDetail(project, file.file_id, folder_id)"><i class="external url icon"></i></a>\n    <a class="tool-button gray" href="javascript:void(0)"><i class="coding coding-share icon" cg-share="share" file="file" ng-class="{green: share}"></i></a>\n    <a class="tool-button gray" href="javascript:void(0)"><i class="preview-modal info icon" cg-popup="{on: \'click\', position: \'bottom center\'}" template="#file-info-modal-tpl"></i></a>\n    <a class="tool-button gray" href="javascript:void(0)" ng-if="(USER | isCreatorOf : file) || (USER | isOwnerOf : project)" ng-click="delete(file)"><i class="trash icon"></i></a>\n\n    <span id="file-info-modal-tpl" style="display: none">\n        <div class="file-info-wrapper">\n            <div class="file-info-title file_info_word" style="font-size: 15px;\n            height: 25px;\n            font-weight: inherit;\n            display: table-row;\n            width: 40%;\n            text-align: right">\n                <span class="file-info-left" style="padding-bottom:10px">文件信息</span>\n            </div>\n            <div class="file_info_word" ng-if="file.number">\n                <span class="file-info-left">引用编号</span>\n                <span class="file-info-right">#{{file.number}}</span>\n            </div>\n            <div class="file_info_word">\n                <span class="file-info-left">文件类型</span>\n                <span class="file-info-right">{{file.type}}</span>\n            </div>\n            <div class="file_info_word">\n                <span class="file-info-left">文件大小</span>\n                <span class="file-info-right">{{file.size | bytes}}</span>\n            </div>\n            <div class="file_info_word file-image-info">\n                <span class="file-info-left">文件尺寸</span>\n                <span class="file-info-right"></span>\n            </div>\n            <div class="file_info_word">\n                <span class="file-info-left">创建时间</span>\n                <span class="file-info-right" cg-friendly-time="file.created_at"></span>\n            </div>\n            <div class="file_info_word">\n                <span class="file-info-left">最近更新</span>\n                <span class="file-info-right" cg-friendly-time="file.updated_at"></span>\n            </div>\n            <div class="file_info_word">\n                <span class="file-info-left">创建人</span>\n                <span class="file-info-right ellipsis" style="max-width: 100px">{{file.owner.name}}</span>\n            </div>\n        </div>\n    </span>\n</div>'),
        $templateCache.put("common/directives/bubble/tpl/bubble.html", '<div class="bubble-content-wrapper" ng-init="tweet_content = restyleImage(restyleEmoji(tweet.content));">\n    <div class="bubble-detail" ng-class="{\'has-comments\': tweet.comments > 0}">\n        <div class="content markdown bubble" style="color: #000" cg-fancy-overflow clip-copy-code="pre" cg-highlight="tweet_content">\n        </div>\n        <div cg-gallery="tweet.content"></div>\n        <div class="location ellipsis" ng-if="tweet.location">\n            <span>\n                <i class="map marker icon"></i>\n                <span>{{tweet.location}}</span>\n            </span>\n        </div>\n        <div class="info">\n            <span class="mr10">\n                <a class="gray" style="color: #999" bo-href="tweet.owner.path" bo-text="tweet.owner.name">\n                </a>\n            </span>\n            <span class="mr10">\n                <a class="gray" bo-href="tweet.owner.path + \'/pp/\' + tweet.id">\n                    <i class="time icon"></i>\n                    <span cg-friendly-time="tweet.created_at" style="color: #999"></span>\n                </a>\n            </span>\n            <span class="mr10">\n                <a class="gray" bo-href="tweet.owner.path + \'/pp/\' + tweet.id">\n                    <i class="chat outline icon"></i>\n                    <span ng-bind="tweet.comments"></span>\n                </a>\n            </span>\n            <span class="mr10">\n                <a class="gray" href="javascript:void(0);" ng-click="toggleLike(tweet)">\n                    <i class="heart icon" ng-class="{empty: !tweet.liked || liking,\n                                  red: tweet.liked,\n                                  \'heartbeat red\': like_opt_done}">\n                    </i>\n                    <span ng-bind="tweet.likes"></span>\n                </a>\n            </span>\n            <span class="mr10 mabi">\n                <a href="javascript:void(0);" ng-click="prepareReward(tweet)" class="gray" ng-mouseenter="showTip(tweet)" ng-mouseleave="hideTip(tweet)">\n                    <i class="coding icon coding-mabi" ng-class="{icon_rewarded: tweet.rewards>0}"></i>\n                    <span ng-bind="tweet.rewards||0"></span>\n                </a>\n            </span>\n            <span class="ui pointing left label tip_rewarded" ng-bind="rewardTip(tweet)" ng-show="tweet.showTweetTip"></span>\n            <span class="remove action coding mr10" ng-if="canRemove()">\n                <a href="javascript:void(0);" ng-click="doRemove();">\n                    <i class="red remove icon"></i>删除\n                </a>\n            </span>\n            <span class="device" bo-if="tweet.device">\n                <i class="mobile icon"></i>\n                <span bo-text="tweet.device"></span>\n            </span>\n        </div>\n        <div class="likes">\n            <a bindonce ng-repeat="user in tweet.reward_users | limitTo: like_show_limit" bo-href="user.path" bo-title="user.name" cg-hover-card="user" card-bottom-offset="\'140%\'" card-left-offset="\'-66%\'">\n                <img class="ui image avatar18 user_rewarded" bo-src="user.avatar" bo-attr bo-attr-alt="user.name">\n            </a><a bindonce ng-repeat="user in tweet.like_users | limitTo: like_show_limit - tweet.reward_users.length" bo-href="user.path" bo-title="user.name" cg-hover-card="user" card-bottom-offset="\'140%\'" card-left-offset="\'-66%\'">\n                <img class="ui image avatar18" bo-src="user.avatar" bo-attr bo-attr-alt="user.name">\n            </a>\n            <a style="font-size: 10px" title="查看所有点赞" href="javascript:void(0);" ng-if="showMoreLikesAndRewards(tweet)" ng-click="showAllLikesAndRewards(tweet)">\n                ...\n            </a>\n            <span ng-if="loading_likes"><i class="loading icon"></i></span>\n        </div>\n    </div>\n        <div>\n            <div ng-include="\'app/tweet/prepareTweetReward.html\'"></div>\n        </div>\n    <div ng-transclude></div>\n    <!--<div cg-gallery="tweet.content"></div>-->\n</div>'),
        $templateCache.put("common/directives/bubble/tpl/bubble_comment.html", '<div class="bubble-comments" ng-class="{none: !comments.length}">\n    <div class="comment-item" bo-class="{last: $last}" bindonce ng-repeat="comment in comments">\n        <a class="avatar" bo-href="comment.owner.path" cg-hover-card="comment.owner" card-left-offset="\'-16%\'">\n            <img class="ui avatar image" width="30px" height="30px" bo-src="comment.owner.avatar" bo-attr bo-alt="comment.owner.name">\n        </a>\n        <div class="detail">\n            <div class="content" bo-html="comment.content" style="color:#000">\n            </div>\n            <div class="info">\n                <span class="mr10">\n                    <a class="gray" bo-href="comment.owner.path" bo-text="comment.owner.name" style="color:#999"></a>\n                </span>\n                <span class="mr10">\n                    <i class="time icon"></i>\n                    <span cg-friendly-time="comment.created_at" style="color:#999"></span>\n                </span>\n                <span class="action coding floated right">\n                    <a class="mr10" href="javascript:void(0);" ng-if="$root.USER" ng-click="insertCommentName(comment);">\n                        <i class="blue edit icon"></i>回复\n                    </a>\n                    <a href="javascript:void(0);" ng-if="canRemove(comment, $root.USER);" ng-click="doRemove(comment);">\n                        <i class="red icon" ng-class="{remove: !comment.removing, loading: comment.removing}"></i>删除\n                    </a>\n                </span>\n            </div>\n        </div>\n    </div>\n    <div class="show-more-comment" ng-if="canShowMore()">\n        <a class="down more gray" href="javascript:void(0);" ng-if="!loading_all && !loaded" ng-click="showAllComments();">显示全部评论</a>\n        <a class="gray" ng-if="loading_all">\n            <i class="icon loading"></i>正在加载评论\n        </a>\n    </div>\n</div>'),
        $templateCache.put("common/directives/bubble/tpl/bubble_comment_form.html", '<form class="bubble-form ui small form" ng-class="{loading: sending}">\n    <div class="ui large icon input">\n        <input type="text" placeholder="在此输入评论内容（Ctrl+Enter）" ng-model="content" cg-ctrl-enter="doComment();" cg-at-context at-context-type="\'tweet_comment\'" at-item="tweet" has_no_monkey="true" cg-placeholder cg-at-emoji>\n        <i class="right icon" ng-click="doComment();"></i>\n        <i class="smile right icon" cg-emotion-btn style="right:2.6em;margin-right:-1em" basic-emoji="true"></i>\n    </div>\n</form>'),
        $templateCache.put("common/directives/bubble/tpl/bubble_comment_form2.html", '<form class="bubble-form ui small form" ng-class="{loading: sending}">\n    <div class="ui large icon input">\n        <input type="text" placeholder="在此输入评论内容（Ctrl+Enter）" ng-model="content" cg-ctrl-enter="doComment();" cg-at-context at-context-type="\'tweet_comment\'" at-item="tweet" has_no_monkey="true" cg-placeholder cg-at-emoji>\n        <i class="right icon" ng-click="doComment();"></i>\n    </div>\n</form>'),
        $templateCache.put("common/directives/casacadingAddress/tpl/city.html", '<span>\n    <style>\n        .cascading-address {\n            border: 1px solid #ddd;\n            position:absolute;\n            z-index: 999;\n            background: white;\n            border-radius: 0.3em;\n            padding: 8px;\n            width: 50%;\n        }\n\n        .cascading-address ul {\n            padding:5px;\n            border-bottom: 1px dotted #ddd;\n        }\n\n        .cascading-address ul li {\n            font-size: 13px;\n            list-style: none;\n            display: inline-block;\n            margin:5px 7px;\n            cursor: pointer;\n        }\n\n        .cascading-address .form-group {\n            margin: 10px;\n        }\n    </style>\n    <input ng-model="model" ng-focus="open(\'show\')" placeholder="地区" type="text">\n\n    <div ng-show="show" class="cascading-address">\n        <ul>\n            <li ng-repeat="item in provinces" ng-click="set.province(item.p)" ng-class="{\'label label-success\': province === item.p}">\n                {{ item.p}}\n            </li>\n        </ul>\n\n        <ul ng-show="cities.length">\n            <li ng-repeat="item in cities" ng-click="set.city(item.n)" ng-class="{\'label label-success\': city === item.n}">\n                {{ item.n}}\n            </li>\n        </ul>\n        <div class="panel-footer text-right">\n            <button ng-click="clear()" class="ui small white button">清空</button>\n            <button ng-click="open(\'hide\')" class="ui small blue button">确定</button>\n        </div>\n    </div>\n</span>'),
        $templateCache.put("common/directives/cgMemberSelector/tpl/cgMemberSelector.html", '<ul class="cg-ms-selected hover-remove">\n    <li ng-repeat="member in selected" class="cg-ms-selected-item">\n        <img ng-src="{{member.lavatar}}" class="ui image">\n        <span>{{member.name}}</span>\n        <i class="icon remove red" ng-click="cancel(member)"></i>\n    </li>\n    <li class="cg-ms-selected-tips" ng-if="!selected || selected.length === 0" style="font-size:12px;color:#999">\n        尚未添加任何关注者\n    </li>\n</ul>\n<select ui-select2="options" ng-model="value" ng-change="select()">\n    <option ng-hide="true" value="0">{{options.placeholder}}</option>\n    <option ng-repeat="member in unselected" ng-show="show(member)" value="{{member.global_key}}" data-pinyin="{{member.name_pinyin}}" data-template="\n            <div class=\'cg-ms-unselected {{checkModeClass(member)}}\'>\n                <i class=\'checkmark icon\'></i>\n' + "                <img class='ui image' src='{{member.avatar}}'/>\n                <span class='ellipsis'>{{member.name}}</span>\n            </div>\n        \">\n        {{member.name}}\n    </option>\n</select>"),
        $templateCache.put("common/directives/cgMemberSelector/tpl/task-creating-watchers.html", '<style>\n    .cg-ms-selected.mr-1 .cg-ms-selected-item {\n        margin-left: 1px;\n    }\n</style>\n<ul class="cg-ms-selected mr-1" style="max-height: 60px" class="overflow-auto" cg-perfect-scroll-bar="update_scrollbar">\n    <li ng-repeat="member in selected" class="cg-ms-selected-item">\n        <img ng-src="{{member.lavatar}}" class="ui image">\n        <span>{{member.name}}</span>\n        <i class="icon remove red" ng-click="cancel(member)"></i>\n    </li>\n    <li ng-if="!selected || selected.length === 0" style="font-size:12px;color:#999">\n        尚未添加任何关注者\n    </li>\n</ul>\n<select ui-select2="options" ng-model="value" ng-change="select()">\n    <option ng-hide="true" value="0">{{options.placeholder}}</option>\n    <option ng-repeat="member in unselected" ng-show="show(member)" value="{{member.global_key}}" data-pinyin="{{member.name_pinyin}}" data-template="\n            <div class=\'cg-ms-unselected {{checkModeClass(member)}}\'>\n                <i class=\'checkmark icon\'></i>\n' + "                <img class='ui image' src='{{member.avatar}}'/>\n                <span class='ellipsis'>{{member.name}}</span>\n            </div>\n        \">\n        {{member.name}}\n    </option>\n</select>"),
        $templateCache.put("common/directives/cgShare/tpl/popup.html", '<style>\n    .share-popup {\n        position: absolute;\n        padding: 20px;\n        width: 280px;\n        display: none;\n        top: 30px;\n\n        font-family: \'微软雅黑\', \'Helvetica Neue\', sans-serif, SimHei;\n        border-radius: 0.2em;\n        box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.1);\n        border:1px solid rgba(0, 0, 0, 0.1);\n        background-color: white;\n        color: black;\n        text-align: left;\n        cursor: default;\n        z-index: 4;\n    }\n    .share-popup:before {\n        margin-left: -0.4em;\n        top: -0.3em;\n        left: 50%;\n        right: auto;\n        bottom: auto;\n        -webkit-box-shadow: -1px -1px 1px rgba(0, 0, 0, 0.2);\n        box-shadow: -1px -1px 1px rgba(0, 0, 0, 0.2);\n\n        position: absolute;\n        content: "";\n        width: 0.75em;\n        height: 0.75rem;\n        background-image: none;\n        background-color: #FFFFFF;\n        -webkit-transform: rotate(-135deg);\n        -moz-transform: rotate(-135deg);\n        -ms-transform: rotate(-135deg);\n        transform: rotate(-135deg);\n        z-index: 4;\n        -webkit-box-sizing: border-box;\n        -moz-box-sizing: border-box;\n        -ms-box-sizing: border-box;\n        box-sizing: border-box;\n        -webkit-box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.1);\n        box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.1);\n    }\n    .share-popup:hover {\n        color: black;\n    }\n\n    .share-popup-action {\n        height: 40px;\n        line-height: 30px;\n        font-weight: bold;\n    }\n\n    .share-popup-button {\n        width: 70px;\n        float: right;\n        padding: 0 1.2em !important;\n    }\n\n    .share-popup-footer {\n        padding: 0 !important;\n        line-height: 1.3em;\n    }\n\n    .share-popup-input {\n        height: 35px;\n        padding: 4px 1em;\n        font-size: 1em;\n    }\n\n    .share-popup-copy {\n        width: 30px;\n        padding-left: 18px !important;\n        padding-right: 18px !important;\n    }\n\n    .share-popup-copy i.icon {\n        padding-right: 0 !important;\n    }\n\n    .share-popup-action .checkbox label.checkbox-label:after {\n        height: 0.74em;\n    }\n</style>\n<div class="share-popup">\n    <div class="share-popup-action">\n        共享链接\n        <div style="float: right; margin-top: 10px; width: 50px" class="ui toggle checkbox">\n            <input type="checkbox">\n            <label class="checkbox-label"></label>\n        </div>\n    </div>\n    <div ng-show="loading" class="empty list center">\n        <i class="icon loading"></i>正在加载...\n    </div>\n    <div ng-show="!loading" class="empty list share-popup-footer">\n        <div>适用于所有人，无需登录。</div>\n        <div ng-show="!share">当前未开启分享，请先创建公开链接。</div>\n        <div ng-show="share" class="ui action input" style="width: 100%; margin-top: 10px">\n            <input class="share-popup-input" type="text" ng-value="share.url" readonly="readonly" onclick="this.select()">\n            <div class="ui right icon button share-popup-copy" clip-copy="getCopy()" clip-click="doCopy()">\n                <i class="paste icon" ng-class="{\'green checkmark\': copied, \'paste\': !copied}" style="vertical-align: middle"></i>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/codeInsight/codeShow/codeShow.html", '<div cg-code-show="setting" class="code" ng-style="{\'font-size\':setting.fontSize}">\n</div>'),
        $templateCache.put("common/directives/codeInsight/pane/tpl/pane.html", '<div ng-if="selected" ng-transclude style="width: 100%; height: 100%">\n</div>'),
        $templateCache.put("common/directives/codeInsight/tabs/tpl/tabs.html", '<div class="code-insight tab" bindonce="mode">\n    <ul class="code-insight tab-bar">\n        <li ng-repeat="pane in panes" ng-class="{active: pane.selected}" ng-click="select(pane)" data-pane-path="{{pane.id}}" data-pane-url="{{pane.url}}" class="tab">\n            <div class="tab-title" ng-bind="pane.title" title="{{pane.id}}"></div>\n            <div class="close-icon"><i class="remove icon" ng-click="close(pane);"></i></div>\n        </li>\n    </ul>\n    <div class="code-insight showcode" id="code-insight-code" ng-repeat="pane in panes" ng-class="{active: pane.selected}" ng-show="pane.selected" ng-init="setting = pane.component.setting" ng-include="pane.component.templateUrl" data-pane-path="{{pane.id}}" ng-style="{\'font-size\': pane.fontSize}">\n    </div>\n</div>'),
        $templateCache.put("common/directives/codeInsight/ztree/tpl/ztree.html", '<div class="explorer_ztree">\n    <div id="ztree" class="ztree">\n\n    </div>\n</div>'),
        $templateCache.put("common/directives/contextMenu/contextMenu.html", '<div class="ui small vertical inverted labeled icon sidebar fixed menu" ng-class="{active: !!currentApp, \'not-confirmed-sidebar\': confirmEmmail}" id="context-menu">\n    <!--user-->\n    <a class="item" ng-href="/user" ng-class="{active:module==\'home\'}" title="个人首页" ng-if="isUser">\n        <img ng-src="{{USER.avatar}}" class="ui coding image avatar32" id="context-avatar">\n    </a>\n    <a class="item" ng-href="/user/projects" ng-class="{active:module==\'projects\'}" title="项目" ng-if="isUser">\n        <i class="big coding project icon"></i>\n        <span class="menu-title">项目</span>\n    </a>\n    <a class="item" ng-href="/user/tasks?owner={{USER.id}}" ng-class="{active:module==\'tasks\'}" title="任务" ng-if="isUser">\n        <i class="big tasks icon"></i>\n        <span class="menu-title">任务</span>\n    </a>\n    <a class="item" ng-href="/user/activities" ng-class="{active:module==\'activities\'}" title="动态" ng-if="isUser">\n        <i class="big basic lightning icon" ng-class="{active:module==\'activities\'}"></i>\n        <span class="menu-title">动态</span>\n    </a>\n    <a class="item" ng-href="/user/relationship" ng-class="{active:module==\'relationship\'}" title="关系中心" ng-if="isUser">\n        <i class="big user icon" ng-class="{active:module==\'relationship\'}"></i>\n        <span class="menu-title">好友</span>\n    </a>\n    <a class="item" ng-href="/user/notifications" ng-class="{active:module==\'notifications\'}" title="通知" ng-if="isUser">\n        <i class="big inbox icon"></i>\n        <span class="menu-title">通知</span>\n    </a>\n    <a class="item" ng-href="/user/messages" ng-class="{active:module==\'messages\'}" title="私信" ng-if="isUser">\n        <i class="big mail icon"></i>\n        <span class="menu-title">私信</span>\n    </a>\n    <a class="item" ng-href="/user/account" ng-class="{active:module==\'account\'}" title="账户" ng-if="isUser">\n        <i class="big dashboard icon"></i>\n        <span class="menu-title">账户</span>\n    </a>\n    <!--project-->\n    <a class="item" ng-class="{active:module==\'home\'}" ng-href="{{PROJECT.project_path}}" ng-if="isProject">\n        <img ng-if="PROJECT.icon" ng-src="{{PROJECT.icon}}" class="ui image avatar32" id="context-avatar">\n        <img ng-if="!PROJECT.icon" src="/static/d2ab4f6de747ad169160d3caaf82132e.png" class="ui image avatar32" id="context-avatar">\n    </a>\n    <a class="item" ng-class="{active:module==\'tasks\'}" ng-href="{{PROJECT.project_path}}/tasks/processing" ng-if="isProject">\n        <i class="big tasks icon"></i>\n        <span class="menu-title">任务</span>\n    </a>\n    <a class="item" ng-class="{active:module==\'topic\'}" ng-href="{{PROJECT.project_path}}/topic/all" ng-if="isProject">\n        <i class="big chat icon"></i>\n        <span class="menu-title">讨论</span>\n    </a>\n    <a class="item" ng-class="{active:module==\'attachment\'}" ng-href="{{PROJECT.project_path}}/attachment" ng-if="isProject">\n        <i class="big file icon"></i>\n        <span class="menu-title">文件</span>\n    </a>\n    <a class="item" ng-class="{active:module==\'members\'}" ng-href="{{PROJECT.project_path}}/members" ng-if="isProject">\n        <i class="big users icon"></i>\n        <span class="menu-title">成员</span>\n    </a>\n    <a class="item" ng-class="{active:module==\'setting\'}" ng-href="{{PROJECT.project_path}}/setting" ng-if="isProject">\n        <i class="big settings icon"></i>\n        <span class="menu-title">设置</span>\n    </a>\n    <span class="item divider"></span>\n\n    <a class="item" ng-class="{active:module==\'git\'}" ng-href="{{PROJECT.project_path}}/git" ng-if="showCode && isProject">\n        <i class="big code icon"></i>\n        <span class="menu-title">代码</span>\n    </a>\n    <a class="item" ng-class="{active:module==\'paas\'}" ng-href="{{PROJECT.project_path}}/paas" ng-if="showCode && isProject">\n        <i class="big cloud icon"></i>\n        <span class="menu-title">演示</span>\n    </a>\n    <a class="item" ng-class="{active:module==\'qc\'}" ng-href="{{PROJECT.project_path}}/qc" ng-if="showCode && isProject">\n        <i class="big certificate icon"></i>\n        <span class="menu-title">质量管理</span>\n    </a>\n    <span class="item divider"></span>\n    <div class="scroll-holder" ng-if="isProject"></div>\n</div>'),
        $templateCache.put("common/directives/emoji/emoji_dropdown.html", '<div class="ui emotion box top right pointing dropdown" ng-mouseleave="hidePreview($event)">\n    <div class="menu">\n        <div ng-show="!tabs_bottom">\n            <div class="item">\n                <div class="tabs clearfix">\n                    <div class="tab" ng-class="{active: tab === 0}" ng-click="tab = 0">\n                        经典\n                    </div>\n                    <div class="tab" ng-class="{active: tab === 1}" ng-show="!basicEmoji" ng-click="tab = 1">\n                        洋葱猴\n                    </div>\n                    <div class="tab" ng-class="{active: tab === 2}" ng-show="!basicEmoji" ng-click="tab = 2">\n                        中秋\n                    </div>\n                </div>\n                <a style="position: absolute;top: 12px; right: 12px;color: #2d59a2" href="http://monkey.coding.io/">\n                    <i class="coding monkey icon" style="margin-right: 3px"></i>提交专属表情\n                </a>\n            </div>\n        </div>\n        <div class="item">\n            <div>\n                <div class="emotions coding clearfix" ng-style="{\'display\':tab === 2 ? \'block\' : \'none\', minHeight: \'220px\'}" ng-show="!basicEmoji">\n                    <ul style="width: 100%">\n                        <li class="festival-emoji" bindonce ng-repeat="fe in festival_emojis" bo-attr bo-attr-code="fe.code" ng-mouseover="preview($event)" bo-attr-index="$index" w="6" h="6" ng-click="insertEmoji($event)" bo-attr-code-image="\'/static/festival-emojis/preview/\'+ fe.image +\'.gif\'" bo-style="position_festival($index)"></li>\n                    </ul>\n                    <div class="emotion-preview">\n                        <div>\n                            <img src="">\n                            <p class="emotion-word"></p>\n                        </div>\n                    </div>\n                </div>\n                <div class="emotions coding clearfix" ng-style="{\'display\':tab === 1 ? \'block\' : \'none\'}" ng-show="!basicEmoji">\n                    <ul style="width: 100%">\n                        <li class="coding-emoji" bindonce ng-repeat="ce in coding_emotions" bo-attr bo-attr-code="ce.code" ng-mouseover="preview($event)" bo-attr-index="$index" w="6" h="6" ng-click="insertEmoji($event)" bo-attr-code-image="\'/static/coding-emotions/\'+ ce.image +\'.png\'" bo-style="position_monkey($index)"></li>\n                    </ul>\n                    <div class="emotion-preview">\n                        <div>\n                            <img src="">\n                            <p class="emotion-word"></p>\n                        </div>\n                    </div>\n                </div>\n                <div class="emotions emojis clearfix" ng-style="{\'display\':tab === 0 ? \'block\' : \'none\'}">\n                    <ul style="width: 100%">\n                        <li class="emoji" bindonce ng-repeat="emoji in emojis" bo-attr bo-attr-code="emoji" ng-mouseover="preview($event)" bo-attr-index="{{$index}}" w="12" h="7" ng-click="insertEmoji($event)" bo-attr-code-image="\'/static/emojis/\' + emoji +\'.png\'" bo-style="position($index)"></li>\n                    </ul>\n                    <div class="emotion-preview"><img src=""></div>\n                </div>\n            </div>\n        </div>\n        <div ng-show="tabs_bottom">\n            <div class="item">\n                <div class="tabs clearfix">\n                    <div class="tab" ng-class="{active: tab === 0}" ng-click="tab = 0">\n                        经典\n                    </div>\n                    <div class="tab" ng-class="{active: tab === 1}" ng-show="!basicEmoji" ng-click="tab = 1">\n                        洋葱猴\n                    </div>\n                    <div class="tab" ng-class="{active: tab === 2}" ng-show="!basicEmoji" ng-click="tab = 2">\n                        中秋\n                    </div>\n                </div>\n                <a style="position: absolute;top: 12px; right: 12px;color: #2d59a2" href="http://monkey.coding.io/">\n                    <i class="coding monkey icon" style="margin-right: 3px"></i>提交专属表情\n                </a>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/emoji/emoji_dropdown2.html", '<div class="ui emotion box top right pointing dropdown" ng-mouseleave="hidePreview($event)">\n    <i class="icon smile"></i>\n    <div class="menu">\n        <div ng-show="!tabs_bottom">\n            <div class="item">\n                <div class="tabs clearfix">\n                    <div class="tab" ng-class="{active: tab === 0}" ng-click="tab = 0">\n                        经典\n                    </div>\n                    <div class="tab" ng-class="{active: tab === 1}" ng-click="tab = 1">\n                        洋葱猴\n                    </div>\n                    <div class="tab" ng-class="{active: tab === 2}" ng-click="tab = 2">\n                        中秋\n                    </div>\n                </div>\n                <a style="position: absolute;top: 12px; right: 12px;color: #2d59a2" href="http://monkey.coding.io/">\n                    <i class="coding monkey icon" style="margin-right: 3px"></i>提交专属表情\n                </a>\n            </div>\n        </div>\n        <div class="item">\n            <div>\n                <div class="emotions coding clearfix" ng-style="{\'display\':tab === 2 ? \'block\' : \'none\', minHeight: \'220px\'}">\n                    <ul style="width: 100%">\n                        <li class="festival-emoji" bindonce ng-repeat="fe in festival_emojis" bo-attr bo-attr-code="fe.code" ng-mouseover="preview($event)" bo-attr-index="$index" w="6" h="6" ng-click="insertEmoji($event)" bo-attr-code-image="\'/static/festival-emojis/preview/\'+ fe.image +\'.gif\'" bo-style="position_festival($index)"></li>\n                    </ul>\n                    <div class="emotion-preview">\n                        <div>\n                            <img src="">\n                            <p class="emotion-word"></p>\n                        </div>\n                    </div>\n                </div>\n                <div class="emotions coding clearfix" ng-style="{\'display\':tab === 1 ? \'block\' : \'none\'}">\n                    <ul style="width: 100%">\n                        <li class="coding-emoji" bindonce ng-repeat="ce in coding_emotions" bo-attr bo-attr-code="ce.code" ng-mouseover="preview($event)" bo-attr-index="$index" w="6" h="6" ng-click="insertEmoji($event)" bo-attr-code-image="\'/static/coding-emotions/\'+ ce.image +\'.png\'" bo-style="position_monkey($index)"></li>\n                    </ul>\n                    <div class="emotion-preview">\n                        <div>\n                            <img src="">\n                            <p class="emotion-word"></p>\n                        </div>\n                    </div>\n                </div>\n                <div class="emotions emojis clearfix" ng-style="{\'display\':tab === 0 ? \'block\' : \'none\'}">\n                    <ul style="width: 100%">\n                        <li class="emoji" bindonce ng-repeat="emoji in emojis" bo-attr bo-attr-code="emoji" ng-mouseover="preview($event)" bo-attr-index="{{$index}}" w="12" h="7" ng-click="insertEmoji($event)" bo-attr-code-image="\'/static/emojis/\' + emoji +\'.png\'" bo-style="position($index)"></li>\n                    </ul>\n                    <div class="emotion-preview"><img src=""></div>\n                </div>\n            </div>\n        </div>\n        <div ng-show="tabs_bottom">\n            <div class="item">\n                <div class="tabs clearfix">\n                    <div class="tab" ng-class="{active: tab === 0}" ng-click="tab = 0">\n                        经典\n                    </div>\n                    <div class="tab" ng-class="{active: tab === 1}" ng-click="tab = 1">\n                        洋葱猴\n                    </div>\n                    <div class="tab" ng-class="{active: tab === 2}" ng-click="tab = 2">\n                        中秋\n                    </div>\n                </div>\n                <a style="position: absolute;top: 12px; right: 12px;color: #2d59a2" href="http://monkey.coding.io/">\n                    <i class="coding monkey icon" style="margin-right: 3px"></i>提交专属表情\n                </a>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/exp/tpl/exp.html", '<style>\n    .experiment-switchers {\n        position: fixed;\n        top: 50%;\n        left: 50%;\n        width: 300px;\n        height: 200px;\n        margin-left: -150px;\n        margin-top: -100px;\n        background: #EEE;\n        border: 1px solid #DDD;\n        -webkit-border-radius: 3px;\n        -moz-border-radius: 3px;\n        border-radius: 3px;\n        padding: 10px;\n        -webkit-box-sizing: border-box;\n        -moz-box-sizing: border-box;\n        box-sizing: border-box;\n        z-index: 1000;\n    }\n\n    .experiment-switchers ul {\n        list-style: none;\n        padding: 0 0 0 20px;\n    }\n\n    .experiment-switchers ul li {\n        margin-bottom: 10px;\n    }\n\n    .experiment-switchers h3 {\n        font-size: 20px;\n        text-align: center;\n        font-weight: normal;\n        padding: 0 0 10px 0;\n        margin: 0;\n        border-bottom: 1px solid #DDD;\n    }\n\n    .experiment-switchers i.close {\n        position: absolute;\n        right: 0;\n        top: 5px;\n        color: #948D8D;\n        cursor: pointer;\n    }\n\n    .experiment-switchers .exp-wrapper {\n        display: inline-block;\n        width: 100%;\n        height: 145px;\n        overflow-x: hidden;\n        overflow-y: auto;\n        margin-top: 5px;\n    }\n</style>\n<h3>Coding 前端体验中心</h3>\n<div class="exp-wrapper">\n<ul>\n    <li ng-repeat="exp in exps" ng-init="id = exp.name + \'-checkbox\';">\n        {{ exp.name }} :\n        <div class="ui toggle checkbox">\n            <input type="checkbox" ng-model="exp.value" id="{{ id }}" ng-change="onSwitchToggle(exp)">\n            <label for="{{ id }}"></label>\n        </div>\n    </li>\n</ul>\n</div>\n<i class="close icon" ng-click="onExpClose()"></i>'),
        $templateCache.put("common/directives/feedEditor/tpl/feed_editor.html", '<div class="feed-editor" cg-page-scroll>\n    <div class="avatar">\n        <a ng-href="{{USER.path}}"><img class="ui avatar42 image" ng-src="{{USER.avatar}}"></a>\n    </div>\n    <div class="editor" ng-init="show_preview = false">\n        <div class="ui inverted dimmer" ng-class="{active:sending}"><i class="loading icon"></i></div>\n        <div ng-transclude ng-style="{\'display\':show_preview?\'none\':\'block\'}">\n        </div>\n        <div class="preview" ng-class="preview_mode" ng-click="togglePreview()" ng-style="{\'display\':show_preview?\'block\':\'none\'}">\n            <div class="markdown content bubble preview-content"></div>\n        </div>\n    </div>\n    <div class="toolbar">\n        <i ng-if="!topics.length > 0" class="icon help tip" style="cursor: pointer" data-html="<div class=\'content\'>冒泡是 Coding.net 为方便程序开发者们进行交流、享受技术开发乐趣而打造的即时状态更新功能。支持 Markdown 语法，Emoji 表情，1M 以下的图片上传，预览功能等。<br/>* 用户发布的冒泡是全站可见的，同时会在好友的动态墙上推送，并支持评论和回复功能。<br/><a href=\'/faq/account/user.html#什么是冒泡？-可以在冒泡干嘛？\' target=\'_blank\' >更多帮助<i class=\'icon double angle right\'></i></a></div>" cg-help-popup=""></i>\n        <a ng-if="topics.length > 0" href="javascript:void(0)" class="gray topic" ng-click="insertTopic(topic.name)" bindonce bo-title="\'#\' + topic.name + \'#\'" ng-repeat="topic in topics track by $index">\n            <span class="topic-anchor">#</span>\n            <span class="content ellipsis" bo-text="topic.name"></span>\n            <span class="topic-anchor">#</span></a>\n        <ul>\n            <li title="冒泡预览" class="btn-preview" ng-click="togglePreview()">\n                <i class="ui icon" style="display: inline-block" ng-class="{\'hide\':show_preview,\'unhide\':!show_preview}"></i>\n            </li>\n            <li title="插入代码" class="btn-code" ng-click="insertCode()">\n                <i class="ui code icon"></i>\n            </li>\n            <li title="插入图片" class="btn-photo" ng-click="insertImage()">\n                <i class="ui photo icon" ng-class="{\'loading\': img_uploading, \'photo\': !img_uploading}"></i>\n            </li>\n            <li title="插入表情" class="btn-emoji">\n                <cg-emotion2 editor="$textarea" content="$content" on-change="onInsertEmoji" tabs-bottom="{{ tabs_bottom }}" ng-if="!isExpActive(\'tweet_comment_emoji\')"></cg-emotion2>\n                <i class="icon smile" cg-emotion-btn content="$content" on-change="onInsertEmoji" editor="{{feedContext}} [cg-feed-editor-textarea]" ng-if="isExpActive(\'tweet_comment_emoji\')"></i>\n            </li>\n            <li title="发布冒泡" class="btn-submit" ng-click="submit();">\n                <i class="clockwise rotated level down icon" style="margin: 0"></i>\n            </li>\n        </ul>\n\n    </div>\n    <input class="insert_img" class="hide" type="file" name="tweetImg" cg-file-upload="insert_image_setting" style="display: none">\n</div>'),
        $templateCache.put("common/directives/feedEditor/tpl/message_editor.html", '<div class="item left form feed-editor">\n    <a class="sender" ng-href="{{USER.path}}"><img class="ui avatar image" ng-src="{{USER.avatar}}"></a>\n\n    <div class="content arrow message-text">\n        <div ng-transclude ng-style="{\'display\':show_preview?\'none\':\'block\'}">\n        </div>\n        <div class="preview" ng-class="preview_mode" ng-click="togglePreview()" ng-style="{\'display\':show_preview?\'block\':\'none\'}" style="margin:0;margin-bottom:10px;border:0;box-shadow:none">\n            <div class="markdown content preview-content"></div>\n        </div>\n        <div class="meh-photo clearfix">\n            <span>\n                <i class="ui icon" ng-click="togglePreview()" ng-class="{\'hide\':show_preview,\'unhide\':!show_preview}" style="display: inline-block"></i>\n                <i class="ui code icon" ng-click="insertCode()"></i>\n                <i class="ui photo icon" ng-click="insertImage()" ng-class="{\'loading\': img_uploading, \'photo\': !img_uploading}"></i>\n                <cg-emotion2 editor="$textarea" content="$content" on-change="onInsertEmoji" tabs-bottom="{{ tabs_bottom }}" ng-if="!isExpActive(\'tweet_comment_emoji\')"></cg-emotion2>\n                <i class="icon smile" cg-emotion-btn content="$content" on-change="onInsertEmoji" editor="{{ feedContext }} [cg-feed-editor-textarea]" ng-if="isExpActive(\'tweet_comment_emoji\')"></i>\n            </span>\n        </div>\n    </div>\n    <div class="left floated positive ui button send" ng-click="submit();" ng-if="!sending" style="width:110px">发送\n    </div>\n    <div class="left floated positive ui button send" ng-if="sending"><i class="loading icon"></i>发送中</div>\n</div>\n<input class="insert_img" class="hide" type="file" name="tweetImg" cg-file-upload="insert_image_setting" style="display: none">'),
        $templateCache.put("common/directives/feedEditor/tpl/message_editor_modal.html", '<style>\n    .message-editor-modal.feed-editor{padding-left:0}\n    .message-editor-modal.feed-editor > .preview{margin:0;margin-bottom:10px;border:0;overflow:auto;border: 1px solid #ddd;width:auto;margin:0;border-bottom:0;height:8em;}\n    #send-message-modal .preview > div img{width:auto}\n    #send-message-modal .message-editor-modal .ui.top.right.pointing.dropdown .menu{top:auto;bottom:24px;}\n    #send-message-modal .ui.top.right.pointing.emotion.box .menu:after{display:none;}\n</style>\n<div class="feed-editor message-editor-modal">\n    <div ng-transclude ng-style="{\'display\':show_preview?\'none\':\'block\'}">\n    </div>\n    <div class="preview" ng-class="preview_mode" ng-click="togglePreview()" ng-style="{\'display\':show_preview?\'block\':\'none\'}">\n        <div class="markdown content preview-content"></div>\n    </div>\n    <div class="meh-photo clearfix">\n        <span class="action">\n            <i class="ui icon" ng-click="togglePreview()" ng-class="{\'hide\':show_preview,\'unhide\':!show_preview}" style="display: inline-block"></i>\n            <i class="ui code icon" ng-click="insertCode()"></i>\n            <i class="ui photo icon" ng-click="insertImage()" ng-class="{\'loading\': img_uploading, \'photo\': !img_uploading}"></i>\n            <cg-emotion2 editor="$textarea" content="$content" tabs-bottom="{{tabs_bottom}}" ng-if="!isExpActive(\'tweet_comment_emoji\')"></cg-emotion2>\n            <i class="icon smile" cg-emotion-btn content="$content" on-change="onInsertEmoji" editor="{{feedContext}} [cg-feed-editor-textarea]" tabs-bottom="true" ng-if="isExpActive(\'tweet_comment_emoji\')"></i>\n        </span>\n    </div>\n    <input class="insert_img" class="hide" type="file" name="tweetImg" cg-file-upload="insert_image_setting" style="display: none">\n</div>'),
        $templateCache.put("common/directives/feedEditor/tpl/project_tweet.html", '<style>\n    .project-tweet-editor {\n        position: relative;\n        z-index: 99;\n    }\n\n    .project-tweet-editor textarea {\n        display: block;\n        padding: 8px;\n        font-size: 14px;\n        border: 1px solid #ddd;\n        background: #FFF;\n        border-radius: 3px;\n        color: rgba(0, 0, 0, 0.7);\n        outline: none;\n        resize: none;\n        height: 16px;\n        width: 96%;\n    }\n\n    .project-tweet-editor .toolbar {\n        padding-top: 5px;\n    }\n\n    .project-tweet-editor .toolbar ul {\n        float: right;\n    }\n\n    .project-tweet-editor .toolbar ul,\n    .project-tweet-editor .toolbar ul li {\n        list-style: none;\n        padding: 0;\n        margin: 0;\n    }\n    .project-tweet-editor .toolbar > ul > li {\n        float: left;\n        font-size: 16px;\n        margin-right: 5px;\n        cursor: pointer;\n        height: 20px;\n        width: 20px;\n    }\n</style>\n<div class="project-tweet-editor">\n    <div class="editor" ng-init="show_preview = false">\n        <div class="ui inverted dimmer" ng-class="{active:sending}"><i class="loading icon"></i></div>\n        <div ng-transclude ng-style="{\'display\':show_preview?\'none\':\'block\'}">\n        </div>\n        <div class="preview" ng-class="preview_mode" ng-click="togglePreview()" ng-style="{\'display\':show_preview?\'block\':\'none\'}">\n            <div class="markdown content bubble preview-content"></div>\n        </div>\n    </div>\n    <div class="toolbar" style="display: none">\n        <ul>\n            <li title="冒泡预览" class="btn-preview" ng-click="togglePreview()">\n                <i class="ui icon" style="display: inline-block" ng-class="{\'hide\':show_preview,\'unhide\':!show_preview}"></i>\n            </li>\n            <li title="插入代码" class="btn-code" ng-click="insertCode()">\n                <i class="ui code icon"></i>\n            </li>\n            <li title="插入图片" class="btn-photo" ng-click="insertImage()">\n                <i class="ui photo icon" ng-class="{\'loading\': img_uploading, \'photo\': !img_uploading}"></i>\n            </li>\n            <li class="btn-emoji">\n                <cg-emotion2 editor="$textarea" content="$content" on-change="onInsertEmoji" tabs-bottom="{{ tabs_bottom }}" ng-if="!isExpActive(\'tweet_comment_emoji\')"></cg-emotion2>\n                <i class="icon smile" cg-emotion-btn content="$content" on-change="onInsertEmoji" tabs-bottom="{{ tabs_bottom }}" editor="{{feed_context}} [cg-feed-editor-textarea]" ng-if="isExpActive(\'tweet_comment_emoji\')"></i>\n            </li>\n            <li title="发布冒泡" class="btn-submit" ng-click="submit();">\n                <i class="clockwise rotated level down icon" style="margin: 0"></i>\n            </li>\n        </ul>\n    </div>\n    <input class="insert_img" class="hide" type="file" name="tweetImg" cg-file-upload="insert_image_setting" style="display: none">\n</div>'),
        $templateCache.put("common/directives/flash/tpl/flash.html", '<div class="cg flash center" ng-class="{active: messages && messages.length>0}" id="global-flash">\n    <i class="ui close icon" ng-click="removeAll(message);"></i>\n    <div class="outer">\n        <div class="active message {{message.status}}" ng-repeat="message in messages.slice(0,limit)" ng-switch="message.status">\n            <i class="ui smile icon" ng-switch-when="success"></i>\n            <i class="ui frown icon" ng-switch-when="fail"></i>\n            <span ng-click="onMessageClick($event)" ng-bind-html="message.content"></span>\n        </div>\n    </div>\n    <div class="more" ng-if="messages.length>limit" ng-click="showMore(limit);">\n         <i class="ui double angle down icon"></i>More({{messages.length - limit -1}})\n    </div>\n</div>'),
        $templateCache.put("common/directives/gallery/tpl/gallery.html", '<div class="gallery">\n    <a class="close-wrapper" href="javascript:void(0)" ng-click="closeGallery($event)">\n        <i class="icon close"></i>\n    </a>\n    <div class="gallery-wrapper" style="height:100%" ng-click="closeGallery($event)">\n        <div class="gallery-content" cg-prev-and-next="onImageNavChange($event);" cg-esc="onImageCancel()">\n            <a class="prev" href="javascript:void(0)" ng-click="prev($event)" ng-if="gallery_index !== undefined && gallery_index !== 0"><i class="angle left icon"></i></a>\n            <i class="icon loading"></i>\n            <img class="gallery-image" ng-src="{{current_image_url}}">\n            <a class="next" href="javascript:void(0)" ng-click="next($event)" ng-if="gallery_index !== undefined && gallery_index + 1 < links.length"><i class="angle right icon"></i></a>\n            <span class="gallery-origin"><a class="origin-url" ng-href="{{current_image_url}}" target="_blank">查看原图</a></span>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/gitDirectives/diff/tpl/comments.html", '<div class="diff-comments">\n    <h4 class="comment-header" ng-if="!inline && diffComments.length > 0">\n        <span class="count">{{diffComments.length}}</span> 条评论\n    </h4>\n    <div class="comment" ng-class="{inline: inline}" bindonce ng-repeat="item in diffComments" ng-if="isShow(item)">\n        <a name="commit-comment-{{item.id}}" bo-if="item.noteable_type == \'Commit\'"></a>\n        <a name="mr-comment-{{item.id}}" bo-if="item.noteable_type == \'MergeRequestBean\'"></a>\n        <a name="pr-comment-{{item.id}}" bo-if="item.noteable_type == \'PullRequestBean\'"></a>\n        <a bo-href="item.author.path">\n            <img class="ui avatar image" height="32" bo-src="item.author.avatar ">\n        </a>\n        <div class="comment-detail" ng-class="{arrow: !inline}">\n            <div class="content markdown" clip-copy-code="pre" cg-highlight="item.content">\n            </div>\n            <div class="time">\n                <span class="mr10" bo-text="item.author.name"></span>\n                <span class="mr10">\n                    <i class="time icon"></i><span cg-friendly-time="item.created_at"></span>\n                </span>\n                <span class="mr10" ng-if="USER">\n                    <a class="gray reply" ng-click="replyComment(item)" cg-scroll-to scroll-to="#diff-comment-editor{{inline ? position : \'\'}}" offset="70">\n                        <i class="chat outline icon"></i>回复\n                    </a>\n                </span>\n                <span class="mr10">\n                    <a class="gray remove" ng-click="deleteComment(item);" ng-if="USER.id == item.author.id || PROJECT | isRole:OWNER">\n                        <i class="remove icon"></i>删除\n                    </a>\n                </span>\n            </div>\n        </div>\n    </div>\n    <form class="comment form" bindonce ng-class="{inline: inline}" ng-if="USER" ng-show="$parent.showForm">\n        <a bo-href="USER.path" bo-if="!inline">\n            <img class="ui avatar image" height="32" ng-src="{{USER.avatar}}">\n        </a>\n        <div class="comment-detail" ng-class="{arrow: !inline}">\n            <div id="diff-comment-editor{{inline ? position : \'\'}}" editor-id="diff-comment-editor{{inline ? position : \'\'}}" cg-light-md-editor="commentDiff" data-ng-model="commentContent" at-item="atConfig.target" at-context-type="atConfig.type" extra-item="atConfig.extra" project_dependency="PROJECT">\n            </div>\n        </div>\n    </form>\n    <div class="small ui button add-comment" ng-if="USER && inline" ng-hide="$parent.showForm" ng-click="$parent.showCommentForm()">添加评论</div>\n    <div class="small ui button cancel-comment" ng-if="USER && inline" ng-show="$parent.showForm" ng-click="cancelComment()">取消</div>\n</div>'),
        $templateCache.put("common/directives/hoverCard/tpl/hover_card.html", '<div class="user-hover-card ui left pointing dropdown top up" cg-dropdown dropdown-setting="dropdown_settings">\n    <div ng-transclude></div>\n    <div class="menu">\n        <div class="gray loading-wrapper" ng-if="loading"><i class="icon loading"></i>加载中</div>\n        <div class="menu-inner" ng-if="!loading">\n            <div class="card-user-avatar">\n                <a href="javascript:void(0)" class="gray" ng-click="toSpace(card)">\n                    <img bo-src="card.avatar" width="96" height="96" style="border-radius: 48px">\n                </a>\n            </div>\n            <div class="info" bindonce="card">\n                <div class="name-wrapper">\n                    <a href="javascript:void(0)" class="user-name ellipsis" ng-click="toSpace(card)" style="max-width:200px"><span bo-text="card.name"></span></a>\n                    <i class="icon male user-sex" ng-if="card.sex === 0"></i>\n                    <i class="icon female user-sex" ng-if="card.sex === 1"></i>\n                </div>\n                <span class="user-slogan" bo-text="card.slogan"></span>\n                <span class="actions">\n                    <a href="javascript:void(0)" class="ui button small green" ng-if="card.global_key !== USER.global_key && !card.followed" ng-click="follow(card)"><i class="icon loading" ng-if="following"></i>关注</a>\n                    <a href="javascript:void(0)" class="ui down small gray button" ng-if="card.global_key !== USER.global_key && card.followed" ng-click="unfollow(card)"><i class="icon loading" ng-if="unfollowing"></i>取消关注</a>\n                    <a href="javascript:void(0)" class="ui button small" ng-click="showSendMsgDialog(card)">给 TA 私信</a>\n                </span>\n            </div>\n            <div class="content-wrapper">\n                <div class="content"><a href="javascript:void(0)" ng-click="toFriends(card)"><span class="num" bo-text="card.follows_count | friendlyNumber"></span><span>关注</span></a></div>\n                <div class="content center"><a href="javascript:void(0)" ng-click="toFans(card)"><span class="num" bo-text="card.fans_count | friendlyNumber"></span><span>粉丝</span></a></div>\n                <div class="content"><a href="javascript:void(0)" ng-click="toBubble(card)"><span class="num" bo-text="card.tweets_count | friendlyNumber"></span><span>冒泡</span></a></div>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/imageLoading/tpl/img.html", '<div class="empty list center" style="width: 100%; margin-top: 10px">\n    <div ng-if="img_url.length > 0 && img_url !== false">\n        <img ng-src="{{img_url}}" style="max-height: 300px; max-width: 100%">\n    </div>\n    <div ng-if="img_url.length === 0">\n        <i class="loading icon" ng-if="messages.loading"></i>{{messages.loading}}\n    </div>\n    <div ng-if="img_url === -1">\n        <i class="coffee icon" ng-if="messages.empty"></i>{{messages.empty}}\n    </div>\n    <div ng-if="img_url === false">\n        <i class="coffee icon" ng-if="messages.fail"></i>{{messages.fail}}\n    </div>\n</div>'),
        $templateCache.put("common/directives/imagePicker/tpl/file-folders.html", '<div class="image-picker-file-folder">\n    <!-- private project -->\n    <div ng-if="project_id > 0">\n        <ul class="first-level-folder folder-list" ng-if="in_folder === 0">\n            <li class="ellipsis" title="默认文件夹" ng-click="openDefaultFolder($event)">\n                <i class="folder icon"></i>默认文件夹\n            </li>\n            <li class="ellipsis" ng-repeat="folder in current_folders" title="{{ folder.name }}" ng-click="openFolder($event, folder)">\n                <i class="folder icon"></i>{{ folder.name }}\n            </li>\n        </ul>\n        <ul class="second-level-folder folder-list" ng-if="in_folder > 0">\n            <li class="ellipsis folder" ng-class="{\'with-image\': images.length > 0}" ng-repeat="folder in current_folders" title="{{ folder.name }}" ng-click="openFolder($event, folder)">\n                <i class="folder icon"></i>{{ folder.name }}\n            </li>\n            <li class="ellipsis image" ng-class="{selected: image.selected}" title="{{ image.name }}" ng-click="toggleImageSelect(image)" ng-repeat="image in images">\n                <i class="icon green ok sign"></i>\n                <img ng-src="{{ image.preview }}" alt="{{ image.name }}">\n                <p class="ellipsis" ng-bind="image.name"></p>\n            </li>\n        </ul>\n    </div>\n    <!-- public project -->\n    <div ng-if="project_id === null">\n        <ul class="second-level-folder folder-list" ng-if="images.length > 0">\n            <li class="ellipsis image" ng-class="{selected: image.selected}" title="{{ image.name }}" ng-click="toggleImageSelect(image)" ng-repeat="image in images">\n                <i class="icon green ok sign"></i>\n                <img ng-src="{{ image.preview }}" alt="{{ image.name }}">\n                <p class="ellipsis" ng-bind="image.name"></p>\n            </li>\n        </ul>\n        <div cg-image-picker-upload="onImageUpload" size="large" project-id="null" folder-id="null">\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/imagePicker/tpl/image-picker.html", '<div class="ui pointing dropdown image-picker-dropdown" ng-class="mode">\n    <div ng-transclude></div>\n    <div class="menu">\n        <div class="picker-wrapper flex-box flex-direction-column">\n            <header class="flex-none flex-box flex-direction-row" cg-cascade-menu>\n            </header>\n            <article class="flex-auto-justify" cg-perfect-scroll-bar="update_prefect_scroll_bar">\n                <div cg-file-folders project-id="project_id" start-init="start_init" on-folder-change="onFolderChange" on-file-select-toggle="onFileSelectToggle"></div>\n            </article>\n            <footer class="flex-none">\n                <div ng-if="in_folder === 0" cg-url-image-import="onImageImport">\n                </div>\n                <div ng-if="in_folder > 0" cg-image-picker-upload="onImageUpload" project-id="project_id" folder-id="folder_id">\n                </div>\n            </footer>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/imagePicker/tpl/menu.html", '<div class="left flex-none ellipsis">\n    <span ng-if="left && !left.action">\n        <i class="icon" ng-class="left.icon" ng-if="left.icon"></i> <span ng-bind="left.text"></span>\n    </span>\n    <div class="button" ng-click="actionAgent($event, left);" ng-if="left && left.action">\n        <i class="icon" ng-class="left.icon" ng-if="left.icon"></i> <span ng-bind="left.text"></span>\n    </div>\n</div>\n<div class="center flex-auto-justify ellipsis">\n    <span ng-if="center && !center.action">\n        <i class="icon" ng-class="center.icon" ng-if="center.icon"></i> <span ng-bind="center.text"></span>\n    </span>\n    <div class="button" ng-click="actionAgent($event, center);" ng-if="center && center.action">\n        <i class="icon" ng-class="center.icon" ng-if="center.icon"></i> <span ng-bind="center.text"></span>\n    </div>\n</div>\n<div class="right flex-none ellipsis">\n    <span ng-if="right && !right.action">\n        <i class="icon" ng-class="right.icon" ng-if="right.icon"></i> <span ng-bind="right.text"></span>\n    </span>\n    <div class="button" ng-click="actionAgent($event, right);" ng-if="right && right.action">\n        <i class="icon" ng-class="right.icon" ng-if="right.icon"></i> <span ng-bind="right.text"></span>\n    </div>\n</div>'),
        $templateCache.put("common/directives/imagePicker/tpl/upload-image.html", '<div class="image-upload">\n    <form class="ui form" file-upload="upload_setting">\n        <input type="file" name="file" accept="image/*" class="image-upload-input" multiple="multiple" style="display:none">\n        <div class="image-upload-dropzone" ng-class="size" cg-trigger-upload="upload($callback);">\n            <div ng-show="!uploading">\n                <i class="upload cloud icon"></i>\n                <span>\n                    点击或将文件拖拽至此上传！\n                </span>\n            </div>\n            <div ng-show="uploading">\n                <div file-upload-progress="upload_progress">\n                    <i class="loading icon"></i>正在上传（{{num}}%）!\n                </div>\n            </div>\n        </div>\n    </form>\n</div>'),
        $templateCache.put("common/directives/imagePicker/tpl/url-image.html", '<div class="url-image-import">\n    <div class="image-preview" ng-if="url">\n        <div class="image" ng-show="!loading && is_valid_image">\n        </div>\n        <img class="no-pic" src="/static/00675e5d336cf413a91edec4a3525894.png" ng-if="loaded && !is_valid_image">\n        <div class="loading-wrapper" ng-if="loading">\n            <i class="loading icon"></i>正在加载图片...\n        </div>\n    </div>\n    <div class="ui form">\n        <div class="inline field">\n            <label>图片链接：</label>\n            <input type="text" ng-model="url" cg-enter="doImport()" placeholder="请填入需要插入的图片链接">\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/importProjectImage/tpl/import_image.html", '<div class="just-wrapper">\n    <style type="text/css">\n    #project-files-wrapper{position:relative;}\n    #project-files-wrapper .dividing.header{font-size: 22px;padding-top: 10px;padding-left:20px;}\n    #project-folder-list{width:230px;left: 0; top: 0;padding: 20px 0;}\n    #project-folder-list > .vertical.menu{width: auto;max-height: 250px;overflow-y: auto;overflow-x: hidden;}\n    #project-folder-list .folder.item{padding: 12px 20px;margin-bottom: 0;border-radius: 0;font-size: 14px;}\n    #project-folder-list a.item i.icon {float: none;margin: 0 .25em 0 0;}\n    #project-folder-list .folder.item i.action.icon{cursor:pointer;margin:0 0 0 3px;display:none;position: absolute;right: 10px;}\n    #project-folder-list .folder.active.item:hover i.action.icon{display:inline;}\n    #project-folder-list .folder.active.item:hover i.action.edit.icon:hover{color:cornflowerblue;}\n    #project-folder-list .folder > .count{position: absolute; right: 22px; top: 12px;}\n    #project-folder-list .folder.no-default.editing > .count{display:none;}\n    #project-folder-list .folder.sub-folder.item {padding-left: 25px;}\n    #project-folder-list .sep{width: 100%;height: 1px;background: #CCC;visibility: visible;margin: 20px 0;}\n    #project-file-list{padding: 20px 0 0 0;height: 100%;width:auto;border-left: 1px solid #CCC;margin-left: 230px;position: relative;}\n    #project-file-list .just-wrapper{margin: 30px;}\n    #project-file-list .file-icon.img,\n    #project-file-list .file > .uploading-file{width: 80px;height: 80px;margin: 0 10px 10px 0;}\n    #project-file-list .file > .ui.image{cursor: pointer;border-radius: 0;border:1px solid #F7F6F2;width: 80px;height: 80px;float: left;margin: 0 10px 10px 0;}\n    #project-file-list .file > .ui.image .file-icon{width: 80px; height: 80px;line-height: 80px;}\n    #project-file-list .file > .ui.image.selected{border:1px solid #D95C5C;}\n    .folder-image-list{max-height: 280px;overflow-y: auto;}\n    #import-image-dropzone{font-size: 14px;text-align:center;margin-bottom: 20px;\n        border: 2px dashed #ccc;height: 70px;border-radius: 15px;line-height: 70px;cursor: pointer;}\n    </style>\n    <div class="ui grid">\n        <div id="project-files-wrapper" class="equal height row">\n            <div id="project-folder-list" class="column">\n                <div class="ui secondary vertical menu">\n                    <a ng-show="!PROJECT.is_public" class="folder item" href="javascript:void(0);" ng-click="openFolder(0, $event);" ng-class="{active: folder_id == 0}">\n                        <i class="folder icon" ng-class="{open: folder_id == 0}"></i>默认文件夹<span class="count">({{default_folder_count || 0}})</span>\n                    </a>\n                    <div ng-repeat-start="folder in folders"></div>\n                    <a ng-show="!PROJECT.is_public" class="folder item no-default" href="javascript:void(0);" ng-class="{active: folder_id == folder.file_id}" ng-click="openFolder(folder, $event);" title="{{folder.name}}">\n                        <span class="ellipsis" style="width: 140px;display: inline-block">\n                            <i class="folder icon" ng-class="{open: folder_id == folder.file_id}"></i><span ng-bind-html="folder.name"></span>\n                        </span>\n                        <span class="count">({{folder.count || 0}})</span>\n                    </a>\n                    <a ng-show="!PROJECT.is_public" class="sub-folder folder item no-default" href="javascript:void(0);" ng-repeat="sfolder in folder.sub_folders" ng-class="{active: folder_id == sfolder.file_id}" ng-click="openFolder(sfolder, $event);" title="{{sfolder.name}}">\n                        <span class="ellipsis" style="width: 140px;display: inline-block">\n                            <i class="folder icon" ng-class="{open: folder_id == sfolder.file_id}"></i><span ng-bind-html="sfolder.name"></span>\n                        </span>\n                        <span class="count">({{sfolder.count || 0}})</span>\n                    </a>\n                    <div ng-repeat-end></div>\n                </div>\n                <div class="ui secondary vertical menu">\n                    <div ng-show="!PROJECT.is_public" class="sep"></div>\n                    <a ng-show="PROJECT.is_public" class="folder item" style="cursor: pointer" ng-click="changeImportType(\'folder\');" ng-class="{active: import_type === \'folder\'}">\n                        <span class="coding floated left"><i class="photo icon"></i></span>上传图片\n                    </a>\n                    <a class="folder item" style="cursor: pointer" ng-click="changeImportType(\'url\');" ng-class="{active: import_type === \'url\'}">\n                        <span class="coding floated left"><i class="url icon"></i></span>插入图片 URL\n                    </a>\n                </div>\n            </div>\n            <div id="project-file-list" class="column">\n                <div class="ui dividing header">\n                    <span ng-show="!PROJECT.is_public && import_type === \'folder\'">从文档插入图片</span>\n                    <span ng-show="PROJECT.is_public && import_type === \'folder\'">上传图片</span>\n                    <span ng-show="import_type === \'url\'">插入图片 URL</span>\n                </div>\n                <div class="just-wrapper" ng-show="import_type === \'folder\'">\n                    <form file-upload="importImageUploadSetting">\n                        <input type="file" name="file" id="import-image-input" style="display:none">\n                        <div id="import-image-dropzone" ng-click="upload();">\n                            <div ng-show="!uploading">\n                                <i class="upload cloud icon"></i>\n                                <span ng-if="!PROJECT.is_public">\n                                    <span ng-show="files.length==0">还未上传任何文件，</span>点击或将文件拖拽至此上传！\n                                </span>\n                                <span ng-if="PROJECT.is_public">\n                                    <span ng-if="upload_image_url.length > 0">重新上传</span>\n                                    <span ng-if="upload_image_url.length === 0">还未上传任何文件，点击或将文件拖拽至此上传！</span>\n                                </span>\n                            </div>\n                            <div ng-show="uploading">\n                                <div file-upload-progress="upload_progress">\n                                    <i class="loading icon"></i>正在上传（{{num}}%）!\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                    <div ng-show="!PROJECT.is_public" class="files clearfix folder-image-list">\n                        <div class="file" ng-repeat="file in files">\n                            <div class="ui image" ng-class="{selected: !!file.selected}" ng-click="addSelectedImage(file);">\n                              <span class="ui right red corner label" ng-show="!!file.selected">\n                                <i class="checkmark icon"></i>\n                              </span>\n                              <div cg-file-icon-src="file.preview" cg-file-icon="file.fileType"></div>\n                            </div>\n                        </div>\n                    </div>\n                    <div ng-show="PROJECT.is_public">\n                        <div ng-show="upload_image_url.length>0" cg-image-loading="upload_image_url" message="upload_image_messages"></div>\n                    </div>\n                    <div class="center" cg-pager="{{insert_image_pager_id}}" disabled-url-change="true"></div>\n                </div>\n                <div class="just-wrapper ui large fluid input" ng-show="import_type === \'url\'">\n                    <input type="text" id="image_url_input" ng-model="image_url" placeholder="http://">\n                    <div class="preview">\n                        <div cg-image-loading="image_url" message="defalut_messages"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n<div></div></div>'),
        $templateCache.put("common/directives/linkTips/tpl/tips.html", '<a class="link-tips" ng-repeat="tip in tips" ng-href="{{tip.url}}" ng-attr-target="{{tip.type == \'outer\' ? \'_blank\' : \'_self\'}}" class="gray" ng-switch="tip.type">\n    <i ng-switch-when="inner" class="green url icon" title="站内链接: {{tip.url}}"></i>\n    <i ng-switch-when="outer" class="gray url icon" title="站外链接: {{tip.url}}"></i>\n    <i ng-switch-when="attachment" class="green archive icon" title="项目附件: {{tip.url}}"></i>\n</a>'),
        $templateCache.put("common/directives/loadMore/tpl/load_more.html", '<div>\n    {{load_more_id}}\n    <div class="center empty list">\n        <i class="loading icon"></i>正在加载数据...\n    </div>\n    <div class="center empty list">\n        <i class="coffee icon"></i>没有更多数据了~\n    </div>\n    <a class="center down more" ng-href="javascript:void(0);">\n        加载更多数据\n    </a>\n</div>'),
        $templateCache.put("common/directives/loading/tpl/loading.html", '<div class="common-loading-container">\n    <div style="">\n        <div class="common-loading common-coding icon monkey" ng-style="loadingStyle" style="width: 46px; height: 46px">\n            <div class="common-loading-text" ng-style="loadingTextStyle" style="width: 46px; height: 46px; line-height: 46px">\n                <img src="/static/9025e7ebf3f2073858a74b2a2e6245a4.png" width="{{imageSize}}" height="{{imageSize}}">\n            </div>\n        </div>\n\n    </div>\n</div>'),
        $templateCache.put("common/directives/markdown/tpl/insert_image_modal.html", '<div class="ui tiny40 responsive modal" id="insert_image_lmd_modal">\n    <i class="close icon"></i>\n    <div class="header">插入图片</div>\n    <div class="content" style="padding: 0 1.2em">\n        <div cg-insert-image="insertImages($images);" project-dependency="PROJECT" style="height: 100%"></div>\n    </div>\n    <div class="actions">\n        <div class="ui cancel button">取消</div>\n        <div class="ui dark gray ok button">确认</div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/markdown/tpl/light.html", '<div class="light-md-editor">\n    <div class="editor" ng-class="{previewed: previewed}">\n        <div class="ui inverted dimmer" ng-class="{active: sending || previewing}"><i class="loading icon"></i></div>\n        <input type="file" style="display: none" name="tweetImg" cg-file-upload="light_md_upload_setting">\n        <textarea class="editor" tabindex="{{ tab_index || 1000 }}" bindonce="placeholder" bo-attr ng-model="content" msd-elastic="\\n" cg-ctrl-enter="sendContent(content);" cg-at-emoji cg-at-context at-item="at_item" extra-item="extra_item" at-context-type="at_context_type" cg-refer-resource="project_dependency" cg-placeholder="{{placeholder}}" cg-textarea-editable></textarea>\n        <div class="preview" ng-class="{active: previewed}" ng-click="togglePreview();" title="单击继续编辑">\n            <div class="markdown content">\n            </div>\n            <div class="empty" ng-if="showEmptyInfo();">\n                <i class="coffee icon"></i>没有可预览的内容！\n            </div>\n        </div>\n    </div>\n    <div class="playground">\n    </div>\n    <div class="toolbar">\n\n        <i class="icon help" data-html="<div class=\'content\'>Markdown 是一种轻量级标记语言，目标是实现「易读易写」。例如在文本前面加上一个 # 即可渲染成一级标题。<br/><a href=\'https://coding.net/help/doc/project/markdown.html\' target=\'_blank\' >更多 Markdown 语法帮助<i class=\'icon double angle right\'></i></a></div>" cg-help-popup=""></i>\n        <ul>\n            <li ng-if="loading"><i class="loading icon"></i></li>\n\n            <li><i class="icon" ng-class="{unhide: !previewed, hide: previewed}" ng-click="togglePreview();"></i></li>\n            <li><i class="code icon" ng-click="insertCode();"></i></li>\n            <li ng-if="!mode">\n                <span cg-project-image-picker dropdown-mode="dropdownMode()" project-id="project_id" image-select-done="imageSelectDone">\n                    <i class="photo icon" ng-if="!img_uploading"></i>\n                    <i class="loading icon" ng-if="img_uploading"></i>\n                </span>\n            </li>\n            <!--<li><i class="smile icon"></i></li>-->\n            <li ng-if="showEnterButton()"><i class="clockwise rotated level down icon" ng-click="sendContent(content);"></i></li>\n        </ul>\n    </div>\n</div>'),
        $templateCache.put("common/directives/marketing/tpl/marketing-new-year.html", '<div id="new-year-banner" ng-if="banners.large.ad && banners.min.ad">\n    <style>\n        @media only screen and (max-width: 2560px) and (min-width: 1601px) {\n            #new-year-banner {\n                width: 1200px !important;\n            }\n\n            #new-year-banner .banner {\n                height: 367px !important;\n            }\n\n            #new-year-banner .banner.expending {\n                margin-top: -255px !important;\n            }\n\n            #new-year-banner .banner.min {\n                height: 367px;\n                margin-top: -255px !important;\n            }\n        }\n\n        #new-year-banner {\n            position: relative;\n            overflow: hidden;\n            width: 980px;\n            margin: 0 auto;\n            cursor: pointer;\n        }\n\n        #new-year-banner .banner {\n            position: relative;\n            height: 300px;\n            background-repeat: no-repeat;\n            background-size: 100%;\n            webkit-transition: margin-top .6s cubic-bezier(0, 1.05, 1, 1.16);\n            -o-transition: margin-top .6s cubic-bezier(0, 1.05, 1, 1.16);\n            transition: margin-top .6s cubic-bezier(0, 1.05, 1, 1.16);\n        }\n\n        #new-year-banner .banner.expending {\n            /*webkit-transition: margin-top 1s ease-out;*/\n            /*-o-transition: margin-top 1s ease-out;*/\n            /*transition: margin-top 1s ease-out;*/\n            webkit-transition: margin-top .6s cubic-bezier(0, 1.05, 1, 1.16);\n            -o-transition: margin-top .6s cubic-bezier(0, 1.05, 1, 1.16);\n            transition: margin-top .6s cubic-bezier(0, 1.05, 1, 1.16);\n            margin-top: -200px;\n        }\n\n        #new-year-banner .banner.min {\n            position: relative;\n            height: 300px;\n            background-repeat: no-repeat;\n            background-size: 100%;\n            background-position: bottom;\n            webkit-transition: margin-top .6s cubic-bezier(0, 1.05, 1, 1.16);\n            -o-transition: margin-top .6s cubic-bezier(0, 1.05, 1, 1.16);\n            transition: margin-top .6s cubic-bezier(0, 1.05, 1, 1.16);\n            margin-top: -200px;\n        }\n\n        #new-year-banner .expend {\n            position: absolute;\n            right: 0;\n            top: 0;\n            width: 20px;\n            font-size: 12px;\n            color: #FFF;\n            background: #f66f48;\n            text-align: center;\n            cursor: pointer;\n            z-index: 100;\n            padding: 5px 0px;\n        }\n\n        #new-year-banner .expend .icon {\n            font-size: 14px;\n            display: block;\n            margin: 0 auto;\n        }\n    </style>\n    <div class="expend" data-ng-click="expand()">\n        <label ng-if="largeShow">展开</label><i class="angle double down icon" ng-if="largeShow"></i>\n        <label ng-if="!largeShow">收起</label><i class="angle double up icon" ng-if="!largeShow"></i>\n    </div>\n    <a ng-href="{{banners.large.ad.link}}">\n        <div class="banner" style="background-image:url(\'{{minShow?banners.min.ad.image:banners.large.ad.image}}\')" ng-class="{\'expending\':largeShow,\'min\':minShow}">\n\n        </div>\n    </a>\n</div>'),
        $templateCache.put("common/directives/marketing/tpl/marketing-snow.html", '<div ng-if="open">\n    <canvas cg-make-snow class="snow-canvas" speed="1" interaction="false" size="2" count="80" opacity="0.00001" start-color="rgba(253,252,251,1)" end-color="rgba(251,252,253,0.3)" wind-power="0" image="false"></canvas>\n    <canvas cg-make-snow class="snow-canvas" speed="3" interaction="true" size="6" count="30" start-color="rgba(253,252,251,1)" end-color="rgba(251,252,253,0.3)" opacity="0.00001" wind-power="2" image="false"></canvas>\n    <canvas cg-make-snow class="snow-canvas" speed="3" interaction="true" size="12" count="20" wind-power="-5" image="https://dn-coding-net-production-static.qbox.me/48d375ae-c0c3-4cc6-845c-11bb9ab0543b.png"></canvas>\n</div>'),
        $templateCache.put("common/directives/pagedown/tpl/help_modal.html", '<i class="close icon"></i>\n<div class="content">\n    <table>\n        <tr>\n            <td><i class="photo icon"></i>图片</td>\n            <td>![描述](example.jpg)</td>\n            <td><span cg-cmd-ctr></span> + G</td>\n        </tr>\n        <tr>\n            <td><i class="url icon"></i>链接</td>\n            <td>[描述](https://coding.net)</td>\n            <td><span cg-cmd-ctr></span> + L</td>\n        </tr>\n        <tr>\n            <td><i class="bold icon" style="margin-right: 0"></i>/<i class="italic icon"></i>强调</td>\n            <td>*斜体* 和 **粗体**</td>\n            <td><span cg-cmd-ctr></span> + B 和 <span cg-cmd-ctr></span> + I</td>\n        </tr>\n        <tr>\n            <td><i class="heading icon"></i>标题</td>\n            <td># 一级标题 <br> ## 二级标题 <br>...<br> ##### 五级标题</td>\n            <td><span cg-cmd-ctr></span> + H</td>\n        </tr>\n        <tr>\n            <td><i class="quote left icon"></i>引用</td>\n            <td>&gt; 一级引用 <br> &gt;&gt; 二级引用</td>\n            <td><span cg-cmd-ctr></span> + Q</td>\n        </tr>\n        <tr>\n            <td><i class="ordered list icon"></i>列表</td>\n            <td>\n                <div class="wrapper">\n                    <div class="left">\n                        1. 有序列表1 <br>\n                        2. 有序列表2 <br>\n                        3. 有序列表3\n                    </div>\n                    <div class="right">\n                        - 无序列表1 <br>\n                        - 无序列表2 <br>\n                        - 无序列表3\n                    </div>\n                </div>\n            </td>\n            <td><span cg-cmd-ctr></span> + O 和 <span cg-cmd-ctr></span> + U</td>\n        </tr>\n        <tr>\n            <td><i class="code icon"></i>代码</td>\n            <td>\n                <div class="wrapper">\n                    <div class="left">\n                        行内代码：<br>\n                        `var a = 1;`<br>\n                    </div>\n                    <div class="right">\n                        代码块：<br>```ruby<br>print \'Hello Coding\'<br>```\n                    </div>\n                </div>\n            </td>\n            <td><span cg-cmd-ctr></span> + K</td>\n        </tr>\n        <tr>\n            <td><i class="table icon"></i>表格</td>\n            <td>\n                <pre>First Header | Second Header | Third Header\n:----------- | :-----------: | -----------:\n Left        |     Center    |       Right</pre>\n             </td>\n            <td></td>\n        </tr>\n    </table>\n</div>'),
        $templateCache.put("common/directives/pagedown/tpl/insert_link_modal.html", '<div class="ui tiny40 modal" id="insert_link_modal">\n    <i class="close icon"></i>\n    <div class="header">插入链接</div>\n    <div class="content">\n        <div class="ui medium input fluid">\n            <input type="text" ng-model="link" placeholder="https://" cg-enter="insertNow();">\n        </div>\n    </div>\n    <div class="actions">\n        <div class="ui cancel button">取消</div>\n        <div class="ui dark gray ok button">确认</div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/pagedown/tpl/pagedown.html", '<div class="wmd-panel pagedown" ng-class="{\'full-screen\': button.full_screen}" bindonce="id" cg-page-scroll="false">\n    <div bo-id="\'wmd-button-bar\' + id">\n        <div class="extend-wmd-button" style="right: 15px" ng-click="toggleHelpModal();">\n            <i class="icon help"></i>\n        </div>\n        <div class="extend-wmd-button" title="{{ button.previewing ? \'关闭预览\' : \'预览\'}}" style="right: 45px" ng-click="togglePreview();">\n            <i class="icon" ng-class="{unhide: !button.previewing, hide: button.previewing}"></i>\n        </div>\n        <div class="extend-wmd-button" title="{{ button.full_screen ? \'退出全屏\' : \'全屏\'}}" style="right: 75px" ng-click="toggleFullscreen();">\n            <i class="icon resize" ng-class="{\'full\': !button.full_screen, \'small\': button.full_screen}"></i>\n        </div>\n        <div class="pagedown-toc-dropdown extend-wmd-button ui icon dropdown top right pointing" title="目录树" style="right: 105px; padding-top: .1em">\n             <i ng-click="updateToc()" class="icon list layout" ng-class="{\'full\': !button.full_screen, \'small\': button.full_screen}"></i>\n            <div class="menu">\n                <div class="title">目录树</div>\n                <div class="markdown-toc"></div>\n            </div>\n        </div>\n    </div>\n    <div bo-id="\'pagedown-editor\' + id" class="pagedown-editor" ng-class="{preview: button.previewing}">\n        <div ng-transclude style="height: 100%; width: 100%; display: inline-block"></div>\n        <div bo-id="\'wmd-preview\' + id" class="pagedown-preview markdown content"></div>\n    </div>\n    <input class="insert_img" ng-show="false" type="file" name="tweetImg" cg-file-upload="insert_image_setting">\n    <div class="ui modal pagedown-help-modal" cg-modal="pagedown_help_modal" ng-include="\'common/directives/pagedown/tpl/help_modal.html\'">\n    </div>\n</div>'),
        $templateCache.put("common/directives/pager/tpl/pager.html", '<div class="cg pagination" ng-if="pager_pages.length>0" onselectstart="return false">\n    <a class="page" ng-class="{active: current_page == page, prev: page == \'<\', next: page == \'>\'}" ng-repeat="page in pager_pages track by $index" ng-click="gotoPage(page);" title="{{page}}">\n        <i class="left arrow icon" ng-if="page === \'<\'"></i>\n        <span ng-if="isPageNumber(page)">{{page}}</span>\n        <i class="icon" ng-if="page === \'~\'">..</i>\n        <i class="icon right arrow" ng-if="page === \'>\'"></i>\n    </a>\n</div>'),
        $templateCache.put("common/directives/partnerLink/tpl/partnerLink.html", '<section class="partners" ng-if="partners.length >0">\n    <div class="title">\n        <span>合作伙伴</span>\n    </div>\n    <div class="wrapper">\n        <span class="partner" ng-repeat="partner in partners">\n            <a ng-href="{{partner.link}}" target="_blank">\n                <img ng-src="{{partner.logo}}" alt="{{partner.name}}">\n            </a>\n        </span>\n    </div>\n</section>'),
        $templateCache.put("common/directives/projectActivities/tpl/CommitLineNote.html", '<div class="action">\n    <a bo-href="activity.user.path" bo-text="activity.user.name"></a>\n    <span bo-text="activity.action_msg"></span>\n    项目 <a bo-href="activity.project.path" bo-text="activity.project.full_name"></a> 的\n    <span ng-switch="activity.line_note.noteable_type">\n        <span ng-switch-when="Commit">提交</span>\n        <span ng-switch-when="MergeRequestBean">Merge Request</span>\n        <span ng-switch-when="PullRequestBean">Pull Request</span>\n    </span>\n    <a bo-href="activity.line_note.noteable_url" bo-text="activity.line_note.noteable_title | limitTo: 30"></a>\n</div>\n<div class="target">\n    <a class="gray" bo-if="isComment(activity)" bo-href="lineNoteUrlWithAnchor(activity)">\n        <i class="icon comment"></i>\n        <span bo-text="commentToText(activity.line_note.content, true) | limitTo: 100"></span>\n    </a>\n</div>'),
        $templateCache.put("common/directives/projectActivities/tpl/Depot.html", '<div class="action" bo-if="activity.action === \'push\'">\n    <a bo-href="activity.user.path" bo-text="activity.user.name"></a>\n    <span bo-text="activity.action_msg"></span>\n    <span bo-if="showProject"> <a bo-href="activity.depot.path" bo-text="activity.depot.name"></a> 的</span>\n    项目\n    <span bo-if="activity.ref_type == \'branch\'">分支</span>\n    <span bo-if="activity.ref_type == \'tag\'">标签</span>：\n    <a bo-if="activity.push_type != \'delete\'" bo-href="activity.ref_path" bo-text="activity.ref"></a>\n    <span bo-if="activity.push_type == \'delete\'">{{activity.ref}} [{{activity.old_sha | shortCommitId}}]</span>\n</div>\n<div class="action" bo-if="activity.action === \'fork\'">\n    <a bo-href="activity.user.path" bo-text="activity.user.name"></a>\n    <span bo-text="activity.action_msg"></span>\n    项目\n    <a bo-href="activity.source_depot.path" bo-text="activity.source_depot.name"></a>\n    到\n    <a bo-href="activity.depot.path" bo-text="activity.depot.name"></a>\n</div>\n<div class="target">\n    <p bindonce="activity.commits" ng-repeat="commit in activity.commits">\n        <i class="icon code"></i>\n        <a bo-href="commit.committer.link" bo-text="commit.committer.name"></a> :\n        <a bo-href="shaPath(activity, commit)" bo-text="\'[\' + shortSha(commit) + \']\'"></a>\n        <a class="gray" bo-href="shaPath(activity, commit)" bo-text="commit.short_message"></a>\n    </p>\n</div>'),
        $templateCache.put("common/directives/projectActivities/tpl/Empty.html", "<p>\n    Unresolved Project Activity {{type()}} - {{activity.action}}\n</p>"),
        $templateCache.put("common/directives/projectActivities/tpl/MergeRequestBean.html", '<div class="action">\n    <a bo-href="activity.user.path" bo-text="activity.user.name"></a>\n    <span bo-text="activity.action_msg"></span>\n    项目\n    <a bo-href="activity.depot.path" bo-text="activity.depot.name"></a>\n    中的 Merge Request\n</div>\n<div class="target">\n    <i class="icon coding merge-request"></i>\n    <a bo-href="activity.merge_request_path" bo-text="activity.merge_request_title"></a>\n</div>'),
        $templateCache.put("common/directives/projectActivities/tpl/MergeRequestComment.html", '<div class="action">\n    <a bo-href="activity.user.path" bo-text="activity.user.name"></a>\n    <span bo-text="activity.action_msg"></span>\n    项目\n    <a bo-href="activity.depot.path" bo-text="activity.depot.name"></a>\n    中的 Merge Request\n    <a bo-href="activity.merge_request_path" bo-text="activity.merge_request_title"></a>\n</div>\n<div class="target">\n    <a class="gray" bo-href="activity.merge_request_path">\n        <i class="icon comment"></i>\n        <span bo-html="commentToText(activity.comment_content, true) | limitTo: 100"></span>\n    </a>\n</div>'),
        $templateCache.put("common/directives/projectActivities/tpl/Project.html", '<div class="action" ng-if="activity.action !== \'transfer\'">\n    <a bo-href="activity.user.path" bo-text="activity.user.name"></a>\n    <span bo-text="activity.action_msg"></span>\n    项目\n</div>\n<div class="action" ng-if="activity.action === \'transfer\'">\n    <a bo-href="activity.user.path" bo-text="activity.user.name"></a>\n    <span>将项目 <a bo-href="activity.project.path" bo-text="activity.project.full_name"></a></span>\n    <span bo-text="activity.action_msg"></span>\n    <a bo-href="activity.target_user.path" bo-text="activity.target_user.name"></a>\n</div>\n<div class="target">\n    <i class="coding project icon"></i>\n    <a bo-href="activity.project.path">\n        <span bo-text="activity.project.full_name"></span>\n    </a>\n</div>'),
        $templateCache.put("common/directives/projectActivities/tpl/ProjectFile.html", '<div class="action">\n    <a bo-href="activity.user.path" bo-text="activity.user.name"></a>\n    <span bo-if="showProject"> 在项目 <a bo-href="activity.project.path" bo-text="activity.project.full_name"></a> 中</span>\n    <span bo-text="activity.action_msg"></span>\n    <span bo-text="fileType(activity)"></span>\n</div>\n<div class="target" ng-repeat="file in activity.files track by $index">\n    <a ng-show="activity.up || $index < 3" class="gray" bo-href="filePath(activity, file)">\n        <i class="icon" bo-class="{file: !isFolder(activity), \'open folder\': isFolder(activity)}"></i>\n        <span bo-text="file.name"></span>\n    </a>\n</div>\n<a ng-if="activity.files.length > 3" ng-click="activity.up = !activity.up;" ng-class="{down: !activity.up, up: activity.up}" style="display: inline-block; width 100px; text-align: center; margin-top: 10px" class="more" href="javascript:void(0);">{{activity.up ? \'收起\' : \'更多\'}}</a>'),
        $templateCache.put("common/directives/projectActivities/tpl/ProjectFileComment.html", '<div class="action">\n    <a bo-href="activity.user.path" bo-text="activity.user.name"></a>\n    <span bo-if="showProject"> 在项目 <a bo-href="activity.project.path" bo-text="activity.project.full_name"></a> 中</span>\n    <span bo-text="activity.action_msg"></span>\n    文件 <a class="target" style="max-width:160px;display:inline-block;vertical-align:bottom;color:#2D59A2" bo-href="activity.projectFile.path"><span bo-text="activity.projectFile.title | htmlToPlainText"></span></a> 的评论\n</div>\n<div class="target">\n    <a class="gray" bo-href="activity.projectFile.path">\n        <i class="comment icon"></i>\n        <span bo-text="commentToText(activity.projectFileComment.content, true)"></span>\n    </a>\n</div>'),
        $templateCache.put("common/directives/projectActivities/tpl/ProjectMember.html", '<div class="action">\n    <!-- 退出项目 -->\n    <a bo-if="isQuit(activity)" bo-href="activity.target_user.path" bo-text="activity.target_user.name"></a>\n    <!-- 增减成员 -->\n    <a bo-if="!isQuit(activity)" bo-href="activity.user.path" bo-text="activity.user.name"></a>\n    <span bo-if="showProject && !isQuit(activity)"> 在项目 <a bo-href="activity.project.path" bo-text="activity.project.full_name"></a> 中</span>\n    <span bo-text="activity.action_msg"></span>\n    <!-- 退出项目 -->\n    <span bo-if="showProject && isQuit(activity)">\n        <a bo-href="activity.project.path" bo-text="activity.project.full_name"></a>\n    </span>\n    <span bo-if="isQuit(activity)">项目</span>\n    <!-- 增减成员 -->\n    <span bo-if="!isQuit(activity)">项目成员</span>\n</div>\n<div class="target" ng-repeat="target_user in activity.target_users">\n    <!-- 退出项目 -->\n    <a class="gray" bo-href="activity.project.path" bo-if="isQuit(activity)">\n        <i class="coding project icon"></i>\n        <span bo-text="activity.project.full_name"></span>\n    </a>\n    <!-- 增减成员 -->\n    <a ng-show="activity.up || $index < 3" class="gray" bo-href="target_user.path" bo-if="!isQuit(activity)">\n        <i class="icon users"></i>\n        <span bo-text="target_user.name"></span>\n    </a>\n</div>\n<a ng-if="activity.files.length > 3" ng-click="activity.up = !activity.up;" ng-class="{down: !activity.up, up: activity.up}" style="display: inline-block; width 100px; text-align: center; margin-top: 10px" class="more" href="javascript:void(0);">{{activity.up ? \'收起\' : \'更多\'}}</a>'),
        $templateCache.put("common/directives/projectActivities/tpl/ProjectStar.html", '<div class="action">\n    <a bo-href="activity.user.path" bo-text="activity.user.name"></a>\n    <span bo-text="activity.action_msg"></span>\n    项目\n    <a bo-href="activity.project.path" bo-text="activity.project.full_name"></a>\n</div>\n<div class="target">\n    <a class="gray" bo-href="activity.project.path">\n        <i class="icon star"></i>\n        <span bo-text="activity.project.full_name"></span>\n    </a>\n</div>'),
        $templateCache.put("common/directives/projectActivities/tpl/ProjectTopic.html", '<div class="action">\n    <a bo-href="activity.user.path" bo-text="activity.user.name"></a>\n    <span bo-if="showProject">在项目 <a bo-href="activity.project.path" bo-text="activity.project.full_name"></a> 中</span>\n    <span bo-text="activity.action_msg" bo-if="activity.action !== \'add_watcher\' && activity.action !== \'remove_watcher\'"></span>\n    {{activity.action === \'add_watcher\' ? \'添加了\' : \'\'}}\n    {{activity.action === \'remove_watcher\' ? \'删除了\' : \'\'}}\n    讨论\n    <a bo-if="isComment(activity)" bo-href="topicPath(activity)" bo-text="topicTitle(activity)"></a>\n    <span bo-if="activity.action === \'add_watcher\' || activity.action === \'remove_watcher\'">\n        <a bo-href="topicPath(activity)" bo-text="topicTitle(activity)"></a>\n        的关注者\n    </span>\n</div>\n<div class="target" bo-if="activity.action !== \'add_watcher\' && activity.action !== \'remove_watcher\'">\n    <!-- 非评论显示讨论标题 -->\n    <a class="gray" bo-if="!isComment(activity)" bo-href="topicPath(activity)">\n        <i class="icon chat"></i>\n        <span bo-text="topicTitle(activity)"></span>\n    </a>\n    <!-- 评论显示评论内容 -->\n    <a class="gray" bo-if="isComment(activity)" bo-href="topicPath(activity)">\n        <i class="icon comment"></i>\n        <span bo-text="topicContent(activity) | limitTo: 100"></span>\n    </a>\n</div>\n\n<!--添加删除关注者-->\n<div class="target" bo-if="activity.action === \'add_watcher\' || activity.action === \'remove_watcher\'">\n    <div ng-repeat="watcher in activity.watchers" style="margin-top: 10px">\n        <a class="gray" bo-href="watcher.path">\n            <i class="icon users"></i>\n            <span bo-text="watcher.name"></span>\n        </a>\n    </div>\n</div>'),
        $templateCache.put("common/directives/projectActivities/tpl/ProjectWatcher.html", '<div class="action">\n    <a bo-href="activity.user.path" bo-text="activity.user.name"></a>\n    <span bo-text="activity.action_msg"></span>\n    项目\n    <a bo-href="activity.project.path" bo-text="activity.project.full_name"></a>\n</div>\n<div class="target">\n    <a class="gray" bo-href="activity.project.path">\n        <i class="icon unhide"></i>\n        <span bo-text="activity.project.full_name"></span>\n    </a>\n</div>'),
        $templateCache.put("common/directives/projectActivities/tpl/PullRequestBean.html", '<div class="action">\n    <a bo-href="activity.user.path" bo-text="activity.user.name"></a>\n    <span bo-text="activity.action_msg"></span>\n    项目\n    <a bo-href="activity.depot.path" bo-text="activity.depot.name"></a>\n    中的 Pull Request\n</div>\n<div class="target">\n    <i class="icon coding pull-request"></i>\n    <a bo-href="activity.pull_request_path" bo-text="activity.pull_request_title"></a>\n</div>'),
        $templateCache.put("common/directives/projectActivities/tpl/PullRequestComment.html", '<div class="action">\n    <a bo-href="activity.user.path" bo-text="activity.user.name"></a>\n    <span bo-text="activity.action_msg"></span>\n    项目\n    <a bo-href="activity.depot.path" bo-text="activity.depot.name"></a>\n    中的 Pull Request\n    <a bo-href="activity.pull_request_path" bo-text="activity.pull_request_title"></a>\n</div>\n<div class="target">\n    <a class="gray" bo-href="activity.pull_request_path">\n        <i class="icon comment"></i>\n        <span bo-text="commentToText(activity.comment_content, true) | limitTo: 100"></span>\n    </a>\n</div>'),
        $templateCache.put("common/directives/projectActivities/tpl/QcTask.html", '<div class="action">\n    <a bo-href="activity.user.path" bo-text="activity.user.name"></a>\n    <span bo-text="activity.action_msg"></span>\n    项目\n    <a bo-href="activity.project.path" bo-text="\'[\' + activity.project.full_name + \']\'"></a>\n    的质量分析任务\n</div>\n<div class="target">\n    <i class="icon certificate"></i>\n    <span bo-html="activity.qc_task.link"></span>\n</div>'),
        $templateCache.put("common/directives/projectActivities/tpl/Task.html", '<div class="action">\n    <a bo-href="activity.user.path" bo-text="activity.user.name"></a>\n    <span bo-if="showProject">在项目 <a bo-href="activity.project.path" bo-text="activity.project.full_name"></a> 中</span>\n\n    <!-- 更新优先级 -->\n    <span bo-if="activity.action === \'update_priority\'">\n        更新了任务的优先级\n    </span>\n\n    <!-- 更新 deadline -->\n    <span bo-if="activity.action === \'update_deadline\'" bo-bind="deadlineMsg(activity.task.deadline)">\n    </span>\n\n    <!-- 更新 description -->\n    <span bo-if="activity.action === \'update_description\'">\n        更新了任务\n        <a bo-href="activity.task.path"><span bo-text="activity.task.title | htmlToPlainText | limitTo: 20"></span></a>\n        的描述\n    </span>\n\n    <!-- 更新标签 -->\n    <span bo-if="activity.action === \'update_label\'">\n        更新了任务\n        <a bo-href="activity.task.path"><span bo-text="activity.task.title | htmlToPlainText | limitTo: 20"></span></a>\n        的标签\n    </span>\n\n    <!-- 更新、完成 -->\n    <span bo-if="activity.action !== \'update_priority\' &&\n                 activity.action !== \'update_deadline\' &&\n                 activity.action !== \'update_description\' &&\n                 activity.action !== \'commit_refer\' &&\n                 activity.action !== \'update_label\' &&\n                 activity.action !== \'add_watcher\' &&\n                 activity.action !== \'remove_watcher\'">\n        <span bo-text="activity.action_msg"></span>\n        <span bo-if="activity.origin_task.owner">\n            <a bo-href="activity.origin_task.owner.path" bo-text="activity.origin_task.owner.name"></a>\n            的\n        </span>\n        任务\n    </span>\n\n    <!-- 重新指派 -->\n    <span bo-if="activity.action === \'reassign\'">\n        给 <a bo-href="activity.task.owner.path" bo-text="activity.task.owner.name"></a>\n    </span>\n\n    <span bo-if="activity.action === \'commit_refer\'">\n        提交了代码\n        <a bo-href="commitLink(activity)">{{activity.commit.sha | shortCommitId:7}}</a>\n        提到了任务\n    </span>\n\n    <span bo-if="activity.action === \'add_watcher\' || activity.action === \'remove_watcher\'">\n        {{activity.action === \'add_watcher\' ? \'添加了任务\' : \'删除了任务\'}}\n        <a bo-href="activity.task.path">{{activity.task.title}}</a>\n        的关注者\n    </span>\n</div>\n<div class="target">\n    <a class="gray" bo-href="activity.task.path" bo-if="activity.action !== \'add_watcher\' && activity.action !== \'remove_watcher\'">\n        <span bo-if="activity.action !== \'update_priority\' &&\n                     activity.action !== \'update_deadline\' &&\n                     activity.action !== \'update_description\'">\n            <i class="tasks icon"></i>\n            <span bo-text="activity.task.title | htmlToPlainText | limitTo: 100"></span>\n        </span>\n        <span bo-if="activity.action === \'update_priority\'">\n            <span cg-task-urgency-head priority="activity.task.priority" class="project-activity-urgency"></span>\n            <span bo-text="\'[\' + priorities[activity.task.priority] + \']\'"></span>\n            <span bo-text="activity.task.title | htmlToPlainText | limitTo: 100"></span>\n        </span>\n        <span bo-if="activity.action === \'update_deadline\'">\n            <i class="calendar icon"></i>\n            <span bo-text="parseDeadline(activity.task.deadline)"></span>\n            <span bo-text="activity.task.title | htmlToPlainText | limitTo: 100"></span>\n        </span>\n        <span bo-if="activity.action === \'update_description\'">\n            <i class="align right rotate180 icon activity-icon"></i>\n            <span bo-html="commentToText(activity.task.description)"></span>\n        </span>\n    </a>\n    <div bo-if="activity.action === \'add_watcher\' || activity.action === \'remove_watcher\'">\n        <div ng-repeat="watcher in activity.watchers" style="margin-top: 10px">\n            <a class="gray" bo-href="watcher.path">\n                <i class="icon users"></i>\n                <span bo-text="watcher.name"></span>\n            </a>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/projectActivities/tpl/TaskComment.html", '<div class="action">\n    <a bo-href="activity.user.path" bo-text="activity.user.name"></a>\n    <span bo-if="showProject">在项目 <a bo-href="activity.project.path" bo-text="activity.project.full_name"></a> 中</span>\n    <span bo-text="activity.action_msg"></span>\n    任务 <a class="target" style="max-width:160px;display:inline-block;vertical-align:bottom;color:#2D59A2" bo-href="activity.task.path"><span bo-text="activity.task.title | htmlToPlainText"></span></a> 的评论\n</div>\n<div class="target">\n    <a class="gray" bo-href="activity.project.path + \'/task/\' + activity.task.id">\n        <i class="comment icon"></i>\n        <span bo-text="commentToText(activity.taskComment.content, true)"></span>\n    </a>\n</div>'),
        $templateCache.put("common/directives/projectActivities/tpl/activity.html", '<div>\n    <div bindonce="activity" class="timeline">\n        <div class="time" bo-bind="activity.created_at | amDateFormat:\'HH:mm\'"></div>\n    </div>\n    <div bindonce="activity" class="avatar">\n        <a bo-href="activity.user.path">\n            <img alt="loading..." width="32" height="32" class="ui circular image" bo-title="activity.user.name" bo-src="activity.user.avatar ">\n        </a>\n    </div>\n    <div class="content" bindonce="activity" ng-include="\'common/directives/projectActivities/tpl/\' + resolve(type()) + \'.html\'">\n    </div>\n</div>'),
        $templateCache.put("common/directives/projectActivities/tpl/timeline.html", '<div bindonce ng-repeat="date in activities_of_date.timeline track by $index" ng-init="$outerIndex = $index;">\n    <div ng-repeat-start="activity in activities_of_date.activities[date] track by $index"></div>\n    <div bo-if="activity.user" ng-init="makeCount(activity)">\n        <!-- 时间轴 日期+星期 大标题（2014-8-9 周六） -->\n        <div class="start-date" bo-if="$first" bo-title="timelineDate(activity)">\n            <span bo-if="isToday(activity.created_at)">今天（</span><span bo-text="timelineDate(activity)"></span><span bo-if="isToday(activity.created_at)">）</span>\n        </div>\n        <!-- 单个动态 -->\n        <div class="activity" cg-project-activity="activity" show-project="showProject" ng-class="{\'not-bordered\': $last || showUnreadSeparator(activity)}" type="activity.target_type">\n        </div>\n        <!-- 未读分隔 -->\n        <div class="update-divide-line ui horizontal divider" ng-if="showUnreadSeparator(activity)">\n            <i class="ui time icon"></i>\n        </div>\n    </div>\n    <div ng-repeat-end></div>\n</div>'),
        $templateCache.put("common/directives/projectGroup/tpl/group.html", '<ul class="project-group clearfix" ng-class="{editable: editable}">\n\n    <li class="item loading" ng-if="loading">\n        <a class="gray"><i class="loading icon"></i>加载项目中...</a>\n    </li>\n\n    <!-- project group -->\n    <li class="{{\'project-group-\' + group.id}}" ng-repeat="group in groups track by $index" ng-class="{group: itemsInGroup(group).length > 0, open: group.open}" ng-show="itemsInGroup(group).length > 0" ng-click="toggleGroup($event, group);" cg-not-click="closeGroup($event, group)" not-click-when="group.open" not-click-class="{{\'.project-group-\' + group.id}}, {{\'.project-group-\' + group.id}} *">\n\n        <!-- message tip -->\n        <i class="message-tip" ng-show="groupUnreadCount(group)" ng-bind="groupUnreadCount(group)"></i>\n\n        <!-- default -->\n        <div ng-show="!group.open">\n            <ul class="items clearfix">\n                <li ng-repeat="item in itemsInGroup(group) track by $index" ng-click="toggleProjectSelect($event, group, item);">\n                    <img ng-src="{{item.icon}}" title="{{item.owner_user_name + \'/\' + item.name}}" width="100%" height="100%">\n                    <i class="triangle up green icon" ng-show="item.selected"></i>\n                    <!-- pin -->\n                    <div class="in-group pin-project-cover static active" ng-show="item.pin && !pinDisabled">\n                        <i class="pin icon static"></i>\n                    </div>\n\n                </li>\n            </ul>\n            <div class="title icon"><span class="name" ng-bind="group.name"></span></div>\n        </div>\n\n        <!-- group open -->\n        <div class="placeholder" ng-show="group.open">\n            <div class="items"></div>\n            <div class="title" ng-bind="groupName(group, itemsInGroup(group));"></div>\n        </div>\n        <div class="items-wrapper" ng-show="group.open" style="box-shadow: 0 0 20px rgba(0, 0, 0, 0.19)">\n            <ul class="items clearfix">\n                <li ng-repeat="item in itemsInGroup(group) track by $index" ng-click="toggleProjectSelect($event, group, item);" tabindex="{{$index+100}}">\n                    <a class="group-logo-wrapper" ng-href="{{projectPath(item)}}">\n                        <img ng-src="{{item.icon}}" title="{{item.owner_user_name + \'/\' + item.name}}">\n\n                        <!-- pin -->\n                        <div class="pin-project-cover open-group" ng-class="{\'active\': item.pin}" ng-show="!pinDisabled">\n                            <i class="pin icon" title="{{pinTitle(item)}}" ng-click="pin($event, item);"></i>\n                        </div>\n                    </a>\n\n                    <div class="title icon ellipsis-2" title="{{item.owner_user_name + \'/\' + item.name}}" ng-class="{public: item.is_public}"><span class="name" ng-bind="item.owner_user_name + \'/\' + item.name"></span></div>\n                    <div class="ui corner green label" ng-show="item.selected">\n                        <i class="checkmark icon"></i>\n                    </div>\n                    <div class="ui corner label" ng-show="!item.selected">\n                        <i class="checkmark icon"></i>\n                    </div>\n                    <i class="message-tip" ng-show="item.un_read_activities_count && !item.selected" ng-bind="item.un_read_activities_count"></i>\n                </li>\n            </ul>\n            <div class="title" ng-click="editTitle($event, group)" ng-init="group.copy_name = group.name;">\n                <div class="group-name-input" ng-class="{active: group.editing}">\n                    <input type="text" cg-auto-focus="group.editing" select-text="group.editing" cg-textarea-editable ng-model="group.copy_name" ng-blur="checkGroupName(group.copy_name, group);" cg-enter="updateGroupName(group.copy_name, group)">\n                </div>\n                <i class="loading icon" ng-show="updating_name"></i>\n            </div>\n        </div>\n    </li>\n\n    <!-- normal project item -->\n    <li class="item projects-item" ng-repeat="item in noGroupItems() track by $index" ng-click="toggleProjectSelect($event, null, item)" tabindex="{{$index+100}}" ng-focus="listItemFocus()" cg-enter="enterItem($event)">\n        <a ng-href="{{projectPath(item)}}">\n            <div class="logo-wrapper">\n                <img class="logo" ng-src="{{item.icon}}" title="{{item.owner_user_name + \'/\' + item.name}}">\n\n                <!-- pin -->\n                <div class="pin-project-cover" ng-class="{\'active\': item.pin}">\n                    <i class="pin icon" title="{{pinTitle(item)}}" ng-click="pin($event, item);" ng-if="!pinDisabled"></i>\n                </div>\n\n            </div>\n\n            <div class="title icon" ng-class="{public: item.is_public}">\n                <span style="display: block;color: #2D59A2" ng-if="item.deploy_memory" ng-bind="\'( \' + item.deploy_memory + \'M )\'"></span>\n                <span class="name" ng-bind="item.owner_user_name + \'/\' + item.name"></span>\n            </div>\n            <div class="ui corner green label" ng-show="item.selected">\n                <i class="checkmark icon"></i>\n            </div>\n            <div class="ui corner label" ng-show="!item.selected">\n                <i class="checkmark icon"></i>\n            </div>\n            <i class="message-tip" ng-show="item.un_read_activities_count && !item.selected" ng-bind="item.un_read_activities_count"></i>\n        </a>\n\n        <!--解除项目归档-->\n        <div class="projects-item-archiver" ng-if="cgProjectArchiverEnable" ng-click="unarchive(item.id)" title="解除归档">\n            <i class="ui icon unlock"></i>\n        </div>\n    </li>\n    <li class="item" ng-transclude>\n\n    </li>\n</ul>'),
        $templateCache.put("common/directives/qcDirectives/tpl/qc-analysis-result.html", '<div class="container">\n    <div ng-if="(PROJECT | qcPermissionUserFilter) && task">\n        <p class="no-qc-report" ng-if="task.task.status==0">正在为您努力排队中...请耐心等候\n        </p>\n\n        <p class="no-qc-report" ng-if="task.task.status==1">正在为您努力分析中...请耐心等候，如果长时间未分析完毕，请删除分析任务之后,点击<a ng-href="{{PROJECT.project_path}}/qc/task/init" title="创建分析"><i class="icon add"></i></a>重新提交任务！\n        </p>\n\n        <p class="no-qc-report" ng-if="task.task.status==2">您的分析任务已经失败，可能是某些参数配置不正确，请调整好参数之后,点击 <a ng-href="{{PROJECT.project_path}}/qc/task/init" title="创建分析"><i class="icon add"></i></a>重新提交任务！\n        </p>\n    </div>\n    <div ng-if="!task">\n        <p class="no-qc-report">\n            无分析报告\n            <span ng-if="PROJECT | qcPermissionUserFilter">,请点击\n                <a ng-href="{{PROJECT.project_path}}/qc/task/init" title="创建分析"><i class="icon add"></i></a>添加\n            </span>\n        </p>\n    </div>\n</div>'),
        $templateCache.put("common/directives/qcDirectives/tpl/qc-code-dashboard.html", '<div class="box dashboard" ng-class="{\'qc-auto-height\':!dashboard_loading && dashboard}">\n    <cg-qc-loading loading="dashboard_loading" no-data="!dashboard || dashboard.length <= 0" text="无法加载概要信息"></cg-qc-loading>\n    <div ng-if="!dashboard_loading && dashboard">\n        <div class="ui vertically divided grid">\n            <div class="one column row">\n                <p class="title"><i class="reorder icon"></i>大小指标：</p>\n\n                <div class="ui vertically divided grid">\n                    <div class="three column row">\n                        <div class="column">\n                            <ul>\n                                <li><span>总行数：</span>\n                                    <span class="value" ng-if="dashboard">{{dashboard.lines.formatValue || 0}}</span>\n                                    <i class="loading icon" ng-if="!dashboard"></i>\n                                </li>\n                                <li><span>有效代码行数：</span>\n                                    <span class="value" ng-if="dashboard">{{dashboard.ncloc.formatValue || 0}}</span>\n                                    <i class="loading icon" ng-if="!dashboard"></i>\n                                </li>\n                            </ul>\n                        </div>\n                        <div class="column">\n                            <ul>\n                                <li><span>语句：</span>\n                                    <span class="value" ng-if="dashboard">{{dashboard.classes.formatValue || 0}}</span>\n                                    <i class="loading icon" ng-if="!dashboard"></i>\n                                </li>\n                                <li><span>类：</span>\n                                    <span class="value" ng-if="dashboard">{{dashboard.packages.formatValue || 0}}</span>\n                                    <i class="loading icon" ng-if="!dashboard"></i>\n                                </li>\n                            </ul>\n                        </div>\n                        <div class="column">\n                            <ul>\n                                <li>\n                                    <span>方法：</span>\n                                    <span class="value" ng-if="dashboard">{{dashboard.functions.formatValue || 0}}</span>\n                                    <i class="loading icon" ng-if="!dashboard"></i>\n                                </li>\n                                <li>\n                                    <span>存取：</span>\n                                    <span class="value" ng-if="dashboard">{{dashboard.accessors.formatValue || 0}}</span>\n                                    <i class="loading icon" ng-if="!dashboard"></i>\n                                </li>\n                            </ul>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n            <div class="one column row">\n                <div class="column">\n                    <p class="title">\n                        <i class="reorder icon"></i>复杂度：</p>\n\n                    <div class="content">\n                        <ul>\n                            <ul>\n                                <li>\n                                    <span>复杂度：</span>\n                                    <span class="value" ng-if="dashboard">{{dashboard.complexity.formatValue || 0}}</span>\n                                    <i class="loading icon" ng-if="!dashboard"></i>\n                                </li>\n                                <li>\n                                    <span>方法均值：</span>\n                                    <span class="value" ng-if="dashboard">{{dashboard.function_complexity.formatValue || 0}}</span>\n                                    <i class="loading icon" ng-if="!dashboard"></i>\n                                </li>\n                            </ul>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <div class="one column row">\n                <div class="column">\n                    <p class="title"><i class="reorder icon"></i>注释：</p>\n\n                    <div class="content">\n                        <ul>\n                            <li>\n                                <span>注释（%）：</span>\n                                <span class="value" ng-if="dashboard">{{dashboard.comment_lines_density.formatValue}}</span>\n                                <i class="loading icon" ng-if="!dashboard"></i>\n                            </li>\n                            <li>\n                                <span>注释行：</span>\n                                <span class="value" ng-if="dashboard">{{dashboard.comment_lines.formatValue || 0}}</span>\n                                <i class="loading icon" ng-if="!dashboard"></i>\n                            </li>\n                            <li>\n                                <span>公共API注释率（%）：</span>\n                                <span class="value" ng-if="dashboard">{{dashboard.public_documented_api_density.formatValue}}</span>\n                                <i class="loading icon" ng-if="!dashboard"></i>\n                            </li>\n                            <li>\n                                <span>公共API：</span>\n                                <span class="value" ng-if="dashboard">{{dashboard.public_api.formatValue || 0}}</span>\n                                <i class="loading icon" ng-if="!dashboard"></i>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <div class="one column row">\n                <div class="column">\n                    <p class="title"><i class="reorder icon"></i>违反规则：</p>\n\n                    <div class="content">\n                        <ul>\n                            <li>\n                                <i class="red ban circle icon"></i>阻断：\n                                <span class="value" ng-if="dashboard">{{dashboard.blocker_violations.formatValue|| 0}}</span>\n                                <i class="loading icon" ng-if="!dashboard"></i>\n                            </li>\n                            <li>\n                                <i class="red frown icon"></i>严重：\n                                <span class="value" ng-if="dashboard">{{dashboard.critical_violations.formatValue|| 0}}</span>\n                                <i class="loading icon" ng-if="!dashboard"></i>\n                            </li>\n                            <li><i class="green attention icon"></i>主要：\n                                <span class="value" ng-if="dashboard">{{dashboard.major_violations.formatValue || 0}}</span>\n                                <i class="loading icon" ng-if="!dashboard"></i>\n                            </li>\n                            <li><i class="gray exclamation icon"></i>次要：\n                                <span class="value" ng-if="dashboard">{{dashboard.minor_violations.formatValue || 0}}</span>\n                                <i class="loading icon" ng-if="!dashboard"></i>\n                            </li>\n                            <li><i class="info icon"></i>提示：\n                                <span class="value" ng-if="dashboard">{{dashboard.info_violations.formatValue || 0}}</span>\n                                <i class="loading icon" ng-if="!dashboard"></i>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <div class="one column row">\n                <div class="column">\n                    <p class="title"><i class="reorder icon"></i>重复：</p>\n\n                    <div class="content">\n                        <ul>\n                            <li>\n                                重复行：<span class="value" ng-if="dashboard" ng-if="dashboard">{{dashboard.duplicated_lines.formatValue||0}}</span>\n                                <i class="loading icon" ng-if="!dashboard"></i>\n                            </li>\n                            <li>\n                                重复块：<span class="value" ng-if="dashboard">{{dashboard.duplicated_blocks.formatValue||0}}</span>\n                                <i class="loading icon" ng-if="!dashboard"></i>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/qcDirectives/tpl/qc-code.html", '<div class="eleven wide column" ng-class="{full:code_full}">\n    <h4 class="ui black block header tiny">\n                        <span style="position: relative">\n                        <span style="margin-right: .6em" ng-click="changeTab(\'issue\')" ng-if="type==\'issue\'">问题代码</span>\n                        <span style="margin-right: .6em" ng-click="changeTab(\'duplication\')" ng-if="type==\'duplication\'">重复行</span>\n                        <span class="ui vertical divider" ng-style="{\'display\':code_full?\'none\':\'inline-block\'}"></span>\n                        <span style="margin-left:.9em" ng-click="changeTab(\'dashboard\')" ng-style="{\'display\':code_full?\'none\':\'inline-block\'}">概要</span>\n                        </span>\n        <span ng-if="filename.length > 0" class="filename"><i class="icon file"></i>{{filename}}</span>\n        <i class="icon" ng-click="code_full=!code_full" ng-model="code_full" ng-init="code_full=false" ng-class="{fullscreen:!code_full,remove:code_full}" ng-style="{\'display\':code_type==\'dashboard\'?\'none\':\'inline-block\'}"></i>\n    </h4>\n    <cg-qc-issue-code username="{{username}}" project-name="{{project_name}}" resource-key="resource_key" current-ref="current_ref" current-type="current_type" current-rule="current_rule" current-file="current_file" current-folder="current_folder" current-lang="current_lang" type="issues" ng-style="{\'display\':code_type==\'issue\'?\'block\':\'none\'}" ng-if="type==\'issue\'"></cg-qc-issue-code>\n    <cg-qc-code-dashboard username="{{username}}" project-name="{{project_name}}" resource-key="resource_key" current-ref="{{current_ref}}" current-file="current_file" ng-style="{\'display\':code_type==\'dashboard\'?\'block\':\'none\'}"></cg-qc-code-dashboard>\n    <cg-qc-duplications-code username="{{username}}" project-name="{{project_name}}" resource-key="resource_key" current-ref="current_ref" current-type="current_type" current-rule="current_rule" current-file="current_file" current-folder="current_folder" current-lang="current_lang" type="issues" once="true" ng-style="{\'display\':code_type==\'duplication\'?\'block\':\'none\'}" ng-if="type==\'duplication\'"></cg-qc-duplications-code>\n</div>'),
        $templateCache.put("common/directives/qcDirectives/tpl/qc-folders.html", '<div class="five wide column" ng-class="{hide:code_full}">\n    <h4 class="ui black block header tiny">\n        {{title}}\n    </h4>\n\n\n    <div class="box folder">\n        <div class="ui link list" ng-if="folders.length > 0 " ng-model="current_folder">\n            <div ng-repeat="folder in folders">\n                <a class="item" ng-click="changeFolder(folder)" ng-class="{active:folder.key == current_folder}" data-key="{{folder.key}}" title="{{folder.name}}">\n                    <label class="num">{{folder.formatValue}}</label>\n                    <i class="folder icon" ng-class="{open:folder.key == current_folder}" ng-if="!loading_file || folder.key != current_folder"></i>\n                    <i class="loading icon" ng-if="loading_file && folder.key == current_folder "></i>\n                    <span class="folder-name">{{folder.name}}</span>\n                </a>\n                <i id="folder_anchor" ng-if="current_folder==folder.key"></i>\n\n                <div class="ui link list files" ng-if="current_folder==folder.key">\n                    <a class="item" ng-repeat="file in files" ng-click="changeFile(file)" ng-class="{active:file.key == current_file}" data-folder="{{folder.key}}" data-file="{{file.key}}" title="{{file.name}}">\n                        <label class="num">{{file.value}}</label>\n                        <i class="file icon"></i>\n                        <span class="file-name">{{file.name}}</span>\n                    </a>\n                </div>\n            </div>\n        </div>\n        <cg-qc-loading text="没有符合条件的文件" loading="folder_loading" no-data="!folders || folders.length <= 0"></cg-qc-loading>\n    </div>\n</div>'),
        $templateCache.put("common/directives/qcDirectives/tpl/qc-issue-code.html", '<div class="box code">\n    <cg-qc-loading text="没有问题代码数据，请选择左侧列表查看！" loading="loading_issue" no-data="!issue || issue.length <= 0"></cg-qc-loading>\n    <div class="code-snippet">\n        <pre style="white-space: normal">\n            <code class="{{issue.language}}">\n                <div ng-repeat="line in issue.lines" style="white-space: normal">\n                    <div class="line" ng-class="{highlighted:line.issues && line.issues.length > 0}">\n                        <span class="line-number">{{line.num > 0 ? line.num :\'\' }}</span>\n                        <span class="line-code" ng-bind-html="line.source.html || \'&nbsp;\'"></span>\n                    </div>\n                    <div class="issues-rule" ng-if="line.issues && line.issues.length > 0" ng-repeat="issue in line.issues">\n                        <div class="header" ng-click="issue.open = !issue.open">\n                            <i class="red ban circle icon" ng-if="issue.severity == \'BLOCKER\'"></i>\n                            <i class="red frown icon" ng-if="issue.severity == \'CRITICAL\'"></i>\n                            <i class="green attention icon" ng-if="issue.severity == \'MAJOR\'"></i>\n                            <i class="gray exclamation icon" ng-if="issue.severity == \'MINOR\'"></i>\n                            <i class="info icon" ng-if="issue.severity == \'INFO\'"></i>\n                            <a href="javascript:void(0);">{{issue.rule.name}}</a>\n                            <i class="triangle icon" ng-class="issue.open ? \'up\' : \'down\'"></i>\n                        </div>\n                        <div class="content" ng-class="{hidden:!issue.open}" ng-bind-html="issue.rule.desc">\n                        </div>\n                        <div class="footer">{{issue.message}}</div>\n                    </div>\n                </div>\n            </code>\n        </pre>\n    </div>\n</div>'),
        $templateCache.put("common/directives/qcDirectives/tpl/qc-loading.html", '<div style="height: 100%" ng-if="loading || noData">\n    <cg-monkey-loading image-size="20" container-margin="0" circle-padding="10" ng-if="loading"></cg-monkey-loading>\n    <div class="no-qc-data" ng-if="noData && !loading" style="display:table;text-align:center;font-size: 12px;color:#555;line-height:200%;height: 100%;width: 100%">\n        <p style="display: table-cell;\n        height: 100%;\n        vertical-align: middle">{{text}}</p>\n    </div>\n</div>'),
        $templateCache.put("common/directives/qcDirectives/tpl/qc-rules.html", '<section class="min-w">\n    <div class="issues filter">\n        <h4 class="ui black block header tiny">\n            问题筛选\n        </h4>\n\n        <div class="issues-box">\n            <div class="ui grid">\n                <div class="three wide column">\n                    <div class="ui vertical pointing fluid small menu issues-type-menu">\n                        <a class="item" ng-class="{active:current_type==metric.key}" index="{{metric.index}}" ng-repeat=" val in metrics_sort " ng-init="metric = metrics[val]" ng-click="changeViolation(metric)">\n                            <span>\n                                <i class="{{metric.icon}}"></i>\n                                {{metric.name}}\n                                <i class="help icon" data-title="{{metric.name}}" data-content="{{metric.intro}}"></i>\n                            </span>\n                            <label style="float: right">\n                                <span ng-if="!loading_issues">{{issues[metric.violation].value || 0}}</span>\n                                <i class="loading icon" ng-if="loading_issues"></i>\n                            </label>\n                        </a>\n                    </div>\n                </div>\n                <div class="thirteen wide column">\n                    <div class="ui vertical fluid small menu issues-type-list">\n                        <cg-qc-loading loading="loading_rule" no-data="!rules || rules.length <= 0" text="没有符合条件的规则"></cg-qc-loading>\n                        <a class="item" ng-class="{active:item.key==current_rule}" ng-repeat="item in rules" rule-key="{{item.key}}" current-rule="{{current_rule}}" ng-click="changeRule(item)" ng-if="rules.length > 0">\n                                <span>\n                                <i class="red ban circle icon" ng-if="item.type == \'BLOCKER\'"></i>\n                                <i class="red frown icon" ng-if="item.type == \'CRITICAL\'"></i>\n                                <i class="green attention icon" ng-if="item.type == \'MAJOR\'"></i>\n                                <i class="gray exclamation icon" ng-if="item.type == \'MINOR\'"></i>\n                                <i class="info icon" ng-if="item.type == \'INFO\'"></i></span>\n                            <span class="value">{{item.name}}</span>\n                            <span class="num">{{item.value}}</span>\n                        </a>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>'),
        $templateCache.put("common/directives/qcDirectives/tpl/qc-task-info.html", '<div class="qc-code-info">\n    <div class="tabular ui menu qc-tabular min-w">\n        <a class="item" ng-href="{{PROJECT.project_path}}/qc/dashboard{{current_ref?\'/\'+current_ref:\'\'}}" ng-class="{active:inner_menu == \'qc_dashboard\'}">\n            <i class="basic pie chart icon"></i>概要\n        </a>\n        <a class="item" ng-href="{{PROJECT.project_path}}/qc/issues{{current_ref?\'/\'+current_ref:\'\'}}" ng-class="{active:inner_menu == \'qc_issues\'}">\n            <i class="bug icon"></i>问题代码\n        </a>\n        <a class="item" ng-href="{{PROJECT.project_path}}/qc/duplications{{current_ref?\'/\'+current_ref:\'\'}}" ng-class="{active:inner_menu == \'qc_duplications\'}">\n            <i class="repeat icon"></i>重复代码\n        </a>\n\n        <div class="item qc-commit-info" ng-if="task">\n            <strong><a href="{{PROJECT.project_path}}/git/commit/{{task.commit.commitId}}" title="{{task.task.ref}}"><span class="name">{{task.task.ref | qcShortVersionFilter}}</span></a></strong>\n            <a href="{{task.commit.committer.link}}"><img class="gravatar" height="16" width="16" ng-src="{{task.commit.committer.avatar}}" title="{{task.commit.committer.name}}"></a><span class="ago">提交于</span><span class="ago" cg-friendly-time="task.commit.commitTime"></span>\n            <span class="info" ng-if="task" title="{{task.commit.shortMessage}}">{{ task.commit.shortMessage |qcShortTextFilter:15}}</span>\n        </div>\n    </div>\n    <p></p>\n</div>'),
        $templateCache.put("common/directives/qcDirectives/tpl/qc-versions.html", '<div class="ui secondary vertical menu active" id="inner-menu" ng-class="{\'fixed\':!PROJECT.is_public,\'qc-inner-menu\':PROJECT.is_public}">\n    <header class="header item">\n        质量管理 <i class="icon help tip" style="cursor: pointer;float: inherit;margin: 0px!important" data-html="<div class=\'content\'>质量管理功能能够对 git 仓库中的代码进行静态的检测和分析，以判断其是否符合最佳实践，并提供质量分析报告，为相关管理成员提供项目决策及管理参考。<br/><a href=\'/help/doc/git/qc.html\' target=\'_blank\'>更多帮助<i class=\'icon double angle right\'></i></a></div>" cg-help-popup=""></i>\n        <a ng-href="{{PROJECT.project_path}}/qc/task/init" ng-if="PROJECT | qcPermissionUserFilter" title="创建分析"><i class="add icon"></i></a>\n        <article>\n            检测您的代码、为您提供质量报告\n        </article>\n        <article>\n            <i class="icon stop ready"></i>排队中\n            <i class="icon stop finish"></i>已完成<br>\n            <i class="icon stop running"></i>分析中\n            <i class="icon stop failed"></i>已失败<br>\n        </article>\n    </header>\n    <div class="sep"></div>\n    <div class="qc-versions">\n        <a class="item" ng-href="{{PROJECT.project_path}}/qc/dashboard{{task.task.ref?\'/\'+task.task.ref:\'\'}}" ng-repeat="task in tasks" ng-class="{active:current_ref == task.task.ref}">\n            <i class="icon close" ng-if="PROJECT | qcPermissionUserFilter" ng-click="deleteFailedTask(task.task.id)"></i>\n            <i class="icon stop" ng-class="{ready:task.task.status==0,running:task.task.status==1,failed:task.task.status==2,finish:task.task.status==3}"></i>\n            <img ng-src="{{task.creator.avatar}}" alt="{{task.creator.name}}" title="{{task.creator.name}}">\n            <span title="{{task | qcTaskDetailFilter}}">{{task.task.version | qcShortVersionFilter}}</span>\n        </a>\n\n        <div class="item">\n            <div cg-pager="{{pager_id}}" class="center"></div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/qcDirectives/tpl/qc_duplications_code.html", "<div class=\"box duplications\">\n    <div ng-init=\"current_show={}\" ng-style=\"{'border-top': duplications ?'none':'1px solid #ccc','height':duplications ?'initial':'400px'}\">\n" + '        <cg-qc-loading text="没有重复代码数据，请选择左侧列表查看！" loading="loading_duplications" no-data="!duplications || duplications.length <= 0"></cg-qc-loading>\n        <div ng-repeat="group in duplications.duplications" class="duplication-group">\n            <ul class="duplications groups">\n                <li class="group filename" ng-repeat="dfile in group" ng-class="{active:dfile.show}" ng-click="dfile.show = !dfile.show">\n                    <span class="filename" title="{{dfile.path}}">\n                        <i class="file icon"></i>\n                        {{dfile.name}}&nbsp; (从{{dfile.start}}行开始&nbsp;,&nbsp;共{{dfile.lines}}行重复)\n                    </span>\n                </li>\n            </ul>\n            <ul class="duplications group code">\n                <li class="group code" ng-repeat="file in group">\n                    <div class="box code" ng-if="file.show">\n                        <cg-monkey-loading image-size="30" container-margin="120" ng-if="code_loading"></cg-monkey-loading>\n                        <div class="code-snippet">\n                        <pre style="white-space: normal">\n                            <code class="{{duplications.language}}">\n                                <div ng-repeat="line in file.html" style="white-space: normal">\n                                    <div class="line">\n                                        <span class="line-number">{{line.num > 0 ? line.num :\'\' }}</span>\n                                        <span class="line-code" ng-bind-html="line.html || \'&nbsp;\'"></span>\n                                    </div>\n                                </div>\n                            </code>\n                        </pre>\n                        </div>\n                    </div>\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/resource/tpl/resource_modal.html", '<div class="ui tiny modal refer-resource-modal" bindonce="id" bo-id="id">\n    <i class="close icon"></i>\n\n    <div class="content">\n        <div class="ui labeled action input fluid">\n            <div class="ui label refer-resource-label">\n                <span ng-bind="project.owner_user_name + \'/\' + project.name"></span>\n            </div>\n            <input type="text" class="refer-resource-input" ng-model="key" cg-tab-circle="tab_circle_callback" cg-up-down-circle="max_count" on-index-change="onIndexChange($index)" cg-enter="chooseResource(null, $event)" ng-blur="cur_index = -1;" ng-focus="cur_index = cur_index || 0;">\n            <a class="ui dark gray button" ng-click="search()">搜索</a>\n        </div>\n        <div class="ui small tabular menu">\n            <a class="item" ng-if="!project.is_public" ng-class="{active: resource_type === \'Task\'}" ng-click="changeResourceType(\'Task\')">\n                <i class="tasks icon"></i>任务\n            </a>\n            <a class="item" ng-class="{active: resource_type === \'ProjectTopic\'}" ng-click="changeResourceType(\'ProjectTopic\')">\n                <i class="chat icon"></i>讨论\n            </a>\n            <a class="item" ng-class="{active: resource_type === \'ProjectFile\'}" ng-click="changeResourceType(\'ProjectFile\')">\n                <i class="archive icon"></i>文档\n            </a>\n            <a class="item" ng-if="!project.is_public" ng-class="{active: resource_type === \'MergeRequestBean\'}" ng-click="changeResourceType(\'MergeRequestBean\')">\n                <i class="coding merge-request icon"></i>Merge Request\n            </a>\n            <a class="item" ng-if="project.is_public" ng-class="{active: resource_type === \'PullRequestBean\'}" ng-click="changeResourceType(\'PullRequestBean\')">\n                <i class="coding pull-request icon"></i>Pull Request\n            </a>\n        </div>\n        <div class="resource-list">\n            <ul ng-if="loaded && resources.length > 0">\n                <li class="refer-resource-item ellipsis" bindonce ng-class="{\'cur\': cur_index === $index}" ng-repeat="resource in resources" ng-click="chooseResource(resource);">\n                    <span class="number" bo-text="\'#\' + resource.code"></span>\n                    <span class="title" bo-text="resource.title"></span>\n                </li>\n            </ul>\n            <div class="center empty list" style="margin: 100px 20px" ng-if="resources.length === 0">\n                <div ng-if="loading">\n                    <i class="loading icon"></i>正在加载数据...\n                </div>\n                <div ng-if="loaded">\n                    <i class="coffee icon"></i>没有找到匹配数据...\n                </div>\n            </div>\n            <div class="center empty list">\n                <div cg-pager="{{pager_id}}"></div>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/resourceReferenceList/tpl/resourceReferenceList.html", '<div class="task-resource-reference" ng-show="showResourceReferences">\n    <div class="icon">\n        <i class="pin basic icon"></i>\n    </div>\n    <div class="detail">\n        <div class="title">\n            关联资源\n            <i class="attention icon" data-html="\n                <p style=\'margin: 0;\'>关联资源整合了在评论中提到的其他与本任务相关的任务，\n                讨论，文档，合并请求等资源。任务执行者可以通过编辑关联资源，\n                对列表进行删除。也可以通过在评论里引用新的资源，对\n                本列表进行添加。</p>" data-position="bottom right" cg-popup></i>\n            <span class="toggle-show">\n                <input type="checkbox" checked="checked" ng-model="showList" id="toggle-show-refer">\n                <label for="toggle-show-refer">显示资源</label>\n            </span>\n        </div>\n        <div class="item-group" ng-if="resourceReference.Task && resourceReference.Task.length > 0 && showList">\n            <div class="item" ng-repeat="task in resourceReference.Task">\n                <a ng-href="{{task.link}}" target="_blank">\n                    <i class="tasks icon"></i>\n                    #{{task.code}} {{task.title}}\n                </a>\n                <div class="left">\n                    <i class="remove icon red" ng-click="delReference(task)"></i>\n                </div>\n            </div>\n        </div>\n        <div class="item-group" ng-if="resourceReference.ProjectTopic && resourceReference.ProjectTopic.length > 0 && showList">\n            <div class="item" ng-repeat="topic in resourceReference.ProjectTopic">\n                <a ng-href="{{topic.link}}" target="_blank">\n                    <i class="chat icon"></i>\n                    #{{topic.code}} {{topic.title}}\n                </a>\n                <div class="left">\n                    <i class="remove icon red" ng-click="delReference(topic)"></i>\n                </div>\n            </div>\n        </div>\n        <div class="item-group" ng-if="resourceReference.ProjectFile && resourceReference.ProjectFile.length > 0 && showList">\n            <div class="item" ng-repeat="file in resourceReference.ProjectFile">\n                <a ng-href="{{file.link}}" ng-if="!file.img" target="_blank">\n                    <i class="file icon"></i>\n                    #{{file.code}} {{file.title}}\n                </a>\n                <a ng-href="{{file.link}}" ng-if="file.img" target="_blank" data-html="{{imgPopup(file)}}" cg-popup>\n                    <i class="file icon"></i>\n                    #{{file.code}} {{file.title}}\n                </a>\n                <div class="left">\n                    <i class="remove icon red" ng-click="delReference(file)"></i>\n                </div>\n            </div>\n        </div>\n        <div class="item-group" ng-if="resourceReference.MergeRequestBean && resourceReference.MergeRequestBean.length > 0 && showList">\n            <div class="item" ng-repeat="merge_request in resourceReference.MergeRequestBean">\n                <a ng-href="{{merge_request.link}}" target="_blank">\n                    <i class="coding merge-request icon"></i>\n                    #{{merge_request.code}} {{merge_request.title}}\n                </a>\n                <div class="left">\n                    <i class="remove icon red" ng-click="delReference(merge_request)"></i>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/search/tpl/items/default.html", '<a ng-href="{{ item.url }}" class="gray">\n    <p class="ellipsis title" ng-bind-html="item.title | highlight:search_text"></p>\n</a>'),
        $templateCache.put("common/directives/search/tpl/items/file.html", '<a ng-href="{{ item.url }}" class="gray">\n    <span cg-file-icon-src="item.icon" cg-file-icon="suffix(item.title)" class="icon"></span>\n    <p class="ellipsis title" ng-bind-html="item.title | highlight:search_text"></p>\n    <p class="ellipsis subtitle" ng-bind-html="item.subtitle | highlight:search_text"></p>\n</a>'),
        $templateCache.put("common/directives/search/tpl/items/friend.html", '<a ng-href="{{ item.url }}" class="gray">\n    <img class="icon" ng-src="{{ item.icon }}" width="36">\n    <p class="ellipsis title" ng-bind-html="item.title | highlight:search_text"></p>\n    <p class="ellipsis subtitle" ng-bind-html="item.subtitle | highlight:search_text"></p>\n</a>'),
        $templateCache.put("common/directives/search/tpl/items/merge.html", '<a ng-href="{{ item.url }}" class="gray">\n  <p class="ellipsis title" ng-bind-html="item.title | highlight:search_text"></p>\n  <p class="ellipsis subtitle" ng-bind-html="item.subtitle | highlight:search_text"></p>\n</a>'),
        $templateCache.put("common/directives/search/tpl/items/more.html", "更多结果>>"),
        $templateCache.put("common/directives/search/tpl/items/none.html", '<a href="javascript:void(0);" class="gray" style="word-break: break-all">\n    没有搜索到 "<span class="highlight-match-text">{{ search_text }}</span>" 相关信息\n</a>'),
        $templateCache.put("common/directives/search/tpl/items/project.html", '<a ng-href="{{ item.url }}" class="gray">\n    <img class="icon" ng-src="{{ item.icon }}" width="36">\n    <p class="ellipsis title" ng-bind-html="item.title | highlight:search_text"></p>\n    <p class="ellipsis subtitle" ng-bind-html="item.subtitle | highlight:search_text"></p>\n</a>'),
        $templateCache.put("common/directives/search/tpl/items/pull.html", '<a ng-href="{{ item.url }}" class="gray">\n  <p class="ellipsis title" ng-bind-html="item.title | highlight:search_text"></p>\n  <p class="ellipsis subtitle" ng-bind-html="item.subtitle | highlight:search_text"></p>\n</a>'),
        $templateCache.put("common/directives/search/tpl/items/resource.html", '<a ng-href="{{ item.url }}" class="gray">\n  <p class="ellipsis title" ng-bind-html="item.title | highlight:search_text"></p>\n  <p class="ellipsis subtitle" ng-bind-html="item.subtitle | highlight:search_text"></p>\n</a>'),
        $templateCache.put("common/directives/search/tpl/items/simple.html", '<a ng-href="{{ item.url }}&q={{ search_text }}" class="gray" style="display: block">\n    搜 "<span class="highlight-match-text">{{ search_text }}</span>" 相关{{ group.title }}<i class="double angle right icon"></i>\n</a>'),
        $templateCache.put("common/directives/search/tpl/items/task.html", '<a ng-href="{{ item.url }}" class="gray">\n    <p class="ellipsis title" ng-bind-html="item.title | highlight:search_text"></p>\n    <p class="ellipsis subtitle" ng-bind-html="item.subtitle | highlight:search_text"></p>\n</a>'),
        $templateCache.put("common/directives/search/tpl/items/topic.html", '<a ng-href="{{ item.url }}" class="gray">\n    <p class="ellipsis title" ng-bind-html="item.title | highlight:search_text"></p>\n    <p class="ellipsis subtitle" ng-bind-html="item.subtitle | highlight:search_text"></p>\n</a>'),
        $templateCache.put("common/directives/search/tpl/items/tweet.html", '<a ng-href="{{ item.url }}" class="gray">\n    <p class="ellipsis title" ng-bind-html="item.title | highlight:search_text"></p>\n</a>'),
        $templateCache.put("common/directives/search/tpl/search.html", '<div class="advance-search-box" ng-class="{hover: hover, focus: focus}">\n\n    <div class="search-input" ng-class="{prefix: showPrefix(), loading: loading}" cg-up-down-circle="items.length + 1" on-index-change="onIndexChange($index)" on-index-enter="onIndexEnter($index)" reset-start-index="reset_start_index" ng-transclude>\n    </div>\n\n    <div class="search-dropdown" cg-scroll-to-element="{{ cur_item_id }}" ng-show="groups.length > 0 && search_text.length > 0 && showDropdown()">\n        <ul class="group-dropdown">\n            <li class="advance-search-group" ng-class="group.clazz()" ng-repeat="group in groups">\n                <span class="advance-search-type" ng-bind="group.title"></span>\n                <ul class="advance-search-items">\n                    <li id="{{ item.id }}" class="advance-search-item" ng-class="item.clazz()" bindonce ng-repeat="item in group.items" ng-include="item.tpl()">\n                    </li>\n                </ul>\n            </li>\n        </ul>\n    </div>\n\n</div>'),
        $templateCache.put("common/directives/search/tpl/search_filter.html", '<div class="ui top right pointing dropdown" ng-show="content.data.length > 0">\n  <span>{{content.title}}<i class="triangle down icon"></i></span>\n  <div class="menu">\n    <div ng-show="content.type === \'user\' || content.type === \'project\' || content.type === \'tag\'">\n      <div class="ui icon input">\n        <input type="text" placeholder="Search..." ng-model="searchInput">\n        <i class="search icon"></i>\n      </div>\n      <div class="divider"></div>\n    </div>\n    <div class="members-outer">\n      <a class="item ellipsis" ng-class="{selected: item.selected }" ng-repeat="item in content.data | filter: searchInput" ng-click="toggleSelect(item)">\n        <i class="icon checkmark" ng-style="{opacity: item.selected ? 1 : 0 }"></i>\n        <img class="ui avatar image" ng-src="{{item.avatar}}" style="width: 32px;height:32px" ng-show="(content.type === \'user\' || content.type === \'project\') && item.avatar">\n        <span class="task-select-urgency" ng-show="content.type === \'priority\'">\n          <cg-task-urgency-head priority="item.key"></cg-task-urgency-head>\n          <span>{{item.value}}</span>\n        </span>\n        <span ng-show="content.type != \'priority\'">{{item.value}}</span>\n      </a>\n    </div>\n  </div>\n</div>'),
        $templateCache.put("common/directives/showMore/tpl/more.html", '<span ng-if="content.length > limitTo && !show" ng-bind-html="content | limitTo: limitTo" style="line-height: 20px"></span>\n<span ng-if="content.length <= limitTo || show" ng-bind-html="content" style="line-height: 20px"></span>\n<a href="javascript:void(0);" ng-if="content.length > limitTo && !show && canShowMore" ng-click="toggleShow();" style="font-size: 14px">...</a>\n<span ng-if="content.length > limitTo && !show && !canShowMore">...</span>'),
        $templateCache.put("common/directives/tag/tpl/dropdown.html", '<div class="ui floating dropdown icon tag-dropdown">\n    <span ng-transclude class="dropdown-target"></span>\n\n    <div class="menu" ng-style="{\'left\': left || 0}">\n        <div class="search">\n            <div class="ui icon input medium">\n                <input type="text" placeholder="按标签名查找" ng-model="searchTag.name" cg-up-down-circle="(items | filter: searchTag).length" on-index-change="onSelectIndexChange($index)" on-index-enter="onSelectIndexEnter($index, (items | filter: searchTag));" ng-blur="cur_index = -1;" ng-focus="cur_index = cur_index || 0;">\n                <i class="search icon"></i>\n            </div>\n        </div>\n        <div class="items">\n            <div class="item ellipsis" ng-repeat="item in items | orderBy:\'name\' | filter: searchTag " ng-class="{active: item.active, \'cur\': cur_index === $index}" ng-click="toggleActive(item);">\n                <i class="checkmark icon"></i>\n                <span class="tag-color" ng-style="{background: item.color}"></span>\n                <span ng-bind-html="item.name"></span>\n            </div>\n            <div class="item" ng-if="items && items.length > 0 && (items | filter: searchTag).length === 0">\n                未找到匹配标签，回车可添加\n                <span class="tag ellipsis" style="max-width: 70px;vertical-align: text-bottom" title="点击改变颜色" cg-tag-color="random_color" ng-bind="searchTag.name" ng-click="changeColor()"></span>\n            </div>\n            <div class="item" ng-if="!items || items.length === 0">\n                <span ng-if="searchTag.name.length === 0">尚无可选标签，输入标签名来添加</span>\n                <span ng-if="searchTag.name.length > 0">\n                    回车添加标签\n                    <span class="tag ellipsis" style="max-width: 165px;vertical-align: text-bottom" title="点击改变颜色" cg-tag-color="random_color" ng-bind="searchTag.name" ng-click="changeColor()"></span>\n                </span>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/tag/tpl/editor.html", '<div class="tag-editor" style="display: inline">\n    <span class="add" title="添加标签" cg-tag-dropdown="all_tags" on-tag-add="onTagAdd" on-tag-remove="onTagRemove" on-tag-create="onTagCreate">\n        <i class="icon" ng-class="{\'add sign\': !tag_editing, \'loading\': tag_editing}"></i>\n    </span>\n    <span class="tag editable" style="cursor: pointer" ng-repeat="tag in selected_tags | orderBy:\'name\'" ng-click="selectTag(tag)" cg-tag-color="tag.color">\n        <span ng-bind-html="tag.name"></span> <i class="remove icon" ng-click="onTagRemove(tag);"></i>\n    </span>\n</div>'),
        $templateCache.put("common/directives/tag/tpl/task-creating-tags.html", '<div class="tag-editor mr-1">\n    <header cg-tag-dropdown="all_tags" left="-150px" on-tag-add="onTagAdd" on-tag-remove="onTagRemove" on-tag-create="onTagCreate">\n        标签 <span ng-bind="selected_tags.length>0 ? (\'(\' + selected_tags.length + \')\') : \'\'"></span>\n        <i class="icon" ng-class="{\'add sign\': !tag_editing, \'loading\': tag_editing}"></i>\n    </header>\n    <article style="max-height: 40px" class="overflow-auto" cg-perfect-scroll-bar="update_scrollbar">\n        <ul>\n            <li ng-if="selected_tags.length > 0" ng-repeat="tag in selected_tags | orderBy:\'name\'">\n                <span class="tag editable" style="cursor: pointer" ng-click="selectTag(tag, $event)" cg-tag-color="tag.color">\n                    <span ng-bind-html="tag.name"></span>\n                    <i class="remove icon" ng-click="onTagRemove(tag, $event);"></i>\n                </span>\n            </li>\n            <li ng-if="selected_tags.length === 0" style="font-size:12px;color:#999">\n                尚未添加任何标签\n            </li>\n        </ul>\n    </article>\n</div>'),
        $templateCache.put("common/directives/tag/tpl/task-description-tags.html", '<div class="tag-editor">\n    <header>\n        标签 <span ng-bind="selected_tags.length>0 ? (\'(\' + selected_tags.length + \')\') : \'\'"></span>\n        <span class="add" title="添加标签" style="float: right" cg-tag-dropdown="all_tags" left="-280px" on-tag-add="onTagAdd" on-tag-remove="onTagRemove" on-tag-create="onTagCreate">\n            <i class="icon" ng-class="{\'add sign\': !tag_editing, \'loading\': tag_editing}"></i>\n        </span>\n    </header>\n    <article>\n        <ul>\n            <li ng-if="selected_tags.length > 0" ng-repeat="tag in selected_tags | orderBy:\'name\'">\n                <span class="tag editable" cg-tag-color="tag.color">\n                    <span ng-bind-html="tag.name"></span>\n                    <i class="remove icon" ng-click="onTagRemove(tag, $event);"></i>\n                </span>\n            </li>\n            <li ng-if="selected_tags.length === 0" style="font-size:12px;color:#999">\n                尚未添加任何标签\n            </li>\n        </ul>\n    </article>\n</div>'),
        $templateCache.put("common/directives/tag/tpl/task-list-tags.html", '<div class="tag-editor" style="display: inline">\n    <span class="add" title="添加标签" cg-tag-dropdown="all_tags" left="-100px" on-tag-add="onTagAdd" on-tag-remove="onTagRemove" on-tag-create="onTagCreate">\n        <i class="tags icon"></i>\n        <span ng-show="selected_tags.length > 0">\n            标签:\n            <i class="icon" ng-class="{\'add sign\': !tag_editing, \'loading\': tag_editing}"></i>\n        </span>\n        <span ng-show="selected_tags.length === 0">添加标签</span>\n    </span>\n</div>'),
        $templateCache.put("common/directives/task/comments/tpl/action.html", '<div class="icon" bo-class="activity.action">\n    <i class="icon" bo-class="actionIconClass()"></i>\n</div>\n<div class="detail">\n    <a class="gray" bo-href="activity.user.path">\n        <span bo-text="activity.user.name"></span>\n    </a>\n    <span bo-text="actionMsg()"></span> -\n    <span cg-friendly-time="activity.created_at"></span>\n</div>'),
        $templateCache.put("common/directives/task/comments/tpl/activity.html", '<div bindonce="activity" bo-class="activityClass()" bo-id="\'c\'+activity.id" ng-include="\'common/directives/task/comments/tpl/\' + resolveType() + \'.html\'">\n</div>'),
        $templateCache.put("common/directives/task/comments/tpl/comment.html", '<a class="avatar" bo-href="activity.user.path">\n    <img class="ui avatar42 image" width="36px" height="36px" bo-src="activity.taskComment.owner.avatar">\n</a>\n<div class="detail">\n    <div class="markdown content" clip-copy-code="pre" cg-highlight="activity.taskComment.content"></div>\n    <div cg-gallery="activity.taskComment.content"></div>\n    <div class="created-time">\n        <span class="mr10" bo-text="activity.user.name"></span>\n        <span class="mr10">\n            <i class="time icon"></i>\n            <span cg-friendly-time="activity.created_at"></span>\n        </span>\n        <span class="mr10 comment">\n            <a href="javascript:void(0);" ng-click="atPerson(activity.taskComment)" cg-scroll-to scroll-to="{{anchor}}">\n                <i class="edit icon"></i>回复\n            </a>\n        </span>\n        <span class="mr10 remove" bo-if="canRemove(activity.taskComment.owner, $root.USER)">\n            <a href="javascript:void(0);" ng-click="doRemove()">\n                <i class="remove icon"></i>删除\n            </a>\n        </span>\n    </div>\n</div>'),
        $templateCache.put("common/directives/task/comments/tpl/commit_refer.html", '<div class="icon" bo-class="activity.action">\n    <i class="icon code"></i>\n</div>\n<div class="detail">\n    <a class="gray" bo-href="activity.user.path">\n        <span bo-text="activity.user.name"></span>\n    </a>\n    <span>\n        在分支 <a ng-href="{{activity.commit[\'ref_path\']}}">{{activity.commit.ref}}</a> 中提交的代码提到了任务\n    </span> -\n    <span cg-friendly-time="activity.created_at"></span>\n    <div class="commits">\n        <div class="commit" bindonce="activity.commit" ng-init="show_commit_message = false;">\n            <i class="icon code"></i>\n            <a bo-href="activity.commit.committer.link" bo-text="activity.commit.committer.name"></a> :\n            <a bo-href="shaPath(activity, activity.commit)" bo-text="\'[\' + shortSha(activity.commit) + \']\'"></a>\n            <a class="gray" bo-href="shaPath(activity, activity.commit)" bo-html="activity.commit.short_message"></a>\n            <span class="hidden-text-expander" ng-show="activity.commit[\'all_message\']">\n                <a class="gray" href="javascript:void(0);" ng-click="show_commit_message = !show_commit_message">...</a>\n            </span>\n            <div class="all-message" ng-if="show_commit_message">\n                <a class="gray" bo-href="shaPath(activity, commit)" bo-html="activity.commit[\'all_message\']"></a>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/task/comments/tpl/merge_request.html", '<div class="icon">\n    <i class="ui coding icon merge-request"></i>\n</div>\n<div class="detail">\n    <a class="gray" bo-href="activity.user.path">\n        <span bo-text="activity.user.name"></span>\n    </a>\n    <span ng-bind-html="actionMsg()"></span> -\n    <span cg-friendly-time="activity.created_at"></span>\n</div>'),
        $templateCache.put("common/directives/task/comments/tpl/update_label.html", '<div class="icon" bo-class="activity.action">\n    <i class="icon tags"></i>\n</div>\n<div class="detail" ng-init="show_label_histories = false;">\n    <div ng-init="last = activity.label_histories[activity.label_histories.length - 1]">\n        <a class="gray" bo-href="activity.user.path">\n            <span bo-text="activity.user.name"></span>\n        </a>\n        <span bo-text="actionMsg(last)"></span> -\n        <span cg-friendly-time="last.created_at"></span>\n        <span class="hidden-text-expander" ng-show="last.added.length > 0 || last.deleted.length > 0 || first.labels_before.length > 0">\n            <a class="gray" href="javascript:void(0);" ng-click="show_label_histories = !show_label_histories">...</a>\n        </span>\n        <div class="label-change-detail" ng-if="show_label_histories" ng-init="first = activity.label_histories[0]">\n            <div class="label-added" ng-if="last.added.length > 0">\n                <i class="icon tag green"></i>\n                <span bo-text="\'添加了标签 - \' + labelsMsg(last.added)"></span>\n            </div>\n            <div class="label-deleted" ng-if="last.deleted.length > 0">\n                <i class="icon tag red"></i>\n                <span bo-text="\'移除了标签 - \' + labelsMsg(last.deleted)"></span>\n            </div>\n            <div class="labels-before" ng-if="first.labels_before">\n                <i class="tags icon"></i>\n                <span bo-text="\'历史标签 - \' + labelsMsg(first.labels_before)"></span>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/task/comments/tpl/update_watcher.html", '<div class="icon" bo-class="activity.action">\n    <i class="icon unhide"></i>\n</div>\n<div class="detail">\n    <a class="gray" bo-href="activity.user.path">\n        <span bo-text="activity.user.name"></span>\n    </a>\n    <span bo-text="actionMsg()"></span> -\n    <span ng-repeat="watcher in activity.watchers">\n        <a class="gray" bo-href="watcher.path" bo-text="watcher.name"></a>{{$last ? \'\' : \', \'}}\n    </span>\n    - <span cg-friendly-time="activity.created_at"></span>\n</div>'),
        $templateCache.put("common/directives/task/detail/tpl/activity.html", '<!-- 动态筛选 -->\n<div class="task-activity-filter">\n    <a class="gray" href="javascript:void(0);" ng-click="toggleComments();">\n        <i class="icon check-icon" ng-class="checkIconClass(just_show_comment)"></i>只看评论\n    </a>\n</div>\n<!-- 动态列表（包含评论）-->\n<div class="task-detail-activity" ng-show="activities.length > 0">\n    <div class="task-activity" bindonce ng-repeat="activity in activities" ng-if="showActivity(activity);" cg-task-comment-activity="activity" editor-id="project-task-detail-modal" data-anchor=".task-comment-creator" on-remove="onRemove"></div>\n</div>'),
        $templateCache.put("common/directives/task/detail/tpl/detail.html", '<!-- 任务简单头部 -->\n<div class="task-detail-header" ng-if="task" bindonce="task">\n    <div cg-task-detail-header="task" members="members" tags="tags"></div>\n</div>\n<div class="layout-content-right-menu" id="task-detail-menu">\n    <div class="layout-content">\n        <!-- 任务详情 -->\n        <div class="task-detail-description">\n            <div class="icon">\n                <i class="icon align right rotate180"></i>\n            </div>\n            <div class="detail">\n                <cg-task-description class="task-description" ng-model="task" can-edit="true" all-loading-done="onAllLoadingDone" show="!!task">\n                </cg-task-description>\n            </div>\n        </div>\n        <!-- 关联资源 -->\n        <cg-task-resource-reference-list self="task">\n        </cg-task-resource-reference-list>\n        <!-- 动态 + 评论 -->\n        <div cg-task-detail-activity task="task" all-loading-done="onAllLoadingDone" just-show-comment="just_show_comment" on-comment-remove="onCommentRemove"></div>\n        <!-- 评论框 -->\n        <div class="task-comment-creator" id="task-comment-creator" style="margin-bottom: 0">\n            <div cg-light-md-editor="onComment" editor-id="project-task-detail-modal" at-item="task" at-context-type="\'task_comment\'" data-ng-model="content" img-compression="false" project_dependency="task.project" on-preview="onMarkdownPreview"></div>\n        </div>\n    </div>\n    <!-- 右侧各种任务参数更新操作 -->\n    <div cg-task-detail-menu task="task" all-loading-done="onAllLoadingDone" style="width: 150px"></div>\n</div>'),
        $templateCache.put("common/directives/task/detail/tpl/detail/select_deadline.html", '<header ng-if="task">\n    <div cg-task-deadline="task" options="{class_name: \'task-creating-select-deadline\', offset: {left: -80, top: 0}}" mode="deadline_creating_task">\n    </div>\n</header>'),
        $templateCache.put("common/directives/task/detail/tpl/detail/select_label.html", '<header class="select-label-dropdown">\n    <div class="task-detail-tags" cg-tag-editor="task.labels" mode="task-description-tags" tags="tags" on-tag-add="onTagAdd" on-tag-remove="onTagRemove" on-tag-create="onTagCreate" on-tag-select="onDetailTagSelect">\n    </div>\n</header>'),
        $templateCache.put("common/directives/task/detail/tpl/detail/select_member.html", '<div class="select-member-dropdown" ng-controller="TaskDetailSelectMemberController">\n    <div cg-task-member-picker="owner" mode="member_picker_header" members="members" active="true">\n        <header>\n            执行者\n            <i class="triangle down icon"></i>\n        </header>\n        <div ng-if="form.owner">\n            <div class="task-select-member selected-content" title="{{ form.owner.name }}">\n                <img ng-src="{{ form.owner.avatar }}">\n                <span class="ellipsis" style="font-size: 14px" ng-bind="form.owner.name"></span>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/task/detail/tpl/detail/select_project.html", '<div class="select-project-dropdown" cg-dropdown="projects" ng-controller="TaskDetailSelectProjectController">\n    <header style="padding-top: 0">\n        所属项目\n    </header>\n    <div style="width: 160px" ng-if="form.project">\n        <div class="task-select-project selected-content" title="{{ form.project[\'owner_user_name\'] + \'/\' + form.project.name }}">\n            <img ng-src="{{ form.project.icon }}">\n            <span class="ellipsis" style="font-size: 14px" ng-bind="form.project[\'owner_user_name\'] + \'/\' + form.project.name"></span>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/task/detail/tpl/detail/select_urgency.html", '<div class="ui dropdown" cg-dropdown="priorities" ng-controller="TaskDetailSelectUrgencyController">\n    <header>\n        紧急程度 <i class="triangle down icon"></i>\n    </header>\n    <div class="task-select-urgency selected-content" ng-if="form.urgency">\n        <cg-task-urgency-head priority="form.urgency.value"></cg-task-urgency-head>\n        <span style="font-size: 14px" ng-bind="form.urgency.text"></span>\n    </div>\n    <div class="menu">\n        <div class="item" bindonce ng-repeat="priority in priorities" ng-click="selectUrgency($index)">\n            <div class="task-select-urgency">\n                <cg-task-urgency-head priority="$index"></cg-task-urgency-head>\n                <span bo-text="priority"></span>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/task/detail/tpl/detail/select_watcher.html", '<div class="task-detail-watchlist">\n    <div style="margin-bottom: 0.5em" id="task-detail-member-select">\n        关注者 (<span ng-bind="watchers.length"></span>)\n        <i class="icon add sign" style="float: right"></i>\n    </div>\n    <div cg-member-selector cg-ms-selected="watchers" cg-ms-onselect="addWatcher(member)" cg-ms-oncancel="removeWatcher(member)" cg-ms-width="140" cg-ms-has-self="true" cg-ms-opener="\'#task-detail-member-select\'" cg-ms-project="task.project" class="hover-remove check-mode check-toggle-mode no-dropdown"></div>\n</div>'),
        $templateCache.put("common/directives/task/detail/tpl/header.html", '<div class="task project-task" ng-class="taskClass(task)">\n    <i class="icon check-icon" ng-if="!updating" ng-click="toggleTaskStatus(task, $event);" ng-class="checkIconClass(task)">\n    </i>\n    <i class="icon loading check-icon" ng-if="updating"></i>\n    <div class="title" ng-click="setTaskEditable(task, $event);">\n        <textarea class="msd-elastic" cg-clickable-textarea-link ng-disabled="task.status == STATUS.done" ng-model="task.content" cg-enter="updateTaskContent($event, task);" ng-blur="updateTaskContent($event, task);"></textarea>\n    </div>\n</div>'),
        $templateCache.put("common/directives/task/detail/tpl/menu.html", '<div class="layout-menu">\n    <div class="task-create-menu" ng-if="form">\n        <div class="task-menu-item">\n            <header>引用 ID</header>\n            <span class="selected-content" ng-bind="\'#\' + task.number"></span>\n        </div>\n        <div class="task-menu-item">\n            <div ng-include="\'common/directives/task/detail/tpl/detail/select_project.html\'"></div>\n        </div>\n        <div class="task-menu-item">\n            <div ng-include="\'common/directives/task/detail/tpl/detail/select_member.html\'"></div>\n        </div>\n        <div class="task-menu-item">\n            <div ng-include="\'common/directives/task/detail/tpl/detail/select_urgency.html\'"></div>\n        </div>\n        <div class="task-menu-item">\n            <div ng-include="\'common/directives/task/detail/tpl/detail/select_deadline.html\'"></div>\n        </div>\n        <div class="task-menu-item with-top-separator" style="margin-bottom: 5px">\n            <div ng-include="\'common/directives/task/detail/tpl/detail/select_label.html\'"></div>\n        </div>\n        <div class="task-menu-item with-top-separator">\n            <div ng-include="\'common/directives/task/detail/tpl/detail/select_watcher.html\'"></div>\n        </div>\n        <div class="task-menu-item with-top-separator" style="padding-top: 10px" ng-if="(USER | isCreatorOf: task) || (USER | isOwnerOf: task.project)">\n            <a ng-click="removeTask(task)" href="javascript:void(0);" class="ui small red button">删除任务</a>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/task/detail/tpl/modal.html", '<div class="ui tiny modal" ng-hide="!show" style="width: 70%;margin-left: -35%">\n    <div class="content light-task-detail" style="-webkit-border-radius: 15px;-moz-border-radius: 15px;border-radius: 15px" cg-task-detail task-id="task.id" project-username="task.project.owner_user_name" project-name="task.project.name" on-task-no-found="onTaskNoFound" on-task-change="onTaskChange" edit-description="edit_description" just-show-comment="just_show_comment">\n    </div>\n</div>'),
        $templateCache.put("common/directives/task/issues/tpl/tag_color_picker.html", '<div class="tag-color-picker" ng-show="show && can_change_color">\n    <div class="selected">\n        <span class="selected-color" ng-style="{\'background-color\': tag.color}"></span>\n        <input type="text" ng-model="tag.color" maxlength="7" cg-auto-focus ng-style="{\'color\': tag.color}" cg-enter="changeColor(tag.color);">\n        <a href="javascript:void(0);" class="gray" title="颜色随机" ng-click="randomColor()"><i class="refresh icon"></i></a>\n    </div>\n    <div class="pre-defined-color">\n        <span class="color" bindonce ng-repeat="c in colors track by $index" ng-click="changeColor(c);" ng-class="{selected: c == tag.color}" bo-style="{\'background-color\': c}"></span>\n    </div>\n</div>'),
        $templateCache.put("common/directives/task/tpl/comment.html", '<div class="task-comment-wrapper">\n    <form class="task-comment-form" method="POST" ng-class="{loading: commenting}" bindonce="$root.USER">\n        <div class="ui fluid input icon">\n            <input type="text" placeholder="在此输入评论内容（Ctrl+Enter）" style="border: none" ng-model="comment" cg-at-emoji cg-at-context at-context-type="\'task_comment\'" at-item="task" cg-ctrl-enter="doComment(comment)" cg-refer-resource="task.project" cg-placeholder>\n            <i class="right icon" ng-click="doComment(comment)" style="padding-top: 6px; cursor: pointer"></i>\n        </div>\n    </form>\n    <div class="task-comment-list">\n        <div class="task-comment-item" bindonce ng-repeat="item in comments">\n            <a bo-href="item.owner.path" bo-title="item.owner.name"><img bo-src="item.owner.avatar | thumbnail: 48" class="ui avatar24 image" alt="loading"></a>\n            <div class="comment-detail">\n                <div class="comment-content" bo-html="item.content"></div>\n                <div class="comment-time">\n                    <span class="mr10" bo-text="item.owner.name"></span>\n                    <span class="mr10">\n                        <i class="time icon"></i>\n                        <span cg-friendly-time="item.created_at"></span>\n                    </span>\n                    <a class="comment-button gray" href="javascript:void(0);" ng-click="atPerson(item);">\n                        <i class="icon edit"></i>回复\n                    </a>\n                    <a class="remove-button gray" href="javascript:void(0);" ng-click="remove(item);" bo-if="canRemove(item, $root.USER)">\n                        <i class="icon remove"></i>删除\n                    </a>\n                </div>\n            </div>\n        </div>\n\n        <div class="center empty list" ng-if="loading" style="padding: 20px">\n            <i class="loading icon"></i>正在加载评论...\n        </div>\n        <div class="center empty list" ng-if="loaded && task.comments === 0" style="padding: 20px">\n            <i class="coffee icon"></i>尚无评论，速速抢个先手吧\n        </div>\n    </div>\n    <div class="task-comment-more" ng-if="showDetail()">\n        <a class="gray" href="javascript:void(0);" ng-click="gotoDetail();">\n            <span ng-bind="\'查看全部 \'+ task.comments +\' 条评论\'"></span><i class="double angle right icon"></i>\n        </a>\n    </div>\n</div>'),
        $templateCache.put("common/directives/task/tpl/creator.html", '<form id="task-creator" class="ui small form" ng-class="{loading: creating}">\n    <div class="with-creator" cg-task-deadline="task" options="{offset: {left: -80, top: 0}}"></div>\n    <div class="ui medium icon input">\n        <cg-task-urgency class="input-urgency" priority="task.priority"></cg-task-urgency>\n        <div class="description" id="main-task-description" ng-class="{\'show\': show_description}" ng-show="show_description  || task.description.length > 0">\n            <div cg-light-md-editor="onDescriptionSubmit" editor-id="project-task-creator-editor" mode="{{insert_image ? \'\' : \'description\'}}" placeholder="添加任务描述（支持 Markdown）" on-change="onDescriptionChange" cg-not-click="hideDescription()" not-click-class="#main-task-input, #main-task-input *,\n                                  #main-task-description, #main-task-description *,\n                                  #insert_image_lmd_modal, #insert_image_lmd_modal *,\n                                  #atwho-container *,\n                                  #main-task-tags, #main-task-tags *" not-click-when="show_description" at-item="project_dependency" at-context-type="\'task_description\'" project-dependency="project_dependency" img-compression="false"></div>\n        </div>\n        <input type="text" tabindex="999" placeholder="添加一个任务(回车完成添加)" id="main-task-input" class="urgency" ng-model="task.content" cg-enter="createTask(task);">\n        <i class="right icon" style="cursor:pointer; padding-top: 10px" ng-click="createTask(task);"></i>\n        <!--<div id="main-task-tags" class="tags-editor-wrapper" ng-class="{\'show\': show_description}" ng-show="show_description">-->\n            <!--<div class="tags-editor">-->\n                <!--<i class="tags icon"></i>-->\n                <!--标签:-->\n                <!--<span cg-tag-editor="task.labels"-->\n                      <!--tags="tags"-->\n                      <!--on-tag-add="onTagAdd"-->\n                      <!--on-tag-remove="onTagRemove"></span>-->\n            <!--</div>-->\n        <!--</div>-->\n    </div>\n    <div cg-task-member-picker="task.owner" members="members" multiple="false"></div>\n</form>'),
        $templateCache.put("common/directives/task/tpl/deadline.html", '<span class="task-deadline" cg-pickmeup="onDeadlineChange($date);" pickmeup-options="{{options}}" ng-model="task.deadline">\n    <span class="centered" ng-if="!task.deadline || task.deadline === \'1970-01-01\'"><i class="calendar icon"></i></span>\n    <span class="date centered" ng-class="[deadline.clazz, task.status === 2 ? \'done\' : \'\']" ng-bind="deadline.date" ng-if="task.deadline && task.deadline !== \'1970-01-01\'"></span>\n</span>'),
        $templateCache.put("common/directives/task/tpl/deadline_creating_task.html", '<div cg-pickmeup="onDeadlineChange($date);" pickmeup-options="{{options}}" ng-model="task.deadline">\n    <header style="cursor: pointer">\n        截止日期 <i class="triangle down icon"></i>\n    </header>\n    <div ng-if="deadline && !!deadline.date && deadline.date !== \'1970-01-01\'">\n        <span class="task-deadline">\n            <span class="date centered" ng-class="deadline.clazz" ng-bind="deadline.date">\n            </span>\n        </span>\n    </div>\n    <div ng-if="!deadline || !deadline.date">\n        <span class="task-deadline">\n            <span class="date centered done">无截止日期</span>\n        </span>\n    </div>\n</div>'),
        $templateCache.put("common/directives/task/tpl/description.html", '<div class="task-description-wrapper" ng-class="{\n        \'editing\': editing,\n        \'description-loading\': loading,\n        \'has-description\': !!task.description\n     }">\n    <i class="edit icon" ng-class="{\'pencil\': !editing, \'align right rotate180\': editing}" ng-if="can_edit && !loading" ng-click="toggleEditable();"></i>\n    <div cg-light-md-editor="onDescriptionSubmit" ng-if="editing" editor-id="project-task-creator-editor" data-placeholder="添加任务描述（支持 Markdown）" class="editor" ng-model="markdown" cg-refer-resource="project_dependency" at-item="project_dependency" at-context-type="\'task_description\'" ng-show="editing" img-compression="false" project_dependency="task.project" image_picker_mode="\'md-editor down\'" on-preview="allLoadingDone"></div>\n    <div class="markdown content" clip-copy-code="pre" cg-highlight="task.description" ng-if="!editing && !loading && loaded"></div>\n    <div cg-gallery="task.description" ng-if="!editing && !loading && loaded"></div>\n    <div ng-show="loading" class="center list loading">\n        <i class="loading icon"></i>正在加载任务描述...\n    </div>\n    <div class="empty list loading" ng-click="toggleEditable()" ng-show="!editing && loaded && (!task.description || task.description.length === 0)">\n        <i class="coffee icon"></i>没有任务描述，点击添加\n    </div>\n</div>'),
        $templateCache.put("common/directives/task/tpl/item.html", '<div class="task project-task" ng-class="taskClass(task)">\n    <i class="icon check-icon" ng-click="toggleTaskStatus(task);" ng-class="checkIconClass(task)">\n    </i>\n    <i class="icon loading updating" ng-if="updating"></i>\n    <i class="red minus sign alternate icon remove-task" ng-if="(USER | isCreatorOf: task) || (USER | isOwnerOf: PROJECT)" ng-click="removeTask(task);">\n    </i>\n\n    <div class="title" ng-click="setTaskEditable(task, $event);">\n        <cg-task-urgency class="textarea-urgency" priority="task.priority"></cg-task-urgency>\n        <textarea class="urgency msd-elastic" ng-disabled="task.status == STATUS.done" ng-model="task.content" cg-enter="updateTaskContent($event, task);" ng-blur="updateTaskContent($event, task);"></textarea>\n    </div>\n    <div class="created-time" style="margin-right: 40px">\n        <span class="mr10"><span cg-task-deadline="task" options="{offset: {left: 0, top: 3}}"></span></span>\n        <span class="mr10 refer-id" bo-if="task.number" bo-text="\'#\' + task.number"></span>\n        <span class="mr10 creator" bo-text="task.creator.name"></span>\n        <span class="mr10">\n            <a bo-href="task.project.project_path + \'/task/\' + task.id" target="_blank">\n                <i class="time icon"></i>\n                <span cg-friendly-time="task.created_at"></span>\n            </a>\n        </span>\n        <span class="mr10" ng-if="task.has_description ||  !task.has_description && task.status != 2">\n            <a href="javascript:void(0);" ng-if="task.has_description" ng-click="toggleShowDescription(task);">\n                <i class="align right icon rotate180" style="transform-origin: 47% 47%"></i>\n                <span ng-if="!task.show_description">描述</span>\n                <span ng-if="task.show_description">收起描述</span>\n            </a>\n            <a ng-if="!task.has_description && task.status != 2" ng-href="{{ task.project.project_path + \'/task/\' + task.id + \'?edit_desc\' }}">\n                <i class="align right icon rotate180" style="transform-origin: 47% 47%"></i> 添加描述\n            </a>\n        </span>\n        <span class="mr10">\n            <a href="javascript:void(0);" ng-click="toggleTaskCommenting(task);">\n                <span ng-if="!task.commenting">\n                    <i class="chat outline icon"></i> <span bo-text="task.comments"></span> 条评论\n                </span>\n                <span ng-if="task.commenting">\n                    <i class="chat outline icon"></i> 收起评论\n                </span>\n            </a>\n        </span>\n        <span class="mr10">\n            <a bo-href="task.project.project_path + \'/task/\' + task.id">\n                <i class="info icon"></i> 查看详情\n            </a>\n        </span>\n        <span class="mr10" style="display: inline">\n            <span class="task-labels" cg-tag-editor="task.labels" tags="tags" mode="task-list-tags" on-tag-create="onTagCreate" on-tag-add="onTagAdd" on-tag-remove="onTagRemove"></span>\n            <span class="tags" ng-if="task.labels.length > 0">\n              <span ng-repeat="tag in task.labels | orderBy:\'name\'" class="tag" ng-bind-html="tag.name" cg-tag-color="tag.color"></span>\n            </span>\n        </span>\n        <span class="mr10 hover-show" ng-show="showMark(task)">\n            <a class="toggle" href="javascript:void(0);" ng-click="toggleWatch(task);">\n                <i class="icon" ng-class="watchClass(task)"></i> <span ng-bind="watchWords(task)"></span>\n            </a>\n            <a class="marked" href="javascript:void(0);" ng-show="task.watch && !hide_watch">\n                <i class="unhide icon"></i> 已关注\n            </a>\n        </span>\n        <span cg-link-tips="task.content"></span>\n    </div>\n    <div ng-transclude></div>\n</div>'),
        $templateCache.put("common/directives/task/tpl/item_simple.html", '<div class="task project-simple-task" ng-class="taskClass(task)">\n\n    <div class="task-head">\n        <!-- 完成状态及loading效果 -->\n        <span class="status">\n            <i class="icon check-icon" ng-if="!updating" ng-click="toggleTaskStatus(task);" ng-class="checkIconClass(task)">\n            </i>\n            <i class="icon loading updating" ng-if="updating"></i>\n        </span>\n\n        <!-- 成员选择 -->\n        <div cg-task-member-picker="task.owner" members="task.members" multiple="false" active="task.status === 1"></div>\n\n        <!-- 优先级 -->\n        <cg-task-urgency class="textarea-urgency" priority="task.priority"></cg-task-urgency>\n    </div>\n\n\n    <div class="task-body flex-box">\n\n        <div class="task-content ellipsis flex-auto-justify">\n            <!-- 完成期限 -->\n            <span cg-task-deadline="task" options="{offset: {left: 0, top: 3}}"></span>\n\n            <!-- 完成期限，不可修改\n            <span class="date"\n                  ng-if="task.deadline"\n                  ng-bind="formated_deadline.date"\n                  ng-class="formated_deadline.clazz"></span>\n            -->\n\n            <!-- 标签 -->\n            <span class="mr10 tags" ng-if="task.labels.length > 0">\n              <span ng-repeat="tag in task.labels | orderBy:\'name\'" class="tag" ng-bind-html="tag.name" cg-tag-color="tag.color"></span>\n            </span>\n\n            <!-- 任务标题 -->\n            <a class="title dark" ng-href="{{ task.project.project_path + \'/task/\' + task.id }}" ng-click="doSelectTask(task, $event);" ng-bind="task.content">\n            </a>\n        </div>\n\n        <div class="task-foot ellipsis">\n            <!-- 项目名 -->\n            <span class="project-name" ng-if="show_project_name" ng-bind="task.project.name"></span>\n\n            <!-- 资源编号 -->\n            <span class="number" ng-bind="\'#\' + task.number"></span>\n\n        </div>\n\n        <!-- 删除按钮 -->\n        <span class="remove-button">\n            <i class="red minus sign alternate icon remove-task" ng-if="(USER | isCreatorOf: task) || (USER | isOwnerOf: task.project)" ng-click="removeTask(task);">\n            </i>\n        </span>\n    </div>\n\n</div>'),
        $templateCache.put("common/directives/task/tpl/just_show.html", '<div class="task project-task" ng-class="taskClass(task)">\n    <i class="icon check-icon" ng-click="toggleTaskStatus(task);" ng-class="checkIconClass(task)">\n    </i>\n    <i class="icon loading updating" ng-if="updating"></i>\n    <div class="title">\n        <cg-task-urgency class="textarea-urgency" priority="task.priority"></cg-task-urgency>\n        <textarea class="urgency msd-elastic" disabled="disabled" ng-model="task.content" cg-enter="updateTaskContent($event, task);"></textarea>\n    </div>\n    <div class="created-time ellipsis">\n        <span class="mr10"><span cg-task-deadline="task" options="{offset: {left: 0, top: 3}}"></span></span>\n        <span class="mr10 refer-id" bo-if="task.number" bo-text="\'#\' + task.number"></span>\n        <span class="mr10 creator" bo-text="task.creator.name"></span>\n        <span class="mr10">\n            <a bo-href="task.project.project_path + \'/task/\' + task.id">\n                <i class="time icon"></i>\n                <span cg-friendly-time="task.created_at"></span>\n            </a>\n        </span>\n        <span class="mr10">\n            <a bo-href="task.project.project_path + \'/task/\' + task.id" target="_self">\n                <i class="chat outline icon"></i> <span bo-text="task.comments"></span> 条评论\n            </a>\n        </span>\n        <span cg-link-tips="task.content"></span>\n    </div>\n</div>'),
        $templateCache.put("common/directives/task/tpl/member_picker.html", '<div class="member-picker">\n    <div class="ui form">\n        <div class="ui top pointing dropdown" ng-class="menuDirection()">\n            <img class="ui avatar image" style="margin:0" ng-src="{{selected_user.avatar}}" title="{{selected_user.name}}">\n            <div ng-transclude></div>\n            <div class="menu">\n                <div class="input-wrapper">\n                    <div class="ui icon input">\n                        <input type="text" class="member-picker-filter" placeholder="Search..." ng-model="searchUsers.name">\n                        <i class="search icon"></i>\n                    </div>\n                </div>\n                <div class="members-outer" ng-class="{\'quick-select\': quick_select_index > -1}">\n                    <a class="item ellipsis" bindonce="member_users" ng-class="{active:isActive(user.id), \'selected\': quick_select_index === $index }" ng-repeat="user in member_users | filter: searchUsers.name" ng-click="toggleSelect(user)">\n                        <i class="icon" ng-class="{checkmark:isActive(user.id)}"></i>\n                        <img class="ui avatar image" bo-src="user.avatar" style="width: 32px;height:32px">\n                        <span bo-text="user.name"></span>\n                    </a>\n                    <div class="empty list" ng-if="member_users.length==0" style="font-size:12px">\n                        <i class="loading icon"></i>正在加载成员列表...\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/task/tpl/member_picker_header.html", '<div class="member-picker wide">\n    <div class="ui form">\n        <div class="ui dropdown">\n            <div ng-transclude></div>\n            <div class="menu">\n                <div class="input-wrapper">\n                    <div class="ui icon input">\n                        <input type="text" class="member-picker-filter" placeholder="Search..." ng-model="searchUsers.name" style="height: 26px">\n                        <i class="search icon"></i>\n                    </div>\n                </div>\n                <div class="members-outer" ng-class="{\'quick-select\': quick_select_index > -1}">\n                    <a class="item ellipsis" bindonce="member_users" ng-class="{active:isActive(user.id), \'selected\': quick_select_index === $index }" ng-repeat="user in member_users | filter: searchUsers.name" ng-click="toggleSelect(user)">\n                        <i class="icon" ng-class="{checkmark:isActive(user.id)}" style="margin-right: 0"></i>\n                        <img class="ui avatar image" bo-src="user.avatar" style="width: 32px; height:32px; margin-right: 0">\n                        <span bo-text="user.name"></span>\n                    </a>\n                    <div class="empty list" ng-if="member_users.length==0" style="font-size:12px">\n                        <i class="loading icon"></i>正在加载成员列表...\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/task/tpl/project_picker.html", '<div class="project-picker wide">\n    <div class="ui form">\n        <div class="ui dropdown">\n            <div ng-transclude></div>\n            <div class="menu">\n                <div class="input-wrapper">\n                    <div class="ui icon input">\n                        <input type="text" class="project-picker-filter" placeholder="Search..." ng-model="searchProjects.name">\n                        <i class="search icon"></i>\n                    </div>\n                </div>\n                <div class="projects-outer" ng-class="{\'quick-select\': quick_select_index > -1}">\n                    <a class="item" ng-class="{active:isActive(project.id), \'selected\': quick_select_index === $index }" ng-repeat="project in projects | searchString: {key: searchProjects.name, region: \'name\'}" ng-click="toggleSelect(project)">\n                        <i class="icon" ng-class="{checkmark:isActive(project.id)}"></i>\n                        <img class="img" ng-src="{{ project.icon }}">\n                        <span class="text ellipsis" title="{{ project[\'owner_user_name\'] + \'/\' + project.name }}" ng-bind="project.name"></span>\n                    </a>\n                    <div class="empty list" ng-if="project.length==0" style="font-size:12px">\n                        <i class="loading icon"></i>正在加载项目列表...\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/task/tpl/urgency.html", '<div class="task-urgency-dropdown ui icon top left pointing dropdown" cg-dropdown cg-on-change="onUrgencyChanged">\n    <cg-task-urgency-head priority="priority"></cg-task-urgency-head>\n    <div class="menu">\n        <div class="item" ng-class="{active: priority === 3}" data-value="3">\n            <i class="icon urgency checkmark" ng-class="{checked: priority === 3}"></i>\n            <span class="urgency-list-wrapper">\n                <i class="coding active exclamation icon urgency"></i>\n                <i class="coding active exclamation icon urgency"></i>\n                <i class="coding active exclamation icon urgency"></i>\n            </span> <span bindonce="priorities" bo-text="priorities[3]"></span>\n        </div>\n        <div class="item" ng-class="{active: priority === 2}" data-value="2">\n            <i class="icon urgency checkmark" ng-class="{checked: priority === 2}"></i>\n            <span class="urgency-list-wrapper">\n                <i class="coding active exclamation icon urgency"></i>\n                <i class="coding active exclamation icon urgency"></i>\n                <i class="coding light exclamation icon urgency"></i>\n            </span> <span bindonce="priorities" bo-text="priorities[2]"></span>\n        </div>\n        <div class="item" ng-class="{active: priority === 1}" data-value="1">\n            <i class="icon urgency checkmark" ng-class="{checked: priority === 1}"></i>\n            <span class="urgency-list-wrapper">\n                <i class="coding active exclamation icon urgency"></i>\n                <i class="coding light exclamation icon urgency"></i>\n                <i class="coding light exclamation icon urgency"></i>\n            </span> <span bindonce="priorities" bo-text="priorities[1]"></span>\n        </div>\n        <div class="item" ng-class="{active: priority === 0}" data-value="0">\n            <i class="icon urgency checkmark" ng-class="{checked: priority === 0}"></i>\n            <span class="urgency-list-wrapper">\n                <i class="coding light exclamation icon urgency"></i>\n                <i class="coding light exclamation icon urgency"></i>\n                <i class="coding light exclamation icon urgency"></i>\n            </span> <span bindonce="priorities" bo-text="priorities[0]"></span>\n        </div>\n    </div>\n</div>'),
        $templateCache.put("common/directives/task/tpl/urgency_head.html", '<div class="task-urgency-wrapper">\n    <i class="coding exclamation icon urgency" ng-class="{active: priority >= 1, light: priority < 1}"></i>\n    <i class="coding exclamation icon urgency" ng-class="{active: priority >= 2, light: priority < 2}"></i>\n    <i class="coding exclamation icon urgency" ng-class="{active: priority >= 3, light: priority < 3}"></i>\n</div>')
    }
    ]);
